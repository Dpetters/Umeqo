[
 {
  "pk": 1, 
  "model": "events.event", 
  "fields": {
   "view_count": 267, 
   "start_datetime": "2012-12-21 23:30:00", 
   "audience": [], 
   "attending_employers": [], 
   "name": "Umeqo Top-of-the-Dome Party", 
   "is_public": true, 
   "description": "<p>\r\n\tWe really wish we could actually throw this party. We really do. And we&#39;ll try our best to make it happen. But for now, this is just a taste of what employer events will look like. Hit RSVP, add it to your calendar, and subscribe to employers to be notified of actual recruiting events! Here&#39;s a list of what Umeqo is looking to add to the table event-wise -&nbsp;</p>\r\n<ul>\r\n\t<li>\r\n\t\t<strong>Event Check-ins</strong>. First by laptop, then by smartphone. Foursquare style.</li>\r\n\t<li>\r\n\t\t<strong>Automatic Resume Drops.</strong> Coming to the SBC bbq? No reason to email in your resume anymore - just drop your resume here once the event is created! Or just check-in at the event.</li>\r\n\t<li>\r\n\t\t<strong>Directions</strong>. We&#39;ve all been there - running late, having to pull the laptop out or find the closest map of MIT just to find your way to some obscure building. See that map to on the right? It&#39;ll tell you where to go based on where you are soon.</li>\r\n\t<li>\r\n\t\t<strong>And much more!</strong></li>\r\n</ul>\r\n<p>\r\n\tFor now, we&#39;ll just ask you to give us as much feedback as you can by clicking &quot;Contact Us&quot; in the footer. We want you, our fellow student, to help us shape Umeqo into a truly useful recruiting tool!</p>\r\n", 
   "is_active": true, 
   "last_seen_view_count": 0, 
   "longitude": -71.092013719999997, 
   "latitude": 42.35967402, 
   "edits": [
    1
   ], 
   "is_drop": false, 
   "end_datetime": "2012-12-22 04:00:00", 
   "rsvp_message": "", 
   "owner": 4, 
   "date_created": "2011-08-28 22:42:59", 
   "type": 9, 
   "slug": "umeqo-top-of-the-dome-party", 
   "location": "The Great Dome"
  }
 }, 
 {
  "pk": 6, 
  "model": "events.event", 
  "fields": {
   "view_count": 10320, 
   "start_datetime": "2011-09-06 14:00:00", 
   "audience": [
    1, 
    2, 
    3, 
    4, 
    5, 
    6
   ], 
   "attending_employers": [
    19, 
    32, 
    17, 
    67, 
    18, 
    8, 
    72, 
    28, 
    6, 
    73, 
    9
   ], 
   "name": "SBC Networking BBQ", 
   "is_public": true, 
   "description": "<p>\r\n\t<span style=\"font-family:arial, sans-serif\"><span style=\"font-family:arial, sans-serif;font-size:medium\">With typically over 1000 students and a wide variety of companies participating, the Networking Barbecue takes place outside on Kresge Oval. The event has a friendly and low-pressure atmosphere, which makes it ideal for students to learn about the companies and careers before they start looking for jobs or internships. The BBQ is a fantastic networking opportunity for MIT students as the fall recruitment season begins, and also a chance to get to know the club itself.</span></span></p>\r\n", 
   "is_active": true, 
   "last_seen_view_count": 0, 
   "longitude": -71.094556589999996, 
   "latitude": 42.358325180000001, 
   "edits": [
    3
   ], 
   "is_drop": true, 
   "end_datetime": "2011-09-06 18:00:00", 
   "rsvp_message": "", 
   "owner": 97, 
   "date_created": "2011-09-01 10:06:56", 
   "type": 9, 
   "slug": "sbc-networking-bbq", 
   "location": "Kresge Oval"
  }
 }, 
 {
  "pk": 2, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 1, 
   "student": 31, 
   "datetime_created": "2011-08-29 20:06:33"
  }
 }, 
 {
  "pk": 17, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 6, 
   "student": 105, 
   "datetime_created": "2011-09-02 00:19:28"
  }
 }, 
 {
  "pk": 4, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 1, 
   "student": 54, 
   "datetime_created": "2011-08-30 00:08:59"
  }
 }, 
 {
  "pk": 5, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 1, 
   "student": 59, 
   "datetime_created": "2011-08-30 09:01:56"
  }
 }, 
 {
  "pk": 9, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 6, 
   "student": 87, 
   "datetime_created": "2011-09-01 12:23:34"
  }
 }, 
 {
  "pk": 10, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 1, 
   "student": 43, 
   "datetime_created": "2011-09-01 12:28:11"
  }
 }, 
 {
  "pk": 11, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 6, 
   "student": 43, 
   "datetime_created": "2011-09-01 12:28:49"
  }
 }, 
 {
  "pk": 13, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 6, 
   "student": 66, 
   "datetime_created": "2011-09-01 13:24:36"
  }
 }, 
 {
  "pk": 14, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 6, 
   "student": 92, 
   "datetime_created": "2011-09-01 15:27:13"
  }
 }, 
 {
  "pk": 15, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 1, 
   "student": 93, 
   "datetime_created": "2011-09-01 16:39:22"
  }
 }, 
 {
  "pk": 16, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 6, 
   "student": 101, 
   "datetime_created": "2011-09-01 19:58:06"
  }
 }, 
 {
  "pk": 18, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 6, 
   "student": 110, 
   "datetime_created": "2011-09-02 09:46:25"
  }
 }, 
 {
  "pk": 19, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 6, 
   "student": 113, 
   "datetime_created": "2011-09-02 11:30:23"
  }
 }, 
 {
  "pk": 20, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 6, 
   "student": 114, 
   "datetime_created": "2011-09-02 12:27:51"
  }
 }, 
 {
  "pk": 21, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 1, 
   "student": 117, 
   "datetime_created": "2011-09-02 13:01:19"
  }
 }, 
 {
  "pk": 24, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 6, 
   "student": 133, 
   "datetime_created": "2011-09-04 13:41:07"
  }
 }, 
 {
  "pk": 25, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 6, 
   "student": 135, 
   "datetime_created": "2011-09-04 13:53:41"
  }
 }, 
 {
  "pk": 26, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 1, 
   "student": 138, 
   "datetime_created": "2011-09-04 17:03:50"
  }
 }, 
 {
  "pk": 27, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 1, 
   "student": 140, 
   "datetime_created": "2011-09-04 18:28:43"
  }
 }, 
 {
  "pk": 28, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 6, 
   "student": 141, 
   "datetime_created": "2011-09-04 18:39:36"
  }
 }, 
 {
  "pk": 29, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 6, 
   "student": 143, 
   "datetime_created": "2011-09-04 21:00:16"
  }
 }, 
 {
  "pk": 30, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 6, 
   "student": 146, 
   "datetime_created": "2011-09-05 00:31:52"
  }
 }, 
 {
  "pk": 31, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 6, 
   "student": 149, 
   "datetime_created": "2011-09-05 03:02:18"
  }
 }, 
 {
  "pk": 32, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 1, 
   "student": 149, 
   "datetime_created": "2011-09-05 03:02:55"
  }
 }, 
 {
  "pk": 33, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 6, 
   "student": 150, 
   "datetime_created": "2011-09-05 03:26:31"
  }
 }, 
 {
  "pk": 34, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 1, 
   "student": 157, 
   "datetime_created": "2011-09-05 09:37:04"
  }
 }, 
 {
  "pk": 35, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 6, 
   "student": 157, 
   "datetime_created": "2011-09-05 09:43:18"
  }
 }, 
 {
  "pk": 36, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 6, 
   "student": 166, 
   "datetime_created": "2011-09-05 14:49:12"
  }
 }, 
 {
  "pk": 37, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 6, 
   "student": 171, 
   "datetime_created": "2011-09-05 21:19:01"
  }
 }, 
 {
  "pk": 38, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 6, 
   "student": 60, 
   "datetime_created": "2011-09-05 21:40:58"
  }
 }, 
 {
  "pk": 39, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 6, 
   "student": 107, 
   "datetime_created": "2011-09-05 23:50:18"
  }
 }, 
 {
  "pk": 41, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 1, 
   "student": 191, 
   "datetime_created": "2011-09-06 11:44:12"
  }
 }, 
 {
  "pk": 42, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 6, 
   "student": 192, 
   "datetime_created": "2011-09-06 11:52:12"
  }
 }, 
 {
  "pk": 43, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 6, 
   "student": 190, 
   "datetime_created": "2011-09-06 11:52:18"
  }
 }, 
 {
  "pk": 44, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 1, 
   "student": 194, 
   "datetime_created": "2011-09-06 12:44:49"
  }
 }, 
 {
  "pk": 46, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 6, 
   "student": 198, 
   "datetime_created": "2011-09-06 14:17:07"
  }
 }, 
 {
  "pk": 47, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 6, 
   "student": 31, 
   "datetime_created": "2011-09-06 14:52:34"
  }
 }, 
 {
  "pk": 48, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 6, 
   "student": 179, 
   "datetime_created": "2011-09-06 16:14:12"
  }
 }, 
 {
  "pk": 49, 
  "model": "events.rsvp", 
  "fields": {
   "attending": true, 
   "event": 6, 
   "student": 204, 
   "datetime_created": "2011-09-06 17:29:48"
  }
 }, 
 {
  "pk": 2, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 13:57:04", 
   "email": "manjola@mit.edu", 
   "student": 107, 
   "name": "Manushaqe Muco"
  }
 }, 
 {
  "pk": 3, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:12:12", 
   "email": "jongoh@mit.edu", 
   "student": null, 
   "name": "Jon jon"
  }
 }, 
 {
  "pk": 4, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:12:37", 
   "email": "Dpetters91@gmail.com", 
   "student": null, 
   "name": "Dmitrij Petters"
  }
 }, 
 {
  "pk": 5, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:13:19", 
   "email": "qlong@mit.edu", 
   "student": null, 
   "name": "Qian Long"
  }
 }, 
 {
  "pk": 6, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:13:31", 
   "email": "dlaw@mit.edu", 
   "student": null, 
   "name": "Dave Lawrence"
  }
 }, 
 {
  "pk": 7, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:13:45", 
   "email": "ndonuora@mit.edu", 
   "student": null, 
   "name": "Ndubisi Onuora"
  }
 }, 
 {
  "pk": 8, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:13:57", 
   "email": "luyizh@mit.edu", 
   "student": null, 
   "name": "Luyi Zhang"
  }
 }, 
 {
  "pk": 9, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:14:12", 
   "email": "quanquan@mit.edu", 
   "student": null, 
   "name": "Quanquan Liu"
  }
 }, 
 {
  "pk": 10, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:14:22", 
   "email": "ofir@mit.edu", 
   "student": null, 
   "name": "Ofir Nachum"
  }
 }, 
 {
  "pk": 11, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:14:36", 
   "email": "shuang61@mit.edu", 
   "student": null, 
   "name": "Shuang Chen"
  }
 }, 
 {
  "pk": 12, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:14:47", 
   "email": "maby@mit.edu", 
   "student": null, 
   "name": "Maddy Aby"
  }
 }, 
 {
  "pk": 13, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:14:58", 
   "email": "lyk@mit.edu", 
   "student": null, 
   "name": "Larissa Kunz"
  }
 }, 
 {
  "pk": 14, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:15:09", 
   "email": "mco@mit.edu", 
   "student": null, 
   "name": "Monica Oliver"
  }
 }, 
 {
  "pk": 15, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:15:27", 
   "email": "jmikhael@mit.edu", 
   "student": null, 
   "name": "John Mikhael"
  }
 }, 
 {
  "pk": 16, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:15:37", 
   "email": "carolynz@mit.edu", 
   "student": 37, 
   "name": "None None"
  }
 }, 
 {
  "pk": 17, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:16:43", 
   "email": "Dpetters91@gmail.com", 
   "student": null, 
   "name": "Dmitrij Petters"
  }
 }, 
 {
  "pk": 18, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:17:58", 
   "email": "amieguo@mit.edu", 
   "student": 66, 
   "name": "Carolyn Zhang"
  }
 }, 
 {
  "pk": 19, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:18:07", 
   "email": "normandy@mit.edu", 
   "student": null, 
   "name": "Norman Cao"
  }
 }, 
 {
  "pk": 20, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:18:23", 
   "email": "tonyzha1@mit.edu", 
   "student": null, 
   "name": "Tony Zhao"
  }
 }, 
 {
  "pk": 21, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:18:34", 
   "email": "brownj4@mit.edu", 
   "student": null, 
   "name": "Julain Brown"
  }
 }, 
 {
  "pk": 22, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:18:56", 
   "email": "jhaip@mit.edu", 
   "student": null, 
   "name": "Jacob Haip"
  }
 }, 
 {
  "pk": 23, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:19:07", 
   "email": "ssul@mit.edu", 
   "student": null, 
   "name": "Steve Sullivan"
  }
 }, 
 {
  "pk": 24, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:19:22", 
   "email": "ssul@mit.edu", 
   "student": null, 
   "name": "Steve Sullivan"
  }
 }, 
 {
  "pk": 25, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:19:37", 
   "email": "rossides@mit.edu", 
   "student": null, 
   "name": "Michalis Rossides"
  }
 }, 
 {
  "pk": 26, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:19:57", 
   "email": "rdearmas@mit.edu", 
   "student": null, 
   "name": "Ricardo De Armas"
  }
 }, 
 {
  "pk": 27, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:20:18", 
   "email": "btambasc@mit.edu", 
   "student": null, 
   "name": "Bruno Tambasco"
  }
 }, 
 {
  "pk": 28, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:20:43", 
   "email": "timyang@mit.edu", 
   "student": null, 
   "name": "Tim Yang"
  }
 }, 
 {
  "pk": 29, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:20:55", 
   "email": "egmorant@mit.edu", 
   "student": null, 
   "name": "Elisabeth Morant"
  }
 }, 
 {
  "pk": 30, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:21:14", 
   "email": "lcstone@mit.edu", 
   "student": null, 
   "name": "Lindsay Stone"
  }
 }, 
 {
  "pk": 31, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:21:21", 
   "email": "bjliu@mit.edu", 
   "student": 166, 
   "name": "Bohan Liu"
  }
 }, 
 {
  "pk": 32, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:21:38", 
   "email": "jaredlwong@mit.edu", 
   "student": null, 
   "name": "Jared Wong"
  }
 }, 
 {
  "pk": 33, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:22:06", 
   "email": "sunny_l@mit.edu", 
   "student": null, 
   "name": "Sunny Long"
  }
 }, 
 {
  "pk": 34, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:22:20", 
   "email": "avogel@mit.edu", 
   "student": null, 
   "name": "Ari Vogel"
  }
 }, 
 {
  "pk": 35, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:22:42", 
   "email": "agururaj@mit.edu", 
   "student": null, 
   "name": "Anisha Gururaj"
  }
 }, 
 {
  "pk": 36, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:22:59", 
   "email": "inspired@mit.edu", 
   "student": null, 
   "name": "Jedidiah Phillips"
  }
 }, 
 {
  "pk": 37, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:23:09", 
   "email": "tj7891@mit.edu", 
   "student": 167, 
   "name": "Taneah Turner"
  }
 }, 
 {
  "pk": 38, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:23:32", 
   "email": "cyliu@mit.edu", 
   "student": null, 
   "name": "Connie Liu"
  }
 }, 
 {
  "pk": 39, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:25:34", 
   "email": "brennans@mit.edu", 
   "student": null, 
   "name": "Sarah Brennan"
  }
 }, 
 {
  "pk": 40, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:25:48", 
   "email": "chennah@mit.edu", 
   "student": null, 
   "name": "Chennah Heroor"
  }
 }, 
 {
  "pk": 41, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:26:05", 
   "email": "kfang@mit.edu", 
   "student": 87, 
   "name": "Katherine Fang"
  }
 }, 
 {
  "pk": 43, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:26:33", 
   "email": "bchang@mit.edu", 
   "student": null, 
   "name": "Bryan Chang"
  }
 }, 
 {
  "pk": 44, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:26:41", 
   "email": "aren@mit.edu", 
   "student": null, 
   "name": "Anji ren"
  }
 }, 
 {
  "pk": 45, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:26:57", 
   "email": "pritee@mit.edu", 
   "student": null, 
   "name": "Pri Tembhekar"
  }
 }, 
 {
  "pk": 46, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:27:04", 
   "email": "krailey@mit.edu", 
   "student": 160, 
   "name": "Kristen Railey"
  }
 }, 
 {
  "pk": 47, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:27:09", 
   "email": "vok@mit.edu", 
   "student": 41, 
   "name": "Vladislav Kontsevoi"
  }
 }, 
 {
  "pk": 48, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:27:22", 
   "email": "knayak@mit.edu", 
   "student": null, 
   "name": "Ketan Nayak"
  }
 }, 
 {
  "pk": 49, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:27:36", 
   "email": "udsharma@mit.edu", 
   "student": null, 
   "name": "Uddhav Sharma"
  }
 }, 
 {
  "pk": 50, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:27:48", 
   "email": "ferrantj@mit.edu", 
   "student": null, 
   "name": "Joseph Ferrante"
  }
 }, 
 {
  "pk": 51, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:27:58", 
   "email": "hollie@mit.edu", 
   "student": null, 
   "name": "Hollie O'Brien"
  }
 }, 
 {
  "pk": 52, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:28:09", 
   "email": "cmjoseph@mit.edu", 
   "student": null, 
   "name": "Carolyn Joseph"
  }
 }, 
 {
  "pk": 53, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:29:30", 
   "email": "fxchen12@mit.edu", 
   "student": null, 
   "name": "Francis Chen"
  }
 }, 
 {
  "pk": 54, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:29:46", 
   "email": "liyanchang@mit.edu", 
   "student": null, 
   "name": "Liyan Chang"
  }
 }, 
 {
  "pk": 55, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:30:19", 
   "email": "vfounta@mit.edu", 
   "student": null, 
   "name": "Vasiliki Founta"
  }
 }, 
 {
  "pk": 56, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:30:30", 
   "email": "tzamos@mit.edu", 
   "student": null, 
   "name": "Christos Tzamos"
  }
 }, 
 {
  "pk": 57, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:30:37", 
   "email": "jingf@mit.edu", 
   "student": null, 
   "name": "Jing Fan"
  }
 }, 
 {
  "pk": 58, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:30:48", 
   "email": "ahuang27@mit.edu", 
   "student": null, 
   "name": "Alice Huang"
  }
 }, 
 {
  "pk": 59, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:30:59", 
   "email": "jpothula@gmail.com", 
   "student": null, 
   "name": "Jay Pothula"
  }
 }, 
 {
  "pk": 60, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:31:11", 
   "email": "gmatt@gmail.com", 
   "student": null, 
   "name": "Greg Matthews"
  }
 }, 
 {
  "pk": 61, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:31:23", 
   "email": "jcole@mit.edu", 
   "student": null, 
   "name": "Jacob Cole"
  }
 }, 
 {
  "pk": 62, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:31:35", 
   "email": "vineetg@mit.edu", 
   "student": null, 
   "name": "Vineet Gopal"
  }
 }, 
 {
  "pk": 63, 
  "model": "events.attendee", 
  "fields": {
   "event": 6, 
   "datetime_created": "2011-09-06 19:31:52", 
   "email": "elena7@mit.edu", 
   "student": null, 
   "name": "Norah Nakibuuka"
  }
 }, 
 {
  "pk": 1, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 10:08:53", 
   "last_updated": "2011-08-29 10:08:53", 
   "resumes_viewed": 0, 
   "employer": 15
  }
 }, 
 {
  "pk": 2, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 10:09:06", 
   "last_updated": "2011-08-29 10:09:06", 
   "resumes_viewed": 0, 
   "employer": 16
  }
 }, 
 {
  "pk": 3, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 10:09:31", 
   "last_updated": "2011-08-29 10:09:31", 
   "resumes_viewed": 0, 
   "employer": 17
  }
 }, 
 {
  "pk": 4, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 10:12:08", 
   "last_updated": "2011-08-29 10:12:08", 
   "resumes_viewed": 0, 
   "employer": 18
  }
 }, 
 {
  "pk": 5, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 10:12:18", 
   "last_updated": "2011-08-29 10:12:18", 
   "resumes_viewed": 0, 
   "employer": 19
  }
 }, 
 {
  "pk": 6, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 10:12:59", 
   "last_updated": "2011-08-29 10:12:59", 
   "resumes_viewed": 0, 
   "employer": 20
  }
 }, 
 {
  "pk": 7, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 10:29:07", 
   "last_updated": "2011-08-29 10:29:07", 
   "resumes_viewed": 0, 
   "employer": 21
  }
 }, 
 {
  "pk": 8, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 10:29:17", 
   "last_updated": "2011-08-29 10:29:17", 
   "resumes_viewed": 0, 
   "employer": 22
  }
 }, 
 {
  "pk": 9, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 10:29:30", 
   "last_updated": "2011-08-29 10:29:30", 
   "resumes_viewed": 0, 
   "employer": 23
  }
 }, 
 {
  "pk": 10, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 10:29:45", 
   "last_updated": "2011-08-29 10:29:45", 
   "resumes_viewed": 0, 
   "employer": 24
  }
 }, 
 {
  "pk": 11, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 10:40:09", 
   "last_updated": "2011-08-29 10:40:09", 
   "resumes_viewed": 0, 
   "employer": 25
  }
 }, 
 {
  "pk": 12, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 10:40:24", 
   "last_updated": "2011-08-29 10:40:24", 
   "resumes_viewed": 0, 
   "employer": 26
  }
 }, 
 {
  "pk": 13, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 10:40:39", 
   "last_updated": "2011-08-29 10:40:39", 
   "resumes_viewed": 0, 
   "employer": 27
  }
 }, 
 {
  "pk": 14, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 10:41:03", 
   "last_updated": "2011-08-29 10:41:03", 
   "resumes_viewed": 0, 
   "employer": 28
  }
 }, 
 {
  "pk": 15, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 10:41:15", 
   "last_updated": "2011-08-29 10:41:15", 
   "resumes_viewed": 0, 
   "employer": 29
  }
 }, 
 {
  "pk": 16, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 10:41:31", 
   "last_updated": "2011-08-29 10:41:31", 
   "resumes_viewed": 0, 
   "employer": 30
  }
 }, 
 {
  "pk": 17, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 10:41:48", 
   "last_updated": "2011-08-29 10:41:48", 
   "resumes_viewed": 0, 
   "employer": 31
  }
 }, 
 {
  "pk": 18, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:19:48", 
   "last_updated": "2011-08-29 11:19:48", 
   "resumes_viewed": 0, 
   "employer": 32
  }
 }, 
 {
  "pk": 19, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:19:56", 
   "last_updated": "2011-08-29 11:19:56", 
   "resumes_viewed": 0, 
   "employer": 33
  }
 }, 
 {
  "pk": 20, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:20:06", 
   "last_updated": "2011-08-29 11:20:06", 
   "resumes_viewed": 0, 
   "employer": 34
  }
 }, 
 {
  "pk": 21, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:20:34", 
   "last_updated": "2011-08-29 11:20:34", 
   "resumes_viewed": 0, 
   "employer": 35
  }
 }, 
 {
  "pk": 22, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:20:48", 
   "last_updated": "2011-08-29 11:20:48", 
   "resumes_viewed": 0, 
   "employer": 36
  }
 }, 
 {
  "pk": 23, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:21:18", 
   "last_updated": "2011-08-29 11:21:18", 
   "resumes_viewed": 0, 
   "employer": 37
  }
 }, 
 {
  "pk": 24, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:21:31", 
   "last_updated": "2011-08-29 11:21:31", 
   "resumes_viewed": 0, 
   "employer": 38
  }
 }, 
 {
  "pk": 25, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:21:45", 
   "last_updated": "2011-08-29 11:21:45", 
   "resumes_viewed": 0, 
   "employer": 39
  }
 }, 
 {
  "pk": 26, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:22:06", 
   "last_updated": "2011-08-29 11:22:06", 
   "resumes_viewed": 0, 
   "employer": 40
  }
 }, 
 {
  "pk": 27, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:22:20", 
   "last_updated": "2011-08-29 11:22:20", 
   "resumes_viewed": 0, 
   "employer": 41
  }
 }, 
 {
  "pk": 28, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:24:36", 
   "last_updated": "2011-08-29 11:24:36", 
   "resumes_viewed": 0, 
   "employer": 42
  }
 }, 
 {
  "pk": 29, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:24:47", 
   "last_updated": "2011-08-29 11:24:47", 
   "resumes_viewed": 0, 
   "employer": 43
  }
 }, 
 {
  "pk": 30, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:24:57", 
   "last_updated": "2011-08-29 11:24:57", 
   "resumes_viewed": 0, 
   "employer": 44
  }
 }, 
 {
  "pk": 31, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:25:10", 
   "last_updated": "2011-08-29 11:25:10", 
   "resumes_viewed": 0, 
   "employer": 45
  }
 }, 
 {
  "pk": 32, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:25:27", 
   "last_updated": "2011-08-29 11:25:27", 
   "resumes_viewed": 0, 
   "employer": 46
  }
 }, 
 {
  "pk": 33, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:25:50", 
   "last_updated": "2011-08-29 11:25:50", 
   "resumes_viewed": 0, 
   "employer": 47
  }
 }, 
 {
  "pk": 34, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:25:59", 
   "last_updated": "2011-08-29 11:25:59", 
   "resumes_viewed": 0, 
   "employer": 48
  }
 }, 
 {
  "pk": 35, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:27:58", 
   "last_updated": "2011-08-29 11:27:58", 
   "resumes_viewed": 0, 
   "employer": 49
  }
 }, 
 {
  "pk": 36, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:28:12", 
   "last_updated": "2011-08-29 11:28:12", 
   "resumes_viewed": 0, 
   "employer": 50
  }
 }, 
 {
  "pk": 37, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:28:26", 
   "last_updated": "2011-08-29 11:28:26", 
   "resumes_viewed": 0, 
   "employer": 51
  }
 }, 
 {
  "pk": 38, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:28:41", 
   "last_updated": "2011-08-29 11:28:41", 
   "resumes_viewed": 0, 
   "employer": 52
  }
 }, 
 {
  "pk": 39, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:29:17", 
   "last_updated": "2011-08-29 11:29:17", 
   "resumes_viewed": 0, 
   "employer": 53
  }
 }, 
 {
  "pk": 40, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:29:27", 
   "last_updated": "2011-08-29 11:29:27", 
   "resumes_viewed": 0, 
   "employer": 54
  }
 }, 
 {
  "pk": 41, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:29:47", 
   "last_updated": "2011-08-29 11:29:47", 
   "resumes_viewed": 0, 
   "employer": 55
  }
 }, 
 {
  "pk": 42, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:30:15", 
   "last_updated": "2011-08-29 11:30:15", 
   "resumes_viewed": 0, 
   "employer": 56
  }
 }, 
 {
  "pk": 43, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:30:47", 
   "last_updated": "2011-08-29 11:30:47", 
   "resumes_viewed": 0, 
   "employer": 57
  }
 }, 
 {
  "pk": 44, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:33:11", 
   "last_updated": "2011-08-29 11:33:11", 
   "resumes_viewed": 0, 
   "employer": 58
  }
 }, 
 {
  "pk": 45, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:38:57", 
   "last_updated": "2011-08-29 11:38:57", 
   "resumes_viewed": 0, 
   "employer": 59
  }
 }, 
 {
  "pk": 46, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:39:13", 
   "last_updated": "2011-08-29 11:39:13", 
   "resumes_viewed": 0, 
   "employer": 60
  }
 }, 
 {
  "pk": 47, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:42:40", 
   "last_updated": "2011-08-29 11:42:40", 
   "resumes_viewed": 0, 
   "employer": 61
  }
 }, 
 {
  "pk": 48, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:42:59", 
   "last_updated": "2011-08-29 11:42:59", 
   "resumes_viewed": 0, 
   "employer": 62
  }
 }, 
 {
  "pk": 49, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:43:21", 
   "last_updated": "2011-08-29 11:43:21", 
   "resumes_viewed": 0, 
   "employer": 63
  }
 }, 
 {
  "pk": 50, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:43:41", 
   "last_updated": "2011-08-29 11:43:41", 
   "resumes_viewed": 0, 
   "employer": 64
  }
 }, 
 {
  "pk": 51, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:47:10", 
   "last_updated": "2011-08-29 11:47:10", 
   "resumes_viewed": 0, 
   "employer": 65
  }
 }, 
 {
  "pk": 52, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:47:24", 
   "last_updated": "2011-08-29 11:47:24", 
   "resumes_viewed": 0, 
   "employer": 66
  }
 }, 
 {
  "pk": 53, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:47:38", 
   "last_updated": "2011-08-29 11:47:38", 
   "resumes_viewed": 0, 
   "employer": 67
  }
 }, 
 {
  "pk": 54, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:47:48", 
   "last_updated": "2011-08-29 11:47:48", 
   "resumes_viewed": 0, 
   "employer": 68
  }
 }, 
 {
  "pk": 55, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:48:07", 
   "last_updated": "2011-08-29 11:48:07", 
   "resumes_viewed": 0, 
   "employer": 69
  }
 }, 
 {
  "pk": 56, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:48:52", 
   "last_updated": "2011-08-29 11:48:52", 
   "resumes_viewed": 0, 
   "employer": 70
  }
 }, 
 {
  "pk": 57, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-29 11:49:10", 
   "last_updated": "2011-08-29 11:49:10", 
   "resumes_viewed": 0, 
   "employer": 71
  }
 }, 
 {
  "pk": 58, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-31 18:59:22", 
   "last_updated": "2011-08-31 18:59:22", 
   "resumes_viewed": 0, 
   "employer": 72
  }
 }, 
 {
  "pk": 59, 
  "model": "employer.employerstatistics", 
  "fields": {
   "date_created": "2011-08-31 19:02:01", 
   "last_updated": "2011-08-31 19:02:01", 
   "resumes_viewed": 0, 
   "employer": 73
  }
 }, 
 {
  "pk": 1, 
  "model": "employer.recruiter", 
  "fields": {
   "is_master": true, 
   "date_created": "2011-08-28 21:43:26", 
   "last_updated": "2011-08-28 21:43:29", 
   "user": 4, 
   "employer": 6
  }
 }, 
 {
  "pk": 1, 
  "model": "employer.resumebook", 
  "fields": {
   "last_updated": "2011-09-06 11:58:41", 
   "name": null, 
   "students": [
    163, 
    165, 
    166, 
    167, 
    169, 
    170, 
    171, 
    174, 
    175, 
    192
   ], 
   "recruiter": 1, 
   "resume_book": "employer/resumebook/__potter@umeqo.com_2011-09-06-11-58-41.pdf", 
   "date_created": "2011-08-28 21:43:43"
  }
 }, 
 {
  "pk": 2, 
  "model": "employer.resumebook", 
  "fields": {
   "last_updated": "2011-08-28 21:43:43", 
   "name": null, 
   "students": [], 
   "recruiter": 1, 
   "resume_book": "", 
   "date_created": "2011-08-28 21:43:43"
  }
 }, 
 {
  "pk": 4, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-08-29 20:38:15", 
   "last_updated": "2011-08-29 20:38:15", 
   "student": 30, 
   "employer": 6
  }
 }, 
 {
  "pk": 19, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-08-30 12:14:36", 
   "last_updated": "2011-08-30 12:14:36", 
   "student": 61, 
   "employer": 6
  }
 }, 
 {
  "pk": 5, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-08-29 20:38:15", 
   "last_updated": "2011-08-29 20:38:15", 
   "student": 31, 
   "employer": 6
  }
 }, 
 {
  "pk": 6, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-08-29 20:38:15", 
   "last_updated": "2011-08-29 20:38:15", 
   "student": 33, 
   "employer": 6
  }
 }, 
 {
  "pk": 7, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-08-29 20:38:15", 
   "last_updated": "2011-08-29 20:38:15", 
   "student": 35, 
   "employer": 6
  }
 }, 
 {
  "pk": 8, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-08-29 22:22:13", 
   "last_updated": "2011-08-29 22:22:13", 
   "student": 44, 
   "employer": 6
  }
 }, 
 {
  "pk": 9, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-08-30 03:14:16", 
   "last_updated": "2011-08-30 03:14:16", 
   "student": 34, 
   "employer": 6
  }
 }, 
 {
  "pk": 10, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-08-30 03:14:16", 
   "last_updated": "2011-08-30 03:14:16", 
   "student": 41, 
   "employer": 6
  }
 }, 
 {
  "pk": 11, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-08-30 03:14:16", 
   "last_updated": "2011-08-30 03:14:16", 
   "student": 54, 
   "employer": 6
  }
 }, 
 {
  "pk": 12, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-08-30 03:14:16", 
   "last_updated": "2011-08-30 03:14:16", 
   "student": 56, 
   "employer": 6
  }
 }, 
 {
  "pk": 13, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-08-30 03:14:16", 
   "last_updated": "2011-08-30 03:14:16", 
   "student": 51, 
   "employer": 6
  }
 }, 
 {
  "pk": 14, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-08-30 03:14:16", 
   "last_updated": "2011-08-30 03:14:16", 
   "student": 57, 
   "employer": 6
  }
 }, 
 {
  "pk": 15, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-08-30 03:14:16", 
   "last_updated": "2011-08-30 03:14:16", 
   "student": 50, 
   "employer": 6
  }
 }, 
 {
  "pk": 16, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-08-30 03:14:16", 
   "last_updated": "2011-08-30 03:14:16", 
   "student": 53, 
   "employer": 6
  }
 }, 
 {
  "pk": 17, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-08-30 09:22:12", 
   "last_updated": "2011-08-30 09:22:12", 
   "student": 59, 
   "employer": 6
  }
 }, 
 {
  "pk": 18, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-08-30 09:22:12", 
   "last_updated": "2011-08-30 09:22:12", 
   "student": 60, 
   "employer": 6
  }
 }, 
 {
  "pk": 24, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-01 14:47:29", 
   "last_updated": "2011-09-01 14:47:29", 
   "student": 66, 
   "employer": 6
  }
 }, 
 {
  "pk": 21, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-08-30 18:37:26", 
   "last_updated": "2011-08-30 18:37:26", 
   "student": 72, 
   "employer": 6
  }
 }, 
 {
  "pk": 23, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-08-31 00:43:58", 
   "last_updated": "2011-08-31 00:43:58", 
   "student": 76, 
   "employer": 6
  }
 }, 
 {
  "pk": 25, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-01 14:47:29", 
   "last_updated": "2011-09-01 14:47:29", 
   "student": 79, 
   "employer": 6
  }
 }, 
 {
  "pk": 32, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 92, 
   "employer": 6
  }
 }, 
 {
  "pk": 27, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-01 14:47:29", 
   "last_updated": "2011-09-01 14:47:29", 
   "student": 87, 
   "employer": 6
  }
 }, 
 {
  "pk": 28, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-01 14:47:29", 
   "last_updated": "2011-09-01 14:47:29", 
   "student": 43, 
   "employer": 6
  }
 }, 
 {
  "pk": 29, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-01 14:47:29", 
   "last_updated": "2011-09-01 14:47:29", 
   "student": 88, 
   "employer": 6
  }
 }, 
 {
  "pk": 30, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-01 14:47:29", 
   "last_updated": "2011-09-01 14:47:29", 
   "student": 89, 
   "employer": 6
  }
 }, 
 {
  "pk": 31, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-01 14:47:29", 
   "last_updated": "2011-09-01 14:47:29", 
   "student": 90, 
   "employer": 6
  }
 }, 
 {
  "pk": 33, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 93, 
   "employer": 6
  }
 }, 
 {
  "pk": 34, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 94, 
   "employer": 6
  }
 }, 
 {
  "pk": 35, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 95, 
   "employer": 6
  }
 }, 
 {
  "pk": 36, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 96, 
   "employer": 6
  }
 }, 
 {
  "pk": 37, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 97, 
   "employer": 6
  }
 }, 
 {
  "pk": 38, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 99, 
   "employer": 6
  }
 }, 
 {
  "pk": 39, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 98, 
   "employer": 6
  }
 }, 
 {
  "pk": 40, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 101, 
   "employer": 6
  }
 }, 
 {
  "pk": 41, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 100, 
   "employer": 6
  }
 }, 
 {
  "pk": 42, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 105, 
   "employer": 6
  }
 }, 
 {
  "pk": 43, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 106, 
   "employer": 6
  }
 }, 
 {
  "pk": 44, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 108, 
   "employer": 6
  }
 }, 
 {
  "pk": 45, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 109, 
   "employer": 6
  }
 }, 
 {
  "pk": 46, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 110, 
   "employer": 6
  }
 }, 
 {
  "pk": 47, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 111, 
   "employer": 6
  }
 }, 
 {
  "pk": 48, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 112, 
   "employer": 6
  }
 }, 
 {
  "pk": 49, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 113, 
   "employer": 6
  }
 }, 
 {
  "pk": 50, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 114, 
   "employer": 6
  }
 }, 
 {
  "pk": 51, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 115, 
   "employer": 6
  }
 }, 
 {
  "pk": 52, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 116, 
   "employer": 6
  }
 }, 
 {
  "pk": 53, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 117, 
   "employer": 6
  }
 }, 
 {
  "pk": 54, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 118, 
   "employer": 6
  }
 }, 
 {
  "pk": 55, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 119, 
   "employer": 6
  }
 }, 
 {
  "pk": 56, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 120, 
   "employer": 6
  }
 }, 
 {
  "pk": 57, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 122, 
   "employer": 6
  }
 }, 
 {
  "pk": 58, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 123, 
   "employer": 6
  }
 }, 
 {
  "pk": 59, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 125, 
   "employer": 6
  }
 }, 
 {
  "pk": 60, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 128, 
   "employer": 6
  }
 }, 
 {
  "pk": 61, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 129, 
   "employer": 6
  }
 }, 
 {
  "pk": 62, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 15:06:10", 
   "last_updated": "2011-09-03 15:06:10", 
   "student": 36, 
   "employer": 6
  }
 }, 
 {
  "pk": 63, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 16:05:22", 
   "last_updated": "2011-09-03 16:05:22", 
   "student": 62, 
   "employer": 6
  }
 }, 
 {
  "pk": 64, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-03 19:23:19", 
   "last_updated": "2011-09-03 19:23:19", 
   "student": 130, 
   "employer": 6
  }
 }, 
 {
  "pk": 110, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-06 11:32:32", 
   "last_updated": "2011-09-06 11:32:32", 
   "student": 187, 
   "employer": 6
  }
 }, 
 {
  "pk": 66, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-04 15:52:28", 
   "last_updated": "2011-09-04 15:52:28", 
   "student": 133, 
   "employer": 6
  }
 }, 
 {
  "pk": 67, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-04 15:52:28", 
   "last_updated": "2011-09-04 15:52:28", 
   "student": 134, 
   "employer": 6
  }
 }, 
 {
  "pk": 68, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-04 15:52:28", 
   "last_updated": "2011-09-04 15:52:28", 
   "student": 135, 
   "employer": 6
  }
 }, 
 {
  "pk": 69, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-05 14:05:53", 
   "last_updated": "2011-09-05 14:05:53", 
   "student": 138, 
   "employer": 6
  }
 }, 
 {
  "pk": 70, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-05 14:05:53", 
   "last_updated": "2011-09-05 14:05:53", 
   "student": 140, 
   "employer": 6
  }
 }, 
 {
  "pk": 71, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-05 14:05:53", 
   "last_updated": "2011-09-05 14:05:53", 
   "student": 139, 
   "employer": 6
  }
 }, 
 {
  "pk": 72, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-05 14:05:53", 
   "last_updated": "2011-09-05 14:05:53", 
   "student": 141, 
   "employer": 6
  }
 }, 
 {
  "pk": 73, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-05 14:05:53", 
   "last_updated": "2011-09-05 14:05:53", 
   "student": 142, 
   "employer": 6
  }
 }, 
 {
  "pk": 74, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-05 14:05:53", 
   "last_updated": "2011-09-05 14:05:53", 
   "student": 143, 
   "employer": 6
  }
 }, 
 {
  "pk": 75, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-05 14:05:53", 
   "last_updated": "2011-09-05 14:05:53", 
   "student": 144, 
   "employer": 6
  }
 }, 
 {
  "pk": 76, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-05 14:05:53", 
   "last_updated": "2011-09-05 14:05:53", 
   "student": 145, 
   "employer": 6
  }
 }, 
 {
  "pk": 77, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-05 14:05:53", 
   "last_updated": "2011-09-05 14:05:53", 
   "student": 146, 
   "employer": 6
  }
 }, 
 {
  "pk": 78, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-05 14:05:53", 
   "last_updated": "2011-09-05 14:05:53", 
   "student": 147, 
   "employer": 6
  }
 }, 
 {
  "pk": 79, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-05 14:05:53", 
   "last_updated": "2011-09-05 14:05:53", 
   "student": 148, 
   "employer": 6
  }
 }, 
 {
  "pk": 80, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-05 14:05:53", 
   "last_updated": "2011-09-05 14:05:53", 
   "student": 149, 
   "employer": 6
  }
 }, 
 {
  "pk": 81, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-05 14:05:53", 
   "last_updated": "2011-09-05 14:05:53", 
   "student": 150, 
   "employer": 6
  }
 }, 
 {
  "pk": 82, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-05 14:05:53", 
   "last_updated": "2011-09-05 14:05:53", 
   "student": 151, 
   "employer": 6
  }
 }, 
 {
  "pk": 83, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-05 14:05:53", 
   "last_updated": "2011-09-05 14:05:53", 
   "student": 152, 
   "employer": 6
  }
 }, 
 {
  "pk": 84, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-05 14:05:53", 
   "last_updated": "2011-09-05 14:05:53", 
   "student": 153, 
   "employer": 6
  }
 }, 
 {
  "pk": 85, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-05 14:05:53", 
   "last_updated": "2011-09-05 14:05:53", 
   "student": 156, 
   "employer": 6
  }
 }, 
 {
  "pk": 86, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-05 14:05:53", 
   "last_updated": "2011-09-05 14:05:53", 
   "student": 157, 
   "employer": 6
  }
 }, 
 {
  "pk": 87, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-05 14:05:53", 
   "last_updated": "2011-09-05 14:05:53", 
   "student": 158, 
   "employer": 6
  }
 }, 
 {
  "pk": 88, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-05 14:05:53", 
   "last_updated": "2011-09-05 14:05:53", 
   "student": 155, 
   "employer": 6
  }
 }, 
 {
  "pk": 89, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-05 14:05:53", 
   "last_updated": "2011-09-05 14:05:53", 
   "student": 160, 
   "employer": 6
  }
 }, 
 {
  "pk": 90, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-05 14:05:53", 
   "last_updated": "2011-09-05 14:05:53", 
   "student": 161, 
   "employer": 6
  }
 }, 
 {
  "pk": 91, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-05 14:05:53", 
   "last_updated": "2011-09-05 14:05:53", 
   "student": 164, 
   "employer": 6
  }
 }, 
 {
  "pk": 92, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-06 06:28:32", 
   "last_updated": "2011-09-06 06:28:32", 
   "student": 163, 
   "employer": 6
  }
 }, 
 {
  "pk": 93, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-06 06:28:32", 
   "last_updated": "2011-09-06 06:28:32", 
   "student": 165, 
   "employer": 6
  }
 }, 
 {
  "pk": 94, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-06 06:28:32", 
   "last_updated": "2011-09-06 06:28:32", 
   "student": 166, 
   "employer": 6
  }
 }, 
 {
  "pk": 95, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-06 06:28:32", 
   "last_updated": "2011-09-06 06:28:32", 
   "student": 167, 
   "employer": 6
  }
 }, 
 {
  "pk": 96, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-06 06:28:32", 
   "last_updated": "2011-09-06 06:28:32", 
   "student": 38, 
   "employer": 6
  }
 }, 
 {
  "pk": 97, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-06 06:28:32", 
   "last_updated": "2011-09-06 06:28:32", 
   "student": 168, 
   "employer": 6
  }
 }, 
 {
  "pk": 98, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-06 06:28:32", 
   "last_updated": "2011-09-06 06:28:32", 
   "student": 169, 
   "employer": 6
  }
 }, 
 {
  "pk": 99, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-06 06:28:32", 
   "last_updated": "2011-09-06 06:28:32", 
   "student": 170, 
   "employer": 6
  }
 }, 
 {
  "pk": 100, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-06 06:28:32", 
   "last_updated": "2011-09-06 06:28:32", 
   "student": 174, 
   "employer": 6
  }
 }, 
 {
  "pk": 101, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-06 06:28:32", 
   "last_updated": "2011-09-06 06:28:32", 
   "student": 173, 
   "employer": 6
  }
 }, 
 {
  "pk": 102, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-06 06:28:32", 
   "last_updated": "2011-09-06 06:28:32", 
   "student": 175, 
   "employer": 6
  }
 }, 
 {
  "pk": 103, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-06 06:28:32", 
   "last_updated": "2011-09-06 06:28:32", 
   "student": 91, 
   "employer": 6
  }
 }, 
 {
  "pk": 104, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-06 06:28:32", 
   "last_updated": "2011-09-06 06:28:32", 
   "student": 171, 
   "employer": 6
  }
 }, 
 {
  "pk": 105, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-06 06:28:32", 
   "last_updated": "2011-09-06 06:28:32", 
   "student": 107, 
   "employer": 6
  }
 }, 
 {
  "pk": 106, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-06 06:28:32", 
   "last_updated": "2011-09-06 06:28:32", 
   "student": 177, 
   "employer": 6
  }
 }, 
 {
  "pk": 107, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-06 06:28:32", 
   "last_updated": "2011-09-06 06:28:32", 
   "student": 176, 
   "employer": 6
  }
 }, 
 {
  "pk": 108, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-06 06:28:32", 
   "last_updated": "2011-09-06 06:28:32", 
   "student": 172, 
   "employer": 6
  }
 }, 
 {
  "pk": 109, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-06 06:28:32", 
   "last_updated": "2011-09-06 06:28:32", 
   "student": 178, 
   "employer": 6
  }
 }, 
 {
  "pk": 111, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-06 11:32:32", 
   "last_updated": "2011-09-06 11:32:32", 
   "student": 186, 
   "employer": 6
  }
 }, 
 {
  "pk": 112, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-06 11:32:32", 
   "last_updated": "2011-09-06 11:32:32", 
   "student": 184, 
   "employer": 6
  }
 }, 
 {
  "pk": 114, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-06 11:32:32", 
   "last_updated": "2011-09-06 11:32:32", 
   "student": 181, 
   "employer": 6
  }
 }, 
 {
  "pk": 115, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-06 11:32:32", 
   "last_updated": "2011-09-06 11:32:32", 
   "student": 182, 
   "employer": 6
  }
 }, 
 {
  "pk": 116, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-06 11:32:32", 
   "last_updated": "2011-09-06 11:32:32", 
   "student": 180, 
   "employer": 6
  }
 }, 
 {
  "pk": 117, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-06 11:44:49", 
   "last_updated": "2011-09-06 11:44:49", 
   "student": 70, 
   "employer": 6
  }
 }, 
 {
  "pk": 118, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-06 11:44:49", 
   "last_updated": "2011-09-06 11:44:49", 
   "student": 191, 
   "employer": 6
  }
 }, 
 {
  "pk": 119, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-06 11:44:49", 
   "last_updated": "2011-09-06 11:44:49", 
   "student": 189, 
   "employer": 6
  }
 }, 
 {
  "pk": 120, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "cool girl", 
   "date_created": "2011-09-06 11:57:49", 
   "last_updated": "2011-09-06 11:58:32", 
   "student": 192, 
   "employer": 6
  }
 }, 
 {
  "pk": 121, 
  "model": "employer.employerstudentcomment", 
  "fields": {
   "comment": "", 
   "date_created": "2011-09-06 11:57:49", 
   "last_updated": "2011-09-06 11:57:49", 
   "student": 190, 
   "employer": 6
  }
 }, 
 {
  "pk": 1, 
  "model": "employer.recruiterpreferences", 
  "fields": {
   "email_on_rsvp_to_public_event": false, 
   "last_updated": "2011-09-06 08:42:59", 
   "recruiter": 1, 
   "email_on_rsvp_to_private_event": false, 
   "date_created": "2011-08-28 21:43:26", 
   "default_student_result_ordering": "relevancy", 
   "default_student_results_per_page": 100
  }
 }, 
 {
  "pk": 1, 
  "model": "employer.recruiterstatistics", 
  "fields": {
   "date_created": "2011-08-28 21:43:26", 
   "recruiter": 1, 
   "last_updated": "2011-08-28 21:43:26", 
   "resumes_viewed": 0
  }
 }, 
 {
  "pk": 37, 
  "model": "student.student", 
  "fields": {
   "last_name": null, 
   "last_updated": "2011-08-29 20:58:54", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": null, 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": null, 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": null, 
   "first_major": null, 
   "subscriptions": [
    6
   ], 
   "gpa": null, 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": false, 
   "school_year": null, 
   "graduation_year": null, 
   "previous_employers": [], 
   "website": null, 
   "second_major": null, 
   "resume": "", 
   "user": 47, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-08-29 20:58:54"
  }
 }, 
 {
  "pk": 38, 
  "model": "student.student", 
  "fields": {
   "last_name": "Maynard", 
   "last_updated": "2011-09-06 06:59:50", 
   "sat_m": 740, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": 2200, 
   "sat_v": 760, 
   "sat_w": 700, 
   "keywords": "", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Eryn", 
   "first_major": 15, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.110", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [
    12
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/maynard_eryn_eryndm@mit.edu_2011-09-05-15-15-34_1.pdf", 
   "user": 48, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-08-29 21:00:58"
  }
 }, 
 {
  "pk": 39, 
  "model": "student.student", 
  "fields": {
   "last_name": null, 
   "last_updated": "2011-08-29 21:01:44", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": null, 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": null, 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": null, 
   "first_major": null, 
   "subscriptions": [
    6
   ], 
   "gpa": null, 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": false, 
   "school_year": null, 
   "graduation_year": null, 
   "previous_employers": [], 
   "website": null, 
   "second_major": null, 
   "resume": "", 
   "user": 49, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-08-29 21:01:44"
  }
 }, 
 {
  "pk": 40, 
  "model": "student.student", 
  "fields": {
   "last_name": null, 
   "last_updated": "2011-08-29 21:22:19", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": null, 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": null, 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": null, 
   "first_major": null, 
   "subscriptions": [
    6
   ], 
   "gpa": null, 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": false, 
   "school_year": null, 
   "graduation_year": null, 
   "previous_employers": [], 
   "website": null, 
   "second_major": null, 
   "resume": "", 
   "user": 50, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-08-29 21:22:19"
  }
 }, 
 {
  "pk": 41, 
  "model": "student.student", 
  "fields": {
   "last_name": "Kontsevoi", 
   "last_updated": "2011-09-06 07:00:12", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": 2350, 
   "sat_v": 760, 
   "sat_w": 790, 
   "keywords": " vladislav kontsevoi goal oriented experienced mathematical modeling solving public speaking excellent technical skills education massachusetts institute technology cambridge september june candidate bachelor mathematics computer engineering relevant coursework finance theory microeconomics macroeconomics intro eecs lab assistant introduction algorithms algebra grader analysis probability random variables gpa overall gpa illinois mathematics academy aurora june relevant coursework quantum mechanics analysis graph theory toji trading chicago trading research intern conducted tick data analysis microstructure research improvement algorithmic futures trading strategies studying latency arbitrage passive logic created proof concept tools enhanced limit visualization using matplotlib numpy turris chicago january analyst extern developed spreadsheet evaluation growth forecasting portfolio companies health services designed proprietary algorithm portfolio quantifying loss marketing purposes northwestern university evanston june august research intern conducted research thermoelectrics using computational quantum physics methods presented annual meeting american physical society publication forthcoming selected honors siemens competition math technology semifinalist intel talent semifinalist mandelbrot competition mathematics national winner mathematical contest modeling national outstanding winner american mathematics competitions regional winner winner usamo qualifier american computer league winner perfect junior america speaker national convention leadership extracurriculars traders mit executive member helped credit trading built trading simulations annual mit intercollegiate trading competition worked firms organize educational presentations competition sponsorship undergraduate association finance vice assisted groups funding policy budgeting organized funding applications communicated activities solving inc olympiad grader graded evaluated mathematical olympiads including usa mathematics talent skills interests python numpy matplotlib java mathematica vba excel windows unix awk private tutoring guitar", 
   "looking_for": [
    3, 
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "RU", 
    "US"
   ], 
   "first_name": "Vladislav", 
   "first_major": 25, 
   "subscriptions": [
    6
   ], 
   "gpa": "5.000", 
   "campus_involvement": [
    466, 
    400, 
    403
   ], 
   "languages": [
    3, 
    123
   ], 
   "profile_created": true, 
   "school_year": 2, 
   "graduation_year": 3, 
   "previous_employers": [], 
   "website": "", 
   "second_major": 12, 
   "resume": "student/student/kontsevoi_vladislav_vok@mit.edu_2011-09-04-00-46-01.pdf", 
   "user": 51, 
   "industries_of_interest": [
    15, 
    19, 
    28, 
    43, 
    34, 
    36, 
    40
   ], 
   "act": 36, 
   "date_created": "2011-08-29 21:26:04"
  }
 }, 
 {
  "pk": 42, 
  "model": "student.student", 
  "fields": {
   "last_name": null, 
   "last_updated": "2011-08-29 21:45:01", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": null, 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": null, 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": null, 
   "first_major": null, 
   "subscriptions": [
    6
   ], 
   "gpa": null, 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": false, 
   "school_year": null, 
   "graduation_year": null, 
   "previous_employers": [], 
   "website": null, 
   "second_major": null, 
   "resume": "", 
   "user": 52, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-08-29 21:45:00"
  }
 }, 
 {
  "pk": 43, 
  "model": "student.student", 
  "fields": {
   "last_name": "Merriman", 
   "last_updated": "2011-09-06 06:58:14", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " anthony merriman gravity mit edu education massachusetts institute technology cambridge candidate management expected june math relevant coursework finance theory options futures markets applied statistics corporate financial accounting optimization methods probabilistic systems analysis java microeconomics macroeconomics linear algebra maryville maryville tennessee bowl goldman sachs securities york participated rotational program spending weeks different trading desks principal funding investment credit index trading synthetic created presented various ideas sales pitches completing projects assisting traders sales normal tasks bnp paribas structured products york assisted traders salespeople pricing structuring derivative products various currency pairs commodities stock indices marketing reduce hedging costs mit intercollegiate trading competition finisher cambridge competed quantitative outcry electronically simulated trading cases rotman interactive trading platform harvard princeton yale upenn wharton columbia nyu stern wellesley raded equities investment yield bonds credit default swaps deliverable commodities reacting analyst news reports profit combination trading rounds northwestern mutual financial network financial representative intern maryville nts comprehensive financial planning personal information created delivered personal financial plans prospects urged individual instantiate professional recommendations pruett financial intern competition production interns activities akpsi fraternity algorithmic poker competitive lifting mit rugby interests astrophysics cosmology philosophy elligence address bay boston permanent address pineview maryville", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Anthony", 
   "first_major": 23, 
   "subscriptions": [
    10, 
    7, 
    8, 
    5, 
    6, 
    9
   ], 
   "gpa": "3.400", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/merriman_anthony_gravity@mit.edu_2011-09-01-12-27-23.pdf", 
   "user": 53, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-08-29 21:46:35"
  }
 }, 
 {
  "pk": 44, 
  "model": "student.student", 
  "fields": {
   "last_name": "Hu", 
   "last_updated": "2011-09-06 06:39:56", 
   "sat_m": 780, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": 2240, 
   "sat_v": 720, 
   "sat_w": 740, 
   "keywords": " cce acd qrc cce cced cce www ccq www ccq lmno wcc udd", 
   "looking_for": [
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Elina", 
   "first_major": 26, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.300", 
   "campus_involvement": [
    460, 
    207, 
    461
   ], 
   "languages": [
    3, 
    47, 
    127
   ], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/hu_elina_ehu@mit.edu_2011-08-29-21-51-23.pdf", 
   "user": 54, 
   "industries_of_interest": [
    2, 
    37, 
    38, 
    13, 
    14, 
    15
   ], 
   "act": 35, 
   "date_created": "2011-08-29 21:49:46"
  }
 }, 
 {
  "pk": 45, 
  "model": "student.student", 
  "fields": {
   "last_name": null, 
   "last_updated": "2011-08-29 22:07:04", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": null, 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": null, 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": null, 
   "first_major": null, 
   "subscriptions": [
    6
   ], 
   "gpa": null, 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": false, 
   "school_year": null, 
   "graduation_year": null, 
   "previous_employers": [], 
   "website": null, 
   "second_major": null, 
   "resume": "", 
   "user": 55, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-08-29 22:07:04"
  }
 }, 
 {
  "pk": 46, 
  "model": "student.student", 
  "fields": {
   "last_name": null, 
   "last_updated": "2011-08-29 22:09:17", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": null, 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": null, 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": null, 
   "first_major": null, 
   "subscriptions": [
    6
   ], 
   "gpa": null, 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": false, 
   "school_year": null, 
   "graduation_year": null, 
   "previous_employers": [], 
   "website": null, 
   "second_major": null, 
   "resume": "", 
   "user": 56, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-08-29 22:09:17"
  }
 }, 
 {
  "pk": 33, 
  "model": "student.student", 
  "fields": {
   "last_name": "Chang", 
   "last_updated": "2011-09-06 06:34:29", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " education massachusetts institute technology cambridge candidate bachelors electrical engineering computer june gpa relevant coursework elements software construction introduction algorithms analysis algorithms artificial intelligence signals systems probabilistic systems analysis mathematics computer mit humans automation lab cambridge undergraduate researcher iphone mav project june developed user interface iphone controlled micro aerial vehicle project designed implemented alert icon ieee conference adapted mav indoor navigation compatible outdoor guidance using google maps gps merged mav visualization data coatue management llc york software developer extern january created analytics tracked reported usage silverlight web application using silverlight sql backend mit media lab tangible media cambridge undergraduate researcher software developer brush june january modernized popular projects demonstrations software combined integrated capabilities previous prototypes added features brush intuitive users optimized software robust continuous usage demonstrations worked closely circuit designer integrate electronics software designed built physical casing mechanisms electronics mit battlecode cambridge programming competition january designed implemented virtual autonomous robots compete teams strategy created robots dynamic strategies finding resource allocation algorithms potential calculations network communications leadership phi kappa theta fraternity eta chapter boston activities vice president financial officer responsibilities compile accreditation application annual budget tax forms manage boarders president months acm ieee mit chapter webmaster april mit ifc judicial committee member september mit ifc judicial review committee committee member november publications gust alerting supervisory micro aerial vehicle march authors manal habib paul quimby stephen chang kimberly jackson mary cummings experienced java python objective cocoa framework silverlight sql processing latex exposure arduino programming matlab autoit scripting signals systems grader september december emerson scholar september skills", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Stephen", 
   "first_major": 15, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.400", 
   "campus_involvement": [], 
   "languages": [
    3
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [
    21, 
    15
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/chang_stephen_smchang@mit.edu_2011-08-29-20-23-34.pdf", 
   "user": 43, 
   "industries_of_interest": [
    36, 
    40
   ], 
   "act": null, 
   "date_created": "2011-08-29 20:16:03"
  }
 }, 
 {
  "pk": 34, 
  "model": "student.student", 
  "fields": {
   "last_name": "LaColla", 
   "last_updated": "2011-09-06 06:34:30", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " john lacolla commonwealth avenue jlacolla mit edu woodbank boston chester education massachusetts institute technology candidate bachelor mechanical engineering gpa coursework mechanics materials dynamics thermal fluids engineering manufacturing measurement instrumentation numerical computation cambridge jun chester diploma chester jun politecnico torino department mechanics turin italy research intern jun aug research industrial bioengineering conceptual bioreactor cardiac tissue used solidworks models technical drawings components examined capabilities proposed apply mechanical electrical stimuli tissue samples raytheon utd springfield mechanical engineering intern jun aug utilized solidworks generate modify parts assemblies addition technical drawings multiple projects corresponded shops fabrication parts testing performed mechanical calculations researched cutting technologies fabricated beds specifications experimented tools concepts projects manufacturing cambridge feb designed constructed robot sponsored competition utilizing solidworks experimented electrical mechanical pneumatic systems suitability implementation robot components points competition leadership phi kappa theta fraternity boston vice president mar fraternity ensure chapter activities documented coordinate completion accreditation application oversight chapter finances participate undergraduate executive committee phi kappa theta fraternity boston manager apr mar maintained physical weeks repair improve prepared inspections boston mit ensured compliance codes scouts america chester eagle scout award feb jul managed hours youth adult volunteer labor completion construction oriented service project local church coordinated entire project including proposal planning fundraising execution skills computers solidworks matlab mathcad knowledge python java microsoft machining familiar tools processes safety cam processes mastercam languages italian activities mit international technology initiative misti italy mar program international research experiences phi kappa theta fraternity sep membership national social fraternity undergraduate opportunities program upop sep sep program development professional engineering leadership skills", 
   "looking_for": [
    1, 
    3, 
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "John", 
   "first_major": 26, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.100", 
   "campus_involvement": [], 
   "languages": [
    3, 
    91
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [
    37
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/lacolla_john_jlacolla@mit.edu_2011-08-29-22-34-45.pdf", 
   "user": 44, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-08-29 20:16:09"
  }
 }, 
 {
  "pk": 35, 
  "model": "student.student", 
  "fields": {
   "last_name": "Chen", 
   "last_updated": "2011-09-06 06:34:29", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": 2340, 
   "sat_v": 740, 
   "sat_w": 800, 
   "keywords": " address memorial cambridge tong chen chentong mit edu address metairie education massachusetts institute technology cambridge candidate economics june cumulative gpa relevant coursework finance theory industrial organization economics incentives business fidelity investments fmr boston equity research associate intern covered international stocks within healthcare industrials consumer sectors conducting conference calls analysts management experts perform due diligence companies industries constructing valuation models based multiples dcf communicating stock ideas fmr portfolio managers ddj management llc waltham research analyst yield bonds equities initiated updated coverage public private companies across sectors industries built financial statement models capitalization tables evaluate yield debt equity investment opportunities based various sec filings using excel global platinum securities research analyst technology financial institutions sectors performing analysis porter forces analysis swot valuation evaluate investment opportunities discussing conditions teams materials technology financial sectors initiated coverage holdings armh return vice president education compiled rigorous education program analysts accounting valuation investment philosophies thomson reuters legal minneapolis technology intern westlaw worked software engineers indexing westlaw using java allston trading chicago developer extern developed helping options traders analyze portfolio risks different overnight scenarios leadership activities traders mit executive member contacted firm representatives presentations sponsor trading competitions responsible sponsorship trading firms competition organized annual trading competition students attracting students schools including harvard princeton mit columbia dartmouth awards skills awards usamo qualifier siemens award advanced placement national merit scholarship winner native speaker literacy mandarin chinese computer java python stata matlab microsoft suite bloomberg factset interests events soccer volleyball", 
   "looking_for": [
    1, 
    3
   ], 
   "countries_of_citizenship": [
    "CN", 
    "US"
   ], 
   "first_name": "Tong", 
   "first_major": 14, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.950", 
   "campus_involvement": [], 
   "languages": [
    3, 
    48, 
    108
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [
    43
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/chen_tong_chentong@mit.edu_2011-08-29-20-27-53.pdf", 
   "user": 45, 
   "industries_of_interest": [
    19, 
    28, 
    43
   ], 
   "act": 35, 
   "date_created": "2011-08-29 20:16:50"
  }
 }, 
 {
  "pk": 36, 
  "model": "student.student", 
  "fields": {
   "last_name": "Gao", 
   "last_updated": "2011-09-06 06:59:45", 
   "sat_m": 790, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": 2290, 
   "sat_v": 750, 
   "sat_w": 750, 
   "keywords": " memorial cambridge promontory marietta yida gao yidagao mit edu education massachusetts institute technology mit cambridge gpa candidate mathematics computer june minor finance management economics relevant courses advance corporate finance finance theory corporate financial accounting linear algebra microeconomics macroeconomics intro algorithms multivariable calculus differential equation discrete math george walton comprehensive marietta gpa sati satii chemistry mathii awards emory goizueta business scholar harvard award georgia tech presidential scholar georgia symphony orchestra violin georgia boys outstanding achievement community service award hrs mit sloan management cambridge research assistant prof paul asquith gordon billard professor finance september research corporate finance topics equity issuances reverse mergers ipos catering theory transparency databases statistical tests analyze information financial sources edgar crsp capiq mckinsey boston consultant intern june mckinsey enterprise tech initiative composed proprietary assets firm database forecast model firm database using sql model future landscape using deals financials cio surveys etc kaufman investment boston analyst august assist buyside financial advisory debt equity financings valuation analyses precedent transaction research created pro forma statement model analyzed covenant compliances built various valuation models dcf comps integrated strategies tactics consulting firm cambridge consultant intern june august created using network simulator simulation models internet network systems securities client models helped client modify its router devices increase bandwidth allocation efficiency decrease congestion leadership mit ventureships consultant director webmaster august advise teams development execution ideas increase program conduct club events maintain website conducted research interviews pricing competitive analysis graduate students gramify presented findings advisors mit venture mentoring service vms presentation displayed vms website junior achievement georgia fellows program president august created employee scratch finance enterprise weekly meeting agendas discussions oversaw departments conducted meetings initial stock price price upon liquidation net profit received georgia junior achievement outstanding business award prepcycle founder organized tutoring walton cobb schools tutored students per extracurricular activities mit varsity indoor outdoor pole vaulter sprinter august won england iii championships newmacs championship varsity traders mit member executive august host events students understanding trading various trading desks financial products planned logistics created files traders mit intercollegiate trading competitions phi beta epsilon fraternity news information officer august bicycle repair sales employed repair resell bicycles average profit bike sold bikes august county champion meets met national elite standard", 
   "looking_for": [
    3, 
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Yida", 
   "first_major": 25, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.800", 
   "campus_involvement": [
    32, 
    468, 
    466
   ], 
   "languages": [
    3, 
    48, 
    128
   ], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [
    18
   ], 
   "website": "", 
   "second_major": 23, 
   "resume": "student/student/gao_yida_yidagao@mit.edu_2011-09-05-15-35-10.pdf", 
   "user": 46, 
   "industries_of_interest": [
    37, 
    15, 
    19, 
    27, 
    28, 
    41, 
    34, 
    40, 
    42
   ], 
   "act": null, 
   "date_created": "2011-08-29 20:17:28"
  }
 }, 
 {
  "pk": 66, 
  "model": "student.student", 
  "fields": {
   "last_name": "Guo", 
   "last_updated": "2011-09-06 07:00:20", 
   "sat_m": 780, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": 2380, 
   "sat_v": 800, 
   "sat_w": 800, 
   "keywords": " address address memorial raven court cambridge knoxville amie guo amieguo mit edu education massachusetts institute technology mit candidate bachelor management economics gpa relevant coursework completed finance theory corporate finance macroeconomics introduction computers engineering solving java linear algebra coursework finance theory accounting microeconomics probability random variables farragut knoxville gpa weighted gpa unweighted relevant coursework calculus statistics macroeconomics accounting university tennessee multivariable calculus university tennessee mit sloan management finance research professor asquith feb research assistant helping professor asquith papers involving corporate bond equity issuances reverse mergers disappearing dividends transparency counter learning corporate finance analyzing data researching information databases using statistical packages stata vichara technologies financial technology consultants january strategy marketing consultant extern learned financial technology specifically fixed income sector mbs advised firm senior management its business strategy formulated firm positioning firm overall marketing mit financial services sept dec analyst worked executive director senior financial analyst financial services collected data developed techniques analyze costs undergraduate education changed decade causes diminishing margin revenue university tennessee department chemistry dec researcher researched thermo sensitive hydrophilic polymers potential biomedical applications research selected tennessee junior humanities symposium awarded honorable mention awards distinction american chemical society asm materials education foundation leadership communicating web based media sept dec project manager supervised effort community based website mit students items services including materials textbooks electronics transportation etc strove maximize efficiency convenient medium mit transactions club aug president revitalized club improved membership acted liaison helped coordinate events knoxville chapter government aug committee community service committee brainstormed improvements within suggested community service activities within community organized community service events cleanup angel etc alpha theta aug committee coordination helped logistics organized events oversaw events smoothly skills technology mandarin chinese intermediate microsoft powerpoint excel java stata activities interests mit tour mit international development consulting finance investment banking visual arts painting sketching photography running literature", 
   "looking_for": [
    3, 
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "CA", 
    "US"
   ], 
   "first_name": "Amie", 
   "first_major": 14, 
   "subscriptions": [
    6
   ], 
   "gpa": "5.000", 
   "campus_involvement": [], 
   "languages": [
    3, 
    47
   ], 
   "profile_created": true, 
   "school_year": 2, 
   "graduation_year": 3, 
   "previous_employers": [
    15
   ], 
   "website": "", 
   "second_major": 23, 
   "resume": "student/student/guo_amie_amieguo@mit.edu_2011-09-01-15-00-59.pdf", 
   "user": 76, 
   "industries_of_interest": [
    37, 
    38, 
    19, 
    24, 
    27, 
    28, 
    43, 
    41, 
    42
   ], 
   "act": null, 
   "date_created": "2011-08-30 12:27:25"
  }
 }, 
 {
  "pk": 79, 
  "model": "student.student", 
  "fields": {
   "last_name": "Shivakumar", 
   "last_updated": "2011-09-06 07:00:13", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": 2350, 
   "sat_v": 750, 
   "sat_w": 800, 
   "keywords": " vivaek mit edu commonwealth avenue boston vivaek shivakumar education massachusetts institute technology cambridge candidate bachelor linguistics mathematics computer gpa june relevant coursework multivariable calculus introduction linguistics differential equations probability random variables introduction eecs thomas jefferson technology alexandria gpa math verbal writing math iic physics latin national merit scholar finalist xerox award innovation information technology relevant coursework artificial intelligence linear algebra computer research laboratory skills computer languages software python rstudio java vim eclipse matlab microsoft suite foreign languages fluent english tamil conversationally proficient hindi latin accolades international linguistics olympiad honorable mention american computational linguistics olympiad national latin convention latin grammar latin tutoring taught latin grammar assisted translation latin texts volunteer kesem mit cambridge counselor mar counselor kids parents cancer participated fundraising leadership teamwork training sessions publicity massachusetts senior classical league boston competition writer jan latin grammar tests latin convention certamen quiz bowl style sets various levels competition latin grammar sri siva vishnu temple lanham musical events volunteer public registration annual musical festivals helped temple sales events leadership mit swara indian classical cambridge treasurer sep managed account balances receipts registration funding grants guest concerts drafted filed requests payment contracts services rendered mit ohms asian cappella cambridge arranger sep composed directed performed arrangements popular asian american cappella tjhsst latin honors society alexandria certamen competition coordinator coach oct june including approximately students tutored coached players competition practices activities interests carnatic vocal indian classical carnatic violin boxing phi kappa theta national fraternity eta chapter participate brotherhood community service charity social activities independent foreign conversational hindi spanish mandarin telugu korean persian", 
   "looking_for": [
    3, 
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Vivaek", 
   "first_major": 12, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.300", 
   "campus_involvement": [], 
   "languages": [
    3, 
    82, 
    153
   ], 
   "profile_created": true, 
   "school_year": 2, 
   "graduation_year": 3, 
   "previous_employers": [], 
   "website": "", 
   "second_major": 21, 
   "resume": "student/student/shivakumar_vivaek_vivaek@mit.edu_2011-08-31-12-34-27.pdf", 
   "user": 89, 
   "industries_of_interest": [
    20, 
    40
   ], 
   "act": null, 
   "date_created": "2011-08-31 12:20:44"
  }
 }, 
 {
  "pk": 30, 
  "model": "student.student", 
  "fields": {
   "last_name": "Dearing", 
   "last_updated": "2011-09-06 06:34:29", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " zachary dearing campus address hereford boston tel email zdearing mit edu address waverly dallas education massachusetts institute technology june gpa candidate bachelor economics political minor management cambridge relevant coursework principles micro macroeconomics intermediate macro microeconomics economic financial crises finance theory accounting statistical economics multivariable calculus episcopal dallas gpa dallas salutatorian national scholar national merit semi finalist mckinsey business analyst stamford assessed strategic vertically segmenting telecom business customer billion annual revenue address telecom needs healthcare technology customers developed baseline understanding divisions pharmaceutical clients identify divisional differences potential risks opportunities clients prepared integration evaluated business risk opportunity outsourcing offshoring clinical data management india goldman sachs financial analyst securities york structuring project mortgages desk senior partner examining arbitrage spreads mortgage backed security values underlying collateral priced securities using intext implemented proprietary loans model analyzed publicly traded buyout candidate cap using fundamentals determined fairly valued worked critical growth contingency plans psi minority stake facing imminent cash communication media advisors consulting analyst boutique consulting investment management firm boston staffed due diligence project investment evaluating cable markets southern modeled future revenue streams operating costs growth opportunities based upon trends demographics worked founding partner construct predictive models compendium maverick financial analyst intern operations hedge fund accounting dallas august parsed information consolidated funds prospectus easier senior traders compiled positions performance data facilitate its quantitative analysis project maintained item fixed asset register supported excel based spreadsheet analysis united states senate washington january june facilitated voting procedure ensuring senators voted informed issue being decided upon pcs founder owner computer assembly business dallas july september founded total revenue built sold custom computers customers leadership sloan business club sbc president director corporate relations cambridge organization annual budget specifically focusing membership development building sponsorship relations firms organized merger largest business organizations campus suma sebc created marketed sponsorship programs contacted convinced firms commit mit underclassmen giving campaign cambridge october devised innovative fundraising strategy leading participation rate beating previous participation fund service trips abroad committee publicity committee member cambridge shared responsibility marketing production mit brass rat committee publicity efforts events combined budget attendance interests skills java asp net php javascript html marathon running golf politics architecture chi phi", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Zachary", 
   "first_major": 14, 
   "subscriptions": [
    10, 
    7, 
    6
   ], 
   "gpa": "4.500", 
   "campus_involvement": [
    434, 
    306, 
    334
   ], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [
    25, 
    18
   ], 
   "website": "", 
   "second_major": 32, 
   "resume": "student/student/dearing_zachary_zdearing@mit.edu_2011-08-29-20-04-56.pdf", 
   "user": 40, 
   "industries_of_interest": [
    37
   ], 
   "act": 35, 
   "date_created": "2011-08-29 20:03:05"
  }
 }, 
 {
  "pk": 31, 
  "model": "student.student", 
  "fields": {
   "last_name": "Ma", 
   "last_updated": "2011-09-06 06:59:58", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": 2330, 
   "sat_v": 730, 
   "sat_w": 800, 
   "keywords": " joshua memorial cambridge joshma mit edu http joshma com education massachusetts institute technology cambridge candidate bachelor electrical engineering computer gpa june technology lincroft mathematics departmental award june google youtube video management engineering intern aug prototyped implemented mockups redesigns extensive html javascript google closure library python youtube servlet architecture designed implemented problems metadata proprietary performance nosql indexes rpc services protocol buffers exposure hubspot cambridge engineering extern jan played active role migrating knowledgebase zendesk platform integrating zendesk into hubspot authentication forum ideas migration analysis usage worked extensively java backend struts zendesk api python scripting exposed maven builds tests selenium tests deployment practices agile development mobility mit media lab cambridge research intern oct dec designed developed mobile web application tin meeting project worked tornado backend non blocking dynamic javascript html css interface login meetings manage tasks topics national bowl bee ridgewood freelance web developer june developed wordpress based web application national academic competition built content management csv parsing competition results developed online testing javascript php preliminary bee gary boards wildwood freelance web developer mar november developed wordpress based web application local surf skate apparel integrated ecommerce into wordpress installation skills experienced html css javascript jquery mootools closure library php cakephp kohana python django actionscript java struts maven mysql nosql solr proficient adobe photoshop adobe flash professional matlab mathematica awards activities creator http www centeroid independently developed google app based web application integrated google maps designed optimal timesaving meeting national siemens award advanced placement national male winner highest overall scores advanced placement math exams moody mega math challenge applied mathematics competition teams across physics olympiad semifinalist semifinalist competitors national physics competition vice president jersey technology association coordinated technology conference participating schools schools efforts implementing transparent competition feedback", 
   "looking_for": [
    3, 
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "CA", 
    "US"
   ], 
   "first_name": "Joshua", 
   "first_major": 15, 
   "subscriptions": [
    10, 
    13, 
    12, 
    7, 
    11, 
    8, 
    14, 
    5, 
    4, 
    6, 
    9
   ], 
   "gpa": "5.000", 
   "campus_involvement": [
    32, 
    334, 
    387
   ], 
   "languages": [
    3, 
    48
   ], 
   "profile_created": true, 
   "school_year": 1, 
   "graduation_year": 3, 
   "previous_employers": [
    12
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/ma_joshua_joshma@mit.edu_2011-08-29-20-06-27.pdf", 
   "user": 41, 
   "industries_of_interest": [
    37, 
    13, 
    15, 
    27, 
    36
   ], 
   "act": null, 
   "date_created": "2011-08-29 20:03:50"
  }
 }, 
 {
  "pk": 47, 
  "model": "student.student", 
  "fields": {
   "last_name": null, 
   "last_updated": "2011-08-29 22:24:34", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": null, 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": null, 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": null, 
   "first_major": null, 
   "subscriptions": [
    6
   ], 
   "gpa": null, 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": false, 
   "school_year": null, 
   "graduation_year": null, 
   "previous_employers": [], 
   "website": null, 
   "second_major": null, 
   "resume": "", 
   "user": 57, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-08-29 22:24:34"
  }
 }, 
 {
  "pk": 48, 
  "model": "student.student", 
  "fields": {
   "last_name": null, 
   "last_updated": "2011-08-29 23:04:52", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": null, 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": null, 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": null, 
   "first_major": null, 
   "subscriptions": [
    6
   ], 
   "gpa": null, 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": false, 
   "school_year": null, 
   "graduation_year": null, 
   "previous_employers": [], 
   "website": null, 
   "second_major": null, 
   "resume": "", 
   "user": 58, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-08-29 23:04:52"
  }
 }, 
 {
  "pk": 49, 
  "model": "student.student", 
  "fields": {
   "last_name": null, 
   "last_updated": "2011-08-29 23:05:01", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": null, 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": null, 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": null, 
   "first_major": null, 
   "subscriptions": [
    6
   ], 
   "gpa": null, 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": false, 
   "school_year": null, 
   "graduation_year": null, 
   "previous_employers": [], 
   "website": null, 
   "second_major": null, 
   "resume": "", 
   "user": 59, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-08-29 23:05:00"
  }
 }, 
 {
  "pk": 50, 
  "model": "student.student", 
  "fields": {
   "last_name": "Chen", 
   "last_updated": "2011-09-06 06:39:56", 
   "sat_m": 750, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": 2160, 
   "sat_v": 660, 
   "sat_w": 750, 
   "keywords": " bay ignatius mit edu boston education massachusetts institute technology cambridge candidate chemical biology engineering biology august relevant coursework organic chemistry differential eqn fluid dynamics macro economics thermodynamics cumulative gpa hewlett packard singapore singapore technical consulting intern software professional services june august pages granular documentation technical business processes methodologies client administration prepared presented project management consulting site clients across multiple countries companies industries asia aligned business objectives leading methodologies including pmbok agile itil etom using ppm workflow customizations configuration configured project portfolio management software according workflows mit development lab international development enterprises phnom penh cambodia project member sept analyzed developed business objective strategies various emerging cambodian businesses waste latrine emptying streamlined advertising branding efforts reflect business directives consulted local ngos providing examples practices provided mit development lab recommend centered facility creative capacity building local engineering students mediated interviews cambodian stakeholders pain points latrine services patterns institute infectious disease initiative cambridge undergraduate researcher deborah hung laboratory june solutioned microarray assay improve throughput screening methods reduce costs saving excess supplies invented developed novel release inoculum model vivo coli cultures leadership mit interfraternity council ifc member cambridge public relations november initiated review mit ifc judicial review practices participated discussions policy changes mit administration governing fraternity alumni organizations redesigned rebranded ifc logos image reflect style increase professionalism releases published mit boston newspapers regarding mit fraternities policies mit leadership training institute beijing china international expansion associate recruitment director mentor september authored curriculum international expansion lti colleges namely china brazil contacted guidance counselors principles recruit achieving students planned beijing university students implement customized lti leadership curriculum theta fraternity delta chapter cambridge risk manager manager social august coordinated mit faculty boston police theta alumni theta undergraduates ensure chapter practiced safest risk management policies according national guidelines established outreach programs intercollegiate organizations promote collaboration mit undergraduate bio chemical association cambridge vice president public relations august created standard inter campus communications including logo improve recognition recruited advertised extensively campus resulting growth membership activities mit club cycling ncca cycling tri athletics mit dancetroupe hip hop member skills chinese fluent technical java ppm microsoft sharepoint visio access java interests scuba diving tennis violin ensemble diving backpacking cycling gourmet chocolate ignatius chen", 
   "looking_for": [
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Ignatius", 
   "first_major": 7, 
   "subscriptions": [
    10, 
    7, 
    8, 
    5, 
    6, 
    9
   ], 
   "gpa": "4.200", 
   "campus_involvement": [
    57, 
    110, 
    194, 
    350, 
    454
   ], 
   "languages": [
    3, 
    48
   ], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [
    15
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/chen_ignatius_ignatius@mit.edu_2011-09-02-11-35-00.pdf", 
   "user": 60, 
   "industries_of_interest": [
    6, 
    37, 
    38, 
    12, 
    13, 
    27, 
    28, 
    41, 
    40, 
    42
   ], 
   "act": 32, 
   "date_created": "2011-08-29 23:17:38"
  }
 }, 
 {
  "pk": 114, 
  "model": "student.student", 
  "fields": {
   "last_name": "Vaughan", 
   "last_updated": "2011-09-06 06:44:15", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " address chris vaughan address memorial mit trail ridge cambridge cvaughan mit edu fort worth education massachusetts institute technology mit cambridge candidate engineering gpa june concentration mechanical engineering minor management relevant coursework physics thermal fluids engineering manufacturing mechanics materials dynamics mechanical engineering tools differential equations management engineering measurement instrumentation materials manufacturing arlington heights fort worth gpa weighted unweighted june graduated valedictorian students lockheed martin fort worth intern worked sustaining engineering department performing various tasks delivered united states initiative eliminate unnecessary steps streamline processes developed presentation discussing overall internship delivered entire global sustainment department zedasoft fort worth intern designed sliding height adjustable cockpit helicopter simulator designed panels simulator built frame monitors simulator modeled parts cockpit solidworks various jobs including installing blocking walls texas metalworks oaks intern january various parts gained using tools including lathe cnc drill circular mig welder undergraduate research semester helped baseball compliant bbcor standards conducted sweet measuring coefficient restitution materials selection maximizing sweet minimizing swing presented ideas president insignia leadership mit kappa sigma fraternity community service mit varsity baseball starter york collegiate baseball league starting pitcher qualifications experienced solidworks sketchup mastercam operations proficient microsoft developed solving communication skills rigorous coursework mit significant exposure processes cultivated leadership teamwork skills baseball church mission trips honors valedictorian national honor society excellence education award lockheed martin shack scholar national merit commended scholar district mvp baseball debate tournament qualifier dale hansen scholar athlete community service hours mit", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Christopher", 
   "first_major": 26, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.100", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/vaughan_christopher_cvaughan@mit.edu_2011-09-02-12-26-59.pdf", 
   "user": 126, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-02 12:25:36"
  }
 }, 
 {
  "pk": 51, 
  "model": "student.student", 
  "fields": {
   "last_name": "Trevino", 
   "last_updated": "2011-09-06 06:39:56", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " ave cambridge education vanessa trevi vtrevino mit edu kyle clute massachusetts institute technology cambridge september candidate bachelors mechanical engineering minor materials engineering minor visual arts brazoswood clute august june graduated summa cumae laude gpa president national honor society varsity tennis scholar interact club rotary youth leadership award hispanic heritage youth awards regional medal business leadership award mites program ferro solutions intern woburn characterizing magneto devices used applications wireless communications developed mathematica programs plot voltage magnetization strain behaviors applied magnetic assisted comsol models using finite analysis predict behaviors magnetic flux concentrator experimented chemical etching strengthen bond layer prevent delamination increase voltage capacity management urop sloan management mit designing visualization graphics linear programming algorithms using mathematica coded optimization applets improve mit undergraduates comprehension topics taught highlights schools liceo gobetti istituto avogadro mit turin italy january diffusing mit innovative teaching philosophies italian schools improve math instruction materials lab mit analyzed borate glasses derivative crystal structures methacrylate polymers polycrystalline alloys pem hydrogen fuel cells magnetic properties copt hardening carburization switching crystal display momentum independent activity mit january formulating interdisciplinary action promote appropriate technology developing designed soldered prototype transforms waves into electricity using magnetic generator assessed madagascar society culture politics environment economics project suitability notable projects consulting project conservatorio estate development casco antiguo panama analyzing international development conditions preserve heritage site historic ade developed certification outline leed certification rate developer estate project collaborated business owners residents economic status panamanian government officials engaged creating synergies social cultural commercial interests passion thoughtfulness entrepreneurship denaturing frontier mites genomics institute mit harvard finding nucleotide polymorphisms snps diseased genomes expression diseases breast cancer cystic fibrosis werner syndrome studying effects identified helicase responsible werner syndrome service leadership fourconsulting mit consulting march working cases project teams suggestions groups improve performance professional dealing management issues financial problems leadership dynamics mit engineering outreach mentor october establishing personal connection represented ensure college global poverty initiative action project developing international project ideas establishing connections working mit public service funding national hispanic institute finalist examination counselor oratory counselor valuable counselor award promoting advancement hispanic youth fostering leadership inventiveness public speaking strategic skills skills interests recommendation contacts craig carter ccarter mit edu patti trahan ptrahan brazosportisd net languages fluent spanish beginning italian computer mathematica microsoft suite mac windows hobbies yoga tennis hiking kappa alpha theta traveling balancing spontaneity zen", 
   "looking_for": [
    3, 
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Vanessa", 
   "first_major": 26, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.000", 
   "campus_involvement": [
    112, 
    160, 
    207, 
    383
   ], 
   "languages": [
    3, 
    91, 
    129
   ], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [
    15
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/trevino_vanessa_vtrevino@mit.edu_2011-08-30-01-06-00.pdf", 
   "user": 61, 
   "industries_of_interest": [
    2, 
    38, 
    12, 
    13, 
    14, 
    15, 
    30, 
    42
   ], 
   "act": null, 
   "date_created": "2011-08-30 00:00:09"
  }
 }, 
 {
  "pk": 52, 
  "model": "student.student", 
  "fields": {
   "last_name": null, 
   "last_updated": "2011-08-30 00:00:23", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": null, 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": null, 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": null, 
   "first_major": null, 
   "subscriptions": [
    6
   ], 
   "gpa": null, 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": false, 
   "school_year": null, 
   "graduation_year": null, 
   "previous_employers": [], 
   "website": null, 
   "second_major": null, 
   "resume": "", 
   "user": 62, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-08-30 00:00:23"
  }
 }, 
 {
  "pk": 53, 
  "model": "student.student", 
  "fields": {
   "last_name": "Ding", 
   "last_updated": "2011-09-06 06:34:29", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " mengjie ding memorial cambridge phone email mengjie mit edu education massachusetts institute technology cambridge candidate economics mathematics computer june cumulative gpa relevant coursework finance theory intermediate microeconomics macroeconomics corporate financial accounting advanced econometrics morgan stanley technology york investment banking analyst jun aug built standalone financial model executing discounted cash leveraged buyout analyses publicly traded technology companies assisted conducting due diligence developing sales memorandum preparing client presentations pending convertible bond gained knowledge preparation books presentation materials client meetings research public comparables analyses brookings institution global economy development program washington consultant intern aug jan evaluated debt burdens economies grouped into advanced economies emerging markets authored senior fellow commentaries contributed interactive presenting burdens global debt launched financial times brookings sites nov updated aug assisted evaluating role emerging economies economic conducted literature review reports papers compiled indicators emerging markets economies rising prominence mit department economics cambridge research assistant sept designed monte carlo simulations matlab demonstrate performance econometrics instrumental variables regressions america merrill lynch municipal bond credit research york analyst intern jan evaluated healthcare bond issuers based financial statements credit rating agencies reports presented credit analysis results weekly meetings compiled database rating factors bond issuers credit quality documented relevant federal healthcare policies affect bond issuers performances mit sloan management cambridge research assistant oct performed regression analyses manipulated datasets stata research cellular service demand contributed working models consumers choices mistakes choosing plans leadership harvard china review hcr cambridge director panel leader marketing sept designing discussion topics finance economics panels inviting profile speakers china leading companies academic institutions conference audience activities vice president administration network sloan undergraduate faculty liaison secretary undergraduate economic association representative committee curricula skills programming java stata matlab microsoft native mandarin chinese fluent english scholarships awards mit burchard scholar awarded demonstrated excellence humanities social sciences district finalist college fed challenge competition meritorious winner consortium mathematics its applications comap mathematical contest modeling", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Mengjie", 
   "first_major": 14, 
   "subscriptions": [
    6
   ], 
   "gpa": "5.000", 
   "campus_involvement": [], 
   "languages": [
    3, 
    48
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [
    56, 
    26
   ], 
   "website": "", 
   "second_major": 25, 
   "resume": "student/student/ding_mengjie_mengjie@mit.edu_2011-08-30-02-09-34.pdf", 
   "user": 63, 
   "industries_of_interest": [
    37, 
    38, 
    17, 
    19, 
    25, 
    27, 
    28, 
    43, 
    41, 
    42
   ], 
   "act": null, 
   "date_created": "2011-08-30 00:03:35"
  }
 }, 
 {
  "pk": 54, 
  "model": "student.student", 
  "fields": {
   "last_name": "Fu", 
   "last_updated": "2011-09-06 06:39:56", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " susiefu mit edu memorial cambridge electrical engineering computer sciencegpa coursework user interface advanced algorithms computer graphics architecture studio signals systems computation structures circuits electronics software constructionmassachusetts institute technologycambridge june managed maintenance relase software samsung strive phone resolving issues software phasedesigned implemented internal bug tracking database user interface samsung substantially increase communications samsung telecom management internseattle wadesigned user analyzing competitors user data frontend managed software development running feature crew checked dependencies resolved implementation roadblocksmicrosoft program manager internmountain caredesigned software architecture improve performance deck operations action planner dcap project simulates aircraft carrier operations researched developed user interface provides intuitive data visualization aircraft carrier supervisorsmit humans automation lab undergraduate researcher cambridge maprogrammed designed gui components backend features kaleido kaleido media mit edu graphical programming project aimed visually traditional text based code prepared project exhibition ars electronica festivalmit media lab ecology undergraduate researcher cambridge maexperienceoversees planning drives innovation vision leadership techfair techfair mit edu techfair executive member techfair committee managed techfair marketing techfair students creative marketing campaigns mit techfairmanaging director march presentmarketing director revamped website resume database mit swe swe mit edu national swe website awardsmit society engineerswebmasteroct january experienced adobe photoshop illustrator indesigncomputer languages applicationsleadership activitiesskills awardssusie iphone scholarship newton laboratory awardawards", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Susie", 
   "first_major": 15, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.700", 
   "campus_involvement": [
    343, 
    387
   ], 
   "languages": [
    47
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [
    11, 
    35
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/fu_susie_susiefu@mit.edu_2011-08-30-00-08-28.pdf", 
   "user": 64, 
   "industries_of_interest": [
    37, 
    13, 
    15, 
    36
   ], 
   "act": 35, 
   "date_created": "2011-08-30 00:05:41"
  }
 }, 
 {
  "pk": 55, 
  "model": "student.student", 
  "fields": {
   "last_name": null, 
   "last_updated": "2011-08-30 00:16:05", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": null, 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": null, 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": null, 
   "first_major": null, 
   "subscriptions": [
    6
   ], 
   "gpa": null, 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": false, 
   "school_year": null, 
   "graduation_year": null, 
   "previous_employers": [], 
   "website": null, 
   "second_major": null, 
   "resume": "", 
   "user": 65, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-08-30 00:16:05"
  }
 }, 
 {
  "pk": 56, 
  "model": "student.student", 
  "fields": {
   "last_name": "Park", 
   "last_updated": "2011-09-06 06:39:56", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": 760, 
   "sat_w": null, 
   "keywords": " ernesti parkweb erniepark mail eipark mit eduphone educationmassachusettsinstituteoftechnologyjune candidateforbachelorofscienceincomputersciencegpa coursework tialequations computersandengineeringproblemsolving mathforcomputerscience eecsi digitalcommunicationsystems softwareconstruction algo rithms advancedalgorithms intelligence computationstructures multimodaluserinterfaces computersystems currentclass workexperienceooyalamountainview californiasoftwareengineeringintern mitvi aprogram june august chosenasoneoffourinstructorsamongseveraldozenapplicantstoteachasixweekcomputerprogrammingandentrepreneurshipcoursetostudentsatthekigaliinstituteofscienceandtechnology responsibleforallaspectsofthecourseincludingnetworkingwithadministration planninglogistics adjustingcurriculum deliveringlectures andsupervisinglabtime africainformationtechnologyinitiativekigali rwandainstructormarch july chosenasoneoffourinstructorsamongseveraldozenapplicantstoteachasixweekcomputerprogrammingandentrepreneurshipcoursetostudentsatthekigaliinstituteofscienceandtechnology responsibleforallaspectsofthecourseincludingnetworkingwithadministration planninglogistics adjustingcurriculum deliveringlectures andsupervisinglabtime tinypropellercambridge madeveloper www optionize commay developedcodeforasystemandotherback endfeaturesforaninternetpollingservice workedinathreepersonteamtodesignandplantheapplicationfrombothacodeandusabilityperspective mitmedialabhumandynamicsgroupcambridge maundergraduateresearcher developerjune august designedanddevelopedawebinterfacecapableofdisplayinglivedata location speechampli tude movementenergy generatedfromelectronicsociometricbadges prototypeswereusedtodemonstratetheenessofthedata collectingbadgestolaboratorysponsors skillstechnical java python xhtml css php mysqlnon technical conversantinkoreanandspanishawardsmit web programmingcompetition rdplacejanuary mit web basedspeechrecognitionapplicationcompetition stplacejanuary edwardj blousteindistinguishedscholarjune windsorplainsborostudent athletescholarshipjune americanlegionjerseyboys stategovernorscholarshipjuly bauschandlombhonoraryscienceawardjune extracurricularmitasianchristianfellowshipjanuary presentbakerhousedormitorywebmasterseptember presentcornerstonechurchofboston variousministriesseptember presentmitfreshmanleadershipprogramcounselorjune presentmitlogarhythmsacappellagroup webmaster september presentmitvarsityicehockeyseptember presentmitvarsitylacrosseseptember", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Ernest", 
   "first_major": 12, 
   "subscriptions": [
    11, 
    6
   ], 
   "gpa": "4.600", 
   "campus_involvement": [
    34, 
    229
   ], 
   "languages": [
    3, 
    98, 
    128
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [], 
   "website": "http://www.erniepark.com/", 
   "second_major": null, 
   "resume": "student/student/park_ernest_eipark@mit.edu_2011-08-30-00-35-21.pdf", 
   "user": 66, 
   "industries_of_interest": [
    36
   ], 
   "act": null, 
   "date_created": "2011-08-30 00:19:45"
  }
 }, 
 {
  "pk": 57, 
  "model": "student.student", 
  "fields": {
   "last_name": "Chan", 
   "last_updated": "2011-09-06 07:00:20", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": "", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Jef", 
   "first_major": 15, 
   "subscriptions": [
    6
   ], 
   "gpa": "5.000", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 2, 
   "graduation_year": 3, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/chan_jef_jeffchan@mit.edu_2011-08-30-01-28-02_1.pdf", 
   "user": 67, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-08-30 01:24:03"
  }
 }, 
 {
  "pk": 58, 
  "model": "student.student", 
  "fields": {
   "last_name": null, 
   "last_updated": "2011-08-30 02:30:16", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": null, 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": null, 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": null, 
   "first_major": null, 
   "subscriptions": [
    6
   ], 
   "gpa": null, 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": false, 
   "school_year": null, 
   "graduation_year": null, 
   "previous_employers": [], 
   "website": null, 
   "second_major": null, 
   "resume": "", 
   "user": 68, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-08-30 02:30:16"
  }
 }, 
 {
  "pk": 59, 
  "model": "student.student", 
  "fields": {
   "last_name": "Lowe", 
   "last_updated": "2011-09-06 07:00:20", 
   "sat_m": 780, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": 1870, 
   "sat_v": 530, 
   "sat_w": 560, 
   "keywords": " address marcus lowe permanent address hereford mglowe mit edu lansdowne boston smithfield uvwwq wyz uvwwq uvww vvx xvva", 
   "looking_for": [
    2, 
    4
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Marcus", 
   "first_major": 15, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.750", 
   "campus_involvement": [
    248
   ], 
   "languages": [
    3
   ], 
   "profile_created": true, 
   "school_year": 2, 
   "graduation_year": 3, 
   "previous_employers": [
    15, 
    29
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/lowe_marcus_mglowe@mit.edu_2011-08-30-09-01-03.pdf", 
   "user": 69, 
   "industries_of_interest": [
    38, 
    13, 
    27, 
    36
   ], 
   "act": null, 
   "date_created": "2011-08-30 08:56:08"
  }
 }, 
 {
  "pk": 60, 
  "model": "student.student", 
  "fields": {
   "last_name": "Wang", 
   "last_updated": "2011-09-06 07:00:20", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": "", 
   "looking_for": [
    2
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Jennifer", 
   "first_major": 15, 
   "subscriptions": [
    12, 
    11, 
    6
   ], 
   "gpa": "5.000", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 2, 
   "graduation_year": 3, 
   "previous_employers": [
    15
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/wang_jennifer_jewang@mit.edu_2011-08-30-09-18-34.pdf", 
   "user": 70, 
   "industries_of_interest": [
    15, 
    30, 
    36
   ], 
   "act": null, 
   "date_created": "2011-08-30 09:13:54"
  }
 }, 
 {
  "pk": 61, 
  "model": "student.student", 
  "fields": {
   "last_name": "Kays", 
   "last_updated": "2011-09-06 06:44:15", 
   "sat_m": null, 
   "graduation_month": "4", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " address commonwealth ave boston cory kays corykays mit edu address cawood richmond education massachusetts institute technology cambridge candidate bachelor aeronautical aerospace engineering june relevant coursework numerical methods pdes computational engineering flight vehicle engineering intro propulsion systems dynamics aerodynamics principles automatic factors engineering statistics applications probabilistic systems analysis gpa mit aerospace computational laboratory cambridge research assistant api modelcenter radial basis function optimization matlab code used nasa created sample optimization api modelcenter matlab used installation package nasa authoring nasa research report currently investigating openmdao platform feasibility future multidisciplinary optimization projects mit systems laboratory cambridge systems engineer assisted management students redesign manufacture testing mit castor nano satellite proto qualification review created revised entire documentation package including subsystem requirements concept operations plans proto qualification review aerodyne research inc aero thermodynamics billerica research intern jan researched turbine parameters engines used apex tests modeled engines using gasturb software cases various atmospheric conditions used emissions modeling airport runways raytheon integrated defense andover systems engineering intern performed data analysis identified gaps data analysis reduction rehosted patriot within radar surveillance used patriot specification relevant documentation matrices patriot components parameters software requirements improve threat tracking software logic created coded matrix location optimization algorithm matlab used future dsm models successfully completed raytheon sigma specialist project streamlined surveillance software investigation report review raytheon integrated defense andover systems engineering intern jan researched developed matrices patriot subsystem components used checking documentation technical obsolescence specify subsystem interfaces performed statistical analysis microsoft excel status radar algorithm documentation trends document status lifetime analyze effectiveness due dates evaluate compliance due dates extra phi kappa theta fraternity boston curricular president mar vice president mar mar mit department aeronautics astronautics cambridge undergraduate grader unified engineering signals systems sep unified engineering fluid mechanics sep principles automatic sep publications nasa xxxxxx clearance government secret clearance granted", 
   "looking_for": [
    2
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Cory", 
   "first_major": 1, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.700", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 5, 
   "graduation_year": 2, 
   "previous_employers": [
    37
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/kays_cory_corykays@mit.edu_2011-08-30-11-54-47.pdf", 
   "user": 71, 
   "industries_of_interest": [
    3, 
    38, 
    13, 
    15, 
    40
   ], 
   "act": 33, 
   "date_created": "2011-08-30 09:21:19"
  }
 }, 
 {
  "pk": 62, 
  "model": "student.student", 
  "fields": {
   "last_name": "Joshi", 
   "last_updated": "2011-09-06 06:34:29", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " university address hrishikesh joshi address vassar hjoshi mit edu inwood cambridge woburn education massachusetts institute technology mit cambridge candidate computer mathematics june gpa relevant coursework introduction algorithms probability random variables software elements construction computer systems engineering automata computability complexity discrete mathematics differential equations computation structures intro eecs communicating mobile technology plano senior plano gpa rank june gelber llc chicago algorithmic trading intern june testing existing trading strategies tracking placed orders exchange tick data using logic verify accuracy approximations developing existing infrastructure automate data collection bloomberg mathematically modeling data establish existence trends technologies used net disruptive apps inc cambridge application developer feb startup focusing creating mobile web applications streaming media developed media server facilitate streaming transfer files technologies used amazon web services wowza media server java thomson reuters legal eagan technology intern content technology june aug developed category pages editorial cpet database westlawnext latest legal research technologies used included sql jsf jsp html xml java leadership activities traders mit feb executive member lecture materials introduction trading executive teaches undergraduates mit variety trading concepts collaborate trading finance firms organize networking sessions mit undergraduate laboratory nuclear department physics mit jan undergraduate researcher detection used statistical analysis ccd camera data images sources background alpha particle radiation detector research titled origin alpha particles projection chamber uil programming examinations ranked texas hewlett packard programming competition prize winner american invitational mathematics examination qualifier skills technical jsp jsf sql html xml latex net framework python java foreign languages fluent hindi marathi years french", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Hrishikesh", 
   "first_major": 15, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.600", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [
    34, 
    33, 
    32, 
    21, 
    30
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/joshi_hrishikesh_hjoshi@mit.edu_2011-09-03-16-02-55.pdf", 
   "user": 72, 
   "industries_of_interest": [
    3, 
    4, 
    6, 
    38
   ], 
   "act": null, 
   "date_created": "2011-08-30 10:35:26"
  }
 }, 
 {
  "pk": 70, 
  "model": "student.student", 
  "fields": {
   "last_name": "Zhan", 
   "last_updated": "2011-09-06 11:44:45", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " mnlkool piloponok miqrqs uwp mniokw kiow wkspqi mpsm mqqr hrk pisoqi kav sqqsrk qnio enokw pki wophp piokrrpski uwp omq lqi wknokwl kav kav nipo kag", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Yiwen", 
   "first_major": 12, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.700", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/zhan_yiwen_yiwen@mit.edu_2011-09-06-11-44-44.pdf", 
   "user": 80, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-08-30 14:51:36"
  }
 }, 
 {
  "pk": 71, 
  "model": "student.student", 
  "fields": {
   "last_name": "Wickramasekara", 
   "last_updated": "2011-08-30 17:19:49", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": null, 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": null, 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Sajith", 
   "first_major": null, 
   "subscriptions": [
    6
   ], 
   "gpa": null, 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": false, 
   "school_year": null, 
   "graduation_year": null, 
   "previous_employers": [], 
   "website": null, 
   "second_major": null, 
   "resume": "", 
   "user": 81, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-08-30 17:19:49"
  }
 }, 
 {
  "pk": 72, 
  "model": "student.student", 
  "fields": {
   "last_name": "Parikh", 
   "last_updated": "2011-09-06 06:59:50", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " neena parikh memorial cambridge sterling bluff court carmel phone email nsparikh mit edu education massachusetts institute technology cambridge candidate bachelor computer june gpa coursework multi variable calculus differential equations physics mechanics physics electricity magnetism introduction electrical engineering computer introduction electrical engineering computer mathematics computer elements software construction computer graphics park tudor indianapolis june gpa honors awards cum laude society induction national merit finalist national scholar siemens competition semifinalist phi beta kappa award national scholar maseeh hall mit associate advisor august worked dean daniel hastings advise mit students residence based seminar titled engineer biomedical cybernetics lab mit harvard undergraduate researcher april worked bioinformatics projects including creation gene conversion module pipeline generate bayesian networks related diseases based information obtained gene expression omnibus geo computer aided musicology toolkit mit undergraduate researcher december contributed numerous projects related computer analysis mobility mit media lab undergraduate researcher january june helped indoor navigation baker mit desk worker january june continued neena parikh continued previous eninimef quartet indianapolis viola player june june member professional quartet played venues weddings banquets etc lebanon pediatrics lebanon assistant march june roswell park cancer institute buffalo research intern june august assisted execution prostate cancer drug discovery project titled molecular targets potential prostate cancer drugs supervision andrei gudkov krannert institute cardiology indiana university research intern september april designed conducted fluorescence detection nerve growth factor based research university missouri louis nanoscience university missouri louis research intern june august worked prostate cancer diagnosis project fluorescence detection prostate specific antigen nanoporous keith stine activities discover freshman pre orientation program counselor august alpha phi sorority august society engineers swe august network sloan undergraduate nsuw august skills technical skills java python programming brief exposure proficiency microsoft including excel laboratory skills standard microbiological techniques foreign languages conversational spanish", 
   "looking_for": [
    2
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Neena", 
   "first_major": 12, 
   "subscriptions": [
    6
   ], 
   "gpa": "5.000", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 2, 
   "graduation_year": 3, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/parikh_neena_nsparikh@mit.edu_2011-08-30-17-23-46.pdf", 
   "user": 82, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-08-30 17:21:46"
  }
 }, 
 {
  "pk": 75, 
  "model": "student.student", 
  "fields": {
   "last_name": "Naik", 
   "last_updated": "2011-08-30 21:49:56", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": null, 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": null, 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Shreesh", 
   "first_major": 7, 
   "subscriptions": [
    6
   ], 
   "gpa": null, 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": false, 
   "school_year": null, 
   "graduation_year": null, 
   "previous_employers": [], 
   "website": null, 
   "second_major": null, 
   "resume": "", 
   "user": 85, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-08-30 21:49:56"
  }
 }, 
 {
  "pk": 76, 
  "model": "student.student", 
  "fields": {
   "last_name": "Giarta", 
   "last_updated": "2011-09-06 06:34:29", 
   "sat_m": null, 
   "graduation_month": "11", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " eunice giarta engiarta mit edu education massachusetts institute technology expected completion cambridge candidate computer engineering minor management finance concentration finance theory options futures markets intro algorithms micro macroeconomics probabilistic systems analysis mathematics computer differential equations intro eecs floyd buchanan clovis valedictorian academic scholar distinction advanced placement classes national honor society california scholarship federation seal lifetime member math analysis iii multivariable calculus willow international community college america charlotte global portfolio strategies credit risk enterprise asset allocation analyzing credit risk portfolios goal migrating efficient frontier forecast efficiency tested portfolio economic stress scenarios adjustments risk appetite built series portfolio migration sas sql dynamic statistical analysis risk metrics factors william management york constructed preliminary software systemizing internal controls compliance sec standards compiled financial data investment gains opportunities multiple ows funds exposure fixed income securities markets risk management roles within financial mit media lab viral communications cambridge built web applications django research studying bleeding social web apps built frontend backend multiple websites combining discipline programmer designer beautiful robust scalable web apps including media lab centered social network worked photoshop illustrator django jquery css hml leadership sloan business club sbc cambridge host events info sessions firms mit sloan community publicizing educating students opportunities finance consulting tech entrepreneurs engineering leadership maintain partnership organization sponsors firms promote campus presence awareness ghf merged sbc tech entrepreneur committee focus entrepreneurships emerging markets innovation engineering leadership panel sigma kappa sorority theta lambda chapter cambridge vice president alumnae relations correspondence alum newsletter events national sisterhood chairman monthly activities chapter retreat promote internal relations recruitment committee responsible logistics attendees mit society engineers cambridge member works promote technology engineering youth public participated volunteered engineering boston museum kesem mit jklk cambridge counselor geared towards parents cancer commitment includes raising funds personal goal promoting awareness mit campus chinese students club cambridge leading cultural club mit seeks promote cultural understanding members community planned meetings events budget member concerns exec meetings skills proficient indonesian conversational spanish adobe photoshop illustrator microsoft proficient python sas html css jquery django unix familiarity java latex matlab sql awards president award educational excellence marine corps scholastic excellence award america achievement award mathematics finalist scholar distinction scholar athlete award activities mit dancetroupe powerlifting lightweight crew volunteering badminton karate painting", 
   "looking_for": [
    1, 
    3, 
    2, 
    4
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Eunice", 
   "first_major": 12, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.400", 
   "campus_involvement": [
    69, 
    88, 
    112, 
    284, 
    334, 
    330, 
    343
   ], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 1, 
   "previous_employers": [
    56
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/giarta_eunice_engiarta@mit.edu_2011-09-01-15-15-43.pdf", 
   "user": 86, 
   "industries_of_interest": [
    13, 
    19, 
    34, 
    36, 
    40
   ], 
   "act": null, 
   "date_created": "2011-08-31 00:06:22"
  }
 }, 
 {
  "pk": 77, 
  "model": "student.student", 
  "fields": {
   "last_name": "Miyachi", 
   "last_updated": "2011-08-31 01:03:26", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": null, 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": null, 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Mari", 
   "first_major": null, 
   "subscriptions": [
    6
   ], 
   "gpa": null, 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": false, 
   "school_year": null, 
   "graduation_year": null, 
   "previous_employers": [], 
   "website": null, 
   "second_major": null, 
   "resume": "", 
   "user": 87, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-08-31 01:03:26"
  }
 }, 
 {
  "pk": 92, 
  "model": "student.student", 
  "fields": {
   "last_name": "Valdez", 
   "last_updated": "2011-09-06 06:44:15", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " juan antonio valdez beacon boston jvaldez mit edu education massachusetts institute technology cambridge cum gpa mechanical engineering management minors economics political relevant coursework microeconomic macroeconomic theory computational engineering solving probabilistic systems analysis introduction operations research optimization methods finance theory manufacturing engineering innovation goldman sachs investment banking analyst technology media telecom york worked potential acquisition telecom included preparing extensive operating model performing various valuation analyses conducting daily phone calls ceo developed repurchase model assisted creation returns pitchbook conducted extensive strategic financial analysis mergers acquisitions semiconductor electronics performed analysis potential lbo software financial sponsor including irr analysis ibm global business services business strategy consultant intern san francisco provided management consulting internal efficiency lean sigma project initiated centralized data management align document business focus presented waste issues alignment business sectors executive workshop nasa financial officer intern washington coordinated installation budget managing database hierarchical users analyzed allocation funds throughout agency advocated performing budget sectors wgbh squad cast member boston starred participant pbs kids reality engineering competition squad built manufactured various engineering products per episode studied development cycle leadership mit america weeks america challenge edcouch volunteered helping grade math income community southern texas developed sustainable data management progress mastery tau sigma mechanical engineering honor society representative cambridge served ambassador mit mechanical engineering tutored coordinated various sessions mechanical engineering courses engineering business club consulting executive cambridge practiced analyzed consulting studies developed comprehensive explanations club invited managed consultants boston educate careers consulting professional development sponsors educational opportunity seo york trained professionals obtain intensive foundation employment financial sector established professional leadership capabilities needed bridge gap engineering finance management leadership tomorrow mlt york selected students nationwide pool candidates intensive career development program participated development workshops executed marketing strategies recruiting members gordon engineering leadership program cambridge trained skillful engineering leader increase productivity innovative ideas taught leading members become successful managers worked mentors presentation teamwork skills specifications skills technical proficiency microsoft excel access powerpoint publisher macintosh operating workable knowledge solidworks autocad programming java matlab python native spanish speaker awards goldman sachs scholarship excellence award included scholarship covering college tuition expenses internship investment banking hispanic scholarship fund hsf vamos scholar scholarship covering personal expenses years university eugene margaret mcdermott scholar college scholar provided partial financial mit tuition", 
   "looking_for": [
    1, 
    3
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Juan", 
   "first_major": 26, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.440", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [
    25, 
    44
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/valdez_juan_jvaldez@mit.edu_2011-09-01-15-26-25.pdf", 
   "user": 104, 
   "industries_of_interest": [
    7, 
    37, 
    38, 
    14, 
    19, 
    27, 
    28, 
    41, 
    34, 
    40, 
    42
   ], 
   "act": null, 
   "date_created": "2011-09-01 15:14:58"
  }
 }, 
 {
  "pk": 87, 
  "model": "student.student", 
  "fields": {
   "last_name": "Fang", 
   "last_updated": "2011-09-06 06:59:50", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " katherine fang campus address kfang mit edu address memorial gemstone cambridge ann arbor education massachusetts institute technology cambridge candidate computer management gpa june relevant courses microeconomics macroeconomics corporate financial accounting management communication optimization linear algebra probability statistics math computer algorithms software engineering pioneer ann arbor gpa graduating national merit scholar scholar honor june usa swimming academic american champion intel international finalist deutsche bahn frankfurt germany project management intern june aug formulated software specifications optimize improve efficiency cargo transportation collaborated senior project managers developers maintain quality assurance software presented weekly evaluations goldman sachs york securities intern mar rotated sales trading desks within equity ficc participated seminars understand various roles within securities management perspectives analyzed assets mortgage estate investment trust presented investment recommendation mds vps nera economic consulting york research associate intern jan reported recent trends federal service authority fsa investigations into insider trading developed evaluation criteria based fsa securities fraud cases predict enforcement action future cases identified researched naissance management cambridge analyst june aug generated model industrial demand sixty years management evaluate investment mining prepared report potential investors military leadership fund superior performance companies executives military benchmark companies leadership activities sloan business club finance sept coordinated recruiters finance consulting companies inform students opportunities developments within planned marketed executed presentations skills workshops average attendance students mit undergraduate association elected senator sept represented undergraduates monthly meetings administrators sponsored debated voted legislation concerning dining housing transportation finances reviewed approved budget undergraduate association activities mit media lab undergraduate researcher dynamics june aug mapped social networking graduate dorm quantitative analysis data android phones designed programmed interactive website factors influence smart phone communication mit campus tour june kappa alpha theta sorority deputy philanthropy sept skills interests computer microsoft java python matlab latex html django adobe photoshop foreign languages fluent mandarin proficient german interests experiencing cultures lived worked germany months traveling swimming piano yoga", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Katherine", 
   "first_major": 12, 
   "subscriptions": [
    6
   ], 
   "gpa": "5.000", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/fang_katherine_kfang@mit.edu_2011-09-01-12-23-07.pdf", 
   "user": 99, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-01 12:14:58"
  }
 }, 
 {
  "pk": 84, 
  "model": "student.student", 
  "fields": {
   "last_name": "Sandford", 
   "last_updated": "2011-08-31 13:35:10", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": null, 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": null, 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Erika", 
   "first_major": 26, 
   "subscriptions": [
    6
   ], 
   "gpa": null, 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": false, 
   "school_year": null, 
   "graduation_year": null, 
   "previous_employers": [], 
   "website": null, 
   "second_major": null, 
   "resume": "", 
   "user": 94, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-08-31 13:35:10"
  }
 }, 
 {
  "pk": 182, 
  "model": "student.student", 
  "fields": {
   "last_name": "Gao", 
   "last_updated": "2011-09-06 10:47:56", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " yunzhi gao memorial cambridge phone email gyz mit edu education massachusetts institute technology mit cambridge mathematics physics gpa graduate courses algebraic geometry functional analysis analytic theory relativity undergraduate courses analysis manifold seminar analysis complex analysis introduction representation theory microeconomics macroeconomics java matlab thermal physics introduction algorithms mathematics department mit cambridge research assistant proposed solutions mathematical projects gaussian sum project isoperimetric project professor haynes miller researched analyzed academic papers programmed animation visualizing gaussian sum using python report using latex presented faculty students mit mathematics department program undergrad research spur research assistant collaborated professors postdocs graduated students undergrads morita equivalence project programmed using sage software mathematics computation mit educational studies program teacher lectured math solving students explained clarified concepts built relationships students resulting continued tutoring program finished acm icpc international collegiate programming contest shanghai member collaborated members training contest developed coding skills especial coding familiarized data structures algorithms ranked teams shanghai skills computer python java pascal html visual mathematica matlab sage microsoft shanghainese chinese english japanese activities member zero gravity club honors awards china math olympiad equivalent usamo qualified math grade participate china olympiad informatics equivalent usaco grade", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Yunzhi", 
   "first_major": 25, 
   "subscriptions": [
    10, 
    13, 
    12, 
    7, 
    11, 
    8, 
    14, 
    5, 
    6, 
    9
   ], 
   "gpa": "4.900", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/gao_yunzhi_gyz@mit.edu_2011-09-06-10-47-56.pdf", 
   "user": 195, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-06 10:44:15"
  }
 }, 
 {
  "pk": 128, 
  "model": "student.student", 
  "fields": {
   "last_name": "Chang", 
   "last_updated": "2011-09-06 06:34:29", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": 2200, 
   "sat_v": 750, 
   "sat_w": 650, 
   "keywords": " liyan david chang liyanchang mit edu liyanchang com education massachusetts institute technology cambridge massachusetts majoring computer june minoring mathematics political gpa invited into hkn tbp engineering honor societies abroad institut tudes politiques paris sciences paris france concentration political jan google california associate manager intern august responsible vision strategy execution user features developer apis distributed engineers generating client libraries launch approvals gelber llc york york strategy research development intern june august researched indicators trends tradable signals historical data frequency trading desk futures optimized java based automated trading platform performance reducing garbage vmware inc palo alto california automation intern vmqa automation june august authored perl staf software tools automate remote installation network drivers servers estimated vmware annually reducing manual installations engineers mit media lab cambridge massachusetts undergraduate researcher fluid interfaces october brainstormed developed tested applications gesture recognition wearable camera projector computer display information surrounding surfaces research presented ted conference publication mistry maes chang wuw wearable gestural interface proceedings acm chi assoc computing machinery computer interaction leadership staff mit undergraduate association manages representatives faculty committees primary engagement mit committee committee educational policy dec advise administrators administer professor mentorship program gordon engineering leadership program august enrolled program developing engineering leadership skills interacting leaders faculty skills practiced writing cilk java python web html css php javascript ajax sql data analysis stata comfortable windows linux citizen native english conversant mandarin chinese french activities freshmen advisor film photography kesem counselor families impacted cancer memorial apt cambridge", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Liyan", 
   "first_major": 12, 
   "subscriptions": [
    6
   ], 
   "gpa": "5.000", 
   "campus_involvement": [
    34, 
    471, 
    472, 
    470, 
    403
   ], 
   "languages": [
    3, 
    47
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [], 
   "website": "http://liyanchang.com/", 
   "second_major": null, 
   "resume": "student/student/chang_liyan_dchang@mit.edu_2011-09-03-12-13-26.pdf", 
   "user": 140, 
   "industries_of_interest": [], 
   "act": 34, 
   "date_created": "2011-09-03 12:08:31"
  }
 }, 
 {
  "pk": 129, 
  "model": "student.student", 
  "fields": {
   "last_name": "Grillon", 
   "last_updated": "2011-09-06 06:58:14", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " lou grillon apt hermosa beach lgrillon sloan mit edu education mit sloan management cambridge leaders global operations lgo fellow candidate mba mit sloan management candidate mechanical engineering mit engineering mit sloan operations management club lgo alumni committee mit sloan healthcare club worcester polytechnic institute worcester bachelor distinction biomedical engineering treasurer biomedical engineering society bmes member tau beta national engineering honor society secretary skull senior society worcester polytechnic institute senior gift committee varsity indoor outdoor wpi ncaa leadership program academic conference raytheon corporation segundo lgo research consultant airborne systems sas june december leading business development methods sustain manufacturing technology roadmaps fostering collaboration departments sites achieve information flows enabling strategic planning accellent global medical device contract manufacturer wilmington engineer participated rotational leadership development program completed assignments minneapolis pittsburg chicago roanoke teamwork leadership plastic injection molding project representing revenue prioritized tasks functional customer deadlines implemented oracle erp preventative maintenance module pittsburg site worked site senior leadership corporate target date reducing implementation continuous improvement evaluated collaboratively redesigned robots vendor reduced cycle robots operator machines saving annually communication persuaded site leaders supervisors recommended priority critical customer validation requirements complex validations developed training procedures equipment taught shift leads using trainer enabling entire building equipment within motivated supervisors internalize continuous improvement efforts finishing department successfully reduced reduced wip kaizen events analysis solving developed manufacture cable pacemaker leads annualized sales reduced cabling days hours directed expansion equipment installation according lean principles facility certified internal auditor iso internal audits conducted audits improvement recommendations activities mentor wpi undergraduate students avid runner", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Louis", 
   "first_major": 23, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.700", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 5, 
   "graduation_year": 1, 
   "previous_employers": [], 
   "website": "http://www.linkedin.com/in/lougrillon", 
   "second_major": 26, 
   "resume": "student/student/grillon_louis_lgrillon@mit.edu_2011-09-03-12-51-13.pdf", 
   "user": 141, 
   "industries_of_interest": [
    2, 
    3, 
    4, 
    37, 
    38, 
    13, 
    18, 
    42
   ], 
   "act": null, 
   "date_created": "2011-09-03 12:44:59"
  }
 }, 
 {
  "pk": 88, 
  "model": "student.student", 
  "fields": {
   "last_name": "Gibson", 
   "last_updated": "2011-09-06 06:59:50", 
   "sat_m": 790, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": 2320, 
   "sat_v": 800, 
   "sat_w": 730, 
   "keywords": " michael andrew gibson beacon boston gibson michael gmail com education massachusetts institute technology cambridge candidate materials engineering cumulative gpa relevant coursework mathematics materials microstructural evolution mathematics computer differential equations probability random variables linear algebra technologies cambridge intern assisted development generation ion battery technology wettability experiments electrochemical testing mixing experiments assisted development algorithm optimal utilization storage device maximize profit intermittent source massachusetts institute technology cambridge research assistant semi solid cells collaborated chiang carter semi solid cells battery technology vehicle grid storage utilized raman spectroscopy reference electrode methods investigate variation depth battery research assistant institute nanotechnology collaborated thomas research photon lithographic techniques investigated loading resists carbon nanotubes chemical dyes modify resolution mechanical properties composition structures research assistant industrial performance performed analysis development photovoltaic content analysis conference records ieee photovoltaics specialists conference leadership activities honors mit varsity lacrosse sigma chi fraternity proconsul tribune community service corporate clerk tau beta engineering honor society member department materials engineering outstanding sophomore service teaching mit esp instructor taught seminars kesem counselor mentored cancer patients arrowhead counselor volunteered hours assisting mentally physically disabled tutor interests hiking medicine leadership education teaching environment nanotechnology", 
   "looking_for": [
    2, 
    4
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Michael", 
   "first_major": 24, 
   "subscriptions": [
    6
   ], 
   "gpa": "5.000", 
   "campus_involvement": [
    69, 
    112, 
    325, 
    329, 
    380
   ], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [
    15
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/gibson_michael_m_gibson@mit.edu_2011-09-01-12-40-20.pdf", 
   "user": 100, 
   "industries_of_interest": [
    4, 
    6, 
    11, 
    12, 
    13, 
    15
   ], 
   "act": null, 
   "date_created": "2011-09-01 12:24:28"
  }
 }, 
 {
  "pk": 89, 
  "model": "student.student", 
  "fields": {
   "last_name": "Bharath", 
   "last_updated": "2011-09-06 06:44:15", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " cambridge massachusetts candidate bachelor mechanical engineering candidate bachelor physics candidate minor management mit sloan theory measurement instrumentation quantum mechanics corporate financial accounting previous relevant coursework manufacturing thermal fluids engineering mechanical engineering tools mechanics materials dynamics electronics project laboratory differential equations multivariable calculus stanford microsystems lab palo alto researcher prof pruitt stanford university jun studied mechanotransduction nematode caenorhabditis elegans researched input nematode evoke neural sensations behavioral response used micro devices piezoresistive micro cantilevers micro function using displacement voltage properties converting micro newton values learned optogenetic using affect behavior specific ways mutation techniques elegans designed carried biological assays effects exogenous serotonin elegans behavior source behavior elegans changes its source confounds experiments including using calcium imaging electrophysiology serotonin provides partial rescue diminished behavior battery storage materials research cambridge undergraduate researcher prof sadoway mit jan sept designed tested batteries manufacturing storage solar worked standardize battery studying various designs including variance voltage electrode electrolyte composition materials testing studied ambipolar batteries electrodes tests experiments understand function various components project prof sadoway mit labview program ovens battery production automatically temperatures saved members countless hours program without amounts manual supervision program today planar chalcogenide cambridge undergraduate researcher prof kimerling mit jun oct researched manufacturing parameters optical resonators biosensing application biotoxic chemicals studied colloidal quantum dots chalcogenide glasses studied model finite difference domain fdtd simulations matlab planar waveguides mechano electrical storage research cambridge undergraduate researcher prof slocum mit feb designed tested storage technology using upside lakes using concept vacuum mechanical letting rush pressure rotor generate electricity storage tanks performed various proof concept mechanical setups studied engineering public policy aspects storage technique mit materials engineering cambridge solar undergraduate engineer prof kimerling mit tokyo japan feb june analyzed solar cells capture experiments commercial solar cells examine properties simulated constraints using simulator published mit courseware http ocw mit edu courses materials engineering principles engineering projects presented solar production implementation united states tokyo japan students professors university tokyo terrascope program mit civil environmental engineering cambridge undergraduate researcher engineer abu dhabi march studied visited building site masdar institute technology project ensuring carbon neutrality its entire development visited stations solar reflectors photovoltaic systems chosen students interviewed gulf news address memorial cambridge permanent address buck court fremont education gpa relevant ranjeetha bharath massachusetts institute technology sitime corporation sunnyvale intern jan analyzed function mems resonators collaborating executive supervisor establish viability potential products manufacturing tested analyzed data mems oscillators designed detailed purchase orders including locating parts mems schematics identifying builds parts fabrication mems manufacturers catalogued sorted kinds electrical parts increase efficiency habitat humanity mit undergraduate association committee alumni relations mit mccormick hall social alumni noaa hollings scholar national merit finalist departmental awards physics mathematics helped engineering debate computer solidworks arduino microcontroller origin data analysis matlab labview microsoft suite lab ehst training glove fume hood gel electrophoresis micro nano materials handling lathe mill soldering relevant service awards skills ranjeetha bharath massachusetts institute technology", 
   "looking_for": [], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Ranjeetha", 
   "first_major": 26, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.930", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [], 
   "website": "", 
   "second_major": 31, 
   "resume": "student/student/bharath_ranjeetha_r941@mit.edu_2011-09-01-13-04-57.pdf", 
   "user": 101, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-01 12:54:36"
  }
 }, 
 {
  "pk": 90, 
  "model": "student.student", 
  "fields": {
   "last_name": "Li", 
   "last_updated": "2011-09-06 06:34:29", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": 2240, 
   "sat_v": 700, 
   "sat_w": 740, 
   "keywords": " josepher contact memorial avenue phone information cambridge flushing mail josepher mit edu education massachusetts institute technology cambridge candidate aerospace engineering gpa expected june minor mathematics bronx bronx diploma advanced nys regents designation gpa june expert microsoft including excel powerpoint outlook intermediate latex google analytics matlab java platform publishers clearing washington online analyst intern june sept oversaw reporting analysis united kingdom website including traffic reports mail reports advertising reports reporting strategic initiatives documented procedures prepared maintained pro forma financial statements managed invoice reconciliations communicated outside vendors ivy management program revolution prep queens manager instructor sept managed preparation including developing executing marketing strategy managing operations logistics mastering teaching curriculum managers combined helped generate joining educators average advanced degrees years teaching standard york management intern january worked effectively paced environment consistently completing projects deadlines maintaining accuracy paying attention detail performed internal audit developed pricing bands based client revenue used price discrimination purposes products research mit mcgovern institute brain research cambridge undergraduate researcher jan independent project involved learning advanced scientific software called neurolucida continuing attend assigned lab duties department biology nyu medicine york visiting researcher july sept july oct developed marker unfolded proteins verified its efficacy flies prepared research submitted intel talent presented public national academy sciences washington selected awards challenge member winning teams total annual competition coordinated aviation mit unified engineering intel talent searchfinalist finalists selected total applicants across oldest highly regarded pre college competition belt minor josepherli named myself professional preliminary judge mit techfair competition activities technical skills", 
   "looking_for": [
    3, 
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Josepher", 
   "first_major": 1, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.200", 
   "campus_involvement": [
    1
   ], 
   "languages": [
    106, 
    3
   ], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [], 
   "website": "", 
   "second_major": 25, 
   "resume": "student/student/li_josepher_josepher@mit.edu_2011-09-01-13-50-12.pdf", 
   "user": 102, 
   "industries_of_interest": [
    3, 
    7, 
    37, 
    38, 
    13, 
    15, 
    19, 
    27, 
    28, 
    43, 
    34, 
    40
   ], 
   "act": null, 
   "date_created": "2011-09-01 13:36:08"
  }
 }, 
 {
  "pk": 91, 
  "model": "student.student", 
  "fields": {
   "last_name": "Khan", 
   "last_updated": "2011-09-06 06:59:50", 
   "sat_m": 680, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": 2140, 
   "sat_v": 690, 
   "sat_w": 770, 
   "keywords": " umaimahkhanukhan mit educurrentaddress massachusettsave cambridge homeaddress elmtreedroceanside educationmassachusettsinstituteoftechnology inmathematicsandminorinlinguisticsex pectedin recentcourseworkincludestheory discretemathandlogic priorcourseworkincludesgraduatelevelcoursesincryptography complexitytheory mechanismdesign andcombinatorics eaglespeakhighschool graduatedasvaledictorianjune tookcoursesinlinearalgebra tialequationsandalgorithmsatalocalcollege experiencecomputerscienceandintelligencelaboratory mit cambridge maundergraduateresearcher constructedandimplementedaclusteringalgorithmtoapplyasparsegraphmodeltotheprob lemofperceptualorganizationincomputationalcognitivescience designedframeworkformainexperimenttotestalgorithm saccuracyagainsthumansubjects labformanufacturingandproductivity mit cambridge maundergraduateresearcher joinedtheknowledgerepresentationandimplementationproject withthegoaloftakingunstruc turedsetsofxmldataandbuildingdatabaseswhichcanbesearchedbysemanticvalues devel opedahierarchyofsemanticcategories wrotepseudocodeandcodedtestcasesforthedatabasebuildingalgorithm andledmeetingswithotherprogrammersontheproject palomarcollegesanmarcos camathematicstutor tutoredstudentsindiscretemath linearalgebra multivariablecalculus andtialequations inaddition gradedexamsinsomeofthesesubjects oceansidekumoncenteroceanside cakumongrader math andreadingenrichmentprogram gradedstudents testsandassignments intro ducedstudentstonewtechniquesandconceptsandhelpedstudentswhohadquestionsaboutthematerial skillsandactivitiesfamiliarwithmathematica maple andc tinlatex matlab andpython musicaltheatreguild headedstagecrew assistantcostumedesignerin societyofwomeninmathematics helpedformorganizationandrunevents harvardmitmathematicstournament contributedtowritingandtest solvingmathproblemsforthemaintournament aswellashelpedrunevents", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Umaimah", 
   "first_major": 25, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.000", 
   "campus_involvement": [
    162, 
    175, 
    252, 
    263, 
    339, 
    343, 
    407, 
    476
   ], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [
    15
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/khan_umaimah_ukhan@mit.edu_2011-09-05-22-26-41.pdf", 
   "user": 103, 
   "industries_of_interest": [
    37, 
    38
   ], 
   "act": 34, 
   "date_created": "2011-09-01 14:44:59"
  }
 }, 
 {
  "pk": 93, 
  "model": "student.student", 
  "fields": {
   "last_name": "Xu", 
   "last_updated": "2011-09-06 07:00:12", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": "", 
   "looking_for": [], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Hanwen", 
   "first_major": 25, 
   "subscriptions": [
    6
   ], 
   "gpa": "5.000", 
   "campus_involvement": [
    351, 
    466
   ], 
   "languages": [
    3, 
    107
   ], 
   "profile_created": true, 
   "school_year": 2, 
   "graduation_year": 3, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/xu_hanwen_hanwenxu@mit.edu_2011-09-01-16-38-21.pdf", 
   "user": 105, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-01 16:34:01"
  }
 }, 
 {
  "pk": 94, 
  "model": "student.student", 
  "fields": {
   "last_name": "Vatterott", 
   "last_updated": "2011-09-06 06:58:14", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": "", 
   "looking_for": [
    2
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Patrick", 
   "first_major": 12, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.700", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/vatterott_patrick_patrickv@mit.edu_2011-09-01-18-54-14.pdf", 
   "user": 106, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-01 18:52:06"
  }
 }, 
 {
  "pk": 95, 
  "model": "student.student", 
  "fields": {
   "last_name": "Yim", 
   "last_updated": "2011-09-06 07:00:20", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": 2400, 
   "sat_v": 800, 
   "sat_w": 800, 
   "keywords": " daesun dionysus yim massachusetts ave mail dyim mit edu cambridge phone education massachusetts institute technology candidate bachelor electrical engineering computer mathematics est lambda phi fraternity lightweight crew president gpa princeton university theory analysis variable honors linear algebra windsor plainsboro national merit finalist gpa played objectively awful male acapella math honor society president club publicist jazz performance guitarist uncommon app llc founder president worked knit college consultancy pro bono informational workshops public libraries prep centers corporate headquarters establish brand managed website oversaw optimization advertised services hired employees nasa extern atlas satellite project used matlab automate analysis data exported photomultiplier pmt tests communicated senior engineers ensure pmts used satellite adhered government standards mit math learning tutor assisted mit undergraduates assorted freshman sophomore math topics multivariate calculus differential equations linear algebra utilized experiences working private tutor years awards putnam intercollegiate mathematics competition scorer princeton debate tournament harvard mit mathematics tournament individual ivy league model united nations conference delegate mathematical olympiad program mosp participant leadership mit council president worked officers within budget execute unprecedented events communicated students organized breakfasts sale mit sweatshirts previous years informational seminars advance movie screenings therapy sessions chinese culture ceremonies inter coordinator ensured smooth communication oversaw logistics within setting participants yearly regional chinese culture attended mayor local officials despite korean heritage entertained audience introduced acts role typically filled speaker chinese descent computer skills css html java matlab net flash suite photoshop windows mac ubuntu", 
   "looking_for": [], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Daesun", 
   "first_major": 15, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.800", 
   "campus_involvement": [
    403
   ], 
   "languages": [
    3, 
    46, 
    98
   ], 
   "profile_created": true, 
   "school_year": 2, 
   "graduation_year": 3, 
   "previous_employers": [
    15
   ], 
   "website": "", 
   "second_major": 32, 
   "resume": "student/student/yim_daesun_dyim@mit.edu_2011-09-01-19-19-31.pdf", 
   "user": 107, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-01 19:13:33"
  }
 }, 
 {
  "pk": 96, 
  "model": "student.student", 
  "fields": {
   "last_name": "Gokhale", 
   "last_updated": "2011-09-06 06:58:14", 
   "sat_m": 800, 
   "graduation_month": "11", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " ashwini gokhale email agokhale mit edu vistaridge phone peoria education massachusetts institute technology mit gpa cambridge expected dec electrical eng computer sci eecs minor economics relevant courses intro eecs circuits computation structures microeconomics richwoods diploma gpa peoria writing chem math boeing engineering intern august radar developed lab emulator remote app required secret clearance mit teaching assistant sept differential equations tutorials caterpillar corporate intern august conducted interdepartmental technology gaps identified projects research skills computer python microsoft visual studio microsoft publisher excel powerpoint fluent spanish hindi marathi honors awards invited attend ieee sections congress san francisco aug mit anniversary celebration speaker april invited workshop presenter pre college initiative national soc engineers annual conference louis march national merit scholar advanced placement scholar illinois scholar cassini scientist winner competition sponsored nasa jpl worldwide youth sci engg chemistry sectionals kikkoman youth understanding national merit based scholarship japan scholarships host promote cultural skills international understanding regional county mclean county pantagraph spelling bee champion ranked national spelling bee interests varsity impromptu tournament champion conference viola player educators assoc leadership service president mit acm ieee sept aug secretary mit acm ieee dec aug organize events collaboration executive members director events assoc international relations model mar secretary model conference mar feb director public relations model conference sept feb organizing overseeing secretariat fundraising relations sponsors kaplan conference society engineers swe regional conference april public relations swe jan mar collaborate swe chapters host events mit swe members attend events vice president treasurer executive mccormick residence hall jan facilities director executive mccormick residence hall sept dec oversee vice president operations network sloan undergraduate jan dec finance network sloan undergraduate jan dec powerpoint presentations sponsors senator communications committee undergraduate association mit sept communicated frequently constituents managed dormstorm ordered", 
   "looking_for": [
    2
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Ashwini", 
   "first_major": 15, 
   "subscriptions": [
    6
   ], 
   "gpa": "5.000", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 1, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/gokhale_ashwini_agokhale@mit.edu_2011-09-04-12-14-52.pdf", 
   "user": 108, 
   "industries_of_interest": [], 
   "act": 35, 
   "date_created": "2011-09-01 19:26:04"
  }
 }, 
 {
  "pk": 97, 
  "model": "student.student", 
  "fields": {
   "last_name": "Hebbar", 
   "last_updated": "2011-09-06 06:59:50", 
   "sat_m": 800, 
   "graduation_month": "11", 
   "older_than_21": "", 
   "sat_t": 2300, 
   "sat_v": 730, 
   "sat_w": 770, 
   "keywords": " neha hebbar baker memorial cambridge nhebb mit edu education massachusetts institute tech mit cambridge expected management mit sloan management college gpa combined mit boston university univ central florida significant optimization methods mgmt macroeconomics microeconomics linear algebra coursework comp sci algorithms calculus iii differential equations engineering analysis statics physics environ policy cognitive developmental social psychology gpa weighted perfect math math honors diploma scholar honor national semi finalist siemens math tech competition florida university scholar national merit scholar semi finalist activities founder president club chapter president alpha theta math honor society shs dazzlers national champions professional research intl trading park equities intern gained exposure otc adr making bloomberg terminal automate identified resolved discrepancies mismatches bookings using excel maintained ticket booking mismatches implemented issuers dtc eligibility services conducted data mining consolidate data excel various otc pink symbols nano technology orlando intern organized analyzed data nanoceria synthesized various mediums potential toxicity examine viability ivy insiders management program orlando manager provided marketing sales prep saxelab social cognitive neuroscience lab mit cambridge undergraduate researcher scheduled tested subjects research neural basis interaction theory moral judgment conducted data analysis response times using excel wikinvest contributing director www wikinvest com researched contributed investment articles web portal physicians united corp intellisight orlando business analyst analyzed questionnaire responses assess needs maintained desk knowledgebase designed intuitive efficient website national magnetic lab florida univ tallahassee researcher research won siemens national semi finalist award conducted carbon isotopic analysis reconstruct evolution diet horses evaluate expansion central inner mongolia miocene pliocene leadership mit society engineers swe cambridge outreach swe planning promote math community students annually outreach skills interests skills excel powerpoint mathematica java programming web research spanish bloomberg terminal interests volunteer benefit boston museum olympics cheerleading coach unicef youth ambassador mit troupe mit alpha phi", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Neha", 
   "first_major": 23, 
   "subscriptions": [
    6
   ], 
   "gpa": "3.470", 
   "campus_involvement": [
    112, 
    343
   ], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/hebbar_neha_nhebb@mit.edu_2011-09-05-19-14-49.pdf", 
   "user": 109, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-01 19:36:35"
  }
 }, 
 {
  "pk": 98, 
  "model": "student.student", 
  "fields": {
   "last_name": "Reed", 
   "last_updated": "2011-09-06 07:00:20", 
   "sat_m": 770, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": 2120, 
   "sat_v": 670, 
   "sat_w": 680, 
   "keywords": " christian reed crreed com crreed mit edu education massachusetts institute technology mit expected june mechanical engineering management minor economics gpa coursework finance theory multivariable calculus differential equations microeconomics solid chemistry physics newtonian mechanics electricity magnetism islip graduated june ranked national honor society member technology club president multiple varsity sport athlete shadow microsoft motorola suffolk county authority scwa bayshore served assistant quality supervisor production department america largest drinkable groundwater provider helped maintain repair scwa hundreds granular activated carbon filters helped construct sample pilot studies including involving different types activated reactivated carbon involving advanced oxidation techniques mit media lab network computer systems necsys january cambridge responsibilities keeping central network computing infrastructure mit media lab running cisco certified network associate resolve user issues implement equipment various media events including interactive touchscreens multiple display screens bay youth christian association ymca bayshore senior counselor regionally accredited elementary aged individuals role included ensuring groups arrived various events without conflict supervised downtime throughout ensured conflicts dealt resolved cworks engineering january september islip cworks engineering ecommerce venture formed classmate products sourced marketed internet scopes services expanded repair services network installations business significant learning provided funding college extracurricular activities army reserve officers training corp rotc army cadet future commissioned lieutenant united states army leadership management participate building events core leadership united states army promotes improvement managing groups individuals almost environment participate drill ceremony learning effective ways controlling movement organized controlled manner ranger challenge member competing yearly testing endurance teamwork leadership skills institute nanotechnologies competition competing competitions members myself working towards creating devices technology useful practical soldiers aid missions sloan business club sbc member obtained membership sloan business club promotes interactions students leading corporations teaching practical business skills utilized member organize events including informational sessions various companies campus events volunteer presently tutor boston scholar athlete bsa program aged students boost grade average allows participate athletic events scouts currently assistant scoutmaster merit badge counselor merit badges previously scout participated related service projects including eagle service project aimed towards promoting environment activities included peer tutoring mathematics manager teaching vacation bible varisty mit barbell club president distinctions published invention grappling hook launcher designed successfully constructed internet portable homemade grappling hook launcher publishing instrutcables com article became popular receiving forty views featured gizmodo com homepage lifehacker com homepage makezine com stumbleupon com websites blogs mit army rotc sergeant york award received award given yearly army cadet contributes continuing furthering rotc program contributions included helping newly adopted mit rotc paul revere battalion logo apparel battalion challenge coin media related assistance eagle scout scouts america culminated twelve scouting career attainment highest rank scouts america planned managed hours service construction project within community eagle requirements leadership roles included senior patrol leader membership scouting honor society arrow serving shinnecock lodge currently assistant scoutmaster troop county varsity athlete scholar distinction islip likely succeed award skills certifications cisco certified entry technician ccent march cisco certified network technician ccna technical skills excel access adobe photoshop adobe dreamwearver html java adavanced understanding computer hardware network equipment skillful outdoor machinery tools hobbies running climbing kayaking cycling photography landscaping playing sports", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Christian", 
   "first_major": 23, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.500", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 2, 
   "graduation_year": 3, 
   "previous_employers": [], 
   "website": "http://crreed.com/", 
   "second_major": 26, 
   "resume": "student/student/reed_christian_crreed@mit.edu_2011-09-01-19-45-45.pdf", 
   "user": 110, 
   "industries_of_interest": [], 
   "act": 33, 
   "date_created": "2011-09-01 19:38:11"
  }
 }, 
 {
  "pk": 99, 
  "model": "student.student", 
  "fields": {
   "last_name": "Ronde", 
   "last_updated": "2011-09-06 06:59:50", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " daniel ronde address memorial cambridge phone mail djronde mit edu education massachusetts institute technology candidate bachelor electrical engineering computer minor theater arts relevant coursework artificial intelligence introduction algorithms analysis algorithms elements software construction computation structures signals systems cumulative undergraduate gpa northport northport york valedictorian cumulative gpa weighted perfect national merit finalist presidential scholar semi finalist diploma recipient palantir technologies backend quality assurance intern palo alto california palantir technologies produces enterprise management software palantir established itself elite software silicon according glassdoor com sixth interview june august tested performance consistency correctness palantir government enterprise management software using palantir unix environment engineer project metropolis designed testing workflows metropolis mit department electrical engineering computer lab assistant cambridge massachusetts september december assist instruction introduction electrical engineering computer continued departmental tutor june mit csail undergraduate research associate cambridge massachusetts mit computer artificial intelligence laboratory csail earned prestigious reputation june september worked clinical decision making provides health applied artificial intelligence designed user interface processing software parses extracts meaningful information medical documents activities mit varsity ncaa american holder distance medley relay phi beta epsilon fraternity alumni correspondent literary steward organize hours per kitchen orientation leader workshops designed incorporate freshmen into mit academically socially participated entire freshman tech theater skills computer skills programming comfortable python php java linux environment software proficient efficiency software microsoft powerpoint excel learner works groups solving ability communication skills interests running frisbee soccer yoga meditation", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Daniel", 
   "first_major": 15, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.860", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/ronde_daniel_djronde@mit.edu_2011-09-01-19-43-24.pdf", 
   "user": 111, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-01 19:38:20"
  }
 }, 
 {
  "pk": 100, 
  "model": "student.student", 
  "fields": {
   "last_name": "Campos", 
   "last_updated": "2011-09-06 06:34:29", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " campus address hereford boston david manuel campos xenophon mit edu address prol bosques reforma mexico mexico education massachusetts institute technology cambridge candidate bachelor chemical engineering cumulative gpa relevant coursework intro finance microeconomics accelerated calculus multivariable calculus differential equations american foundation mexico salutatorian national merit finalist cumulative gpa distinction received international baccalaureate organization research supramolecular chemistry cyclodextrins executed conjunction universidad nacional aut noma mexico morgan chase york intern credit research member seo research cohort worked research projects housing lodging gaming sectors weiss asset management boston intern operations department january unrealized gain margin reconciliation projects integration into existing systems liased prime brokerage firms integration gained financial instruments swaps derivatives morgan stanley mexico analyst built models presentations projects including not limited homebuilder debt offerings services bond placement biggest consumer ipo mexico recent years helped books languages translated relevant documents presentations studies including analysis classification companies proteak uno langer lab cambridge undergraduate research assistant january cervical cancer cells sirna delivery vectors eventual gene therapy assisted professor studies nanoparticles uptake cells marker helped experiments improve procedures existing experiments data analysis collection leadership activities sloan business club cambridge member entrepreneurship november created brightidea website connecting mit entrepreneurial community venture firms resources currently involved execution phase chi phi fraternity cambridge social coordinated execution multiple themed parties hosting designed produced distributed related shirts mit freshman orientation cambridge orientation leader september helped organize orientation events incoming freshmen mit lightweight crew cambridge oarsman consistently earned participated various regattas florida training mexico dual citizenship fluent english spanish conversational french interests habitat humanity chapter president debate model backpacking karate belt classic restoration", 
   "looking_for": [
    1, 
    3, 
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "MX", 
    "US"
   ], 
   "first_name": "David", 
   "first_major": 7, 
   "subscriptions": [
    10, 
    13, 
    8, 
    6
   ], 
   "gpa": "4.700", 
   "campus_involvement": [
    434, 
    245, 
    334, 
    341
   ], 
   "languages": [
    3, 
    70, 
    129
   ], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [
    7, 
    26, 
    9
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/campos_david_xenophon@mit.edu_2011-09-01-20-08-31.pdf", 
   "user": 112, 
   "industries_of_interest": [
    4, 
    6, 
    37, 
    38, 
    12, 
    13, 
    15, 
    19, 
    27, 
    31, 
    41, 
    42
   ], 
   "act": 35, 
   "date_created": "2011-09-01 19:38:21"
  }
 }, 
 {
  "pk": 101, 
  "model": "student.student", 
  "fields": {
   "last_name": "Farrell", 
   "last_updated": "2011-09-06 06:44:15", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " andrewfarrellafarrell mit edu massachusettsavenue cambridgema keducationmassachusettsinstituteoftechnology cambridgemamajoringincomputerscienceclassof gpa outof workexperiencenetworkappliance sunnyvalecasoftwareengineeringinternmay august amendedadriverofabsd basedoperatingsystemtorecoveracrashdumpfromafibrechanneltosasbridge itasoftware nowgoogle cambridgemasoftwareengineeringinternmay august wrotetestframeworkforanin developmentobjectdatabasesystemtoensurefunctionalcorrectnessand usingtest driven development extendedpythonapiforthesame newyorkiso rensselaernymarketmonitoringinternmay august automatedextractionofhistoricalelectricitymarketdataforusebyanalysts wroteapythonmoduletoextendaccesstoexceldataviathewindowscomapi mitinformationsystemsandtechnology cambridge maresidentialcomputingconsultantseptember presentensuredormresidentshavereliableinternetandprinteraccess wroteapythonscripttodetectpresenceofunauthorisedwirelessaccesspoints wrotedocumentationonnetworktroubleshootingforotherconsultants activitiesandleadershipplannedandledsummer bayareainterneventfor participantsfrom techcompanies alphaphiomega presentled volunteersrecievingandcheckinggradandundergradclassregistrationforms designedandledprojectcollectingmaterialsfor carepackagesfortroopsoverseasfrom boxesacrossmitcampus currentconclavechair organizing dayconferenceof chaptersfromacrossnewengland studentinformationproccessingboard september presentorganized member taughtclassesover januaryterms taughtshortcoursesonpythonandtheshell organizedfourhackathonsandintroducednewcomerstothesipb skillswith python java html css javascript django windowsxp linux bashscripting vimfamiliarwith scheme lua git latex russian latin", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Andrew", 
   "first_major": 12, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.100", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/farrell_andrew_afarrell@mit.edu_2011-09-01-19-55-34.pdf", 
   "user": 113, 
   "industries_of_interest": [
    38, 
    13, 
    15, 
    20, 
    30, 
    36, 
    42
   ], 
   "act": null, 
   "date_created": "2011-09-01 19:53:10"
  }
 }, 
 {
  "pk": 102, 
  "model": "student.student", 
  "fields": {
   "last_name": "Lambert", 
   "last_updated": "2011-09-01 20:54:49", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": null, 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": null, 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Chase", 
   "first_major": null, 
   "subscriptions": [
    6
   ], 
   "gpa": null, 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": false, 
   "school_year": null, 
   "graduation_year": null, 
   "previous_employers": [], 
   "website": null, 
   "second_major": null, 
   "resume": "", 
   "user": 114, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-01 20:54:49"
  }
 }, 
 {
  "pk": 104, 
  "model": "student.student", 
  "fields": {
   "last_name": "Shaheen", 
   "last_updated": "2011-09-01 23:38:01", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": null, 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": null, 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Saad", 
   "first_major": null, 
   "subscriptions": [
    6
   ], 
   "gpa": null, 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": false, 
   "school_year": null, 
   "graduation_year": null, 
   "previous_employers": [], 
   "website": null, 
   "second_major": null, 
   "resume": "", 
   "user": 116, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-01 23:38:01"
  }
 }, 
 {
  "pk": 105, 
  "model": "student.student", 
  "fields": {
   "last_name": "Chen", 
   "last_updated": "2011-09-06 06:34:29", 
   "sat_m": 760, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": 2260, 
   "sat_v": 750, 
   "sat_w": 750, 
   "keywords": " nancy chen address address memorial nzchen mit edu silverberry lane cambridge hudson education massachusetts institute technology cambridge candidate management political gpa june concentrations finance marketing minor asian studies relevant coursework marketing management finance theory corporate financial accounting hudson hudson graduated honors gpa weighted national scholar june united states senate committee judiciary washington intern oversight investigations subcommittee august worked senator chuck grassley government oversight reform whistleblower protection prepared senate hearings analyzing quantitative data drafting investigative oversight letters preparing hearing presentations interviewing witnesses performed investigative research issues including enforcement healthcare finance education mit department political cambridge research assistant professor nazli choucri february analyzed researched statistics regarding cybersecurity internet development environmental sustainability application secondary research global sustainability international cybersecurity legislature worked minerva projects funded department defense mit department urban studies planning cambridge research assistant professor amy glasmeier september march prepared recommendation department defense regarding rural veterans accessibility military health leadership mit council cambridge social october organized events annually member using budget increased participation majority events compared previous years activities mit sloan business club cambridge member consulting focus collaborated consulting banking trading education mit undergraduates authored internship consulting using information mit alumni skills computer microsoft excel powerpoint java visual matlab proficient english mandarin chinese conversational spanish awards mit pressman research award recipient awarded annually honors conference asian pacific american leadership award recipient nationally organization chinese americans scholarship nationally basf corporation national merit scholar csa scholarship hudson citizenship award female male awarded ohio mock trial witness district regional levels interests public policy learning languages crew kappa alpha theta", 
   "looking_for": [
    3, 
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Nancy", 
   "first_major": 23, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.400", 
   "campus_involvement": [
    207, 
    334, 
    403
   ], 
   "languages": [
    3, 
    47, 
    107, 
    127
   ], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [], 
   "website": "", 
   "second_major": 32, 
   "resume": "student/student/chen_nancy_nzchen@mit.edu_2011-09-02-00-18-34.pdf", 
   "user": 117, 
   "industries_of_interest": [], 
   "act": 35, 
   "date_created": "2011-09-02 00:12:27"
  }
 }, 
 {
  "pk": 106, 
  "model": "student.student", 
  "fields": {
   "last_name": "Wunnava", 
   "last_updated": "2011-09-06 07:00:12", 
   "sat_m": 790, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": 2300, 
   "sat_v": 730, 
   "sat_w": 780, 
   "keywords": " windmoore akshar wunnava chantilly wak gmail com education massachusetts institute technology mit cambridge candidate bachelor mechanical engineering mathematics minors economics management relevant courses finance investments probability differential equations macroeconomics thomas jefferson technology alexandria gpa math writing reading professional mit investment management august investment analyst intern cambridge built quantitative model analyze hedge fund managers sourced interviewed potential hedge funds mit strano chemical engineering laboratories september undergraduate research intern cambridge developed methods improve efficiency thermopower generation alternative output applications international corporation saic june august simulation analyst intern mclean developed interface atmospheric model used saic used model slicks atmosphere june august research intern calverton built multi model climate ensemble predicts extreme precipitation accurately models national resources june august intern washington worked congress national academies sciences around education reform andhra university physics department july august research intern visakhapatnam india created atmospheric model predicts loss solar based aerosol concentrations atmosphere awards recognitions intel talent semifinalist siemens competition math technology semi finalist physics olympiad qualifier grade math olympiad qualifier grades leadership extracurricular activities mit sloan business club member attend meetings club ideas publicize educational events mit club member organized ups venture capitalists policy experts entrepreneurship mit freshman cultural choreographer choreographed indian cultural students thomas jefferson varsity math trained students various math competitions organized competition students thomas jefferson varsity tennis member technical skills computer java pbasic mathematica latex matlab photoshop tools languages fluent english speaking reading writing spanish hindi telugu", 
   "looking_for": [
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Akshar", 
   "first_major": 7, 
   "subscriptions": [
    6
   ], 
   "gpa": "5.000", 
   "campus_involvement": [
    135, 
    334
   ], 
   "languages": [
    3, 
    83, 
    128
   ], 
   "profile_created": true, 
   "school_year": 2, 
   "graduation_year": 3, 
   "previous_employers": [
    15
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/wunnava_akshar_awunnava@mit.edu_2011-09-02-00-26-55.pdf", 
   "user": 118, 
   "industries_of_interest": [
    37, 
    12, 
    15, 
    19, 
    27, 
    28, 
    41, 
    42
   ], 
   "act": 35, 
   "date_created": "2011-09-02 00:21:07"
  }
 }, 
 {
  "pk": 107, 
  "model": "student.student", 
  "fields": {
   "last_name": "Muco", 
   "last_updated": "2011-09-06 06:59:50", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " address manushaqe muco address massachusetts avenue manjola mit edu maj durhan cambridge vlora albaniaeducation massachusetts institute technology cambridge candidate forb electrical engineering computer concentration literatureand minor mathematics relevant coursework programming introduction electricalengineering computer mathematics computer calculus differential equations linear algebra introduction philosophy machines mit alumni association tech caller communicated phone mit alumni informed events happening mit shared news personal annual fund raising departments laboratories sports clubs scholarships minorities etc mit persuaded alumni importance donating impact brings mit mit students mit lives mit department physics tutor grader physics graded weekly sets tutored helped students facing difficulties presented mit department electrical engineering computer grader mathematics computer graded weekly sets awards mathematical olympiads republic albania regional including albanian speaking territories prize thbalkan mathematical olympiad rhodes greece april skills computer microsoft excel powerpoint programming python knows english albanian italian french spanish portuguese", 
   "looking_for": [
    1, 
    3, 
    2, 
    4
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Manushaqe", 
   "first_major": 12, 
   "subscriptions": [
    6
   ], 
   "gpa": "3.500", 
   "campus_involvement": [], 
   "languages": [
    3, 
    70, 
    93, 
    116, 
    128, 
    159
   ], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [
    15
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/muco_manushaqe_manjola@mit.edu_2011-09-05-23-48-24.pdf", 
   "user": 119, 
   "industries_of_interest": [
    3, 
    13, 
    25, 
    30, 
    36
   ], 
   "act": null, 
   "date_created": "2011-09-02 01:27:12"
  }
 }, 
 {
  "pk": 108, 
  "model": "student.student", 
  "fields": {
   "last_name": "Yazbek", 
   "last_updated": "2011-09-06 06:44:15", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": 2280, 
   "sat_v": 710, 
   "sat_w": 770, 
   "keywords": " john yazbek memorial johnyaz mit edu cambridge education massachusetts institute technology mit cambridge candidate bachelors chemical biological engineering candidate bachelors mechanical engineering gpa international choueifat koura koura lebanon valedictorian gpa july ranked lebanon lebanese baccalaureate mit harvard health sciences technology cambridge lab assistant undergraduate researcher march tested novel drug adjuvant chemotherapy breast cancer involved removing breast tumors mice treating mice drug secondary tumor measured stained effects drug max planck institute molecular genetics berlin germany research assistant jun aug worked identifying role gene med limb buds isolated mouse embryos missing med organs gal stained mice med excised sectioned embryos performed situ hybridization tested plasmids synthesized advisor inserted mouse embryonic stem cells skills languages arabic fluent english fluent french conversational german lab skills immunohistochemistry pcr mini midi preps lipofection electroporation tissue culture mouse surgery gel electrophoresis isolation embryos dna confocal microscopy tissue sectioning situ hybridization leadership delta psi fraternity treasurer president lebanese club treasurer organizer college admissions arab mentorship program caamp medlink arab students organization vice president gordon engineering leadership program upop awards prime minister award accomplished minister education award academic achievement winner national scholarship accomplished students mit global challenge choice award", 
   "looking_for": [
    1, 
    3, 
    2, 
    4
   ], 
   "countries_of_citizenship": [], 
   "first_name": "John", 
   "first_major": 7, 
   "subscriptions": [
    6
   ], 
   "gpa": "5.000", 
   "campus_involvement": [
    23, 
    221, 
    236, 
    271
   ], 
   "languages": [
    3, 
    36, 
    70, 
    74
   ], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [
    15, 
    73
   ], 
   "website": "", 
   "second_major": 26, 
   "resume": "student/student/yazbek_john_johnyaz@mit.edu_2011-09-02-08-26-03.pdf", 
   "user": 120, 
   "industries_of_interest": [
    4, 
    6, 
    37, 
    27
   ], 
   "act": null, 
   "date_created": "2011-09-02 08:19:43"
  }
 }, 
 {
  "pk": 109, 
  "model": "student.student", 
  "fields": {
   "last_name": "Cyr", 
   "last_updated": "2011-09-06 07:00:12", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " britt cyr johnstone cincinnati cyrbritt mit edu brittcyr com objective obtain internship leverages analytical mathematical ability simultaneously learning skills successful education massachusetts institute technology cambridge majoring math computer gpa courses analysis principles applied math continuous intro eecs sophomore standing hills cincinnati gpa math awards won american math contest american math contest american invitational math exam usa math olympiad scores math writing critical reading math axcess financial services inc cincinnati june august software analyst credit risk analytics dept strategic operations internship days per international financial services provides credit credit quality consumers analyzed redesigned credit scoring algorithm decision algorithms recreating modeling matrixing additional vendor data used sql retrieve sort denormalize data sas excel analyze trends brand cincinnati august internship per designs exhibits experiential marketing created modeling used variable rates achieve profit goals analyzed prospective clients provided analysis opportunities greenpros llc florence august landscaping including building walls planting tending plants digging etc recognized manager ethic creativity solving problems extracurricular activities mit varsity lacrosse midfielder varsity starter fraternity lca risk manager hills athletics varsity lacrosse years mvp lacrosse academic american varsity soccer years honorable mention league interests eagle scout completed marathons programming java sql python sas adobe dreamweaver matlab references available upon request", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "William", 
   "first_major": 25, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.600", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 2, 
   "graduation_year": 3, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/cyr_william_cyrbritt@mit.edu_2011-09-02-08-54-57.pdf", 
   "user": 121, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-02 08:53:36"
  }
 }, 
 {
  "pk": 110, 
  "model": "student.student", 
  "fields": {
   "last_name": "Clorina", 
   "last_updated": "2011-09-06 07:00:20", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " hershey vivelle ardina clorina college address memorial cambridge hclorina mit edu permanent address palm avenue apt san diego education massachusetts institute technology cambridge candidate bachelor management sloan management june minor economics gpa montgomery senior san diego graduated valedictorian june rank gpa principal honor grades scholar grade perfect attendance grades employment mit department brain cognitive sciences cambridge assistant researcher march conducted experiments regarding origins supervisor edward gibson mit alumni association cambridge tech caller january supervisor brett wingfield san diego county registrar voters san diego clerk volunteer howard pence elementary san diego teacher aide quarterly basis supervisor mrs leyva activities mit filipino association fsa cambridge social montgomery senior san diego california scholarship federation csf president grade physics club president grade", 
   "looking_for": [
    2
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Hershey Vivelle", 
   "first_major": 23, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.000", 
   "campus_involvement": [
    145, 
    334
   ], 
   "languages": [
    3, 
    127, 
    156
   ], 
   "profile_created": true, 
   "school_year": 2, 
   "graduation_year": 3, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/clorina_hershey vivelle_hclorina@mit.edu_2011-09-02-09-45-26.pdf", 
   "user": 122, 
   "industries_of_interest": [
    28, 
    34
   ], 
   "act": null, 
   "date_created": "2011-09-02 09:32:00"
  }
 }, 
 {
  "pk": 111, 
  "model": "student.student", 
  "fields": {
   "last_name": "Biktimirova", 
   "last_updated": "2011-09-06 06:34:30", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": "", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Aysylu", 
   "first_major": 15, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.000", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [
    21, 
    15
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/biktimirova_aysylu_aysylu@mit.edu_2011-09-02-10-51-09.pdf", 
   "user": 123, 
   "industries_of_interest": [
    4, 
    37, 
    38, 
    13, 
    14, 
    15, 
    19, 
    20, 
    36, 
    40
   ], 
   "act": null, 
   "date_created": "2011-09-02 10:39:51"
  }
 }, 
 {
  "pk": 112, 
  "model": "student.student", 
  "fields": {
   "last_name": "Lu", 
   "last_updated": "2011-09-06 07:00:12", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " laura address lauralu mit edu address memorial briardale cambridge rockville academics massachusetts institute technology cambridge candidate bachelor biology biomedical engineering midshipman navy reserve officer training corps nrotc mit harvard tufts ironsides battalion assistant administrative officer squad leader poc fundraising officer bullis potomac valedictorianhighest gpa grades cumulative gpa leadership national honor society vice president national gymnastics honors received nih intramural research training award irta fellowships around junior olympic national proficient french chinese robert langer laboratory cambridge works encapsulation etifoxine sirna into optimized drug delivery systems peripheral nerve injury spinal cord injury applications developing lipid based scaffold optimal biochemical mechanical properties injections into neural tissues national naval medical bethesda worked armed services asbbc mobile donor welcoming donors interviewing donors taking vital signs observing phlebotomies worked clinical trial using convalescent plasma treatment extreme cases influenza shadowed pathologist operating rounds smart securities sws cambridge founding member mit chapter sws non profit organization focused investment education undergraduate organizes instructive seminars mentoring initiatives meetings successful investors investment financial education national lung institute nih bethesda conducted research treating central nervous cns injury sirna therapeutics supervision herbert geller developmental neurobiology lab approach vitro model cns injury participated intel talent walter reed army medical wramc washington provided assistance wounded soldiers recreational relaxation programs worked closely aid wounded soldiers military families raised stoves darfur rwanda washington worked conjunction chf international awareness funds families darfur rwanda interests activities mit gymnastics mit lacrosse kappa alpha theta sorority deputy philanthropy volunteer international", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Laura", 
   "first_major": 5, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.300", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 2, 
   "graduation_year": 3, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/lu_laura_lauralu@mit.edu_2011-09-02-11-02-27.pdf", 
   "user": 124, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-02 10:59:42"
  }
 }, 
 {
  "pk": 113, 
  "model": "student.student", 
  "fields": {
   "last_name": "Drago", 
   "last_updated": "2011-09-06 10:49:07", 
   "sat_m": null, 
   "graduation_month": "1", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " diandra drago address otis apt cambridge address ddrago mit edu education massachusetts institute technology cambridge candidate bachelor management february concentration marketing concentration spanish focus computer robotics relevant coursework artificial intelligence software construction introduction electrical engineering computer digital communication systems strategic measurement engineering management pricing branding marketing management marketing products optimization methods overall gpa longwood advanced regents diploma honors rank june adapting technology marketing consultant valencia spain june aug developed business model based document management included analysis conditions competitive landscape development sales marketing plans development development improvements charter tutor boston june july tutored students materials math reading upcoming academic mit agile robotics undergraduate researcher cambridge provided hands research site autonomous forklift development army included implementation parts using solidworks resources mit discover mechanical engineering program cambridge coordinator june aug worked closely fellow coordinator revised program planned logistics including lab tours campus trips meals daily programming staff responsibilities competition incoming freshman oversaw mentors staff members staff aug programmed events quickly efficiently aiding participants machinery wiring soccer playing robot leadership mit career logistics director cambridge june oct directly worked employers coordinate hotel information session interview booth logistics companies largest careers fairs united states responded inquiries recruited companies helped companies increase sponsorship levels resulted largest career mit bringing mit groups mit dormitory council vice president residence exploration rex cambridge june coordinated undergraduates living dormitories rex incoming freshman consisted individual dorm events feature events compiled booklet acted official rex liaison students mit administration served orientation committee dormitory council representative managed committee members friday committee planned orientation campus freshman mit society engineers cambridge secretary dec maintained mail lists minutes attendance reservations encouraging member pro activity creative outlets including rewards feedback programs president dec dec planned monthly meetings planning members executive members acting facilitator meetings swe members oversaw overall planning swe events acted mentor members serving official liaison mit swe national regional swe corporate vice president membership information feb dec served leader resource members informational planning roles resulting increased participation national swe membership registration mit savetfp social marketer treasurer cambridge dec fostered community development promoted physical mental being mit students weekly events creating maintaining annual budget mit community catalyst leadership program participant cambridge oct students chosen participate leadership development program individual leadership coach skills computer languages python familiarity java spoken languages conversational spanish italian programs solidworks microsoft powerpoint excel eclipse ide imovie machining bandsaw milling jet drill soldering", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Diandra", 
   "first_major": 23, 
   "subscriptions": [
    6
   ], 
   "gpa": "3.600", 
   "campus_involvement": [
    73, 
    116, 
    330, 
    335, 
    343
   ], 
   "languages": [
    3, 
    128
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [
    15
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/drago_diandra_ddrago@mit.edu_2011-09-06-10-49-07.pdf", 
   "user": 125, 
   "industries_of_interest": [
    37, 
    14, 
    20, 
    36
   ], 
   "act": null, 
   "date_created": "2011-09-02 11:18:07"
  }
 }, 
 {
  "pk": 115, 
  "model": "student.student", 
  "fields": {
   "last_name": "Chandrasekar", 
   "last_updated": "2011-09-06 06:34:29", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": 2350, 
   "sat_v": 800, 
   "sat_w": 750, 
   "keywords": " eefe fge jnnopqqrrrg gkjn gvg oan cdef qhg qfg cddm cddo cdee kna cdee wnk awn kna cddo anj kna kna kna knx cded cdee cded wjak nnk cded kwj kna okxwj ojxk ankwj cded awn cdee oan cdee kwj kwj ang kwj defgfcefgg cded wjak nnkg aoo cqv efgg defgfcefgg cded uana kakn cdee njw cdee cded cddoxcded tuu", 
   "looking_for": [
    1, 
    3, 
    2, 
    4
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Hamsika", 
   "first_major": 6, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.900", 
   "campus_involvement": [
    58, 
    64, 
    69, 
    134, 
    160, 
    181, 
    265, 
    266, 
    318, 
    372, 
    408, 
    428
   ], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [
    15
   ], 
   "website": "http://mitadmissions.org/blogs/entry/mcat-advice", 
   "second_major": 15, 
   "resume": "student/student/chandrasekar_hamsika_hamsika@mit.edu_2011-09-02-12-38-04.pdf", 
   "user": 127, 
   "industries_of_interest": [
    4, 
    13, 
    14, 
    15, 
    17, 
    18, 
    20
   ], 
   "act": null, 
   "date_created": "2011-09-02 12:32:27"
  }
 }, 
 {
  "pk": 116, 
  "model": "student.student", 
  "fields": {
   "last_name": "Angrist", 
   "last_updated": "2011-09-06 06:34:29", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " noam angrist hereford boston nangrist mit edu education awards leadership skills interests massachusetts institute technology cambridge june candidate bachelor arts sciences economics mathematics relevant coursework multivariable calculus linear algebra statistics applications probability random variables intermediate macroeconomics public finance public policy development economics microeconomics introduction java gpa brookline brookline june usa biology olympiad semifinalist council economic advisers washington june august research assistant intern conducted depth analysis role advanced manufacturing united states germany japan korea china using haver software panel data stata designed experimental evaluate educational software using randomized trials memos tuition education technology effects public insurance regulation culminating official website titled regulatory affordable health economics research cambridge undergraduate research assistant professor jonathan gruber sharing effects medical utilization research designed programmed data collection personalized its survey questionnaire based firms specific insurance offerings relevant health savings accounts created stata dataset plans including health ids deductibles copayments analyzed effects sharing medical utilization physician research analyzed health insurance coverage effects physician demand utilizing population physician ratios mathematical models adjust geographic socioeconomic ethnic variables skills included independent library research data collection writing comprehensive reports america merrill lynch york york january health municipal bond analyst independently designed bond obligor credit hierarchy based internal rating methodology factor analysis insurer medi cal reimbursement fiscal budgets refined rating methodology integrating quantitative trend measurements delivered presentation director municipal research hospital bond trader riverside club rowing cambridge march coach freshmen instructed novice rowers via innovative techniques building workouts deconstructed rowing into fifty unique motions coaching analysis mentored motivated rowers succeed created custom superlatives rowing shells mpsra championship medals consecutive years amphibious achievement cambridge june founder president conceptualized founded comprehensive athletic academic mentorship program targeted inner youth boston mit recognized public service obtained overall grant supported mit public service coop sportswear holly metcalf olympic rower medalist mit chi phi fraternity cambridge september social community service managed budget coordinated events persons stata microsoft suite proficient spanish software haver fluent english hebrew mit tour mit medlinks freshmen urban program counselor mit taekwondo elephant waiter sloan business club member", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Noam", 
   "first_major": 14, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.800", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [], 
   "website": "", 
   "second_major": 25, 
   "resume": "student/student/angrist_noam_nangrist@mit.edu_2011-09-02-12-46-11.pdf", 
   "user": 128, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-02 12:42:26"
  }
 }, 
 {
  "pk": 117, 
  "model": "student.student", 
  "fields": {
   "last_name": "Xu", 
   "last_updated": "2011-09-06 07:00:20", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " phone sheila address sheilaxu mit edu memorial cambridge objective obtain internship education massachusetts institute technology cambridge candidate bachelor atmospheric planetary sciences june department transportation volpe national transportation cambridge physical technician january worked growth projection model federal aviation administration commercial aviation alternative fuels initiative american european alternative aviation fuel availability researched feasibility aviation goal reduce greenhouse gases emissions identified researched companies suitability alternative aviation fuel production authored research model published discretionary grant review reviewed recommended states applications federal funding federal highway administration transportation community preservation program public lands highways discretionary program federal funding worth approximately total nasa jet propulsion laboratory jpl california institute technology pasadena grant intern june august worked chao principal investigator climate solid jpl forecasting california created framework prototype website using matlab google api web programming creating visualization data disseminating wealth information mit plasma fusion cambridge undergraduate researcher february worked mit park mitgep project joseph minervini mit plasma fusion performed analysis mitgep project involves supplying mit renewable technology constructed analysis model project budget estimation future potential grant applications helped classify latest technology available reducing campus carbon footprint university connecticut avery mason mercury laboratory groton intern november june researched mercury rainwater pollution atmospheric flux waterford used chemical analysis methods waterford results added mentor collection worldwide data mercury rainwater concentrations massachusetts infirmary eaton peabody laboratory boston intern july august investigated hypothesis anatomical structure skulls relating environmental evolutionary factors cats applied statistics data analysis corroborate hypothesis authored research poster based project mit professor william peake presented international acoustic communication animals conference oregon university august activities mit zero gravity mit undergraduate research opportunities program mit sloan business club leadership founding members mit asian skills computer proficiency microsoft excel powerpoint publisher adobe photoshop computer languages beginner html css python matlab awards recipient sarah ryder norris craig scholarship lucille abbot scholarship deaf", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Sheila", 
   "first_major": 13, 
   "subscriptions": [
    10, 
    13, 
    12, 
    7, 
    11, 
    8, 
    14, 
    5, 
    4, 
    6, 
    9
   ], 
   "gpa": "3.200", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 2, 
   "graduation_year": 3, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/xu_sheila_sheilaxu@mit.edu_2011-09-02-13-00-40.pdf", 
   "user": 129, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-02 12:58:38"
  }
 }, 
 {
  "pk": 118, 
  "model": "student.student", 
  "fields": {
   "last_name": "Safai", 
   "last_updated": "2011-09-06 07:00:20", 
   "sat_m": 760, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": 2150, 
   "sat_v": 680, 
   "sat_w": 710, 
   "keywords": " memorial cambridge ersafai mit edu baa aab mma aab bsa ata akab lvvv aab bsa jab ata eba vaasa lvvv bsa bsa vaba aas memorial cambridge ersafai mit edu", 
   "looking_for": [
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Eric", 
   "first_major": 7, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.200", 
   "campus_involvement": [], 
   "languages": [
    3, 
    127
   ], 
   "profile_created": true, 
   "school_year": 2, 
   "graduation_year": 3, 
   "previous_employers": [
    15
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/safai_eric_ersafai@mit.edu_2011-09-02-14-09-04.pdf", 
   "user": 130, 
   "industries_of_interest": [
    4, 
    12, 
    18
   ], 
   "act": 33, 
   "date_created": "2011-09-02 14:03:26"
  }
 }, 
 {
  "pk": 119, 
  "model": "student.student", 
  "fields": {
   "last_name": "Anand", 
   "last_updated": "2011-09-06 06:44:15", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " kuljot anand hampshire court brampton canada anandk mit edu www ksanand com education massachusetts institute technology cambridge candidate bachelor mechanical engineering minor theater economics expected graduate risk analyst morgan investment banking risk june august york involved thorough review tanzania annual review initiative developed quantitative model predict imposition inflow outflow restrictions its impact sovereign risk involved weekly research reporting macroeconomic changes analyzed political economic risks facing morgan its clients particularly emerging markets undergrad researcher auto labs mit march cambridge involved generation conception manufacturing frequency identification rfid tag antennas prof sanjay sarma rahul bhattacharya candidate pursuing research fluid sensing viable sensing technology ventures credit risk analyst nova scotia credit risk analytics august toronto validated probability default methodology non retail quantitative techniques data analysis tested theory implementation results model models authored report database undergraduate intern hired undergrad researcher edelman lab mit jan april cambridge researched kidney failure signaling pathways vascular tissue performed functions culturing media transfer harvesting vipul chitalia intern community environment alliance cea jun sep brampton refurbished debugged hardware problems used computers program elected cea leadership treasurer mit march responsible effective budgeting creating financial statements organizing events member sloan business club entrepreneurship nov organized freshman introduce business organizing highlighting efforts social entrepreneurs mit boston winner mit sebc entrepreneurship competition winning seniors completed mit entrepreneurship china visited china local entrepreneurs corporate offices founder president energysmart community program jun aug created implemented community program aimed towards educating community environmental issues program greater toronto replacing incandescent bulbs compact fluorescents served households volunteers program received grant years ministry ontario link article program http spectrum mit edu articles normal saving flight sergeant royal canadian cadets nov jun served royal canadian cadets flight sergeant years received private pilot license cadets pilot scholarship program awards achievements ranked amongst canada influential citizens canada provincial winner deca international business club provincial entrepreneurship competition winner mit entrepreneurship competition brampton citizen award individuals mit bhangra indian folk compete national competitions skills affiliations proficient english punjabi hindi urdu beginner french advanced excel advanced access intermediate java intermediate python phi sigma kappa fraternity omicron chapter mit", 
   "looking_for": [
    2
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Kuljot", 
   "first_major": 26, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.000", 
   "campus_involvement": [
    40, 
    54, 
    272, 
    334, 
    346
   ], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [
    7
   ], 
   "website": "http://www.ksanand.com/", 
   "second_major": 16, 
   "resume": "student/student/anand_kuljot_anandk@mit.edu_2011-09-02-14-53-13.pdf", 
   "user": 131, 
   "industries_of_interest": [
    2, 
    3, 
    37, 
    38, 
    12, 
    13, 
    15, 
    19, 
    30, 
    34, 
    40, 
    42
   ], 
   "act": null, 
   "date_created": "2011-09-02 14:43:48"
  }
 }, 
 {
  "pk": 120, 
  "model": "student.student", 
  "fields": {
   "last_name": "Whittemore", 
   "last_updated": "2011-09-06 06:39:56", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " edward earl whittemore massachusetts ave phone cambridge email eew mit edu educationmassachusetts institute technology june candidate aerospace engineering information technology concentration economics cambridge cumulative gpa pine gifted june cumulative gpa math physics ranked osprey boeing personally selected cto boeing john tracy participate future leaders internship program irvine worked flight engineers boeing advanced uav created quantitative models mission profiles aircraft performance using matlab excel predict behavior collected analyzed data hundreds sensors onboard uav performed analysis pinpoint aberrations flight dynamics future revisions aurora flight sciences worked designing building turbo prop developed cambridge schedule according client needs physical capabilities assessed total manufacturing testing regimen accurately customer mit systems laboratory designed manufactured vision based navigation known goggles spheres cambridge project testbed automated satellite docking interferometry used solidworks stack avionics connects nano satellite expansion enabling satellite cameras guidance surveillance missions goggles launched onboard iss mit built uav competition sponsored cessna raytheon cambridge machining including fabricating mechanisms payload release motor mounts composite fuselage sole cad developer managed budget treasurer including raising funds organization aerospace companies negotiating prices suppliers running benefit analyses private pilot earned private pilot license cessna experienced aerobatics training extra venice leadershipzeta psi president currently leading chapter members weekly deans university cambridge fraternity presidents campus greek communicate national chapter goals benchmarks supporting officers organized fraternity national convention increased campus presence community service orientation volunteering awarded zeta psi chapter award fraternity chapters abroad mit orientation leader served mentor incoming freshmen instruct academic cultural mit cambridge program designed transition into college dudley counselor selected oldest boys ages westport enriching building included sports outdoors arts program activitiesosprey oars rowed years achieving championships nationals osprey sarasota ymca sharks venice swam competitively national regional title sarasota skillsrelevant coursework probabilistic systems systems software java differential eqns principles autonomy decision making microeconomics micro theory macroeconomics lean sigma principles materials structures thermodynamics fluid dynamics signals systems dynamics automatic factors engineering communication systems networks boeing systems systems engineering development engineering management computer skills highly proficient matlab java excel certified solidworks professional", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Edward", 
   "first_major": 1, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.240", 
   "campus_involvement": [
    456
   ], 
   "languages": [
    3
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [
    30, 
    15
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/whittemore_edward_eew@mit.edu_2011-09-02-15-30-00.pdf", 
   "user": 132, 
   "industries_of_interest": [
    37
   ], 
   "act": 32, 
   "date_created": "2011-09-02 15:26:35"
  }
 }, 
 {
  "pk": 121, 
  "model": "student.student", 
  "fields": {
   "last_name": "Granger", 
   "last_updated": "2011-09-02 15:47:30", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": null, 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": null, 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Reguli", 
   "first_major": null, 
   "subscriptions": [
    6
   ], 
   "gpa": null, 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": false, 
   "school_year": null, 
   "graduation_year": null, 
   "previous_employers": [], 
   "website": null, 
   "second_major": null, 
   "resume": "", 
   "user": 133, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-02 15:47:30"
  }
 }, 
 {
  "pk": 122, 
  "model": "student.student", 
  "fields": {
   "last_name": "Shang", 
   "last_updated": "2011-09-06 07:00:12", 
   "sat_m": null, 
   "graduation_month": "4", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " ruisi shang memorial cambridge ruisi mit edu education massa chusetts institute technology mit cambridge candidate bachelor biological engineering relevant coursework introductory biology microeconomics principles chemical differential equations gpa westborough westborough gpa weighted experiences health economics urop cambridge research assistant professor jonathan gruber june actively research topic weekly biweekly projects assigned research papers summaries professor gis data collection effort york districts culminating negotiated contract saving department role excel database analysis cells substitutability nurses doctors healthcare dollars projects attempt reasonable health different geographic demographic factors consulting cambridge consulting assistant feb resolve issues ranging marketing public relations financial problems solutions individual research communication clients discussions presentations collaboration teams project resolving dorm tensions housemasters government due miscommunication alcohol problems brandeis university waltham research assistant ren laboratory june aug collaborated doctoral fellow leukemia project goal understanding signal transduction via protein tyrosine kinases affect development leukemia actively requested papers topic experiments used lab technique culture viable cancer cells gels solutions observed smears dna sequencing treated mice various drugs quantitatively effects disease leadership chinese students club cambridge publicity nov photoshop skills publicize club campus local universities organize events drawing students known performers around reorganized executive duties increase efficiency almost triple events members member attendance acs chemistry club westborough president vice president sept developed attendance doubled involvement students communicated administration approve coordinate hazardous activities projects conceptualized spearheaded mural project largest project undergone organized project groups oversaw execution cambridge choreographer external mit ridonkulous aug manage communication groups coordinate teching performances mit ridonkulous competed nationally groups york concept artists perform mit mocha moves mit dancetroupe times semester per compete competitions including elements alarm annually skills lab culture cells centrifugation gel electrophoresis data software python microsoft excel adobe photoshop languages fluent mandarin proficient spanish", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Ruisi", 
   "first_major": 4, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.800", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 2, 
   "graduation_year": 3, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/shang_ruisi_ruisi@mit.edu_2011-09-02-18-59-25.pdf", 
   "user": 134, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-02 18:58:32"
  }
 }, 
 {
  "pk": 123, 
  "model": "student.student", 
  "fields": {
   "last_name": "Chan", 
   "last_updated": "2011-09-06 06:34:29", 
   "sat_m": 780, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": 2190, 
   "sat_v": 690, 
   "sat_w": 720, 
   "keywords": " connie chan memorial cambridge conch mit edu http conch scripts mit edu education massachusetts institute technology cambridge candidate bachelor computer engineering june relevant coursework multivariable calculus differential equations java programming probability linear algebra microeconomics intro eecs math computer popular communication computation structures elements software construction intro algorithms technical communication computer engineering user interface digital computational photography gpa advanced algorithms computer graphics artificial intelligence founders journey chinese honors winner microsoft research icampus technology innovation competition prize ilona karmel prize engineering writing honorable mention microsoft windows sidebar gadget competition berkeley berkeley graduated june ooyala inc software engineer intern developed features backlot cms its api surf canyon oakland software engineer extern january worked web browser extension dynamically ranks results engines improve users ibm littleton software engineer intern developed tested feature enhancements lotus sametime advanced api facilitated gathering customer needs requirements results delivered hotfixes included sametime release mit media lab cambridge undergraduate researcher android phone applications reality mining modified alarm app created alarm created apps debugging information mit information services technology cambridge residential computing consultant assist dormitory residents problems questions computing environment activities phoenix vice president campus preview weekend residential exploration coordinator integral member undergraduates founding residence hall students bridge designed fabricated bridge compete asce aisc bridge competition placed overall england regionals teams nationals raised competition costs skills ruby python android matlab latex html css javascript php mysql java mac osx windows linux", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Connie", 
   "first_major": 12, 
   "subscriptions": [
    12, 
    11, 
    6
   ], 
   "gpa": "4.400", 
   "campus_involvement": [], 
   "languages": [
    3, 
    43, 
    46, 
    70, 
    106
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [
    44, 
    15
   ], 
   "website": "http://conch.scripts.mit.edu/", 
   "second_major": null, 
   "resume": "student/student/chan_connie_conch@mit.edu_2011-09-02-20-36-17.pdf", 
   "user": 135, 
   "industries_of_interest": [
    36
   ], 
   "act": null, 
   "date_created": "2011-09-02 20:34:26"
  }
 }, 
 {
  "pk": 124, 
  "model": "student.student", 
  "fields": {
   "last_name": "Peterson", 
   "last_updated": "2011-09-03 00:12:47", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": null, 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": null, 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Kelly", 
   "first_major": 6, 
   "subscriptions": [
    6
   ], 
   "gpa": null, 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": false, 
   "school_year": null, 
   "graduation_year": null, 
   "previous_employers": [], 
   "website": null, 
   "second_major": null, 
   "resume": "", 
   "user": 136, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-03 00:12:47"
  }
 }, 
 {
  "pk": 125, 
  "model": "student.student", 
  "fields": {
   "last_name": "Paul", 
   "last_updated": "2011-09-06 06:34:29", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " edner paul address ednerpaul gmail com permanent address memorial centre apt cambridge dorchester education massachusetts institute technology cambridge bachelor mathematics minor economics gpa june relevant courses finance theory differential equations linear algebra microeconomics advanced macroeconomics multivariable calculus professional mit confronting obstacles realizing excellence cambridge teaching assistant august august instructed incoming graders algebra helping ameliorating math skills helped management skills composure mit engineering cambridge program assistant august assisted administration development organization pilot engineering program scholars mentored counseled students professional development college admission mit mites minority introduction engineering cambridge teaching assistant residential counselor june july provided additional academic resources rising seniors excel multivariable calculus weekly hours recitations students strengthen skills learned classroom mentored students professional development instructed college admission charter public boston assistant coordinator july oversaw coordination academy incoming graders assisting principal tasks leadership development management leadership tomorrow mlt york career preparation fellow july selected nationwide pool candidates intensive career development program monthly assignments focusing analytical thinking action planning business communications participate quarterly seminars hosted professionals including firms goldman sachs mckinsey monitor deloitte consulting creative artists agency mmba mit minority business association cambridge vice president facilitate communication existing corporate partners liaison organization mit administration organizations mit campus manage operations oversaw membership committee mentoring program contact organizations schools events mit caribbean club cambridge president promote caribbean culture foster interactions students caribbean hosting pantonic orchestra york establishing relationship mit harvard university determined college haiti promote academic excellence collegiate partnership mit chocolate residence cambridge treasurer march maintain accurate records accounts monthly budgets ensure resident reimbursed expense related social academic development skills additional information mit varsity soccer national society engineers nsbe undergraduate association union computer using microsoft powerpoint excel publisher java programming languages french haitian creole interests soccer poetry education reform mentoring", 
   "looking_for": [
    2
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Edner", 
   "first_major": 25, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.000", 
   "campus_involvement": [
    62, 
    74, 
    248, 
    264
   ], 
   "languages": [
    3, 
    72
   ], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [
    32, 
    56, 
    21, 
    17, 
    22, 
    25, 
    12, 
    7, 
    18, 
    52, 
    26, 
    5
   ], 
   "website": "", 
   "second_major": 14, 
   "resume": "student/student/paul_edner_edner5@mit.edu_2011-09-03-05-34-41.pdf", 
   "user": 137, 
   "industries_of_interest": [
    37, 
    19, 
    27
   ], 
   "act": null, 
   "date_created": "2011-09-03 05:23:17"
  }
 }, 
 {
  "pk": 130, 
  "model": "student.student", 
  "fields": {
   "last_name": "Rudolph", 
   "last_updated": "2011-09-06 06:34:29", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": "", 
   "looking_for": [
    2
   ], 
   "countries_of_citizenship": [
    "DE"
   ], 
   "first_name": "Maja", 
   "first_major": 25, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.600", 
   "campus_involvement": [], 
   "languages": [
    3, 
    71, 
    75, 
    81, 
    127
   ], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/rudolph_maja_mariru@mit.edu_2011-09-03-18-53-01.pdf", 
   "user": 142, 
   "industries_of_interest": [
    37, 
    43, 
    34, 
    36, 
    40
   ], 
   "act": null, 
   "date_created": "2011-09-03 18:48:42"
  }
 }, 
 {
  "pk": 131, 
  "model": "student.student", 
  "fields": {
   "last_name": "Washington", 
   "last_updated": "2011-09-03 19:38:44", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": null, 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": null, 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Jazzmyne", 
   "first_major": null, 
   "subscriptions": [
    6
   ], 
   "gpa": null, 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": false, 
   "school_year": null, 
   "graduation_year": null, 
   "previous_employers": [], 
   "website": null, 
   "second_major": null, 
   "resume": "", 
   "user": 143, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-03 19:38:43"
  }
 }, 
 {
  "pk": 181, 
  "model": "student.student", 
  "fields": {
   "last_name": "Cheng", 
   "last_updated": "2011-09-06 10:48:09", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " catherine cheng address ccheng mit edu address memorial fields pond cove cambridge marietta education massachusetts institute technology cambridge candidate bachelor mathematics civil environmental engineering june relevant coursework multivariable calculus introduction computer engineering solving physics gpa george walton comprehensive marietta diploma honors massachusetts department environmental protection boston intern bureau waste prevention june aug worked boston serving liaison municipality leaders massdep headquarters gathered compiled database companies recycle target recycling residents municipalities completed studies composting programs distribution schools grossman cambridge research assistant jan created solar cells soldering wires silicon wafers encapsulating researched modeled photovoltaic structures maximize sunlight conversion created miniature model structure solar structure kumon learning marietta tutor assisted students graded packets worked kumon faculty members opening helped students advance higher math reading levels cambridge participant selected students participate academic program focused hands classes labs based projects classes electrical engineering computer programming python discrete math presented research project relationship chaos theory peers faculty members conservation association redwood national park national crew member conducted restoration projects crew project replacing bridge fixing nearby erosion problems volunteered total hours restored entire trail leadership activities kesem mit programming counselor committee sustainability vice kappa alpha theta sorority member consulting member baker dormitory executive recycling walton chamber society founder president treasurer asian american association freshman representative secretary atlanta symphony youth orchestra violist viola representative skills interests technology microsoft skills english taiwanese fluent mandarin conversational interests swimming awards national honors society national latin honors society national merit finalist national scholar international medusa mythology exam medal georgia certificate merit orchestra violist", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Catherine", 
   "first_major": 9, 
   "subscriptions": [
    6
   ], 
   "gpa": "5.000", 
   "campus_involvement": [
    32, 
    69, 
    153, 
    371
   ], 
   "languages": [
    47, 
    135
   ], 
   "profile_created": true, 
   "school_year": 2, 
   "graduation_year": 3, 
   "previous_employers": [], 
   "website": "", 
   "second_major": 25, 
   "resume": "student/student/cheng_catherine_ccheng14@mit.edu_2011-09-06-10-48-08.pdf", 
   "user": 194, 
   "industries_of_interest": [
    37, 
    38, 
    12
   ], 
   "act": null, 
   "date_created": "2011-09-06 10:43:42"
  }
 }, 
 {
  "pk": 165, 
  "model": "student.student", 
  "fields": {
   "last_name": "Gramling", 
   "last_updated": "2011-09-06 06:34:28", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": 2400, 
   "sat_v": 800, 
   "sat_w": 800, 
   "keywords": " memorial cambridge permanent twinedew columbia phone email gramling mit edu education university cambridge jesus college cambridge october june studying mechanical engineering microelectronics participant competitive cambridge mit exchange cme massachusetts institute technology cambridge september pursuing bachelor mechanical engineering concentration computer cumulative gpa revelant coursework thermal fluids engineering manufacturing mechanics materials intro electrical engineering computer applied mathematics probability random variables atholton columbia august gpa rank satii math research awards american geophysical union agu meeting presenter san francisco dec johns hopkins university applied physics laboratory laurel aug service award awarded exceptional messenger mission intern award autodesk inc waltham software engineering intern june sep developed based analysis pipeline autodesk civil software johns hopkins university applied physics laboratory laurel aug aug department technical intern temp employee june aug characterized anomalous behavior lemms electron sensing equipment due contamination developed algorithm software java detect data trends indicating anomaly data accordingly software added midl suite currently planned missions june aug worked within sis messenger mission currently mercury developed software java limb imaging mercury software added scibox suite widespread nasa sponsored projects aug intern accepted into informatics systems sis department routine implement fourier modeling chebyshev transforms spectral modeling thienel llc columbia legal administrative assistant june aug developed client database helped convert paperless operation responsible organizational operations firm solely uses protempus client database howard community college columbia math department math lab aide aug tutored adults mathematics courses extracurriculars leadership mit ncaa varsity crew varsity rower aug hours rowed varsity mit lightweight princeton mit kesem daily programming committee member counselor jan volunteered counselor residential program cancer patients planned executed hours programming ages mit komaza international development magazine writer editor aug edit articles international development magazine secured funding bimonthly publication expanded distribution beyond mit additional skills computer fluent python java fortran significant solidworks expert eclipse ide visualstudio microsoft conversant french hannah gramling", 
   "looking_for": [
    2
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Hannah", 
   "first_major": 26, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.600", 
   "campus_involvement": [
    474, 
    69, 
    212, 
    330, 
    473
   ], 
   "languages": [
    3, 
    31, 
    71
   ], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/gramling_hannah_gramling@mit.edu_2011-09-05-14-30-41.pdf", 
   "user": 177, 
   "industries_of_interest": [
    1, 
    37, 
    38, 
    13, 
    17, 
    25, 
    29, 
    30
   ], 
   "act": null, 
   "date_created": "2011-09-05 14:21:14"
  }
 }, 
 {
  "pk": 132, 
  "model": "student.student", 
  "fields": {
   "last_name": "Sheikh", 
   "last_updated": "2011-09-04 11:51:54", 
   "sat_m": 770, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": 2240, 
   "sat_v": 720, 
   "sat_w": 750, 
   "keywords": "", 
   "looking_for": [
    2, 
    4
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Hamza", 
   "first_major": 8, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.000", 
   "campus_involvement": [
    17, 
    40, 
    194, 
    236, 
    324, 
    403
   ], 
   "languages": [], 
   "profile_created": false, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [
    32, 
    17, 
    18, 
    57, 
    8, 
    62
   ], 
   "website": "", 
   "second_major": 5, 
   "resume": "student/student/sheikh_hamza_hsheikh@mit.edu_2011-09-04-11-51-53.pdf", 
   "user": 144, 
   "industries_of_interest": [
    37, 
    38
   ], 
   "act": null, 
   "date_created": "2011-09-04 11:41:06"
  }
 }, 
 {
  "pk": 133, 
  "model": "student.student", 
  "fields": {
   "last_name": "Thakkar", 
   "last_updated": "2011-09-06 06:59:50", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " anjali thakkar athakkar mit edu address address memorial kuykendall cambridge san jose education massachusetts institute technology cambridge candidate bachelor materials engineering biology june gpa san jose university advanced standing courses san jose august relevant courses ordinary differential equations multivariable calculus gpa presentation san jose august rank summa cum laude gpa honors achievements harry truman scholar california amgen scholar burchard scholar leaders service award induction national society collegiate scholars mit public service fellow santa clara outstanding senior mathematics award society engineers swe scv scholarship excellence barbara tindle memorial prize medicine ganon foundation scholarship engineering intel promising scientist research grant america mathematics excellence award synopsys talent award winner relevant skills computer microsoft java programming stata data analysis software languages english spanish gujarati amgen scholars program mit scholar researcher continued research project developing vitro culture platform liver regeneration research bhatia lab presented research findings mit poster session faculty peers non audience laboratory multi regenerative technologies mit october undergraduate researcher research focuses understanding liver micro environments studying cellular environments growth proliferation liver cells devising robust culture platform liver maintenance research amgen scholars program burchard scholars program mit february scholar attend monthly enrichment seminars various topics humanities social sciences network peers interests humanities areas arts literature writing etc america weeks america challenge oakland california january challenge participant oakland international oihs worked needs students english arithmetic skills devised robust volunteer management volunteer training progress tracking conducted data analysis california exit exam rates gender origin etc presented regional mit public service fellowship guanajuato mexico june project manager entrepreneurial spirit originally developed mumbai india january below adapted entrepreneurial spirit program valtierra rural community guanajuato translated spanish adapted lesson manual presentation slides students sustainable businesses income source implemented program valtierra guanajuato mexico students teens adults adults mit public service fellowship mumbai india january project manager entrepreneurial spirit created developed mentorship program called entrepreneurial spirit underprivileged students concepts entrepreneurship hands workshops running maintaining business lesson students sustainable businesses income source implemented program klm vidyadham girls hostel india mentors students research robert langer laboratory mit january undergraduate researcher conduct experiments optimize nanoparticle encapsulation drug delivery cancer cells research focuses prostate cancer mechanisms nanoparticle functionalization targeted drug delivery emphasis hemolytic assays unpegylated nanoparticles research brigham hospital joint program langer lab boston undergraduate researcher conducted hemolytic studies assess immuno compatibility properties nanoparticles presence erythrocytes author review comparing various hybrid nanoparticle designs bio applications published frontiers bioscience mentorship associate thoracic surgery brigham hospital boston shadow mentee shadowed raphael bueno associate thoracic surgery scrubbed into operating weekly basis surgeries ucsf health professions san francisco january researcher researched potential causes nurse educator shortage research grant proposal performed statistical analysis using stata software official reports assessing effectiveness medical technology cosmos california mathematics davis july biotechnology researcher conducted laboratory experiments bioengineering learned important lab techniques independently devised protocol artificial hemoglobin based carrier using coli bacteria abhinaya san jose august teacher indian classical bharatanatyam taught students ranging intermediate advanced developing patience critical detail honed communication skills teacher relationships leadership service mit kesem counselor innoworks mentor recruitment director council secretary global poverty initiative outreach officer mit natya indian classical choreographer treasurer president asian american students culture volunteer brigham hospital interests activities bharatanatyam indian classical choreography hindustani indian classical vocal piano literature public service international global medical health development", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Anjali", 
   "first_major": 5, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.900", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/thakkar_anjali_athakkar@mit.edu_2011-09-04-13-40-28.pdf", 
   "user": 145, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-04 13:38:13"
  }
 }, 
 {
  "pk": 134, 
  "model": "student.student", 
  "fields": {
   "last_name": "Overlin", 
   "last_updated": "2011-09-06 06:59:50", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " matthewr overlin amesstbox moverlin mit educambridge objectivetoobtainworkintheareaofsolidstatedevicesandelectronic electromagneticsystemseducation massachusettsinstituteoftechnology cambridge macumulativegpa inelectricalengineeringminorinphysicsexpectedgraduation june colfax mingohighschool colfax iacumulativegpa relevantcourseworkcircuitsandelectronics signalsandsystems appliedelectromagnetism entialequations probabilityandrandomvariables vibrationsandwaves quantumphysics introductiontocommunication andsignalprocessing introduc tiontoelectricalengineeringandcomputerscienceskills electroniccircuitdesign anddesign soldering someexperiencewithmicro controllerinterfacing programminglanguages python java matlab someexperiencewithpro grammingwithassemblyworkexperience uropstudentworker luisfernandovelasquez garcmicrosystemstech nologylaboratories mtl cambridge june investigatedelectrosprayandhowadjustingparameterselectro sprayimprints uropstudentworker prof abrahambersresearchlaboratoryelectronics rle cambridge february investigatedfusionenergygenerationandthepropertiesofelectrodynamicsinplasmas uropstudentworker prof stevenleebmitlaboratoryofelectromagneticandelectronicsystems lees cambridge january investigatedtheez chronoswatchdevelopmentkitasawayofunderstandinginformationfromnon intrusiveloadmonitoringwaveformsofvariouselectronicdevices grader mitphysicsdept cambridge gradedproblemsetsfor vibrationsandwaves aphysicscourserequiredofallphysicsmajorsatmit ridesintern adventureland altoona june august operatedamusementparkridesandoccassionallyaidedwiththemaintenanceofrides crewmember mcdonald colfax june august preparedfoodandcleanedthekitchenarea campcounselor campmitigwa woodward june august taughtclassesoncampingandwoodworkinginterests activitiesappliedelectromagnetism inmodernelectronicmaterials powerelec tronicsystems systemsengineering memsdesign micro controllers devicefabrica tion camping biking badmintonotherawards honors eaglescout lockheedmartinuropscholar", 
   "looking_for": [
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Matthew", 
   "first_major": 16, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.500", 
   "campus_involvement": [], 
   "languages": [
    3, 
    127
   ], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [
    15
   ], 
   "website": "", 
   "second_major": 31, 
   "resume": "student/student/overlin_matthew_moverlin@mit.edu_2011-09-04-13-43-32.pdf", 
   "user": 146, 
   "industries_of_interest": [
    2, 
    3, 
    12, 
    13
   ], 
   "act": null, 
   "date_created": "2011-09-04 13:39:06"
  }
 }, 
 {
  "pk": 135, 
  "model": "student.student", 
  "fields": {
   "last_name": "Habib", 
   "last_updated": "2011-09-06 06:58:14", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": "", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Manal", 
   "first_major": 1, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.400", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/habib_manal_mitko@mit.edu_2011-09-04-16-44-10.pdf", 
   "user": 147, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-04 13:47:12"
  }
 }, 
 {
  "pk": 138, 
  "model": "student.student", 
  "fields": {
   "last_name": "Smith", 
   "last_updated": "2011-09-06 06:58:14", 
   "sat_m": 760, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": 2260, 
   "sat_v": 780, 
   "sat_w": 720, 
   "keywords": " educationmassachusetts institute technology expected graduation physics gpa includes advanced physics laboratory exposure classroom research settings graduate computer coursework whitney chicago graduated graduated ranked university illinois chicago advanced computer classes college credit including database compiler computer architecture hardware software interface computer architecture iiiexperienceaccenture boston consulting analyst infrastructure security offerings development designed implemented improvements ons existing enterprise security software future patent managed developers development additional security offerings inc cupertino software engineering intern ios sync services designed optimized implemented text email messages ios devices code objective using cocoa code released ios inc cupertino software engineering intern mac release developed internal web netboot remote machines into preinstalled app triaged binary compatibility bugs using regression testing massachusetts institute technology cambridge undergraduate research assistant computer professor martin rinard using pin memory usage program based input characteristics predict memory needed priori adler planetarium astronomy museum chicago paid intern visualization laboratory created delivered presentations museum guests focusing lunar reconnaissance orbiter future lunar exploration directed projects based visitor interactions ideas improving layout content labadler planetarium astronomy museum chicago museum services staff guest services provided information guests including information exhibits directions solving guest issues performed security procedures including watching pockets opening closing procedures skillspro cient python java objective javascript phpexperience sql pin mips assembly html cssexperience laboratory hardware software tools intended physics astronomywriting code samples available http web mit edu joans wwwawards activitiespresident undergraduate physics elected orloff award winner service physics departmentorganized conference undergraduate physics january attendees speakersmit german kitchen stewardjoan smith broadway cambridge joans mit edu", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Joan", 
   "first_major": 31, 
   "subscriptions": [
    12, 
    11, 
    6
   ], 
   "gpa": "4.300", 
   "campus_involvement": [
    342, 
    409
   ], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [
    19, 
    33, 
    15
   ], 
   "website": "http://web.mit.edu/joans/www/", 
   "second_major": 12, 
   "resume": "student/student/smith_joan_joans@mit.edu_2011-09-04-17-03-02.pdf", 
   "user": 150, 
   "industries_of_interest": [
    37, 
    38, 
    13, 
    20, 
    43, 
    36, 
    40
   ], 
   "act": 35, 
   "date_created": "2011-09-04 16:58:47"
  }
 }, 
 {
  "pk": 136, 
  "model": "student.student", 
  "fields": {
   "last_name": "Cai", 
   "last_updated": "2011-09-04 14:05:34", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": null, 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": null, 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Anne", 
   "first_major": 32, 
   "subscriptions": [
    6
   ], 
   "gpa": null, 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": false, 
   "school_year": null, 
   "graduation_year": null, 
   "previous_employers": [], 
   "website": null, 
   "second_major": null, 
   "resume": "", 
   "user": 148, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-04 14:05:34"
  }
 }, 
 {
  "pk": 137, 
  "model": "student.student", 
  "fields": {
   "last_name": "Kaler", 
   "last_updated": "2011-09-04 15:58:13", 
   "sat_m": 200, 
   "graduation_month": "0", 
   "older_than_21": "Y", 
   "sat_t": 1200, 
   "sat_v": 200, 
   "sat_w": 800, 
   "keywords": " algorithmsintroduction tothird editionthomas charles ronald cliffordsteinrivest leisersoncormen introductiontoalgorithmsthirdedition thomash cormencharlese leiserson ronaldl rivest cliffordsteinintroductiontoalgorithmsthirdeditionthemitpresscambridge massachusettslondon england massachusettsinstituteoftechnologyallrightsreserved nopartofthisbookmaybereproducedinanyformorbyanyelectronicormechanicalmeans includingphotocopying recording orinformationstorageandretrieval withoutpermissioninwritingfromthepublisher forinformationaboutspecialquantitydiscounts pleaseemailspecialsales mitpress mit edu thisbookwassetintimesromanandmathtimepro bytheauthors printedandboundintheunitedstatesofamerica libraryofcongresscataloging publicationdata introductiontoalgorithms thomash cormen etal rded includesbibliographicalreferencesandindex isbn hardcover alk isbn pbk alk computerprogramming computeralgorithms cormen thomash contentsprefacexiiiifoundationsintroduction theroleofalgorithmsincomputing algorithms algorithmsasatechnology gettingstarted insertionsort analyzingalgorithms designingalgorithms growthoffunctions asymptoticnotation standardnotationsandcommonfunctions conquer themaximum subarrayproblem strassen salgorithmformatrixmultiplication thesubstitutionmethodforsolvingrecurrences therecursion treemethodforsolvingrecurrences themastermethodforsolvingrecurrences proofofthemastertheorem probabilisticanalysisandrandomizedalgorithms thehiringproblem indicatorrandomvariables randomizedalgorithms probabilisticanalysisandfurtherusesofindicatorrandomvariables vicontentsiisortingandorderstatisticsintroduction heapsort heaps maintainingtheheapproperty buildingaheap theheapsortalgorithm priorityqueues quicksort descriptionofquicksort performanceofquicksort arandomizedversionofquicksort analysisofquicksort sortinginlineartime lowerboundsforsorting countingsort radixsort bucketsort mediansandorderstatistics minimumandmaximum selectioninexpectedlineartime selectioninworst caselineartime iiidatastructuresintroduction elementarydatastructures stacksandqueues linkedlists implementingpointersandobjects representingrootedtrees hashtables addresstables hashtables hashfunctions openaddressing perfecthashing contentsvii binarysearchtrees whatisabinarysearchtree queryingabinarysearchtree insertionanddeletion randomlybuiltbinarysearchtrees blacktrees propertiesofred blacktrees rotations insertion deletion augmentingdatastructures dynamicorderstatistics howtoaugmentadatastructure intervaltrees ivadvanceddesignandanalysistechniquesintroduction dynamicprogramming rodcutting matrix chainmultiplication elementsofdynamicprogramming longestcommonsubsequence optimalbinarysearchtrees greedyalgorithms anactivity selectionproblem elementsofthegreedystrategy huffmancodes matroidsandgreedymethods atask schedulingproblemasamatroid amortizedanalysis aggregateanalysis theaccountingmethod thepotentialmethod dynamictables viiicontentsvadvanceddatastructuresintroduction trees nitionofb trees basicoperationsonb trees deletingakeyfromab fibonacciheaps structureoffibonacciheaps mergeable heapoperations decreasingakeyanddeletinganode boundingthemaximumdegree vanemdeboastrees preliminaryapproaches arecursivestructure thevanemdeboastree datastructuresfordisjointsets disjoint setoperations linked listrepresentationofdisjointsets disjoint setforests analysisofunionbyrankwithpathcompression vigraphalgorithmsintroduction elementarygraphalgorithms representationsofgraphs breadth rstsearch depth rstsearch topologicalsort stronglyconnectedcomponents minimumspanningtrees growingaminimumspanningtree thealgorithmsofkruskalandprim contentsix sourceshortestpaths thebellman fordalgorithm sourceshortestpathsindirectedacyclicgraphs dijkstra salgorithm differenceconstraintsandshortestpaths proofsofshortest pathsproperties pairsshortestpaths shortestpathsandmatrixmultiplication thefloyd warshallalgorithm johnson salgorithmforsparsegraphs maximumflow flownetworks theford fulkersonmethod maximumbipartitematching relabelalgorithms therelabel frontalgorithm viiselectedtopicsintroduction multithreadedalgorithms thebasicsofdynamicmultithreading multithreadedmatrixmultiplication multithreadedmergesort matrixoperations solvingsystemsoflinearequations invertingmatrices symmetricpositive nitematricesandleast squaresapproximation linearprogramming standardandslackforms formulatingproblemsaslinearprograms thesimplexalgorithm duality theinitialbasicfeasiblesolution xcontents polynomialsandthefft representingpolynomials thedftandfft cientfftimplementations theoreticalgorithms elementarynumber theoreticnotions greatestcommondivisor modulararithmetic solvingmodularlinearequations thechineseremaindertheorem powersofanelement thersapublic keycryptosystem primalitytesting integerfactorization stringmatching thenaivestring matchingalgorithm therabin karpalgorithm stringmatchingwith niteautomata theknuth morris prattalgorithm computationalgeometry segmentproperties determiningwhetheranypairofsegmentsintersects findingtheconvexhull findingtheclosestpairofpoints completeness polynomialtime polynomial timeveri cation completenessandreducibility completenessproofs completeproblems approximationalgorithms thevertex coverproblem thetraveling salesmanproblem theset coveringproblem randomizationandlinearprogramming thesubset sumproblem contentsxiviiiappendix mathematicalbackgroundintroduction asummations summationformulasandproperties boundingsummations bsets etc sets relations functions graphs trees ccountingandprobability counting probability discreterandomvariables thegeometricandbinomialdistributions thetailsofthebinomialdistribution dmatrices matricesandmatrixoperations basicmatrixproperties bibliography index prefacebeforetherewerecomputers therewerealgorithms butnowthattherearecom puters thereareevenmorealgorithms andalgorithmslieattheheartofcomputing thisbookprovidesacomprehensiveintroductiontothemodernstudyofcom puteralgorithms itpresentsmanyalgorithmsandcoverstheminconsiderable depth yetmakestheirdesignandanalysisaccessibletoalllevelsofreaders havetriedtokeepexplanationselementarywithoutsacri cingdepthofcoverage ormathematicalrigor eachchapterpresentsanalgorithm adesigntechnique anapplicationarea orarelatedtopic algorithmsaredescribedinenglishandinapseudocodedesignedtobereadablebyanyonewhohasdonealittleprogramming thebookcontains gures manywithmultipleparts illustratinghowthealgorithmswork sinceweemphasizeef ciencyasadesigncriterion weincludecarefulanalysesoftherunningtimesofallouralgorithms thetextisintendedprimarilyforuseinundergraduateorgraduatecoursesinalgorithmsordatastructures becauseitdiscussesengineeringissuesinalgorithmdesign aswellasmathematicalaspects itisequallywellsuitedforself studyby technicalprofessionals inthis thethirdedition wehaveonceagainupdatedtheentirebook thechangescoverabroadspectrum includingnewchapters revisedpseudocode amoreactivewritingstyle totheteacherwehavedesignedthisbooktobebothversatileandcomplete youshould nditusefulforavarietyofcourses fromanundergraduatecourseindatastructuresup throughagraduatecourseinalgorithms becausewehaveprovidedconsiderably morematerialthancan tinatypicalone termcourse youcanconsiderthisbook tobea buffet smorgasbord fromwhichyoucanpickandchoosethematerial thatbestsupportsthecourseyouwishtoteach xivprefaceyoushould nditeasytoorganizeyourcoursearoundjustthechaptersyouneed wehavemadechaptersrelativelyself contained sothatyouneednotworry aboutanunexpectedandunnecessarydependenceofonechapteronanother chapterpresentstheeasiermaterial rstandthemoredif cultmateriallater sectionboundariesmarkingnaturalstoppingpoints inanundergraduatecourse youmightuseonlytheearliersectionsfromachapter inagraduatecourse mightcovertheentirechapter wehaveincluded exercisesand problems eachsectionendswithexer cises andeachchapterendswithproblems theexercisesaregenerallyshortques tionsthattestbasicmasteryofthematerial somearesimpleself checkthought exercises whereasothersaremoresubstantialandaresuitableasassignedhome theproblemsaremoreelaboratecasestudiesthatoftenintroducenewma terial theyoftenconsistofseveralquestionsthatleadthestudentthroughthesteps requiredtoarriveatasolution departingfromourpracticeinpreviouseditionsofthisbook wehavemadepubliclyavailablesolutionstosome butbynomeansall oftheproblemsandex ercises ourwebsite http mitpress mit edu algorithms linkstothesesolutions youwillwanttocheckthissitetomakesurethatitdoesnotcontainthesolutiontoanexerciseorproblemthatyouplantoassign weexpectthesetofsolutionsthat weposttogrowslowlyovertime soyouwillneedtocheckiteachtimeyouteach thecourse wehavestarred thesectionsandexercisesthataremoresuitableforgraduatestudentsthanforundergraduates astarredsectionisnotnecessarilymoredif cultthananunstarredone butitmayrequireanunderstandingofmoreadvanced mathematics likewise starredexercisesmayrequireanadvancedbackgroundor morethanaveragecreativity tothestudentwehopethatthistextbookprovidesyouwithanenjoyableintroductiontothe eldofalgorithms wehaveattemptedtomakeeveryalgorithmaccessibleand interesting tohelpyouwhenyouencounterunfamiliarordif cultalgorithms describeeachoneinastep stepmanner wealsoprovidecarefulexplanations ofthemathematicsneededtounderstandtheanalysisofthealgorithms ifyou alreadyhavesomefamiliaritywithatopic youwill ndthechaptersorganizedso thatyoucanskimintroductorysectionsandproceedquicklytothemoreadvanced thisisalargebook andyourclasswillprobablycoveronlyaportionofitsmaterial wehavetried however tomakethisabookthatwillbeusefultoyou nowasacoursetextbookandalsolaterinyourcareerasamathematicaldesk referenceoranengineeringhandbook prefacexvwhataretheprerequisitesforreadingthisbook youshouldhavesomeprogrammingexperience inparticular youshouldun derstandrecursiveproceduresandsimpledatastructuressuchasarraysand linkedlists youshouldhavesomefacilitywithmathematicalproofs andespeciallyproofs bymathematicalinduction afewportionsofthebookrelyonsomeknowledge ofelementarycalculus beyondthat partsiandviiiofthisbookteachyouall themathematicaltechniquesyouwillneed wehaveheard loudandclear thecalltosupplysolutionstoproblemsandexercises ourwebsite http mitpress mit edu algorithms linkstosolutionsfor afewoftheproblemsandexercises feelfreetocheckyoursolutionsagainstours weask however thatyoudonotsendyoursolutionstous totheprofessionalthewiderangeoftopicsinthisbookmakesitanexcellenthandbookonalgo rithms becauseeachchapterisrelativelyself contained youcanfocusinonthe topicsthatmostinterestyou mostofthealgorithmswediscusshavegreatpracticalutility wethereforeaddressimplementationconcernsandotherengineeringissues weoftenprovidepracticalalternativestothefewalgorithmsthatareprimarilyoftheoreticalinterest ifyouwishtoimplementanyofthealgorithms youshould ndthetransla tionofourpseudocodeintoyourfavoriteprogramminglanguagetobeafairly straightforwardtask wehavedesignedthepseudocodetopresenteachalgorithm clearlyandsuccinctly consequently wedonotaddresserror handlingandother software engineeringissuesthatrequirespeci cassumptionsaboutyourprogram mingenvironment weattempttopresenteachalgorithmsimplyanddirectlywith outallowingtheidiosyncrasiesofaparticularprogramminglanguagetoobscure itsessence weunderstandthatifyouareusingthisbookoutsideofacourse thenyoumightbeunabletocheckyoursolutionstoproblemsandexercisesagainstsolutions providedbyaninstructor ourwebsite http mitpress mit edu algorithms links tosolutionsforsomeoftheproblemsandexercisessothatyoucancheckyour pleasedonotsendyoursolutionstous toourcolleagueswehavesuppliedanextensivebibliographyandpointerstothecurrentliterature eachchapterendswithasetofchapternotesthatgivehistoricaldetailsandref erences thechapternotesdonotprovideacompletereferencetothewhole eld xviprefaceofalgorithms however thoughitmaybehardtobelieveforabookofthissize spaceconstraintspreventedusfromincludingmanyinterestingalgorithms despitemyriadrequestsfromstudentsforsolutionstoproblemsandexercises wehavechosenasamatterofpolicynottosupplyreferencesforproblemsand exercises toremovethetemptationforstudentstolookupasolutionratherthanto nditthemselves changesforthethirdeditionwhathaschangedbetweenthesecondandthirdeditionsofthisbook themag nitudeofthechangesisonaparwiththechangesbetweenthe rstandsecond editions aswesaidaboutthesecond editionchanges dependingonhowyou lookatit thebookchangedeithernotmuchorquiteabit aquicklookatthetableofcontentsshowsthatmostofthesecond editionchap tersandsectionsappearinthethirdedition weremovedtwochaptersandone butwehaveaddedthreenewchaptersandtwonewsectionsapartfrom thesenewchapters wekeptthehybridorganizationfromthe rsttwoeditions ratherthanorganiz ingchaptersbyonlyproblemdomainsoraccordingonlytotechniques thisbookhaselementsofboth itcontainstechnique basedchaptersondivide conquer dynamicprogramming greedyalgorithms amortizedanalysis completeness andapproximationalgorithms butitalsohasentirepartsonsorting ondatastructuresfordynamicsets andonalgorithmsforgraphproblems ndthat althoughyouneedtoknowhowtoapplytechniquesfordesigningandanalyzingal gorithms problemsseldomannouncetoyouwhichtechniquesaremostamenable tosolvingthem hereisasummaryofthemostsigni cantchangesforthethirdedition weaddednewchaptersonvanemdeboastreesandmultithreadedalgorithms andwehavebrokenoutmaterialonmatrixbasicsintoitsownappendixchapter werevisedthechapteronrecurrencestomorebroadlycoverthedivide conquertechnique andits rsttwosectionsapplydivide conquertosolve twoproblems thesecondsectionofthischapterpresentsstrassen salgorithm formatrixmultiplication whichwehavemovedfromthechapteronmatrix operations weremovedtwochaptersthatwererarelytaught binomialheapsandsorting networks onekeyideainthesortingnetworkschapter principle pearsinthiseditionwithinproblem asthe sortinglemmaforcompare exchangealgorithms thetreatmentoffibonacciheapsnolongerrelieson binomialheapsasaprecursor prefacexviiwerevisedourtreatmentofdynamicprogrammingandgreedyalgorithms namicprogrammingnowleadsoffwithamoreinterestingproblem rodcutting thantheassembly lineschedulingproblemfromthesecondedition further weemphasizememoizationabitmorethanwedidinthesecondedition andweintroducethenotionofthesubproblemgraphasawaytounderstand therunningtimeofadynamic programmingalgorithm inouropeningexam pleofgreedyalgorithms theactivity selectionproblem wegettothegreedy algorithmmoredirectlythanwedidinthesecondedition thewaywedeleteanodefrombinarysearchtrees whichincludesred trees nowguaranteesthatthenoderequestedfordeletionisthenodethatis actuallydeleted inthe rsttwoeditions incertaincases someothernode wouldbedeleted withitscontentsmovingintothenodepassedtothedeletion procedure withournewwaytodeletenodes ifothercomponentsofaprogram maintainpointerstonodesinthetree theywillnotmistakenlyendupwithstale pointerstonodesthathavebeendeleted thematerialon ownetworksnowbases owsentirelyonedges thisap proachismoreintuitivethanthenet owusedinthe rsttwoeditions withthematerialonmatrixbasicsandstrassen salgorithmmovedtoother chapters thechapteronmatrixoperationsissmallerthaninthesecondedition wehavemodi edourtreatmentoftheknuth morris prattstring matchingal gorithm wecorrectedseveralerrors mostoftheseerrorswerepostedonourwebsite ofsecond editionerrata butafewwerenot basedonmanyrequests wechangedthesyntax asitwere ofourpseudocode wenowuse toindicateassignmentand totestforequality justasc java andpythondo likewise wehaveeliminatedthekeywordsdoandthenandadopted asourcomment linesymbol wealsonowusedot notationtoindicateobjectattributes ourpseudocoderemainsprocedural ratherthanobject oriented inotherwords ratherthanrunningmethodson objects wesimplycallprocedures passingobjectsasparameters weadded newexercisesand newproblems wealsoupdatedmany bibliographyentriesandaddedseveralnewones finally wewentthroughtheentirebookandrewrotesentences paragraphs andsectionstomakethewritingclearerandmoreactive xviiiprefacewebsiteyoucanuseourwebsite http mitpress mit edu algorithms toobtainsupple mentaryinformationandtocommunicatewithus thewebsitelinkstoalistof knownerrors solutionstoselectedexercisesandproblems ofcourse alist explainingthecornyprofessorjokes aswellasothercontentthatwemightadd thewebsitealsotellsyouhowtoreporterrorsormakesuggestions howweproducedthisbooklikethesecondedition thethirdeditionwasproducedinlatex weusedthetimesfontwithmathematicstypesetusingthemathtimepro fonts wethank michaelspivakfrompublishorperish inc lancecarnesfrompersonaltex inc andtimtregubovfromdartmouthcollegefortechnicalsupport asinthe previoustwoeditions wecompiledtheindexusingwindex acprogramthatwe andthebibliographywasproducedwithbibtex thepdf lesforthisbookwerecreatedonamacbookrunningos wedrewtheillustrationsforthethirdeditionusingmacdrawpro withsomeofthemathematicalexpressionsinillustrationslaidinwiththepsfragpackage forlatex unfortunately macdrawproislegacysoftware havingnotbeenmarketedforoveradecadenow happily westillhaveacoupleofmacintoshesthatcanruntheclassicenvironmentunderos andhencetheycanrunmac drawpro mostly evenundertheclassicenvironment ndmacdrawproto befareasiertousethananyotherdrawingsoftwareforthetypesofillustrations thataccompanycomputer sciencetext anditproducesbeautifuloutput whoknowshowlongourpre intelmacswillcontinuetorun soifanyonefromappleislistening pleasecreateanosx compatibleversionofmacdrawpro acknowledgmentsforthethirdeditionwehavebeenworkingwiththemitpressforovertwodecadesnow andwhataterri crelationshipithasbeen wethankellenfaran bobprior adabrunstein andmaryreillyfortheirhelpandsupport weweregeographicallydistributedwhileproducingthethirdedition workinginthedartmouthcollegedepartmentofcomputerscience themitcomputer weinvestigatedseveraldrawingprogramsthatrunundermacosx butallhadsigni cantshort comingscomparedwithmacdrawpro webrie yattemptedtoproducetheillustrationsforthis bookwithadifferent wellknowndrawingprogram wefoundthatittookatleast vetimesaslongtoproduceeachillustrationasittookwithmacdrawpro andtheresultingillustrationsdidnotlookasgood hencethedecisiontoreverttomacdrawprorunningonoldermacintoshes prefacexixscienceandarti cialintelligencelaboratory andthecolumbiauniversityde partmentofindustrialengineeringandoperationsresearch wethankourre spectiveuniversitiesandcolleaguesforprovidingsuchsupportiveandstimulating environments juliesussman onceagainbailedusoutasthetechnicalcopyeditor timeandagain wewereamazedattheerrorsthateludedus butthatjuliecaught alsohelpedusimproveourpresentationinseveralplaces ifthereisahalloffame fortechnicalcopyeditors julieisasure rst ballotinductee sheisnothingshortofphenomenal thankyou thankyou thankyou julie priyanatarajanalsofoundsomeerrorsthatwewereabletocorrectbeforethisbookwenttopress errorsthatremain andundoubtedly somedo aretheresponsibilityoftheauthors andprobablywereinsertedafterjuliereadthematerial thetreatmentforvanemdeboastreesderivesfromerikdemaine snotes whichwereinturnin uencedbymichaelbender wealsoincorporatedideas fromjavedaslam bradleykuszmaul andhuizhaintothisedition thechapteronmultithreadingwasbasedonnotesoriginallywrittenjointlywithharaldprokop thematerialwasin uencedbyseveralothersworkingonthecilkprojectatmit includingbradleykuszmaulandmatteofrigo thedesignofthemultithreadedpseudocodetookitsinspirationfromthemitcilkextensionstoc andbycilkarts scilk extensionstoc wealsothankthemanyreadersofthe rstandsecondeditionswhoreportederrorsorsubmittedsuggestionsforhowtoimprovethisbook wecorrectedallthebona deerrorsthatwerereported andweincorporatedasmanysuggestionsaswecould werejoicethatthenumberofsuchcontributorshasgrownsogreatthat wemustregretthatithasbecomeimpracticaltolistthemall finally wethankourwives nicolecormen wendyleiserson gailrivest andrebeccaivry andourchildren ricky debby andkatieleiserson alexandchristopherrivest andmolly noah andbenjaminstein fortheirlove andsupportwhilewepreparedthisbook thepatienceandencouragementofour familiesmadethisprojectpossible weaffectionatelydedicatethisbooktothem thomash cormenlebanon newhampshirecharlese leisersoncambridge massachusettsronaldl rivestcambridge massachusettscliffordsteinnewyork newyorkfebruary introductiontoalgorithmsthirdedition ifoundations introductionthispartwillstartyouthinkingaboutdesigningandanalyzingalgorithms itisintendedtobeagentleintroductiontohowwespecifyalgorithms someofthe designstrategieswewillusethroughoutthisbook andmanyofthefundamental ideasusedinalgorithmanalysis laterpartsofthisbookwillbuilduponthisbase chapter providesanoverviewofalgorithmsandtheirplaceinmoderncom putingsystems thischapterde neswhatanalgorithmisandlistssomeexamples italsomakesacasethatweshouldconsideralgorithmsasatechnology along sidetechnologiessuchasfasthardware graphicaluserinterfaces oriented systems andnetworks inchapter weseeour rstalgorithms whichsolvetheproblemofsortingasequenceofnnumbers theyarewritteninapseudocodewhich althoughnotdirectlytranslatabletoanyconventionalprogramminglanguage conveysthestruc tureofthealgorithmclearlyenoughthatyoushouldbeabletoimplementitinthelanguageofyourchoice thesortingalgorithmsweexamineareinsertionsort whichusesanincrementalapproach andmergesort whichusesarecursivetech niqueknownas conquer althoughthetimeeachrequiresincreaseswiththevalueofn therateofincreasediffersbetweenthetwoalgorithms wedeterminetheserunningtimesinchapter andwedevelopausefulnotationto expressthem chapter preciselyde nesthisnotation whichwecallasymptoticnotation itstartsbyde ningseveralasymptoticnotations whichweuseforboundingalgo rithmrunningtimesfromaboveand orbelow therestofchapter isprimarily apresentationofmathematicalnotation moretoensurethatyouruseofnotation matchesthatinthisbookthantoteachyounewmathematicalconcepts partifoundationschapter delvesfurtherintothedivide conquermethodintroducedinchapter itprovidesadditionalexamplesofdivide conqueralgorithms cludingstrassen ssurprisingmethodformultiplyingtwosquarematrices chap ter containsmethodsforsolvingrecurrences whichareusefulfordescribing therunningtimesofrecursivealgorithms onepowerfultechniqueisthe mas termethod whichweoftenusetosolverecurrencesthatarisefromdivide conqueralgorithms althoughmuchofchapter isdevotedtoprovingthecor rectnessofthemastermethod youmayskipthisproofyetstillemploythemastermethod chapter introducesprobabilisticanalysisandrandomizedalgorithms wetyp icallyuseprobabilisticanalysistodeterminetherunningtimeofanalgorithmin casesinwhich duetothepresenceofaninherentprobabilitydistribution runningtimemaydifferondifferentinputsofthesamesize insomecases assumethattheinputsconformtoaknownprobabilitydistribution sothatweare averagingtherunningtimeoverallpossibleinputs inothercases theprobability distributioncomesnotfromtheinputsbutfromrandomchoicesmadeduringthe courseofthealgorithm analgorithmwhosebehaviorisdeterminednotonlybyits inputbutbythevaluesproducedbyarandom numbergeneratorisarandomized algorithm wecanuserandomizedalgorithmstoenforceaprobabilitydistribution ontheinputs therebyensuringthatnoparticularinputalwayscausespoorperfor mance oreventoboundtheerrorrateofalgorithmsthatareallowedtoproduce incorrectresultsonalimitedbasis appendicesa dcontainothermathematicalmaterialthatyouwill ndhelpfulasyoureadthisbook youarelikelytohaveseenmuchofthematerialinthe appendixchaptersbeforehavingreadthisbook althoughthespeci cde nitions andnotationalconventionsweusemaydifferinsomecasesfromwhatyouhave seeninthepast andsoyoushouldthinkoftheappendicesasreferencematerial ontheotherhand youprobablyhavenotalreadyseenmostofthematerialin parti allthechaptersinpartiandtheappendicesarewrittenwithatutorial avor theroleofalgorithmsincomputingwhatarealgorithms whyisthestudyofalgorithmsworthwhile whatistheroleofalgorithmsrelativetoothertechnologiesusedincomputers inthischapter willanswerthesequestions algorithmsinformally analgorithmisanywell nedcomputationalprocedurethattakessomevalue orsetofvalues asinputandproducessomevalue orsetofvalues asoutput analgorithmisthusasequenceofcomputationalstepsthattransformtheinputintotheoutput wecanalsoviewanalgorithmasatoolforsolvingawell speci edcomputa tionalproblem thestatementoftheproblemspeci esingeneraltermsthedesiredinput outputrelationship thealgorithmdescribesaspeci ccomputationalproce dureforachievingthatinput outputrelationship forexample wemightneedtosortasequenceofnumbersintonondecreasingorder thisproblemarisesfrequentlyinpracticeandprovidesfertilegroundfor introducingmanystandarddesigntechniquesandanalysistools hereishowwe formallyde nethesortingproblem input asequenceofnnumbersha ani output apermutation reordering nioftheinputsequencesuchthata forexample giventheinputsequenceh asortingalgorithmreturnsasoutputthesequenceh suchaninputsequenceiscalledaninstanceofthesortingproblem ingeneral aninstanceofaproblemconsistsoftheinput satisfyingwhateverconstraintsareimposedintheproblem statement neededtocomputeasolutiontotheproblem chapter theroleofalgorithmsincomputingbecausemanyprogramsuseitasanintermediatestep sortingisafundamentaloperationincomputerscience asaresult wehavealargenumberofgoodsorting algorithmsatourdisposal whichalgorithmisbestforagivenapplicationdepends amongotherfactors thenumberofitemstobesorted theextenttowhich theitemsarealreadysomewhatsorted possiblerestrictionsontheitemvalues thearchitectureofthecomputer andthekindofstoragedevicestobeused memory disks oreventapes analgorithmissaidtobecorrectif foreveryinputinstance ithaltswiththecorrectoutput wesaythatacorrectalgorithmsolvesthegivencomputationalproblem anincorrectalgorithmmightnothaltatallonsomeinputinstances orit mighthaltwithanincorrectanswer contrarytowhatyoumightexpect incorrect algorithmscansometimesbeuseful ifwecancontroltheirerrorrate weshallsee anexampleofanalgorithmwithacontrollableerrorrateinchapter whenwe studyalgorithmsfor ndinglargeprimenumbers ordinarily however weshall beconcernedonlywithcorrectalgorithms analgorithmcanbespeci edinenglish asacomputerprogram orevenasahardwaredesign theonlyrequirementisthatthespeci cationmustprovideaprecisedescriptionofthecomputationalproceduretobefollowed whatkindsofproblemsaresolvedbyalgorithms sortingisbynomeanstheonlycomputationalproblemforwhichalgorithmshavebeendeveloped youprobablysuspectedasmuchwhenyousawthesizeofthis practicalapplicationsofalgorithmsareubiquitousandincludethefollow ingexamples thehumangenomeprojecthasmadegreatprogresstowardthegoalsofiden tifyingallthe genesinhumandna determiningthesequencesofthe billionchemicalbasepairsthatmakeuphumandna storingthisinforma tionindatabases anddevelopingtoolsfordataanalysis eachofthesestepsrequiressophisticatedalgorithms althoughthesolutionstothevariousprob lemsinvolvedarebeyondthescopeofthisbook manymethodstosolvethese biologicalproblemsuseideasfromseveralofthechaptersinthisbook thereby enablingscientiststoaccomplishtaskswhileusingresourcesef ciently savingsareintime bothhumanandmachine andinmoney asmoreinforma tioncanbeextractedfromlaboratorytechniques theinternetenablespeopleallaroundtheworldtoquicklyaccessandretrieve largeamountsofinformation withtheaidofcleveralgorithms sitesonthe internetareabletomanageandmanipulatethislargevolumeofdata examples ofproblemsthatmakeessentialuseofalgorithmsinclude ndinggoodroutes onwhichthedatawilltravel techniquesforsolvingsuchproblemsappearin algorithms chapter andusingasearchenginetoquickly ndpagesonwhichparticularinformationresides relatedtechniquesareinchapters electroniccommerceenablesgoodsandservicestobenegotiatedandex changedelectronically anditdependsontheprivacyofpersonalinforma tionsuchascreditcardnumbers passwords andbankstatements thecore technologiesusedinelectroniccommerceincludepublic keycryptographyand digitalsignatures coveredinchapter whicharebasedonnumericalalgo rithmsandnumbertheory manufacturingandothercommercialenterprisesoftenneedtoallocatescarce resourcesinthemostbene cialway anoilcompanymaywishtoknowwhere toplaceitswellsinordertomaximizeitsexpectedpro apoliticalcandidate maywanttodeterminewheretospendmoneybuyingcampaignadvertisingin ordertomaximizethechancesofwinninganelection anairlinemaywish toassigncrewsto ightsintheleastexpensivewaypossible makingsurethat ightiscoveredandthatgovernmentregulationsregardingcrewschedul ingaremet aninternetserviceprovidermaywishtodeterminewheretoplace additionalresourcesinordertoserveitscustomersmoreeffectively allof theseareexamplesofproblemsthatcanbesolvedusinglinearprogramming whichweshallstudyinchapter althoughsomeofthedetailsoftheseexamplesarebeyondthescopeofthisbook wedogiveunderlyingtechniquesthatapplytotheseproblemsandproblem areas wealsoshowhowtosolvemanyspeci cproblems includingthefollowing wearegivenaroadmaponwhichthedistancebetweeneachpairofadjacent intersectionsismarked andwewishtodeterminetheshortestroutefromone intersectiontoanother thenumberofpossibleroutescanbehuge evenifwe disallowroutesthatcrossoverthemselves howdowechoosewhichofall possibleroutesistheshortest wemodeltheroadmap whichisitself amodeloftheactualroads asagraph whichwewillmeetinpartviand appendixb andwewishto ndtheshortestpathfromonevertextoanother inthegraph weshallseehowtosolvethisproblemef cientlyinchapter wearegiventwoorderedsequencesofsymbols xdhx xmiandydhy yni andwewishto ndalongestcommonsubsequenceofxandy asubsequenceofxisjustxwithsome orpossiblyallornone ofitselementsremoved forexample onesubsequenceofha giwouldbehb thelengthofalongestcommonsubsequenceofxandygivesonemeasureofhowsimilarthesetwosequencesare forexample ifthetwosequencesarebasepairsindnastrands thenwemightconsider themsimilariftheyhavealongcommonsubsequence ifxhasmsymbolsandyhasnsymbols thenxandyhave mand npossiblesubsequences chapter theroleofalgorithmsincomputingrespectively selectingallpossiblesubsequencesofxandyandmatchingthemupcouldtakeaprohibitivelylongtimeunlessmandnareverysmall weshallseeinchapter howtouseageneraltechniqueknownasdynamic programmingtosolvethisproblemmuchmoreef ciently wearegivenamechanicaldesignintermsofalibraryofparts whereeachpart mayincludeinstancesofotherparts andweneedtolistthepartsinorderso thateachpartappearsbeforeanypartthatusesit ifthedesigncomprisesnparts thentherearen possibleorders wheren denotesthefactorialfunction becausethefactorialfunctiongrowsfasterthanevenanexponentialfunction wecannotfeasiblygenerateeachpossibleorderandthenverifythat within thatorder eachpartappearsbeforethepartsusingit unlesswehaveonlya fewparts thisproblemisaninstanceoftopologicalsorting andweshallsee inchapter howtosolvethisproblemef ciently wearegivennpointsintheplane andwewishto ndtheconvexhullofthesepoints theconvexhullisthesmallestconvexpolygoncontainingthepoints intuitively wecanthinkofeachpointasbeingrepresentedbyanailstickingoutfromaboard theconvexhullwouldberepresentedbyatightrubberbandthatsurroundsallthenails eachnailaroundwhichtherubber bandmakesaturnisavertexoftheconvexhull seefigure onpage foranexample anyofthe nsubsetsofthepointsmightbetheverticesoftheconvexhull knowingwhichpointsareverticesoftheconvexhullis notquiteenough sincewealsoneedtoknowtheorderinwhichtheyappear therearemanychoices therefore fortheverticesoftheconvexhull chapter givestwogoodmethodsfor ndingtheconvexhull theselistsarefarfromexhaustive asyouagainhaveprobablysurmisedfromthisbook sheft butexhibittwocharacteristicsthatarecommontomanyinterest ingalgorithmicproblems theyhavemanycandidatesolutions theoverwhelmingmajorityofwhichdonotsolvetheproblemathand findingonethatdoes oronethatis canpresentquiteachallenge theyhavepracticalapplications oftheproblemsintheabovelist ndingtheshortestpathprovidestheeasiestexamples atransportation suchasa truckingorrailroadcompany hasa nancialinterestin ndingshortestpaths througharoadorrailnetworkbecausetakingshorterpathsresultsinlower laborandfuelcosts oraroutingnodeontheinternetmayneedto ndtheshortestpaththroughthenetworkinordertorouteamessagequickly orapersonwishingtodrivefromnewyorktobostonmaywantto nddriving directionsfromanappropriatewebsite orshemayusehergpswhiledriving algorithms noteveryproblemsolvedbyalgorithmshasaneasilyidenti edsetofcandidatesolutions forexample supposewearegivenasetofnumericalvaluesrepresent ingsamplesofasignal andwewanttocomputethediscretefouriertransformof thesesamples thediscretefouriertransformconvertsthetimedomaintothefre quencydomain producingasetofnumericalcoef cients sothatwecandetermine thestrengthofvariousfrequenciesinthesampledsignal inadditiontolyingat theheartofsignalprocessing discretefouriertransformshaveapplicationsindata compressionandmultiplyinglargepolynomialsandintegers chapter givesanef cientalgorithm thefastfouriertransform commonlycalledthefft forthisproblem andthechapteralsosketchesoutthedesignofahardwarecircuitto computethefft datastructuresthisbookalsocontainsseveraldatastructures adatastructureisawaytostoreandorganizedatainordertofacilitateaccessandmodi cations nosingledata structureworkswellforallpurposes andsoitisimportanttoknowthestrengths andlimitationsofseveralofthem techniquealthoughyoucanusethisbookasa cookbook foralgorithms youmaysomedayencounteraproblemforwhichyoucannotreadily ndapublishedalgorithm manyoftheexercisesandproblemsinthisbook forexample thisbookwillteachyoutechniquesofalgorithmdesignandanalysissothatyoucandevelopalgorithmson yourown showthattheygivethecorrectanswer andunderstandtheiref ciency differentchaptersaddressdifferentaspectsofalgorithmicproblemsolving chaptersaddressspeci cproblems suchas ndingmediansandorderstatisticsin chapter computingminimumspanningtreesinchapter anddetermininga maximum owinanetworkinchapter otherchaptersaddresstechniques suchasdivide conquerinchapter dynamicprogramminginchapter andamortizedanalysisinchapter hardproblemsmostofthisbookisaboutef cientalgorithms ourusualmeasureofef ciencyisspeed howlonganalgorithmtakestoproduceitsresult therearesome problems however forwhichnoef cientsolutionisknown chapter studiesaninterestingsubsetoftheseproblems whichareknownasnp whyarenp completeproblemsinteresting althoughnoef cientalgo rithmforannp completeproblemhaseverbeenfound nobodyhaseverproven chapter theroleofalgorithmsincomputingthatanef cientalgorithmforonecannotexist inotherwords nooneknowswhetherornotef cientalgorithmsexistfornp completeproblems setofnp completeproblemshastheremarkablepropertythatifanef cientalgo rithmexistsforanyoneofthem thenef cientalgorithmsexistforallofthem relationshipamongthenp completeproblemsmakesthelackofef cientsolutions allthemoretantalizing severalnp completeproblemsaresimilar butnot identical toproblemsforwhichwedoknowofef cientalgorithms computer scientistsareintriguedbyhowasmallchangetotheproblemstatementcancauseabigchangetotheef ciencyofthebestknownalgorithm youshouldknowaboutnp completeproblemsbecausesomeofthemarisesur prisinglyofteninrealapplications ifyouarecalledupontoproduceanef cient algorithmforannp completeproblem youarelikelytospendalotoftimeina fruitlesssearch ifyoucanshowthattheproblemisnp youcaninstead spendyourtimedevelopinganef cientalgorithmthatgivesagood butnotthe bestpossible asaconcreteexample consideradeliverycompanywithacentraldepot eachday itloadsupeachdeliverytruckatthedepotandsendsitaroundtodelivergoodstoseveraladdresses attheendoftheday eachtruckmustendupbackatthedepotsothatitisreadytobeloadedforthenextday toreducecosts thecompanywants toselectanorderofdeliverystopsthatyieldsthelowestoveralldistancetraveled byeachtruck thisproblemisthewell known traveling salesmanproblem itisnp ithasnoknownef cientalgorithm undercertainassumptions however weknowofef cientalgorithmsthatgiveanoveralldistancewhichisnottoofarabovethesmallestpossible chapter discussessuch approximation algorithms parallelismformanyyears wecouldcountonprocessorclockspeedsincreasingatasteadyrate physicallimitationspresentafundamentalroadblocktoever increasingclock speeds however becausepowerdensityincreasessuperlinearlywithclockspeed chipsruntheriskofmeltingoncetheirclockspeedsbecomehighenough inorder toperformmorecomputationspersecond therefore chipsarebeingdesignedto containnotjustonebutseveralprocessing cores wecanlikenthesemulticore computerstoseveralsequentialcomputersonasinglechip inotherwords theyare atypeof parallelcomputer inordertoelicitthebestperformancefrommulticore computers weneedtodesignalgorithmswithparallelisminmind chapter presentsamodelfor multithreaded algorithms whichtakeadvantageofmultiple cores thismodelhasadvantagesfromatheoreticalstandpoint anditformsthe basisofseveralsuccessfulcomputerprograms includingachampionshipchess program algorithmsasatechnology exercises giveareal worldexamplethatrequiressortingorareal worldexamplethatre quirescomputingaconvexhull otherthanspeed whatothermeasuresofef ciencymightoneuseinareal setting selectadatastructurethatyouhaveseenpreviously anddiscussitsstrengthsand limitations howaretheshortest pathandtraveling salesmanproblemsgivenabovesimilar howaretheydifferent comeupwithareal worldprobleminwhichonlythebestsolutionwilldo comeupwithoneinwhichasolutionthatis approximately thebestisgood algorithmsasatechnologysupposecomputerswerein nitelyfastandcomputermemorywasfree youhaveanyreasontostudyalgorithms theanswerisyes iffornootherreason thanthatyouwouldstillliketodemonstratethatyoursolutionmethodterminates anddoessowiththecorrectanswer ifcomputerswerein nitelyfast anycorrectmethodforsolvingaproblemwoulddo youwouldprobablywantyourimplementationtobewithinthebounds ofgoodsoftwareengineeringpractice forexample yourimplementationshouldbewelldesignedanddocumented butyouwouldmostoftenusewhichevermethodwastheeasiesttoimplement ofcourse computersmaybefast buttheyarenotin nitelyfast andmemorymaybeinexpensive butitisnotfree computingtimeisthereforeabounded resource andsoisspaceinmemory youshouldusetheseresourceswisely algorithmsthatareef cientintermsoftimeorspacewillhelpyoudoso chapter theroleofalgorithmsincomputingef ciencydifferentalgorithmsdevisedtosolvethesameproblemoftendifferdramaticallyintheiref ciency thesedifferencescanbemuchmoresigni cantthandifferences duetohardwareandsoftware asanexample inchapter wewillseetwoalgorithmsforsorting rst knownasinsertionsort takestimeroughlyequaltoc tosortnitems wherec isaconstantthatdoesnotdependonn thatis ittakestimeroughlyproportionalton thesecond mergesort takestimeroughlyequaltoc nlgn wherelgnstandsforlog nandc isanotherconstantthatalsodoesnotdependonn inser tionsorttypicallyhasasmallerconstantfactorthanmergesort sothatc weshallseethattheconstantfactorscanhavefarlessofanimpactontherunning timethanthedependenceontheinputsizen swriteinsertionsort srunningtimeasc nnandmergesort srunningtimeasc nlgn thenweseethatwhereinsertionsorthasafactorofninitsrunningtime mergesorthasafactoroflgn whichismuchsmaller forexample whennd lgnisapproximately andwhennequalsonemillion lgnisapproximatelyonly althoughinsertionsortusuallyrunsfasterthanmergesortforsmallinputsizes oncetheinputsizenbecomeslargeenough mergesort sadvantageoflgnvs nwillmorethancom pensateforthedifferenceinconstantfactors nomatterhowmuchsmallerc isthanc therewillalwaysbeacrossoverpointbeyondwhichmergesortisfaster foraconcreteexample letuspitafastercomputer computera runninginser tionsortagainstaslowercomputer computerb runningmergesort theyeach mustsortanarrayof millionnumbers although millionnumbersmight seemlikealot ifthenumbersareeight byteintegers thentheinputoccupies megabytes tsinthememoryofevenaninexpensivelaptopcom putermanytimesover supposethatcomputeraexecutes billioninstructions persecond fasterthananysinglesequentialcomputeratthetimeofthiswriting andcomputerbexecutesonly millioninstructionspersecond sothatcom puterais timesfasterthancomputerbinrawcomputingpower tomakethedifferenceevenmoredramatic supposethattheworld scraftiestprogrammer codesinsertionsortinmachinelanguageforcomputera andtheresultingcode requires instructionstosortnnumbers supposefurtherthatjustanaverageprogrammerimplementsmergesort usingahigh levellanguagewithaninef cient compiler withtheresultingcodetaking nlgninstructions tosort millionnumbers computeratakes instructions instructions secondd seconds morethan hours whilecomputerbtakes algorithmsasatechnology instructions instructions seconds lessthan minutes byusinganalgorithmwhoserunningtimegrowsmoreslowly evenwithapoorcompiler computerbrunsmorethan timesfasterthancomputera theadvan tageofmergesortisevenmorepronouncedwhenwesort millionnumbers whereinsertionsorttakesmorethan days mergesorttakesunderfourhours ingeneral astheproblemsizeincreases sodoestherelativeadvantageofmerge sort algorithmsandothertechnologiestheexampleaboveshowsthatweshouldconsideralgorithms likecomputerhard ware asatechnology totalsystemperformancedependsonchoosingef cientalgorithmsasmuchasonchoosingfasthardware justasrapidadvancesarebeing madeinothercomputertechnologies theyarebeingmadeinalgorithmsaswell youmightwonderwhetheralgorithmsaretrulythatimportantoncontemporarycomputersinlightofotheradvancedtechnologies suchasadvancedcomputerarchitecturesandfabricationtechnologies easy intuitive graphicaluserinterfaces guis orientedsystems integratedwebtechnologies andfastnetworking bothwiredandwireless theanswerisyes althoughsomeapplicationsdonotexplicitlyrequirealgorith miccontentattheapplicationlevel suchassomesimple web basedapplications manydo forexample consideraweb basedservicethatdetermineshowtotravel fromonelocationtoanother itsimplementationwouldrelyonfasthardware graphicaluserinterface areanetworking andalsopossiblyonobjectori entation however itwouldalsorequirealgorithmsforcertainoperations ndingroutes probablyusingashortest pathalgorithm renderingmaps interpolatingaddresses moreover evenanapplicationthatdoesnotrequirealgorithmiccontentattheapplicationlevelreliesheavilyuponalgorithms doestheapplicationrelyonfast hardware thehardwaredesignusedalgorithms doestheapplicationrelyon graphicaluserinterfaces thedesignofanyguireliesonalgorithms doesthe applicationrelyonnetworking routinginnetworksreliesheavilyonalgorithms wastheapplicationwritteninalanguageotherthanmachinecode thenitwas processedbyacompiler interpreter orassembler allofwhichmakeextensiveuse chapter theroleofalgorithmsincomputingofalgorithms algorithmsareatthecoreofmosttechnologiesusedincontempo rarycomputers furthermore withtheever increasingcapacitiesofcomputers weusethemtosolvelargerproblemsthaneverbefore aswesawintheabovecomparisonbe tweeninsertionsortandmergesort itisatlargerproblemsizesthatthedifferences inef ciencybetweenalgorithmsbecomeparticularlyprominent havingasolidbaseofalgorithmicknowledgeandtechniqueisonecharacteristicthatseparatesthetrulyskilledprogrammersfromthenovices withmoderncom putingtechnology youcanaccomplishsometaskswithoutknowingmuchaboutalgorithms butwithagoodbackgroundinalgorithms youcandomuch exercises giveanexampleofanapplicationthatrequiresalgorithmiccontentattheapplica tionlevel anddiscussthefunctionofthealgorithmsinvolved supposewearecomparingimplementationsofinsertionsortandmergesortonthesamemachine forinputsofsizen insertionsortrunsin steps whilemergesortrunsin nlgnsteps forwhichvaluesofndoesinsertionsortbeatmergesort whatisthesmallestvalueofnsuchthatanalgorithmwhoserunningtimeis runsfasterthananalgorithmwhoserunningtimeis nonthesamemachine problems comparisonofrunningtimesforeachfunctionf andtimetinthefollowingtable determinethelargestsizenofaproblemthatcanbesolvedintimet assumingthatthealgorithmtosolvetheproblemtakesf microseconds notesforchapter secondminutehourdaymonthyearcenturylgnpnnnlgnn chapternotestherearemanyexcellenttextsonthegeneraltopicofalgorithms includingthosebyaho hopcroft andullman baaseandvangelder brassardand bratley dasgupta papadimitriou andvazirani goodrichandtamassia hofri horowitz sahni andrajasekaran johnsonbaughand schaefer kingston kleinbergandtardos knuth kozen levitin manber mehlhorn pur domandbrown reingold nievergelt anddeo sedgewick sedgewickandflajolet skiena andwilf someofthemore practicalaspectsofalgorithmdesignarediscussedbybentley andgonnet surveysofthe eldofalgorithmscanalsobefoundinthehandbookofthe oreticalcomputerscience volumea andthecrcalgorithmsandtheoryofcomputationhandbook overviewsofthealgorithmsusedincomputationalbiologycanbefoundintextbooksbygus eld pevzner setubaland meidanis andwaterman gettingstartedthischapterwillfamiliarizeyouwiththeframeworkweshallusethroughoutthebooktothinkaboutthedesignandanalysisofalgorithms itisself contained itdoesincludeseveralreferencestomaterialthatweintroduceinchapters italsocontainsseveralsummations whichappendixashowshowtosolve webeginbyexaminingtheinsertionsortalgorithmtosolvethesortingproblemintroducedinchapter wede nea pseudocode thatshouldbefamiliartoyouif youhavedonecomputerprogramming andweuseittoshowhowweshallspecify ouralgorithms havingspeci edtheinsertionsortalgorithm wethenarguethatit correctlysorts andweanalyzeitsrunningtime theanalysisintroducesanotation thatfocusesonhowthattimeincreaseswiththenumberofitemstobesorted followingourdiscussionofinsertionsort weintroducethedivide conquer approachtothedesignofalgorithmsanduseittodevelopanalgorithmcalled mergesort weendwithananalysisofmergesort srunningtime insertionsortour rstalgorithm insertionsort solvesthesortingproblemintroducedinchap ter input asequenceofnnumbersha ani output apermutation reordering nioftheinputsequencesuchthata thenumbersthatwewishtosortarealsoknownasthekeys althoughconceptu allywearesortingasequence theinputcomestousintheformofanarraywithnelements inthisbook weshalltypicallydescribealgorithmsasprogramswritteninapseudocodethatissimilarinmanyrespectstoc java python orpascal ifyouhavebeenintroducedtoanyoftheselanguages youshouldhavelittletrouble insertionsort sortingahandofcardsusinginsertionsort readingouralgorithms whatseparatespseudocodefrom codeisthatinpseudocode weemploywhateverexpressivemethodismostclearandconciseto specifyagivenalgorithm sometimes theclearestmethodisenglish sodonot besurprisedifyoucomeacrossanenglishphraseorsentenceembeddedwithin asectionof code anotherdifferencebetweenpseudocodeandrealcode isthatpseudocodeisnottypicallyconcernedwithissuesofsoftwareengineering issuesofdataabstraction modularity anderrorhandlingareoftenignoredinordertoconveytheessenceofthealgorithmmoreconcisely westartwithinsertionsort whichisanef cientalgorithmforsortingasmallnumberofelements insertionsortworksthewaymanypeoplesortahandofplayingcards westartwithanemptylefthandandthecardsfacedownonthe wethenremoveonecardatatimefromthetableandinsertitintothe correctpositioninthelefthand ndthecorrectpositionforacard wecompare itwitheachofthecardsalreadyinthehand fromrighttoleft asillustratedin atalltimes thecardsheldinthelefthandaresorted andthesecards wereoriginallythetopcardsofthepileonthetable wepresentourpseudocodeforinsertionsortasaprocedurecalledinsertion sort whichtakesasaparameteranarraya containingasequenceoflengthnthatistobesorted inthecode thenumbernofelementsinaisdenotedbya thealgorithmsortstheinputnumbersinplace itrearrangesthenumberswithinthearraya withatmostaconstantnumberofthemstoredoutsidethearrayatanytime theinputarrayacontainsthesortedoutputsequencewhentheinsertion sortprocedureis nished chapter gettingstarted theoperationofinsertion sortonthearrayadh arrayindicesappearabovetherectangles andvaluesstoredinthearraypositionsappearwithintherectangles theiterationsoftheforloopoflines ineachiteration theblackrectangleholdsthekeytakenfroma whichiscomparedwiththevaluesinshadedrectanglestoitsleftinthetestofline shadedarrowsshowarrayvaluesmovedonepositiontotherightinline andblackarrowsindicatewherethekeymovestoinline nalsortedarray insertion sort forjd toa keyda inserta jintothesortedsequencea idj whilei anda icda idi icdkeyloopinvariantsandthecorrectnessofinsertionsortfigure showshowthisalgorithmworksforadh thein dexjindicatesthe currentcard beinginsertedintothehand atthebeginningofeachiterationoftheforloop whichisindexedbyj thesubarrayconsistingofelementsa jconstitutesthecurrentlysortedhand andtheremainingsubarraya ncorrespondstothepileofcardsstillonthetable infact elementsa jaretheelementsoriginallyinpositions throughj butnowinsortedorder westatethesepropertiesofa jformallyasaloopinvariant atthestartofeachiterationoftheforloopoflines thesubarraya jconsistsoftheelementsoriginallyina butinsortedorder weuseloopinvariantstohelpusunderstandwhyanalgorithmiscorrect wemustshowthreethingsaboutaloopinvariant insertionsort initialization itistruepriortothe rstiterationoftheloop maintenance ifitistruebeforeaniterationoftheloop itremainstruebeforethenextiteration termination whentheloopterminates theinvariantgivesusausefulpropertythathelpsshowthatthealgorithmiscorrect whenthe rsttwopropertieshold theloopinvariantistruepriortoeveryiterationoftheloop ofcourse wearefreetouseestablishedfactsotherthantheloop invariantitselftoprovethattheloopinvariantremainstruebeforeeachiteration notethesimilaritytomathematicalinduction wheretoprovethatapropertyholds youproveabasecaseandaninductivestep showingthattheinvariantholds beforethe rstiterationcorrespondstothebasecase andshowingthattheinvariant holdsfromiterationtoiterationcorrespondstotheinductivestep thethirdpropertyisperhapsthemostimportantone sinceweareusingtheloopinvarianttoshowcorrectness typically weusetheloopinvariantalongwiththeconditionthatcausedthelooptoterminate theterminationpropertydiffersfromhowweusuallyusemathematicalinduction inwhichweapplytheinductivestep nitely westopthe induction whentheloopterminates letusseehowthesepropertiesholdforinsertionsort initialization westartbyshowingthattheloopinvariantholdsbeforethe rstloopiteration whenjd thesubarraya therefore consistsofjustthesingleelementa whichisinfacttheoriginalelementina moreover thissubarrayissorted trivially ofcourse whichshowsthatthe loopinvariantholdspriortothe rstiterationoftheloop maintenance wetacklethesecondproperty showingthateachiterationmaintainstheloopinvariant informally thebodyoftheforloopworksbymovinga andsoonbyonepositiontotherightuntilit ndstheproperpositionfora lines atwhichpointitinsertsthevalueofa thesubarraya jthenconsistsoftheelementsoriginallyina butinsortedorder incrementingjforthenextiterationoftheforloopthenpreservestheloopinvariant amoreformaltreatmentofthesecondpropertywouldrequireustostateandshowaloopinvariantforthewhileloopoflines atthispoint however whentheloopisaforloop themomentatwhichwechecktheloopinvariantjustpriortothe rstiterationisimmediatelyaftertheinitialassignmenttotheloop countervariableandjustbeforethe rsttestintheloopheader inthecaseofinsertion sort thistimeisafterassigning tothevariablejbutbeforethe rsttestofwhetherja chapter gettingstartedweprefernottogetboggeddowninsuchformalism andsowerelyonourinformalanalysistoshowthatthesecondpropertyholdsfortheouterloop termination finally weexaminewhathappenswhentheloopterminates theconditioncausingtheforlooptoterminateisthatj lengthdn becauseeachloopiterationincreasesjby wemusthavejdnc atthattime substitutingnc forjinthewordingofloopinvariant wehavethatthesubarraya nconsistsoftheelementsoriginallyina butinsortedorder observingthatthesubarraya nistheentirearray weconcludethattheentirearrayissorted hence thealgorithmiscorrect weshallusethismethodofloopinvariantstoshowcorrectnesslaterinthischapterandinotherchaptersaswell pseudocodeconventionsweusethefollowingconventionsinourpseudocode indentationindicatesblockstructure forexample thebodyoftheforloopthatbeginsonline consistsoflines andthebodyofthewhileloopthatbeginsonline containslines butnotline ourindentationstyleappliestoif elsestatements aswell usingindentationinsteadofconventionalindicatorsofblockstructure suchasbeginandendstatements greatlyreducesclutterwhilepreserving orevenenhancing clarity theloopingconstructswhile andrepeat untilandtheif elseconditionalconstructhaveinterpretationssimilartothoseinc java python pascal inthisbook theloopcounterretainsitsvalueafterexitingtheloop unlikesomesituationsthatariseinc java andpascal immediatelyafteraforloop theloopcounter svalueisthevaluethat rstexceededtheforloopbound weusedthispropertyinourcorrectnessargumentforinsertion sort theforloopheaderinline isforjd toa andsowhenthisloopterminates jda lengthc equivalently jdnc sincenda weusethekeywordtowhenaforloopincrementsitsloop inanif elsestatement weindentelseatthesamelevelasitsmatchingif althoughweomitthekeywordthen weoccasionallyrefertotheportionexecutedwhenthetestfollowingifistrueasathenclause formultiwaytests weuseelseiffortestsafterthe rstone eachpseudocodeprocedureinthisbookappearsononepagesothatyouwillnothavetodiscernlevelsofindentationincodethatissplitacrosspages mostblock structuredlanguageshaveequivalentconstructs thoughtheexactsyntaxmaydiffer pythonlacksrepeat untilloops anditsforloopsoperatealittledifferentlyfromtheforloopsinthisbook insertionsort counterineachiteration andweusethekeyworddowntowhenaforloopdecrementsitsloopcounter whentheloopcounterchangesbyanamount greaterthan theamountofchangefollowstheoptionalkeywordby thesymbol indicatesthattheremainderofthelineisacomment amultipleassignmentoftheformidjdeassignstobothvariablesiandjthevalueofexpressione itshouldbetreatedasequivalenttotheassignmentjdefollowedbytheassignmentidj variables suchasi andkey arelocaltothegivenprocedure weshallnotuseglobalvariableswithoutexplicitindication weaccessarrayelementsbyspecifyingthearraynamefollowedbythein dexinsquarebrackets forexample iindicatestheithelementofthearraya thenotation isusedtoindicatearangeofvalueswithinanar ray jindicatesthesubarrayofaconsistingofthejelementsa wetypicallyorganizecompounddataintoobjects whicharecomposedofattributes weaccessaparticularattributeusingthesyntaxfoundinmanyobject orientedprogramminglanguages theobjectname followedbyadot followedbytheattributename forexample wetreatanarrayasanobjectwiththeattributelengthindicatinghowmanyelementsitcontains tospecifythenumberofelementsinanarraya wewritea wetreatavariablerepresentinganarrayorobjectasapointertothedatarep resentingthearrayorobject forallattributesfofanobjectx settingydxcausesy ftoequalx moreover ifwenowsetx thenafterwardnotonlydoesx fequal buty fequals aswell inotherwords xandypointtothesameobjectaftertheassignmentydx ourattributenotationcan cascade forexample supposethattheattributefisitselfapointertosometypeofobjectthathasanattributeg thenthenotationx gisimplicitlyparenthesizedas inotherwords ifwehadassignedydx thenx gisthesameasy sometimes apointerwillrefertonoobjectatall inthiscase wegiveitthespecialvaluenil wepassparameterstoaprocedurebyvalue thecalledprocedurereceivesitsowncopyoftheparameters andifitassignsavaluetoaparameter thechange isnotseenbythecallingprocedure whenobjectsarepassed thepointertothedatarepresentingtheobjectiscopied buttheobject sattributesarenot ifxisaparameterofacalledprocedure theassignmentxdywithinthecalledprocedureisnotvisibletothecallingprocedure theassignment however isvisible similarly arraysarepassedbypointer sothat chapter gettingstartedapointertothearrayispassed ratherthantheentirearray andchangestoindividualarrayelementsarevisibletothecallingprocedure areturnstatementimmediatelytransferscontrolbacktothepointofcallinthecallingprocedure mostreturnstatementsalsotakeavaluetopassbacktothecaller ourpseudocodediffersfrommanyprogramminglanguagesinthat weallowmultiplevaluestobereturnedinasinglereturnstatement thebooleanoperators areshortcircuiting thatis whenweevaluatetheexpression xandy rstevaluatex ifxevaluatestofalse thentheentireexpressioncannotevaluatetotrue andsowedonotevaluatey ontheotherhand xevaluatestotrue wemustevaluateytodeterminethevalueoftheentireexpression similarly intheexpression xory weeval uatetheexpressionyonlyifxevaluatestofalse circuitingoperatorsallowustowritebooleanexpressionssuchas nilandx fdy withoutworryingaboutwhathappenswhenwetrytoevaluatex fwhenxisnil thekeyworderrorindicatesthatanerroroccurredbecauseconditionswerewrongfortheproceduretohavebeencalled thecallingprocedureisrespon sibleforhandlingtheerror andsowedonotspecifywhatactiontotake exercises usingfigure asamodel illustratetheoperationofinsertion sortonthearrayadh rewritetheinsertion sortproceduretosortintononincreasinginsteadofnon decreasingorder considerthesearchingproblem input asequenceofnnumbersadha aniandavalue output anindexisuchthatda iorthespecialvaluenilifdoesnotappearina writepseudocodeforlinearsearch whichscansthroughthesequence lookingfor usingaloopinvariant provethatyouralgorithmiscorrect makesurethatyourloopinvariantful llsthethreenecessaryproperties considertheproblemofaddingtwon bitbinaryintegers storedintwon elementarraysaandb thesumofthetwointegersshouldbestoredinbinaryformin analyzingalgorithms elementarrayc statetheproblemformallyandwritepseudocodeforaddingthetwointegers analyzingalgorithmsanalyzinganalgorithmhascometomeanpredictingtheresourcesthatthealgo rithmrequires occasionally resourcessuchasmemory communicationband width orcomputerhardwareareofprimaryconcern butmostoftenitiscompu tationaltimethatwewanttomeasure generally byanalyzingseveralcandidate algorithmsforaproblem wecanidentifyamostef cientone suchanalysismay indicatemorethanoneviablecandidate butwecanoftendiscardseveralinferior algorithmsintheprocess beforewecananalyzeanalgorithm wemusthaveamodeloftheimplemen tationtechnologythatwewilluse includingamodelfortheresourcesofthat technologyandtheircosts formostofthisbook weshallassumeagenericone processor random accessmachine ram modelofcomputationasourimple mentationtechnologyandunderstandthatouralgorithmswillbeimplementedascomputerprograms intherammodel instructionsareexecutedoneafteran withnoconcurrentoperations strictlyspeaking weshouldpreciselyde netheinstructionsoftherammodelandtheircosts todoso however wouldbetediousandwouldyieldlittleinsightintoalgorithmdesignandanalysis yetwemustbecarefulnottoabusetherammodel forexample whatifaramhadaninstructionthatsorts thenwecould sortinjustoneinstruction sucharamwouldbeunrealistic sincerealcomputers donothavesuchinstructions ourguide therefore ishowrealcomputersarede signed therammodelcontainsinstructionscommonlyfoundinrealcomputers arithmetic suchasadd remainder oor ceiling data movement load andcontrol conditionalandunconditionalbranch subroutinecallandreturn eachsuchinstructiontakesaconstantamountoftime thedatatypesintherammodelareintegerand oatingpoint forstoringrealnumbers althoughwetypicallydonotconcernourselveswithprecisioninthisbook insomeapplicationsprecisioniscrucial wealsoassumealimitonthesize ofeachwordofdata forexample whenworkingwithinputsofsizen wetyp icallyassumethatintegersarerepresentedbyclgnbitsforsomeconstantc werequirec sothateachwordcanholdthevalueofn enablingustoindextheindividualinputelements andwerestrictctobeaconstantsothatthewordsizedoesnotgrowarbitrarily ifthewordsizecouldgrowarbitrarily wecouldstore hugeamountsofdatainonewordandoperateonitallinconstanttime clearly anunrealisticscenario chapter gettingstartedrealcomputerscontaininstructionsnotlistedabove andsuchinstructionsrep resentagrayareaintherammodel forexample isexponentiationaconstant timeinstruction inthegeneralcase ittakesseveralinstructionstocomputexywhenxandyarerealnumbers inrestrictedsituations however exponentiationisaconstant timeoperation manycomputershavea shiftleft instruction inconstanttimeshiftsthebitsofanintegerbykpositionstotheleft inmostcomputers shiftingthebitsofanintegerbyonepositiontotheleftisequivalent tomultiplicationby sothatshiftingthebitsbykpositionstotheleftisequiv alenttomultiplicationby therefore suchcomputerscancompute kinoneconstant timeinstructionbyshiftingtheinteger bykpositionstotheleft aslongaskisnomorethanthenumberofbitsinacomputerword wewillendeavortoavoidsuchgrayareasintherammodel butwewilltreatcomputationof kasaconstant timeoperationwhenkisasmallenoughpositiveinteger intherammodel wedonotattempttomodelthememoryhierarchythatiscommonincontemporarycomputers thatis wedonotmodelcachesorvirtualmemory severalcomputationalmodelsattempttoaccountformemory hierarchyeffects whicharesometimessigni cantinrealprogramsonrealmachines ahandfulofproblemsinthisbookexaminememory hierarchyeffects butforthemostpart theanalysesinthisbookwillnotconsiderthem modelsthatinclude thememoryhierarchyarequiteabitmorecomplexthantherammodel andso theycanbedif culttoworkwith moreover ram modelanalysesareusually excellentpredictorsofperformanceonactualmachines analyzingevenasimplealgorithmintherammodelcanbeachallenge themathematicaltoolsrequiredmayincludecombinatorics probabilitytheory alge braicdexterity andtheabilitytoidentifythemostsigni canttermsinaformula becausethebehaviorofanalgorithmmaybedifferentforeachpossibleinput weneedameansforsummarizingthatbehaviorinsimple easilyunderstoodformulas eventhoughwetypicallyselectonlyonemachinemodeltoanalyzeagivenal gorithm westillfacemanychoicesindecidinghowtoexpressouranalysis wouldlikeawaythatissimpletowriteandmanipulate showstheimportantchar acteristicsofanalgorithm sresourcerequirements andsuppressestediousdetails analysisofinsertionsortthetimetakenbytheinsertion sortproceduredependsontheinput sortingathousandnumberstakeslongerthansortingthreenumbers moreover insertion sortcantakedifferentamountsoftimetosorttwoinputsequencesofthesamesizedependingonhownearlysortedtheyalreadyare ingeneral thetimetaken byanalgorithmgrowswiththesizeoftheinput soitistraditionaltodescribethe runningtimeofaprogramasafunctionofthesizeofitsinput todoso weneed tode netheterms runningtime sizeofinput morecarefully analyzingalgorithms thebestnotionforinputsizedependsontheproblembeingstudied formanyproblems suchassortingorcomputingdiscretefouriertransforms themostnat uralmeasureisthenumberofitemsintheinput forexample thearraysizenforsorting formanyotherproblems suchasmultiplyingtwointegers thebest measureofinputsizeisthetotalnumberofbitsneededtorepresenttheinputinordinarybinarynotation sometimes itismoreappropriatetodescribethesizeof theinputwithtwonumbersratherthanone forinstance iftheinputtoanalgo rithmisagraph theinputsizecanbedescribedbythenumbersofverticesandedgesinthegraph weshallindicatewhichinputsizemeasureisbeingusedwitheachproblemwestudy therunningtimeofanalgorithmonaparticularinputisthenumberofprimitiveoperationsor steps executed itisconvenienttode nethenotionofstepso thatitisasmachine independentaspossible forthemoment letusadoptthe followingview aconstantamountoftimeisrequiredtoexecuteeachlineofour pseudocode onelinemaytakeadifferentamountoftimethananotherline weshallassumethateachexecutionoftheithlinetakestimeci whereciisaconstant thisviewpointisinkeepingwiththerammodel anditalsore ectshowthepseudocodewouldbeimplementedonmostactualcomputers inthefollowingdiscussion ourexpressionfortherunningtimeofinsertion sortwillevolvefromamessyformulathatusesallthestatementcostscitoamuchsimplernotationthatismoreconciseandmoreeasilymanipulated thissimplernotationwillalsomakeiteasytodeterminewhetheronealgorithmismoreef cientthananother westartbypresentingtheinsertion sortprocedurewiththetime ofeachstatementandthenumberoftimeseachstatementisexecuted foreach wherenda welettjdenotethenumberoftimesthewhilelooptestinline isexecutedforthatvalueofj whenafororwhileloopexitsintheusualway duetothetestintheloopheader thetestisexecuted onetimemorethantheloopbody weassumethatcommentsarenotexecutable statements andsotheytakenotime therearesomesubtletieshere computationalstepsthatwespecifyinenglishareoftenvariantsofaprocedurethatrequiresmorethanjustaconstantamountoftime forexample laterinthis bookwemightsay sortthepointsbyx coordinate asweshallsee takesmorethanaconstantamountoftime notethatastatementthatcallsasubroutinetakesconstanttime thoughthesubroutine onceinvoked maytakemore thatis weseparatetheprocessofcallingthesubroutine passingparameterstoit etc fromtheprocessofexecutingthesubroutine chapter gettingstartedinsertion sort costtimes forjd toa lengthc keyda inserta jintothesortedsequencea idj whilei anda keyc pnjd icda pnjd idi pnjd icdkeyc therunningtimeofthealgorithmisthesumofrunningtimesforeachstate mentexecuted astatementthattakescistepstoexecuteandexecutesntimeswillcontributecintothetotalrunningtime tocomputet therunningtimeofinsertion sortonaninputofnvalues wesumtheproductsofthecostandtimescolumns obtainingt ncc nxjd tjcc nxjd nxjd evenforinputsofagivensize analgorithm srunningtimemaydependonwhichinputofthatsizeisgiven forexample ininsertion sort thebestcaseoccursifthearrayisalreadysorted foreachjd wethen ndthata ikeyinline whenihasitsinitialvalueofj thustjd forjd andthebest caserunningtimeist ncc wecanexpressthisrunningtimeasancbforconstantsaandbthatdependonthestatementcostsci itisthusalinearfunctionofn ifthearrayisinreversesortedorder thatis indecreasingorder theworstcaseresults wemustcompareeachelementa jwitheachelementintheentiresortedsubarraya andsotjdjforjd notingthat thischaracteristicdoesnotnecessarilyholdforaresourcesuchasmemory astatementthatreferencesmwordsofmemoryandisexecutedntimesdoesnotnecessarilyreferencemndistinctwordsofmemory analyzingalgorithms nxjd jdn andnxjd seeappendixaforareviewofhowtosolvethesesummations ndthatintheworstcase therunningtimeofinsertion sortist ncc wecanexpressthisworst caserunningtimeasan cbnccforconstantsa andcthatagaindependonthestatementcostsci itisthusaquadraticfunctionofn typically asininsertionsort therunningtimeofanalgorithmis xedforagiveninput althoughinlaterchaptersweshallseesomeinteresting randomized algorithmswhosebehaviorcanvaryevenfora xedinput worst caseandaverage caseanalysisinouranalysisofinsertionsort welookedatboththebestcase inwhichtheinputarraywasalreadysorted andtheworstcase inwhichtheinputarraywasreverse sorted fortheremainderofthisbook weshallusuallyconcentrateon ndingonlytheworst caserunningtime thatis thelongestrunningtimeforanyinputofsizen wegivethreereasonsforthisorientation theworst caserunningtimeofanalgorithmgivesusanupperboundontherunningtimeforanyinput knowingitprovidesaguaranteethatthealgorithm willnevertakeanylonger weneednotmakesomeeducatedguessaboutthe runningtimeandhopethatitnevergetsmuchworse forsomealgorithms theworstcaseoccursfairlyoften forexample insearch ingadatabaseforaparticularpieceofinformation thesearchingalgorithm worstcasewilloftenoccurwhentheinformationisnotpresentinthedatabase insomeapplications searchesforabsentinformationmaybefrequent chapter gettingstartedthe averagecase isoftenroughlyasbadastheworstcase supposethatwerandomlychoosennumbersandapplyinsertionsort howlongdoesittaketodeterminewhereinsubarraya jtoinsertelementa onaverage halftheelementsina jarelessthana andhalftheelementsaregreater onaverage therefore wecheckhalfofthesubarraya andsotjisaboutj theresultingaverage caserunningtimeturnsouttobeaquadraticfunctionoftheinputsize justliketheworst caserunningtime insomeparticularcases weshallbeinterestedintheaverage caserunningtimeofanalgorithm weshallseethetechniqueofprobabilisticanalysisappliedtovariousalgorithmsthroughoutthisbook thescopeofaverage caseanalysisis limited becauseitmaynotbeapparentwhatconstitutesan average inputfor aparticularproblem weshallassumethatallinputsofagivensizeare equallylikely inpractice thisassumptionmaybeviolated butwecansometimes usearandomizedalgorithm whichmakesrandomchoices toallowaprobabilisticanalysisandyieldanexpectedrunningtime weexplorerandomizedalgorithmsmoreinchapter andinseveralothersubsequentchapters orderofgrowthweusedsomesimplifyingabstractionstoeaseouranalysisoftheinsertion sortprocedure weignoredtheactualcostofeachstatement usingtheconstantscitorepresentthesecosts weobservedthateventheseconstantsgiveusmoredetailthanwereallyneed weexpressedtheworst caserunningtimeasan cbnccforsomeconstantsa andcthatdependonthestatementcostsci wethusignorednotonlytheactualstatementcosts butalsotheabstractcostsci weshallnowmakeonemoresimplifyingabstraction itistherateofgrowth ororderofgrowth oftherunningtimethatreallyinterestsus wethereforecon sideronlytheleadingtermofaformula sincethelower ordertermsarerelativelyinsigni cantforlargevaluesofn wealsoignoretheleadingterm scon stantcoef cient sinceconstantfactorsarelesssigni cantthantherateofgrowth indeterminingcomputationalef ciencyforlargeinputs forinsertionsort weignorethelower ordertermsandtheleadingterm sconstantcoef cient weareleftwiththefactorofn fromtheleadingterm wewritethatinsertionsorthasaworst caserunningtimeof pronounced thetaofn squared weshalluse notationinformallyinthischapter andwewillde neitpreciselyinchapter weusuallyconsideronealgorithmtobemoreef cientthananotherifitsworst caserunningtimehasalowerorderofgrowth duetoconstantfactorsandlower orderterms analgorithmwhoserunningtimehasahigherorderofgrowthmight takelesstimeforsmallinputsthananalgorithmwhoserunningtimehasalower designingalgorithms orderofgrowth butforlargeenoughinputs algorithm forexample willrunmorequicklyintheworstcasethana algorithm exercises expressthefunctionn intermsof notation considersortingnnumbersstoredinarrayaby rst ndingthesmallestelementofaandexchangingitwiththeelementina ndthesecondsmallestelementofa andexchangeitwitha continueinthismannerforthe rstn elementsofa writepseudocodeforthisalgorithm whichisknownasselectionsort whatloopinvariantdoesthisalgorithmmaintain whydoesitneedtorunforonlythe rstn elements ratherthanforallnelements givethebest caseandworst caserunningtimesofselectionsortin notation considerlinearsearchagain seeexercise howmanyelementsofthein putsequenceneedtobecheckedontheaverage assumingthattheelementbeingsearchedforisequallylikelytobeanyelementinthearray howaboutintheworstcase whataretheaverage caseandworst caserunningtimesoflinear searchin notation justifyyouranswers howcanwemodifyalmostanyalgorithmtohaveagoodbest caserunningtime designingalgorithmswecanchoosefromawiderangeofalgorithmdesigntechniques forinsertion sort weusedanincrementalapproach havingsortedthesubarraya weinsertedthesingleelementa jintoitsproperplace yieldingthesortedsubarraya inthissection weexamineanalternativedesignapproach knownas conquer whichweshallexploreinmoredetailinchapter llusedivide conquertodesignasortingalgorithmwhoseworst caserunningtimeismuch lessthanthatofinsertionsort oneadvantageofdivide conqueralgorithmsis thattheirrunningtimesareofteneasilydeterminedusingtechniquesthatwewill seeinchapter chapter gettingstarted thedivide conquerapproachmanyusefulalgorithmsarerecursiveinstructure tosolveagivenproblem theycallthemselvesrecursivelyoneormoretimestodealwithcloselyrelatedsub problems thesealgorithmstypicallyfollowadivide conquerapproach theybreaktheproblemintoseveralsubproblemsthataresimilartotheoriginalprob lembutsmallerinsize solvethesubproblemsrecursively andthencombinethese solutionstocreateasolutiontotheoriginalproblem thedivide conquerparadigminvolvesthreestepsateachleveloftherecur sion dividetheproblemintoanumberofsubproblemsthataresmallerinstancesofthesameproblem conquerthesubproblemsbysolvingthemrecursively ifthesubproblemsizesaresmallenough however justsolvethesubproblemsinastraightforwardmanner combinethesolutionstothesubproblemsintothesolutionfortheoriginalprob lem themergesortalgorithmcloselyfollowsthedivide conquerparadigm tuitively itoperatesasfollows dividethen elementsequencetobesortedintotwosubsequencesofn elementseach conquer sortthetwosubsequencesrecursivelyusingmergesort combine mergethetwosortedsubsequencestoproducethesortedanswer therecursion bottomsout whenthesequencetobesortedhaslength inwhichcasethereisnoworktobedone sinceeverysequenceoflength isalreadyinsortedorder thekeyoperationofthemergesortalgorithmisthemergingoftwosortedsequencesinthe combine wemergebycallinganauxiliaryproceduremerge whereaisanarrayandp andrareindicesintothearraysuchthatpq theprocedureassumesthatthesubarraysa qanda rareinsortedorder itmergesthemtoformasinglesortedsubarraythatreplacesthecurrentsubarraya ourmergeproceduretakestime wherendrpc isthetotalnumberofelementsbeingmerged anditworksasfollows returningtoourcard playingmotif supposewehavetwopilesofcardsfaceuponatable eachpileissorted withthesmallestcardsontop wewishtomergethetwopilesintoasinglesortedoutputpile whichistobefacedownonthetable ourbasicstepconsists ofchoosingthesmallerofthetwocardsontopoftheface uppiles removingit fromitspile whichexposesanewtopcard andplacingthiscardfacedownonto designingalgorithms theoutputpile werepeatthisstepuntiloneinputpileisempty atwhichtimewejusttaketheremaininginputpileandplaceitfacedownontotheoutputpile computationally eachbasicsteptakesconstanttime sincewearecomparingjust thetwotopcards sinceweperformatmostnbasicsteps mergingtakes thefollowingpseudocodeimplementstheaboveidea butwithanadditionaltwistthatavoidshavingtocheckwhethereitherpileisemptyineachbasicstep weplaceonthebottomofeachpileasentinelcard whichcontainsaspecialvaluethatweusetosimplifyourcode weuse asthesentinelvalue sothatwheneveracardwith isexposed itcannotbethesmallercardunlessbothpileshavetheirsentinelcardsexposed butoncethathappens allthenonsentinelcards havealreadybeenplacedontotheoutputpile sinceweknowinadvancethat exactlyrpc cardswillbeplacedontotheoutputpile wecanstoponcewehaveperformedthatmanybasicsteps merge dqpc drq letl candr cbenewarrays forid ton ida pci forjd ton jda forkdptor ifl kdl idic elsea kdr jdjc indetail themergeprocedureworksasfollows computesthelengthn ofthesubarraya andline computesthelengthn ofthesubarraya wecreatearrayslandr oflengthsn andn respectively inline theextrapositionineacharraywillholdthesentinel theforloopoflines copiesthesubarraya qintol andtheforloopoflines copiesthesubarraya rintor lines putthesentinelsattheendsofthearrayslandr lines illus chapter gettingstartedalr ijk alr ijk alr ijk alr ijk theoperationoflines inthecallmerge whenthesubarraya containsthesequenceh aftercopyingandinsertingsentinels thearraylcontainsh andthearrayrcontainsh lightlyshadedpositionsinacontaintheir nalvalues andlightlyshadedpositionsinlandrcontainvaluesthathaveyettobecopiedbackintoa takentogether thelightlyshadedpositionsalwayscomprisethevaluesoriginallyina alongwiththetwosentinels heavilyshadedpositionsinacontainvaluesthatwillbecopiedover andheavilyshadedpositionsinlandrcontainvaluesthathavealreadybeencopiedbackintoa thearraysa andr andtheirrespectiveindicesk andjpriortoeachiterationoftheloopoflines tratedinfigure performtherpc basicstepsbymaintainingthefollowingloopinvariant atthestartofeachiterationoftheforloopoflines thesubarraya kcontainsthekpsmallestelementsofl candr insortedorder moreover iandr jarethesmallestelementsoftheirarraysthathavenotbeencopiedbackintoa wemustshowthatthisloopinvariantholdspriortothe rstiterationoftheforloopoflines thateachiterationoftheloopmaintainstheinvariant thattheinvariantprovidesausefulpropertytoshowcorrectnesswhentheloop terminates initialization priortothe rstiterationoftheloop wehavekdp sothatthesubarraya kisempty thisemptysubarraycontainsthekpd smallestelementsoflandr andsinceidjd bothl iandr jarethesmallestelementsoftheirarraysthathavenotbeencopiedbackintoa designingalgorithms alr ijk alr ijk alr ijk alr ijk alr ijk continued thearraysandindicesattermination atthispoint thesubarrayina issorted andthetwosentinelsinlandraretheonlytwoelementsinthesearraysthathavenotbeencopiedintoa maintenance toseethateachiterationmaintainstheloopinvariant letus rstsupposethatl thenl iisthesmallestelementnotyetcopiedbackintoa becausea kcontainsthekpsmallestelements afterline copiesl iintoa thesubarraya kwillcontainthekpc smallestelements incrementingk intheforloopupdate andi inline reestablishestheloopinvariantforthenextiteration ifinsteadl thenlines performtheappropriateactiontomaintaintheloopinvariant termination attermination kdrc bytheloopinvariant thesubarraya whichisa containsthekpdrpc smallestelementsofl candr insortedorder thearrayslandrtogethercontainn drpc elements allbutthetwolargesthavebeencopiedbackintoa andthesetwolargestelementsarethesentinels chapter gettingstartedtoseethatthemergeprocedurerunsin wherendrpc observethateachoflines takesconstanttime theforloopsoflines andthereareniterationsoftheforloopoflines eachofwhichtakesconstanttime wecannowusethemergeprocedureasasubroutineinthemergesortal gorithm theproceduremerge sort sortstheelementsinthesubar raya ifpr thesubarrayhasatmostoneelementandisthereforealreadysorted otherwise thedividestepsimplycomputesanindexqthatpar titionsa rintotwosubarrays containingdn eelements anda containingbn celements merge sort ifp qdb pcr merge sort merge sort merge tosorttheentiresequenceadha wemaketheinitialcallmerge sort whereonceagaina lengthdn lustratestheoperationoftheprocedurebottom upwhennisapowerof thealgorithmconsistsofmergingpairsof itemsequencestoformsortedsequencesoflength mergingpairsofsequencesoflength toformsortedsequencesoflength andsoon untiltwosequencesoflengthn aremergedtoformthe nalsortedsequenceoflengthn analyzingdivide conqueralgorithmswhenanalgorithmcontainsarecursivecalltoitself wecanoftendescribeitsrunningtimebyarecurrenceequationorrecurrence whichdescribestheoverallrunningtimeonaproblemofsizenintermsoftherunningtimeonsmallerinputs wecanthenusemathematicaltoolstosolvetherecurrenceandprovideboundson theperformanceofthealgorithm weshallseeinchapter howtoformallyinterpretequationscontaining notation theexpressiondxedenotestheleastintegergreaterthanorequaltox andbxcdenotesthegreatestintegerlessthanorequaltox thesenotationsarede nedinchapter theeasiestwaytoverifythatsettingqtob pcr cyieldssubarraysa qanda rofsizesdn eandbn respectively istoexaminethefourcasesthatarisedependingonwhethereachofpandrisoddoreven designingalgorithms mergemergemergesorted sequenceinitial sequencemergemergemergemergefigure theoperationofmergesortonthearrayadh thelengthsofthesortedsequencesbeingmergedincreaseasthealgorithmprogressesfrombottomtotop arecurrencefortherunningtimeofadivide conqueralgorithmfallsoutfromthethreestepsofthebasicparadigm asbefore welett betherunningtimeonaproblemofsizen iftheproblemsizeissmallenough sayncforsomeconstantc thestraightforwardsolutiontakesconstanttime whichwewriteas supposethatourdivisionoftheproblemyieldsasubproblems eachofwhichis bthesizeoftheoriginal formergesort bothaandbare butweshallseemanydivide conqueralgorithmsinwhicha ittakestimet tosolveonesubproblemofsizen andsoittakestimeat tosolveaofthem ifwetaked timetodividetheproblemintosubproblemsandc timetocombinethesolutionstothesubproblemsintothesolutiontotheoriginalproblem wegettherecurrencet ifnc otherwise inchapter weshallseehowtosolvecommonrecurrencesofthisform analysisofmergesortalthoughthepseudocodeformerge sortworkscorrectlywhenthenumberofelementsisnoteven ourrecurrence basedanalysisissimpli edifweassumethat chapter gettingstartedtheoriginalproblemsizeisapowerof eachdividestepthenyieldstwosubse quencesofsizeexactlyn inchapter weshallseethatthisassumptiondoesnotaffecttheorderofgrowthofthesolutiontotherecurrence wereasonasfollowstosetuptherecurrencefort theworst caserunningtimeofmergesortonnnumbers mergesortonjustoneelementtakesconstanttime whenwehaven elements webreakdowntherunningtimeasfollows thedividestepjustcomputesthemiddleofthesubarray whichtakesconstanttime conquer werecursivelysolvetwosubproblems eachofsizen whichcon tributes totherunningtime combine wehavealreadynotedthatthemergeprocedureonann elementsubarraytakestime andsoc whenweaddthefunctionsd andc forthemergesortanalysis weareaddingafunctionthatis andafunctionthatis thissumisalinearfunctionofn thatis addingittothe termfromthe conquer stepgivestherecurrencefortheworst caserunningtimet ofmergesort ifnd ifn inchapter weshallseethe mastertheorem whichwecanusetoshowthatt nlgn wherelgnstandsforlog becausethelogarithmfunc tiongrowsmoreslowlythananylinearfunction forlargeenoughinputs mergesort withits nlgn runningtime outperformsinsertionsort whoserunningtimeis intheworstcase wedonotneedthemastertheoremtointuitivelyunderstandwhythesolutiontotherecurrence ist nlgn letusrewriterecurrence ast cifnd ccnifn wheretheconstantcrepresentsthetimerequiredtosolveproblemsofsize aswellasthetimeperarrayelementofthedivideandcombinesteps itisunlikelythatthesameconstantexactlyrepresentsboththetimetosolveproblemsofsize andthetimeperarrayelementofthedivideandcombinesteps wecangetaroundthisproblembylettingcbethelargerofthesetimesandunderstandingthatourrecurrencegivesanupperboundontherunningtime orbylettingcbethelesserofthesetimesandunderstandingthatourrecurrencegivesalowerboundontherunningtime bothboundsareontheorderofnlgnand takentogether givea nlgn runningtime designingalgorithms showshowwecansolverecurrence forconvenience weas sumethatnisanexactpowerof ofthe gureshowst whichweexpandinpart intoanequivalenttreerepresentingtherecurrence thecntermistheroot thecostincurredatthetoplevelofrecursion andthetwosubtreesof therootarethetwosmallerrecurrencest showsthisprocesscarriedonestepfurtherbyexpandingt thecostincurredateachofthetwosub nodesatthesecondlevelofrecursioniscn wecontinueexpandingeachnodeinthetreebybreakingitintoitsconstituentpartsasdeterminedbytherecurrence untiltheproblemsizesgetdownto eachwithacostofc showstheresultingrecursiontree weaddthecostsacrosseachlevelofthetree thetoplevelhastotalcostcn thenextleveldownhastotalcostc dcn thelevelafterthathastotalcostc dcn andsoon ingeneral thelevelibelowthetophas inodes eachcontributingacostofc sothattheithlevelbelowthetophastotalcost dcn thebottomlevelhasnnodes eachcontributingacostofc foratotalcostofcn thetotalnumberoflevelsoftherecursiontreeinfigure islgnc wherenisthenumberofleaves correspondingtotheinputsize aninformalinductiveargumentjusti esthisclaim thebasecaseoccurswhennd inwhichcasethetreehasonlyonelevel sincelg wehavethatlgnc givesthecorrectnumberoflevels nowassumeasaninductivehypothesisthatthenumberoflevels ofarecursiontreewith ileavesislg dic sinceforanyvalueofi wehavethatlg idi becauseweareassumingthattheinputsizeisapowerof thenextinputsizetoconsideris atreewithnd leaveshasonemorelevelthanatreewith ileaves andsothetotalnumberoflevelsis dlg tocomputethetotalcostrepresentedbytherecurrence wesimplyaddupthecostsofallthelevels therecursiontreehaslgnc levels eachcostingcn foratotalcostofcn lgnc dcnlgnccn ignoringthelow ordertermandtheconstantcgivesthedesiredresultof nlgn exercises usingfigure asamodel illustratetheoperationofmergesortonthearray adh rewritethemergeproceduresothatitdoesnotusesentinels insteadstoppingonceeitherarraylorrhashadallitselementscopiedbacktoaandthencopyingtheremainderoftheotherarraybackintoa chapter gettingstartedcncn total cncnlgncnnccccccc cnt cncn cncn howtoconstructarecursiontreefortherecurrencet ccn showst whichprogressivelyexpandsin toformtherecursiontree thefullyexpandedtreeinpart haslgnc levels ithasheightlgn asindicated andeachlevelcontributesatotalcostofcn thetotalcost therefore iscnlgnccn whichis nlgn problemsforchapter usemathematicalinductiontoshowthatwhennisanexactpowerof thesolu tionoftherecurrencet ifnd cnifnd fork ist dnlgn wecanexpressinsertionsortasarecursiveprocedureasfollows inordertosort werecursivelysorta nandtheninsertintothesortedarraya writearecurrencefortherunningtimeofthisrecursiveversionofinsertionsort referringbacktothesearchingproblem seeexercise observethatifthesequenceaissorted wecancheckthemidpointofthesequenceagainstandeliminatehalfofthesequencefromfurtherconsideration thebinarysearchal gorithmrepeatsthisprocedure halvingthesizeoftheremainingportionofthe sequenceeachtime writepseudocode eitheriterativeorrecursive forbinary arguethattheworst caserunningtimeofbinarysearchis lgn observethatthewhileloopoflines oftheinsertion sortprocedureinsection usesalinearsearchtoscan backward throughthesortedsubarray canweuseabinarysearch seeexercise insteadtoimprovetheoverallworst caserunningtimeofinsertionsortto nlgn describea nlgn timealgorithmthat givenasetsofnintegersandanotherintegerx determineswhetherornotthereexisttwoelementsinswhosesumisexactlyx problems insertionsortonsmallarraysinmergesortalthoughmergesortrunsin nlgn worst casetimeandinsertionsortrunsin worst casetime theconstantfactorsininsertionsortcanmakeitfasterinpracticeforsmallproblemsizesonmanymachines itmakessenseto coarsentheleavesoftherecursionbyusinginsertionsortwithinmergesortwhen chapter gettingstartedsubproblemsbecomesuf cientlysmall consideramodi cationtomergesortinwhichn ksublistsoflengthkaresortedusinginsertionsortandthenmergedusingthestandardmergingmechanism wherekisavaluetobedetermined showthatinsertionsortcansortthen ksublists eachoflengthk worst casetime showhowtomergethesublistsin nlg worst casetime giventhatthemodi edalgorithmrunsin nkcnlg worst casetime whatisthelargestvalueofkasafunctionofnforwhichthemodi edalgorithmhasthesamerunningtimeasstandardmergesort intermsof notation howshouldwechoosekinpractice correctnessofbubblesortbubblesortisapopular butinef cient sortingalgorithm itworksbyrepeatedly swappingadjacentelementsthatareoutoforder bubblesort forid toa forjda lengthdowntoic ifa exchangea jwitha leta denotetheoutputofbubblesort toprovethatbubblesortiscorrect weneedtoprovethatitterminatesandthata wherenda inordertoshowthatbubblesortactuallysorts whatelsedoweneedtoprove thenexttwopartswillproveinequality statepreciselyaloopinvariantfortheforloopinlines andprovethatthisloopinvariantholds yourproofshouldusethestructureoftheloopinvariantproofpresentedinthischapter usingtheterminationconditionoftheloopinvariantprovedinpart statealoopinvariantfortheforloopinlines thatwillallowyoutoprovein equality yourproofshouldusethestructureoftheloopinvariantproof presentedinthischapter problemsforchapter whatistheworst caserunningtimeofbubblesort howdoesitcomparetotherunningtimeofinsertionsort correctnessofhorner srulethefollowingcodefragmentimplementshorner sruleforevaluatingapolynomialp dnxkd akxkda ccx cxan giventhecoef cientsa anandavalueforx foridndownto ydaicxya intermsof notation whatistherunningtimeofthiscodefragmentforhorner srule writepseudocodetoimplementthenaivepolynomial evaluationalgorithmthatcomputeseachtermofthepolynomialfromscratch whatistherunningtime ofthisalgorithm howdoesitcomparetohorner srule considerthefollowingloopinvariant atthestartofeachiterationoftheforloopoflines ydn xkd akcic interpretasummationwithnotermsasequaling followingthestructureoftheloopinvariantproofpresentedinthischapter usethisloopinvarianttoshow attermination ydpnkd akxk concludebyarguingthatthegivencodefragmentcorrectlyevaluatesapoly nomialcharacterizedbythecoef cientsa inversionsleta beanarrayofndistinctnumbers ifi janda thenthepair iscalledaninversionofa listthe veinversionsofthearrayh chapter gettingstartedb whatarraywithelementsfromthesetf nghasthemostinversions howmanydoesithave whatistherelationshipbetweentherunningtimeofinsertionsortandthenumberofinversionsintheinputarray justifyyouranswer giveanalgorithmthatdeterminesthenumberofinversionsinanypermutationonnelementsin nlgn worst casetime hint modifymergesort chapternotesin knuthpublishedthe rstofthreevolumeswiththegeneraltitletheartofcomputerprogramming rstvolumeusheredinthemodernstudyofcomputeralgorithmswithafocusontheanalysisofrunningtime andthe fullseriesremainsanengagingandworthwhilereferenceformanyofthetopicspresentedhere accordingtoknuth theword algorithm isderivedfromthename khow arizm aninth centurypersianmathematician aho hopcroft andullman advocatedtheasymptoticanalysisofalgo rithms usingnotationsthatchapter introduces including notation asameansofcomparingrelativeperformance theyalsopopularizedtheuseofre currencerelationstodescribetherunningtimesofrecursivealgorithms knuth providesanencyclopedictreatmentofmanysortingalgorithms hiscomparisonofsortingalgorithms includesexactstep countinganalyses liketheoneweperformedhereforinsertionsort knuth sdiscussionofinsertion sortencompassesseveralvariationsofthealgorithm themostimportantofthese isshell ssort introducedbyd whichusesinsertionsortonperiodic subsequencesoftheinputtoproduceafastersortingalgorithm mergesortisalsodescribedbyknuth hementionsthatamechanicalcolla torcapableofmergingtwodecksofpunchedcardsinasinglepasswasinventedin vonneumann oneofthepioneersofcomputerscience apparentlywroteaprogramformergesortontheedvaccomputerin theearlyhistoryofprovingprogramscorrectisdescribedbygries whocreditsp naurwiththe rstarticleinthis eld griesattributesloopinvariantsto floyd thetextbookbymitchell describesmorerecentprogressin provingprogramscorrect growthoffunctionstheorderofgrowthoftherunningtimeofanalgorithm nedinchapter givesasimplecharacterizationofthealgorithm sef ciencyandalsoallowsusto comparetherelativeperformanceofalternativealgorithms oncetheinputsizenbecomeslargeenough mergesort withits nlgn worst caserunningtime beatsinsertionsort whoseworst caserunningtimeis althoughwecansometimesdeterminetheexactrunningtimeofanalgorithm aswedidforinsertion sortinchapter theextraprecisionisnotusuallyworththeeffortofcomputing forlargeenoughinputs themultiplicativeconstantsandlower ordertermsof anexactrunningtimearedominatedbytheeffectsoftheinputsizeitself whenwelookatinputsizeslargeenoughtomakeonlytheorderofgrowthoftherunningtimerelevant wearestudyingtheasymptoticef ciencyofalgorithms thatis weareconcernedwithhowtherunningtimeofanalgorithmincreaseswith thesizeoftheinputinthelimit asthesizeoftheinputincreaseswithoutbound usually analgorithmthatisasymptoticallymoreef cientwillbethebestchoiceforallbutverysmallinputs thischaptergivesseveralstandardmethodsforsimplifyingtheasymptoticanal ysisofalgorithms thenextsectionbeginsbyde ningseveraltypesof asymp toticnotation ofwhichwehavealreadyseenanexamplein notation wethenpresentseveralnotationalconventionsusedthroughoutthisbook nallywe reviewthebehavioroffunctionsthatcommonlyariseintheanalysisofalgorithms asymptoticnotationthenotationsweusetodescribetheasymptoticrunningtimeofanalgorithmarede nedintermsoffunctionswhosedomainsarethesetofnaturalnumbersndf suchnotationsareconvenientfordescribingtheworst caserunning timefunctiont whichusuallyisde nedonlyonintegerinputsizes wesometimes nditconvenient however toabuseasymptoticnotationinava chapter growthoffunctionsrietyofways forexample wemightextendthenotationtothedomainofrealnumbersor alternatively restrictittoasubsetofthenaturalnumbers weshould makesure however tounderstandtheprecisemeaningofthenotationsothatwhen weabuse wedonotmisuseit thissectionde nesthebasicasymptoticnotationsandalsointroducessomecommonabuses asymptoticnotation functions andrunningtimeswewilluseasymptoticnotationprimarilytodescribetherunningtimesofalgo rithms aswhenwewrotethatinsertionsort sworst caserunningtimeis asymptoticnotationactuallyappliestofunctions however recallthatwecharac terizedinsertionsort sworst caserunningtimeasan cbncc forsomeconstantsa andc bywritingthatinsertionsort srunningtimeis weabstractedawaysomedetailsofthisfunction becauseasymptoticnotationappliestofunc tions whatwewerewritingas wasthefunctionan cbncc whichinthatcasehappenedtocharacterizetheworst caserunningtimeofinsertionsort inthisbook thefunctionstowhichweapplyasymptoticnotationwillusuallycharacterizetherunningtimesofalgorithms butasymptoticnotationcanapplyto functionsthatcharacterizesomeotheraspectofalgorithms theamountofspace theyuse forexample oreventofunctionsthathavenothingwhatsoevertodo withalgorithms evenwhenweuseasymptoticnotationtoapplytotherunningtimeofanal gorithm weneedtounderstandwhichrunningtimewemean sometimesweareinterestedintheworst caserunningtime however wewishtocharacterize therunningtimenomatterwhattheinput inotherwords weoftenwishtomake ablanketstatementthatcoversallinputs notjusttheworstcase weshallsee asymptoticnotationsthatarewellsuitedtocharacterizingrunningtimesnomatterwhattheinput notationinchapter wefoundthattheworst caserunningtimeofinsertionsortist letusde newhatthisnotationmeans foragivenfunctiong wedenoteby thesetoffunctions dff wthereexistpositiveconstantsc andn suchthat forallnn withinsetnotation acolonmeans suchthat asymptoticnotation nnnn graphicexamplesofthe andnotations ineachpart thevalueofn shownistheminimumpossiblevalue anygreatervaluewouldalsowork notationboundsafunc tiontowithinconstantfactors wewritef ifthereexistpositiveconstantsn andc suchthatatandtotherightofn thevalueoff alwaysliesbetweenc andc inclusive notationgivesanupperboundforafunctiontowithinaconstantfactor wewritef iftherearepositiveconstantsn andcsuchthatatandtotherightofn thevalueoff alwaysliesonorbelowcg notationgivesalowerboundforafunctiontowithinaconstantfactor wewritef iftherearepositiveconstantsn andcsuchthatatandtotherightofn thevalueoff alwaysliesonorabovecg afunctionf belongstotheset ifthereexistpositiveconstantsc andc suchthatitcanbe sandwiched betweenc andc forsuf cientlylargen because isaset wecouldwrite toindicatethatf isamemberof instead wewillusuallywrite toexpressthesamenotion youmightbeconfusedbecauseweabuseequalityinthisway butweshallseelaterinthissectionthatdoingso hasitsadvantages givesanintuitivepictureoffunctionsf andg wheref forallvaluesofnatandtotherightofn thevalueoff liesatorabovec andatorbelowc inotherwords forallnn thefunctionf isequaltog towithinaconstantfactor wesaythatg isanasymptoticallytightboundforf thede nitionof requiresthateverymemberf beasymptoticallynonnegative thatis thatf benonnegativewhenevernissuf cientlylarge anasymptoticallypositivefunctionisonethatispositiveforallsuf cientlylargen consequently thefunctiong itselfmustbeasymptoticallynonnegative orelsetheset isempty weshallthereforeassumethateveryfunctionusedwithin notationisasymptoticallynonnegative thisassumptionholdsfortheotherasymptoticnotationsde nedinthischapteraswell chapter growthoffunctionsinchapter weintroducedaninformalnotionof notationthatamountedtothrowingawaylower ordertermsandignoringtheleadingcoef cientofthe highest orderterm letusbrie yjustifythisintuitionbyusingtheformalde nitiontoshowthat todoso wemustdeterminepositiveconstantsc andn suchthatc forallnn dividingbyn yieldsc wecanmaketheright handinequalityholdforanyvalueofn bychoosinganyconstantc likewise wecanmaketheleft handinequalityholdforanyvalueofn bychoosinganyconstantc bychoosingc andn wecanverifythat certainly otherchoicesfortheconstantsexist buttheimportantthingisthatsomechoiceexists notethattheseconstantsdependonthefunction adifferentfunctionbelongingto wouldusuallyrequiredifferentconstants wecanalsousetheformalde nitiontoverifythat supposeforthepurposeofcontradictionthatc andn existsuchthat forallnn butthendividingbyn yieldsnc whichcannotpossiblyholdforarbitrarilylargen sincec isconstant intuitively thelower ordertermsofanasymptoticallypositivefunctioncanbeignoredindeterminingasymptoticallytightboundsbecausetheyareinsigni cant forlargen whennislarge evenatinyfractionofthehighest ordertermsuf cestodominatethelower orderterms settingc toavaluethatisslightlysmallerthanthecoef cientofthehighest ordertermandsettingc toavaluethatisslightlylargerpermitstheinequalitiesinthede nitionof notationtobesat thecoef cientofthehighest ordertermcanlikewisebeignored sinceit onlychangesc andc byaconstantfactorequaltothecoef cient asanexample consideranyquadraticfunctionf dan cbncc wherea andcareconstantsanda throwingawaythelower ordertermsandignoringtheconstantyieldsf formally toshowthesamething wetaketheconstantsc andn max jbj pjcj youmayverifythat cbnccc forallnn ingeneral foranypolynomialp dpdid aini wheretheaiareconstantsandad wehavep seeproblem sinceanyconstantisadegree polynomial wecanexpressanyconstantfunc tionas thislatternotationisaminorabuse however becausethe asymptoticnotation expressiondoesnotindicatewhatvariableistendingtoin nity weshalloftenusethenotation tomeaneitheraconstantoraconstantfunctionwithrespecttosomevariable notationthe notationasymptoticallyboundsafunctionfromaboveandbelow whenwehaveonlyanasymptoticupperbound weuseo notation foragivenfunc tiong wedenotebyo pronounced ohofgofn orsometimesjust ohofgofn thesetoffunctionso dff wthereexistpositiveconstantscandn suchthat forallnn weuseo notationtogiveanupperboundonafunction towithinaconstantfactor showstheintuitionbehindo notation forallvaluesnatandtotherightofn thevalueofthefunctionf isonorbelowcg wewritef toindicatethatafunctionf isamemberoftheseto notethatf impliesf notationisastrongernotionthano notation writtenset theoretically wehave ourproofthatanyquadraticfunctionan cbncc wherea isin alsoshowsthatanysuchquadraticfunctionisino whatmaybemoresurprisingisthatwhena anylinearfunctionancbisino whichiseasilyveri edbytakingcdacjbjandn dmax ifyouhaveseeno notationbefore youmight nditstrangethatweshouldwrite forexample ndo intheliterature wesometimes ndo notationinformallydescribingasymptoticallytightbounds thatis whatwehavede nedusing notation inthisbook however whenwewritef wearemerelyclaimingthatsomeconstantmultipleofg isanasymptoticupperboundonf withnoclaimabouthowtightanupperbounditis distinguish ingasymptoticupperboundsfromasymptoticallytightboundsisstandardinthe algorithmsliterature usingo notation wecanoftendescribetherunningtimeofanalgorithmmerelybyinspectingthealgorithm soverallstructure forexample thedoubly nestedloopstructureoftheinsertionsortalgorithmfromchapter immediately yieldsano upperboundontheworst caserunningtime thecostofeachit erationoftheinnerloopisboundedfromabovebyo constant theindicesi therealproblemisthatourordinarynotationforfunctionsdoesnotdistinguishfunctionsfromvalues calculus theparameterstoafunctionareclearlyspeci thefunctionn couldbewrittenasn oreven adoptingamorerigorousnotation however wouldcomplicatealgebraicmanipulations andsowechoosetotoleratetheabuse chapter growthoffunctionsandjarebothatmostn andtheinnerloopisexecutedatmostonceforeachofthen pairsofvaluesforiandj sinceo notationdescribesanupperbound whenweuseittoboundtheworst caserunningtimeofanalgorithm wehaveaboundontherunningtimeofthealgo rithmoneveryinput theblanketstatementwediscussedearlier theo boundonworst caserunningtimeofinsertionsortalsoappliestoitsrunningtime oneveryinput boundontheworst caserunningtimeofinsertionsort however doesnotimplya boundontherunningtimeofinsertionsortoneveryinput forexample wesawinchapter thatwhentheinputisalreadysorted insertionsortrunsin technically itisanabusetosaythattherunningtimeofinsertionsortiso sinceforagivenn theactualrunningtimevaries dependingontheparticularinputofsizen whenwesay therunningtimeiso wemeanthatthereisafunctionf thatiso suchthatforanyvalueofn nomatterwhatparticularinputofsizenischosen therunningtimeonthatinputisboundedfromabovebythevaluef equivalently wemeanthattheworst caserunningtimeiso notationjustaso notationprovidesanasymptoticupperboundonafunction notationprovidesanasymptoticlowerbound foragivenfunctiong wedenoteby pronounced omegaofgofn orsometimesjust omegaofgofn thesetoffunctions dff wthereexistpositiveconstantscandn suchthat forallnn showstheintuitionbehind notation forallvaluesnatortotherightofn thevalueoff isonorabovecg fromthede nitionsoftheasymptoticnotationswehaveseenthusfar itiseasytoprovethefollowingimportanttheorem seeexercise theorem foranytwofunctionsf andg wehavef ifandonlyiff andf asanexampleoftheapplicationofthistheorem ourproofthatan cbnccd foranyconstantsa andc wherea immediatelyimpliesthatan cbnccdn andan cbnccdo inpractice ratherthanusingtheorem toobtainasymptoticupperandlowerboundsfromasymptotically tightbounds aswedidforthisexample weusuallyuseittoproveasymptotically tightboundsfromasymptoticupperandlowerbounds asymptoticnotation whenwesaythattherunningtime nomodi ofanalgorithmis wemeanthatnomatterwhatparticularinputofsizenischosenforeachvalueofn therunningtimeonthatinputisatleastaconstanttimesg forsuf cientlylargen equivalently wearegivingalowerboundonthebest caserunningtimeofanalgorithm forexample thebest caserunningtimeofinsertionsortis whichimpliesthattherunningtimeofinsertionsortis therunningtimeofinsertionsortthereforebelongstoboth ando sinceitfallsanywherebetweenalinearfunctionofnandaquadraticfunctionofn moreover theseboundsareasymptoticallyastightaspossible forinstance therunningtimeofinsertionsortisnotn sincethereexistsaninputforwhichinsertionsortrunsin whentheinputisalreadysorted itisnotcontradictory however tosaythattheworst caserunningtimeofinsertionsortisn sincethereexistsaninputthatcausesthealgorithmtotaken asymptoticnotationinequationsandinequalitieswehavealreadyseenhowasymptoticnotationcanbeusedwithinmathematicalformulas forexample inintroducingo notation wewrote ndo wemightalsowrite howdoweinterpretsuchformulas whentheasymptoticnotationstandsalone thatis notwithinalargerformula ontheright handsideofanequation orinequality asinndo wehavealreadyde nedtheequalsigntomeansetmembership ingeneral however whenasymptoticnotationappearsinaformula weinterpretitasstand ingforsomeanonymousfunctionthatwedonotcaretoname forexample formula meansthat wheref issomefunctionintheset inthiscase weletf whichindeedisin usingasymptoticnotationinthismannercanhelpeliminateinessentialdetailandclutterinanequation forexample inchapter weexpressedtheworst runningtimeofmergesortastherecurrencet ifweareinterestedonlyintheasymptoticbehavioroft thereisnopointinspecifyingallthelower ordertermsexactly theyareallunderstoodtobeincluded intheanonymousfunctiondenotedbytheterm thenumberofanonymousfunctionsinanexpressionisunderstoodtobeequaltothenumberoftimestheasymptoticnotationappears forexample intheex pressionnxid chapter growthoffunctionsthereisonlyasingleanonymousfunction afunctionofi thisexpressionisthusnotthesameaso cco whichdoesn treallyhaveacleaninterpretation insomecases asymptoticnotationappearsontheleft handsideofanequation asin weinterpretsuchequationsusingthefollowingrule nomatterhowtheanony mousfunctionsarechosenontheleftoftheequalsign thereisawaytochoose theanonymousfunctionsontherightoftheequalsigntomaketheequationvalid ourexamplemeansthatforanyfunctionf thereissomefunc tiong suchthat foralln inotherwords theright handsideofanequationprovidesacoarserlevelofdetailthantheleft wecanchaintogetheranumberofsuchrelationships asin wecaninterpreteachequationseparatelybytherulesabove rstequa tionsaysthatthereissomefunctionf suchthat foralln thesecondequationsaysthatforanyfunctiong suchasthef justmentioned thereissomefunctionh suchthat foralln notethatthisinterpretationimpliesthat whichiswhatthechainingofequationsintuitivelygivesus notationtheasymptoticupperboundprovidedbyo notationmayormaynotbeasymp toticallytight thebound isasymptoticallytight butthebound ndo isnot weuseo notationtodenoteanupperboundthatisnotasymp toticallytight weformallyde neo ohofgofn astheseto dff wforanypositiveconstantc thereexistsaconstantn suchthat forallnn forexample ndo thede nitionsofo notationando notationaresimilar themaindifferenceisthatinf thebound holdsforsomecon stantc butinf thebound holdsforallconstantsc intuitively ino notation thefunctionf becomesinsigni cantrelativetog asnapproachesin nity thatis asymptoticnotation limn someauthorsusethislimitasade nitionoftheo notation thede nitioninthisbookalsorestrictstheanonymousfunctionstobeasymptoticallynonnegative notationbyanalogy notationisto notationaso notationistoo notation weuse notationtodenotealowerboundthatisnotasymptoticallytight onewaytode neitisbyf ifandonlyifg formally however wede omegaofgofn astheset dff wforanypositiveconstantc thereexistsaconstantn suchthat forallnn forexample butn therelationf impliesthatlimn ifthelimitexists thatis becomesarbitrarilylargerelativetog asnapproachesin nity comparingfunctionsmanyoftherelationalpropertiesofrealnumbersapplytoasymptoticcomparisonsaswell forthefollowing assumethatf andg areasymptoticallypositive transitivity andg implyf andg implyf andg implyf andg implyf andg implyf exivity chapter growthoffunctionssymmetry ifandonlyifg transposesymmetry ifandonlyifg ifandonlyifg becausethesepropertiesholdforasymptoticnotations wecandrawananalogybetweentheasymptoticcomparisonoftwofunctionsfandgandthecomparisonoftworealnumbersaandb islikeab islikeab islikeadb islikea islikea wesaythatf isasymptoticallysmallerthang iff andf isasymptoticallylargerthang iff onepropertyofrealnumbers however doesnotcarryovertoasymptoticnota tion trichotomy foranytworealnumbersaandb exactlyoneofthefollowingmusthold adb ora althoughanytworealnumberscanbecompared notallfunctionsareasymptot icallycomparable thatis fortwofunctionsf andg itmaybethecasethatneitherf norf holds forexample wecannotcomparethefunctionsnandn csinnusingasymptoticnotation sincethevalueoftheexponentinn csinnoscillatesbetween takingonallvaluesinbetween exercises letf andg beasymptoticallynonnegativefunctions usingthebasicde nitionof notation provethatmax showthatforanyrealconstantsaandb whereb nca standardnotationsandcommonfunctions explainwhythestatement therunningtimeofalgorithmaisatleasto ismeaningless ndo provetheorem provethattherunningtimeofanalgorithmis ifandonlyifitsworst caserunningtimeiso anditsbest caserunningtimeis provethato istheemptyset wecanextendournotationtothecaseoftwoparametersnandmthatcangotoin nityindependentlyatdifferentrates foragivenfunctiong wedenotebyo thesetoffunctionso dff wthereexistpositiveconstantsc andm suchthat forallnn ormm givecorrespondingde nitionsforg standardnotationsandcommonfunctionsthissectionreviewssomestandardmathematicalfunctionsandnotationsandex plorestherelationshipsamongthem italsoillustratestheuseoftheasymptotic notations monotonicityafunctionf ismonotonicallyincreasingifmnimpliesf similarly itismonotonicallydecreasingifmnimpliesf afunctionf isstrictlyincreasingifm nimpliesf andstrictlydecreasingifm nimpliesf chapter growthoffunctionsfloorsandceilingsforanyrealnumberx wedenotethegreatestintegerlessthanorequaltoxbybxc oorofx andtheleastintegergreaterthanorequaltoxbydxe theceilingofx forallrealx bxcxdxe foranyintegern ecbn cdn andforanyrealnumberx andintegersa aebdlxabm acbdjxabk labmac jabka oorfunctionf dbxcismonotonicallyincreasing asistheceilingfunc tionf ddxe modulararithmeticforanyintegeraandanypositiveintegern thevalueamodnistheremainder orresidue ofthequotienta amodndanba itfollowsthat amodn givenawell nednotionoftheremainderofoneintegerwhendividedbyan itisconvenienttoprovidespecialnotationtoindicateequalityofremainders amodn bmodn wewriteab modn andsaythataisequivalenttob modulon inotherwords modn ifaandbhavethesameremain derwhendividedbyn equivalently modn ifandonlyifnisadivisorofba wewritea modn ifaisnotequivalenttob modulon standardnotationsandcommonfunctions polynomialsgivenanonnegativeintegerd apolynomialinnofdegreedisafunctionp oftheformp ddxid aini wheretheconstantsa adarethecoef cientsofthepolynomialandad apolynomialisasymptoticallypositiveifandonlyifad foranasymptoticallypositivepolynomialp ofdegreed wehavep foranyrealconstanta thefunctionnaismonotonicallyincreasing andforanyrealconstanta thefunctionnaismonotonicallydecreasing wesaythatafunctionf ispolynomiallyboundediff forsomeconstantk exponentialsforallreala andn wehavethefollowingidentities ndamn amandamcn forallnanda thefunctionanismonotonicallyincreasinginn whenconvenient weshallassume wecanrelatetheratesofgrowthofpolynomialsandexponentialsbythefol lowingfact forallrealconstantsaandbsuchthata limn nband fromwhichwecanconcludethatnbdo anyexponentialfunctionwithabasestrictlygreaterthan growsfasterthananypolynomialfunction usingetodenote thebaseofthenaturallogarithmfunction wehaveforallrealx exd cxcx xid xii chapter growthoffunctionswhere denotesthefactorialfunctionde nedlaterinthissection forallrealx wehavetheinequalityex whereequalityholdsonlywhenxd whenjxj wehavetheapproximation cxex cxcx whenx theapproximationofexby cxisquitegood exd cxc inthisequation theasymptoticnotationisusedtodescribethelimitingbehaviorasx ratherthanasx wehaveforallx limn cxnndex logarithmsweshallusethefollowingnotations lgndlog binarylogarithm lnndlogen naturallogarithm lgknd lgn exponentiation lglgndlg lgn composition animportantnotationalconventionweshalladoptisthatlogarithmfunctionswillapplyonlytothenexttermintheformula sothatlgnckwillmean lgn ckandnotlg nck ifweholdb constant thenforn thefunctionlogbnisstrictlyincreasing forallreala andn adblogba logc dlogcaclogcb logbandnlogba logbadlogcalogcb logb logba logbad logab alogbcdclogba ineachequationabove logarithmbasesarenot standardnotationsandcommonfunctions byequation changingthebaseofalogarithmfromoneconstanttoan otherchangesthevalueofthelogarithmbyonlyaconstantfactor andsoweshall oftenusethenotation lgn whenwedon tcareaboutconstantfactors suchasino notation computerscientists tobethemostnaturalbaseforlogarithmsbecausesomanyalgorithmsanddatastructuresinvolvesplittingaprobleminto twoparts thereisasimpleseriesexpansionforln whenjxj dxx wealsohavethefollowinginequalitiesforx cxln whereequalityholdsonlyforxd wesaythatafunctionf ispolylogarithmicallyboundediff lgkn forsomeconstantk wecanrelatethegrowthofpolynomialsandpolylogarithmsbysubstitutinglgnfornand aforainequation yieldinglimn lgbn lgndlimn lgbnnad fromthislimit wecanconcludethatlgbndo foranyconstanta anypositivepolynomialfunctiongrowsfasterthananypolylogarithmicfunction factorialsthenotationn nfactorial isde nedforintegersn asn ifnd ifn aweakupperboundonthefactorialfunctionisn sinceeachofthentermsinthefactorialproductisatmostn stirling sapproximation dpnnen chapter growthoffunctionswhereeisthebaseofthenaturallogarithm givesusatighterupperbound andalowerboundaswell asexercise asksyoutoprove nlgn wherestirling sapproximationishelpfulinprovingequation thefollowingequationalsoholdsforalln dpnnene functionaliterationweusethenotationf todenotethefunctionf iterativelyapplieditimestoaninitialvalueofn formally letf beafunctionoverthereals fornon negativeintegersi werecursivelyde nef nifid ifi forexample iff thenf theiteratedlogarithmfunctionweusethenotationlgn logstarofn todenotetheiteratedlogarithm nedasfollows letlg nbeasde nedabove withf dlgn becausethelog arithmofanonpositivenumberisunde ned nisde nedonlyiflg besuretodistinguishlg thelogarithmfunctionapplieditimesinsuccession startingwithargumentn fromlgin thelogarithmofnraisedtotheithpower thenwede netheiteratedlogarithmfunctionaslgndmin wlg theiteratedlogarithmisaveryslowlygrowingfunction standardnotationsandcommonfunctions sincethenumberofatomsintheobservableuniverseisestimatedtobeabout whichismuchlessthan werarelyencounteraninputsizensuchthatlgn fibonaccinumberswede nethefibonaccinumbersbythefollowingrecurrence fidfi cfi fori eachfibonaccinumberisthesumofthetwopreviousones yieldingthesequence fibonaccinumbersarerelatedtothegoldenratioandtoitsconjugatey whicharethetworootsoftheequationx dxc andaregivenbythefollowingformulas seeexercise speci cally wehavefidiyip whichwecanprovebyinduction wehave whichimpliesthat chapter growthoffunctionsfidip whichistosaythattheithfibonaccinumberfiisequaltoi roundedtothenearestinteger fibonaccinumbersgrowexponentially exercises showthatiff andg aremonotonicallyincreasingfunctions thensoarethefunctionsf andf andiff andg areinadditionnonnegative thenf ismonotonicallyincreasing proveequation proveequation alsoprovethatn andn isthefunctiondlgne polynomiallybounded isthefunctiondlglgne polynomi allybounded whichisasymptoticallylarger lgn orlg lgn showthatthegoldenratioanditsconjugateybothsatisfytheequationx dxc provebyinductionthattheithfibonaccinumbersatis estheequalityfidiyip whereisthegoldenratioandyisitsconjugate showthatklnkd implieskd lnn problemsforchapter problems asymptoticbehaviorofpolynomialsletp ddxid aini wheread beadegree dpolynomialinn andletkbeaconstant usethede nitionsoftheasymptoticnotationstoprovethefollowingproperties ifkd thenp ifkd thenp dnk ifkdd thenp ifk thenp ifk thenp relativeasymptoticgrowthsindicate foreachpairofexpressions inthetablebelow whetheraiso ofb assumethatk andc areconstants youranswershouldbeintheformofthetablewith writtenineachbox aboo lgknnb nkcnc pnnsinnd nlgcclgnf orderingbyasymptoticgrowthratesa rankthefollowingfunctionsbyorderofgrowth thatis ndanarrangementg ofthefunctionssatisfyingg partitionyourlistintoequivalenceclassessuchthatfunctionsf andg areinthesameclassifandonlyiff chapter growthoffunctionslg lgn lgn lgnn lgn nlg lgnlnlnnlgnn nnlglgnlnn lgn lgn lgnen lgn plgnlg lgn lgnn nnlgn giveanexampleofasinglenonnegativefunctionf suchthatforallfunc tionsgi inpart isneithero norgi asymptoticnotationpropertiesletf andg beasymptoticallypositivefunctions proveordisproveeachofthefollowingconjectures impliesg min implieslg wherelg andf forallsuf cientlylargen implies impliesg variationsonoand someauthorsde neinaslightlydifferentwaythanwedo suse omegain nity forthisalternativede nition wesaythatf ifthereexistsapositiveconstantcsuchthatf forin nitelymanyintegersn showthatforanytwofunctionsf andg thatareasymptoticallynonneg ative eitherf orf orboth whereasthisisnottrueifweuseinplaceof problemsforchapter describethepotentialadvantagesanddisadvantagesofusing insteadoftocharacterizetherunningtimesofprograms someauthorsalsode neoinaslightlydifferentmanner suseo forthealternativede nition wesaythatf ifandonlyifjf jdo whathappenstoeachdirectionofthe ifandonlyif intheorem ifwesubstituteo forobutstilluse someauthorsde neeo tomeanowithlogarithmicfactorsig nored dff wthereexistpositiveconstantsc andn suchthat lgk forallnn neeande inasimilarmanner provethecorrespondinganalogtotheo rem iteratedfunctionswecanapplytheiterationoperatorusedinthelgfunctiontoanymonotonicallyincreasingfunctionf overthereals foragivenconstantc wede netheiteratedfunctionfcbyfc dmin whichneednotbewellde nedinallcases inotherwords thequantityfc isthenumberofiteratedapplicationsofthefunctionfrequiredtoreduceitsargu mentdowntocorless foreachofthefollowingfunctionsf andconstantsc giveastightaboundaspossibleonfc cfc lgn lgn chapter growthoffunctionschapternotesknuth tracestheoriginoftheo notationtoanumber theorytextbyp bach mannin theo notationwasinventedbye landauin forhisdiscussionofthedistributionofprimenumbers theand notationswereadvocatedbyknuth tocorrectthepopular buttechnicallysloppy practiceintheliteratureofusingo notationforbothupperandlowerbounds manypeoplecontinuetousetheo notationwherethe notationismoretechnicallyprecise furtherdis cussionofthehistoryanddevelopmentofasymptoticnotationsappearsinworks byknuth andbrassardandbratley notallauthorsde netheasymptoticnotationsinthesameway althoughthevariousde nitionsagreeinmostcommonsituations someofthealternativedef initionsencompassfunctionsthatarenotasymptoticallynonnegative aslongas theirabsolutevaluesareappropriatelybounded equation isduetorobbins otherpropertiesofelementarymath ematicalfunctionscanbefoundinanygoodmathematicalreference suchas abramowitzandstegun orzwillinger orinacalculusbook suchas apostol orthomasetal knuth andgraham knuth andpatash nik containawealthofmaterialondiscretemathematicsasusedincomputer conquerinsection wesawhowmergesortservesasanexampleofthedivide conquerparadigm recallthatindivide conquer wesolveaproblemrecur sively applyingthreestepsateachleveloftherecursion dividetheproblemintoanumberofsubproblemsthataresmallerinstancesofthesameproblem conquerthesubproblemsbysolvingthemrecursively ifthesubproblemsizesaresmallenough however justsolvethesubproblemsinastraightforwardmanner combinethesolutionstothesubproblemsintothesolutionfortheoriginalprob lem whenthesubproblemsarelargeenoughtosolverecursively wecallthattherecur sivecase oncethesubproblemsbecomesmallenoughthatwenolongerrecurse wesaythattherecursion bottomsout andthatwehavegottendowntothebasecase sometimes inadditiontosubproblemsthataresmallerinstancesofthesameproblem wehavetosolvesubproblemsthatarenotquitethesameastheoriginalproblem weconsidersolvingsuchsubproblemsaspartofthecombinestep inthischapter weshallseemorealgorithmsbasedondivide conquer rstonesolvesthemaximum subarrayproblem ittakesasinputanarrayofnum bers anditdeterminesthecontiguoussubarraywhosevalueshavethegreatestsum thenweshallseetwodivide conqueralgorithmsformultiplyingnnmatri ces onerunsin whichisnobetterthanthestraightforwardmethodofmultiplyingsquarematrices buttheother strassen salgorithm runsino whichbeatsthestraightforwardmethodasymptotically recurrencesrecurrencesgohandinhandwiththedivide conquerparadigm becausetheygiveusanaturalwaytocharacterizetherunningtimesofdivide conqueralgo rithms arecurrenceisanequationorinequalitythatdescribesafunctioninterms chapter conquerofitsvalueonsmallerinputs forexample insection wedescribedtheworst caserunningtimet ofthemerge sortprocedurebytherecurrencet ifnd ifn whosesolutionweclaimedtobet nlgn recurrencescantakemanyforms forexample arecursivealgorithmmightdividesubproblemsintounequalsizes suchasa split ifthedivideandcombinestepstakelineartime suchanalgorithmwouldgiverisetotherecurrence subproblemsarenotnecessarilyconstrainedtobeingaconstantfractionoftheoriginalproblemsize forexample arecursiveversionoflinearsearch seeexercise wouldcreatejustonesubproblemcontainingonlyoneel ementfewerthantheoriginalproblem eachrecursivecallwouldtakecon stanttimeplusthetimefortherecursivecallsitmakes yieldingtherecurrence thischapteroffersthreemethodsforsolvingrecurrences thatis forobtainingasymptotic boundsonthesolution inthesubstitutionmethod weguessaboundandthenusemathematicalin ductiontoproveourguesscorrect therecursion treemethodconvertstherecurrenceintoatreewhosenodesrepresentthecostsincurredatvariouslevelsoftherecursion weusetechniquesforboundingsummationstosolvetherecurrence themastermethodprovidesboundsforrecurrencesoftheformt dat wherea andf isagivenfunction suchrecurrencesarisefrequently arecurrenceoftheforminequation characterizesadivide conqueralgorithmthatcreatesasubproblems eachofwhichis bthesizeoftheoriginalproblem andinwhichthedivideandcombinestepstogether takef tousethemastermethod youwillneedtomemorizethreecases butonceyoudothat youwilleasilybeabletodetermineasymptoticboundsformany simplerecurrences wewillusethemastermethodtodeterminetherunning timesofthedivide conqueralgorithmsforthemaximum subarrayproblem andformatrixmultiplication aswellasforotheralgorithmsbasedondivide conquerelsewhereinthisbook chapter conquer occasionally weshallseerecurrencesthatarenotequalitiesbutratherinequal ities suchast becausesucharecurrencestatesonlyanupperboundont wewillcouchitssolutionusingo notationratherthan notation similarly iftheinequalitywerereversedtot thenbecausetherecurrencegivesonlyalowerboundont wewoulduse notationinitssolution technicalitiesinrecurrencesinpractice weneglectcertaintechnicaldetailswhenwestateandsolverecur rences forexample ifwecallmerge sortonnelementswhennisodd weendupwithsubproblemsofsizebn canddn neithersizeisactuallyn becausen isnotanintegerwhennisodd technically therecurrencedescribingtheworst caserunningtimeofmerge sortisreallyt ifnd ifn boundaryconditionsrepresentanotherclassofdetailsthatwetypicallyignore sincetherunningtimeofanalgorithmonaconstant sizedinputisaconstant therecurrencesthatarisefromtherunningtimesofalgorithmsgenerallyhave forsuf cientlysmalln consequently forconvenience weshallgenerallyomitstatementsoftheboundaryconditionsofrecurrencesandassume thatt isconstantforsmalln forexample wenormallystaterecurrence ast withoutexplicitlygivingvaluesforsmalln thereasonisthatalthoughchangingthevalueoft changestheexactsolutiontotherecurrence thesolutiontypi callydoesn tchangebymorethanaconstantfactor andsotheorderofgrowthisunchanged whenwestateandsolverecurrences weoftenomit oors ceilings andbound aryconditions weforgeaheadwithoutthesedetailsandlaterdeterminewhether ornottheymatter theyusuallydonot butyoushouldknowwhentheydo periencehelps andsodosometheoremsstatingthatthesedetailsdonotaffectthe asymptoticboundsofmanyrecurrencescharacterizingdivide conqueralgo rithms seetheorem inthischapter however weshalladdresssomeofthese detailsandillustratethe nepointsofrecurrencesolutionmethods chapter conquer themaximum subarrayproblemsupposethatyoubeenofferedtheopportunitytoinvestinthevolatilechemicalcorporation likethechemicalsthecompanyproduces thestockpriceofthe volatilechemicalcorporationisrathervolatile youareallowedtobuyoneunit ofstockonlyonetimeandthensellitatalaterdate buyingandsellingafterthecloseoftradingfortheday tocompensateforthisrestriction youareallowedtolearnwhatthepriceofthestockwillbeinthefuture yourgoalistomaximize yourpro showsthepriceofthestockovera dayperiod maybuythestockatanyonetime startingafterday whenthepriceis pershare ofcourse youwouldwantto buylow sellhigh buyatthelowest possiblepriceandlateronsellatthehighestpossibleprice tomaximizeyour pro unfortunately youmightnotbeabletobuyatthelowestpriceandthensell atthehighestpricewithinagivenperiod infigure thelowestpriceoccurs afterday whichoccursafterthehighestprice afterday youmightthinkthatyoucanalwaysmaximizepro tbyeitherbuyingatthelowestpriceorsellingatthehighestprice forexample infigure wewould maximizepro tbybuyingatthelowestprice afterday ifthisstrategyalways worked thenitwouldbeeasytodeterminehowtomaximizepro ndthehighest andlowestprices andthenworkleftfromthehighestpriceto ndthelowestpriorprice workrightfromthelowestpriceto ndthehighestlaterprice andtakethepairwiththegreaterdifference showsasimplecounterexample price informationaboutthepriceofstockinthevolatilechemicalcorporationafterthecloseoftradingoveraperiodof days thehorizontalaxisofthechartindicatestheday andtheverticalaxisshowstheprice thebottomrowofthetablegivesthechangeinpricefromthepreviousday themaximum subarrayproblem price anexampleshowingthatthemaximumpro tdoesnotalwaysstartatthelowestpriceorendatthehighestprice thehorizontalaxisindicatestheday andtheverticalaxisshowstheprice themaximumpro tof persharewouldbeearnedbybuyingafterday andsellingafterday thepriceof afterday isnotthelowestpriceoverall andthepriceof afterday isnotthehighestpriceoverall demonstratingthatthemaximumpro tsometimescomesneitherbybuyingatthelowestpricenorbysellingatthehighestprice abrute forcesolutionwecaneasilydeviseabrute forcesolutiontothisproblem justtryeverypossiblepairofbuyandselldatesinwhichthebuydateprecedestheselldate aperiodofndayshasn suchpairsofdates sincen andthebestwecanhopeforistoevaluateeachpairofdatesinconstanttime thisapproachwouldtaken canwedobetter atransformationinordertodesignanalgorithmwithano runningtime wewilllookattheinputinaslightlydifferentway wewantto ndasequenceofdaysoverwhichthenetchangefromthe rstdaytothelastismaximum insteadoflookingatthedailyprices letusinsteadconsiderthedailychangeinprice wherethechangeondayiisthedifferencebetweenthepricesafterdayi andafterdayi thetableinfigure showsthesedailychangesinthebottomrow ifwetreatthisrowasanarraya showninfigure wenowwantto ndthenonempty contiguoussubarrayofawhosevalueshavethelargestsum wecallthiscontiguoussubarraythemaximumsubarray forexample inthearrayoffigure themaximumsubarrayofa isa withthesum youwouldwanttobuythestockjustbeforeday thatis afterday andsellitafterday earningapro tof pershare rstglance thistransformationdoesnothelp westillneedtocheckn subarraysforaperiodofndays asksyoutoshow chapter conquer maximum subarray afigure thechangeinstockpricesasamaximum subarrayproblem thesubar raya withsum hasthegreatestsumofanycontiguoussubarrayofarraya thatalthoughcomputingthecostofonesubarraymighttaketimeproportionaltothelengthofthesubarray whencomputingall subarraysums wecanorga nizethecomputationsothateachsubarraysumtakeso giventhevaluesofpreviouslycomputedsubarraysums sothatthebrute forcesolutiontakes soletusseekamoreef cientsolutiontothemaximum subarrayproblem whendoingso wewillusuallyspeakof maximumsubarrayratherthan maximumsubarray sincetherecouldbemorethanonesubarraythatachievesthe maximumsum themaximum subarrayproblemisinterestingonlywhenthearraycontainssomenegativenumbers ifallthearrayentrieswerenonnegative thenthe maximum subarrayproblemwouldpresentnochallenge sincetheentirearray wouldgivethegreatestsum asolutionusingdivide conquerlet sthinkabouthowwemightsolvethemaximum subarrayproblemusingthedivide conquertechnique supposewewantto ndamaximumsubar rayofthesubarraya conquersuggeststhatwedividethesubarrayintotwosubarraysofasequalsizeaspossible thatis ndthemidpoint saymid ofthesubarray andconsiderthesubarraysa midanda midc asfigure shows anycontiguoussubarraya jofa highmustlieinexactlyoneofthefollowingplaces entirelyinthesubarraya mid sothatlowijmid entirelyinthesubarraya midc sothatmid ijhigh orcrossingthemidpoint sothatlowimid jhigh therefore amaximumsubarrayofa highmustlieinexactlyoneoftheseplaces infact amaximumsubarrayofa highmusthavethegreatestsumoverallsubarraysentirelyina mid entirelyina midc orcrossingthemidpoint wecan ndmaximumsubarraysofa midanda midc highrecursively becausethesetwosubproblemsaresmallerinstancesoftheproblemof ndingamaximumsubarray allthatislefttodois nda themaximum subarrayproblem lowlowmidmidhighhighcrossesthemidpointmidc midc entirelyina midentirelyina midc highija mida midc jfigure possiblelocationsofsubarraysofa entirelyina mid entirelyina midc orcrossingthemidpointmid anysubarrayofa highcrossingthemidpointcomprisestwosubarraysa midanda midc wherelowimidandmid jhigh maximumsubarraythatcrossesthemidpoint andtakeasubarraywiththelargestsumofthethree wecaneasily ndamaximumsubarraycrossingthemidpointintimelinearinthesizeofthesubarraya thisproblemisnotasmallerinstanceofouroriginalproblem becauseithastheaddedrestrictionthatthesubarrayitchoosesmustcrossthemidpoint asfigure shows anysubarraycrossing themidpointisitselfmadeoftwosubarraysa midanda midc wherelowimidandmid jhigh therefore wejustneedto ndmaximumsubarraysoftheforma midanda midc jandthencombinethem theprocedurefind max crossing subarraytakesasinputthearrayaandtheindiceslow mid andhigh anditreturnsatuplecontainingtheindicesdemarcatingamaximumsubarraythatcrossesthemidpoint alongwiththesumofthevaluesin amaximumsubarray max crossing subarray mid sum sumd foridmiddowntolow sumdsumca ifsum sum sumdsum max leftdi sum sumd forjdmidc tohigh sumdsumca ifsum sum sumdsum max rightdj return max max sumcright sum chapter conquerthisprocedureworksasfollows lines ndamaximumsubarrayofthelefthalf mid sincethissubarraymustcontaina mid theforloopoflines startstheindexiatmidandworksdowntolow sothateverysubarrayitconsidersisoftheforma mid lines initializethevariablesleft sum whichholdsthegreatestsumfoundsofar andsum holdingthesumoftheentriesina mid wheneverwe inline asubarraya midwithasumofvaluesgreaterthanleft sum weupdateleft sumtothissubarray ssuminline andinline weupdatethevariablemax lefttorecordthisindexi lines workanalogouslyfortherighthalf midc theforloopoflines startstheindexjatmidc andworksuptohigh sothateverysubarrayitconsidersisoftheforma midc finally returnstheindicesmax leftandmax rightthatdemarcateamaximumsubarraycrossingthemidpoint alongwiththesumleft sumcright sumofthevaluesinthesubarraya max max ifthesubarraya highcontainsnentries sothatndhighlowc weclaimthatthecallfind max crossing subarray mid takes sinceeachiterationofeachofthetwoforloopstakes wejustneedtocountuphowmanyiterationstherearealtogether theforloopoflines makesmidlowc iterations andtheforloopoflines makeshighmiditerations andsothetotalnumberofiterationsis midlowc highmid dhighlowc withalinear timefind max crossing subarrayprocedureinhand wecanwritepseudocodeforadivide conqueralgorithmtosolvethemaximum subarrayproblem maximum subarray ifhigh return basecase onlyoneelement elsemiddb lowchigh sum dfind maximum subarray mid sum dfind maximum subarray midc sum dfind max crossing subarray mid ifleft sumright sumandleft sumcross sum return sum elseifright sumleft sumandright sumcross sum return sum elsereturn sum themaximum subarrayproblem theinitialcallfind maximum subarray ndamaxi mumsubarrayofa similartofind max crossing subarray therecursiveprocedurefind maximum subarrayreturnsatuplecontainingtheindicesthatdemarcateamaximumsubarray alongwiththesumofthevaluesinamaximumsubarray testsforthebasecase wherethesubarrayhasjustoneelement asubar raywithjustoneelementhasonlyonesubarray itself andsoline returnsa tuplewiththestartingandendingindicesofjusttheoneelement alongwithitsvalue lines handletherecursivecase doesthedividepart comput ingtheindexmidofthemidpoint srefertothesubarraya midastheleftsubarrayandtoa midc highastherightsubarray becauseweknowthatthesubarraya highcontainsatleasttwoelements eachoftheleftandrightsubarraysmusthaveatleastoneelement lines conquerbyrecur sively ndingmaximumsubarrayswithintheleftandrightsubarrays respectively lines formthecombinepart ndsamaximumsubarraythatcrosses themidpoint recallthatbecauseline solvesasubproblemthatisnotasmaller instanceoftheoriginalproblem weconsiderittobeinthecombinepart testswhethertheleftsubarraycontainsasubarraywiththemaximumsum returnsthatmaximumsubarray otherwise testswhethertheright subarraycontainsasubarraywiththemaximumsum andline returnsthatmax imumsubarray ifneithertheleftnorrightsubarrayscontainasubarrayachieving themaximumsum thenamaximumsubarraymustcrossthemidpoint andline returnsit analyzingthedivide conqueralgorithmnextwesetuparecurrencethatdescribestherunningtimeoftherecursivefind maximum subarrayprocedure aswedidwhenweanalyzedmergesortinsection wemakethesimplifyingassumptionthattheoriginalproblemsize isapowerof sothatallsubproblemsizesareintegers wedenotebyt therunningtimeoffind maximum subarrayonasubarrayofnelements forstarters takesconstanttime thebasecase whennd iseasy takesconstanttime andsot therecursivecaseoccurswhenn lines takeconstanttime eachofthesubproblemssolvedinlines isonasubarrayofn elements ourassumptionthattheoriginalproblemsizeisapowerof ensuresthatn isaninteger andsowespendt timesolvingeachofthem becausewehavetosolvetwosubproblems fortheleftsubarrayandfortherightsubarray thecontributiontotherunningtimefromlines comesto aswehave chapter conqueralreadyseen thecalltofind max crossing subarrayinline takes lines takeonly fortherecursivecase therefore wehavet combiningequations givesusarecurrencefortherunningtimet offind maximum subarray ifnd ifn thisrecurrenceisthesameasrecurrence formergesort asweshallseefromthemastermethodinsection thisrecurrencehasthesolution nlgn youmightalsorevisittherecursiontreeinfigure toun derstandwhythesolutionshouldbet nlgn weseethatthedivide conquermethodyieldsanalgorithmthatisasymptoticallyfasterthanthebrute forcemethod withmergesortandnowthe maximum subarrayproblem webegintogetanideaofhowpowerfulthedivide conquermethodcanbe sometimesitwillyieldtheasymptoticallyfastest algorithmforaproblem andothertimeswecandoevenbetter asexercise shows thereisinfactalinear timealgorithmforthemaximum subarrayproblem anditdoesnotusedivide conquer exercises whatdoesfind maximum subarrayreturnwhenallelementsofaarenega tive writepseudocodeforthebrute forcemethodofsolvingthemaximum subarray yourprocedureshouldrunin implementboththebrute forceandrecursivealgorithmsforthemaximum subarrayproblemonyourowncomputer whatproblemsizen givesthecrossoverpointatwhichtherecursivealgorithmbeatsthebrute forcealgorithm changethebasecaseoftherecursivealgorithmtousethebrute forcealgorithm whenevertheproblemsizeislessthann doesthatchangethecrossoverpoint supposewechangethede nitionofthemaximum subarrayproblemtoallowthe resulttobeanemptysubarray wherethesumofthevaluesofanemptysubar strassen salgorithmformatrixmultiplication rayis howwouldyouchangeanyofthealgorithmsthatdonotallowemptysubarraystopermitanemptysubarraytobetheresult usethefollowingideastodevelopanonrecursive linear timealgorithmforthe maximum subarrayproblem startattheleftendofthearray andprogresstoward theright keepingtrackofthemaximumsubarrayseensofar knowingamaximum subarrayofa extendtheanswerto ndamaximumsubarrayendingatin dexjc byusingthefollowingobservation amaximumsubarrayofa jciseitheramaximumsubarrayofa jorasubarraya forsome ijc determineamaximumsubarrayoftheforma jcinconstanttimebasedonknowingamaximumsubarrayendingatindexj strassen salgorithmformatrixmultiplicationifyouhaveseenmatricesbefore thenyouprobablyknowhowtomultiplythem otherwise youshouldreadsectiond inappendixd ifad aij andbd bij aresquarennmatrices thenintheproductcdab wede netheentrycij fori bycijdnxkd aikbkj wemustcomputen matrixentries andeachisthesumofnvalues thefollowingproceduretakesnnmatricesaandbandmultipliesthem returningtheirnnproductc weassumethateachmatrixhasanattributerows givingthenumberofrowsinthematrix matrix nda rows letcbeanewnnmatrix forid ton forjd ton cijd forkd ton cijdcijcaikbkj returncthesquare matrix multiplyprocedureworksasfollows theforloopoflines computestheentriesofeachrowi andwithinagivenrowi chapter conquerforloopoflines computeseachoftheentriescij foreachcolumnj initializescijto aswestartcomputingthesumgiveninequation andeachiterationoftheforloopoflines addsinonemoretermofequation becauseeachofthetriply nestedforloopsrunsexactlyniterations andeachexecutionofline takesconstanttime thesquare matrix multiplyproce duretakes youmightat rstthinkthatanymatrixmultiplicationalgorithmmusttaken sincethenaturalde nitionofmatrixmultiplicationrequiresthatmanymul tiplications youwouldbeincorrect however wehaveawaytomultiplymatricesino inthissection weshallseestrassen sremarkablerecursivealgo rithmformultiplyingnnmatrices itrunsin nlg whichweshallshowinsection sincelg liesbetween strassen salgorithmrunsino whichisasymptoticallybetterthanthesimplesquare matrix multiplyprocedure asimpledivide conqueralgorithmtokeepthingssimple whenweuseadivide conqueralgorithmtocomputethematrixproductcdab weassumethatnisanexactpowerof ineachofthennmatrices wemakethisassumptionbecauseineachdividestep wewilldividennmatricesintofourn matrices andbyassumingthatnisanexactpowerof weareguaranteedthataslongasn thedimensionn isaninteger supposethatwepartitioneachofa andcintofourn matricesada bdb cdc sothatwerewritetheequationcdabasc equation correspondstothefourequationsc eachofthesefourequationsspeci estwomultiplicationsofn matricesandtheadditionoftheirn products wecanusetheseequationstocreateastraightforward recursive conqueralgorithm strassen salgorithmformatrixmultiplication matrix recursive nda rows letcbeanewnnmatrix ifn elsepartitiona andcasinequations dsquare matrix recursive csquare matrix recursive dsquare matrix recursive csquare matrix recursive dsquare matrix recursive csquare matrix recursive dsquare matrix recursive csquare matrix recursive returncthispseudocodeglossesoveronesubtlebutimportantimplementationdetail howdowepartitionthematricesinline ifweweretocreate newn matrices wewouldspend timecopyingentries infact wecanpartitionthematriceswithoutcopyingentries thetrickistouseindexcalculations identifyasubmatrixbyarangeofrowindicesandarangeofcolumnindicesof theoriginalmatrix weenduprepresentingasubmatrixalittledifferentlyfrom howwerepresenttheoriginalmatrix whichisthesubtletyweareglossingover theadvantageisthat sincewecanspecifysubmatricesbyindexcalculations executingline takesonly althoughweshallseethatitmakesnodifferenceasymptoticallytotheoverallrunningtimewhetherwecopyorpartitioninplace wederivearecurrencetocharacterizetherunningtimeofsquare matrix recursive lett bethetimetomultiplytwonnmatricesusingthisprocedure inthebasecase whennd weperformjusttheonescalarmultiplicationinline andsot therecursivecaseoccurswhenn asdiscussed partitioningthematricesinline takes usingindexcalculations inlines werecursivelycallsquare matrix recursiveatotalofeighttimes becauseeachrecursivecallmultipliestwon matrices therebycontributingt totheoverallrunningtime thetimetakenbyalleightrecursivecallsis wealsomustaccountforthefourmatrixadditionsinlines eachofthesematrices containsn entries andsoeachofthefourmatrixadditionstakes sincethenumberofmatrixadditionsisaconstant thetotaltimespentaddingma chapter conquertricesinlines weuseindexcalculationstoplacetheresultsofthematrixadditionsintothecorrectpositionsofmatrixc withanoverheadof timeperentry thetotaltimefortherecursivecase therefore isthesumofthepartitioningtime thetimeforalltherecursivecalls andthetimetoaddthe matricesresultingfromtherecursivecalls noticethatifweimplementedpartitioningbycopyingmatrices whichwouldcost therecurrencewouldnotchange andhencetheoverallrunningtimewouldincreasebyonlyaconstantfactor combiningequations givesustherecurrencefortherunningtimeofsquare matrix recursive ifnd ifn asweshallseefromthemastermethodinsection recurrence hasthesolutiont thissimpledivide conquerapproachisnofasterthanthestraightforwardsquare matrix multiplyprocedure beforewecontinueontoexaminingstrassen salgorithm letusreviewwherethecomponentsofequation camefrom partitioningeachnnmatrixbyindexcalculationtakes butwehavetwomatricestopartition althoughyoucouldsaythatpartitioningthetwomatricestakes theconstantof issubsumedbythe notation addingtwomatrices eachwith kentries takes sincethematricesweaddeachhaven entries youcouldsaythataddingeachpairtakes however notationsubsumestheconstantfactorof andwesaythataddingtwon matricestakes wehavefoursuchmatrixadditions andonceagain insteadofsayingthattheytake wesaythattheytake ofcourse youmightobservethatwecouldsaythatthefourmatrixadditions andthat butthepointhereisthat notationsubsumesconstantfactors whatevertheyare weendupwithtwoterms whichwecancombineintoone whenweaccountfortheeightrecursivecalls however wecannotjustsub sumetheconstantfactorof inotherwords wemustsaythattogethertheytake ratherthanjustt youcangetafeelforwhybylookingbackattherecursiontreeinfigure forrecurrence whichisidenticalto recurrence withtherecursivecaset thefactorof determinedhowmanychildreneachtreenodehad whichinturndeterminedhowmanytermscontributedtothesumateachlevelofthetree ifweweretoignore strassen salgorithmformatrixmultiplication thefactorof inequation orthefactorof inrecurrence therecursiontreewouldjustbelinear ratherthan bushy andeachlevelwouldcontributeonly onetermtothesum bearinmind therefore thatalthoughasymptoticnotationsubsumesconstantmultiplicativefactors recursivenotationsuchast doesnot strassen smethodthekeytostrassen smethodistomaketherecursiontreeslightlylessbushy thatis insteadofperformingeightrecursivemultiplicationsofn matrices itperformsonlyseven thecostofeliminatingonematrixmultiplicationwillbe severalnewadditionsofn matrices butstillonlyaconstantnumberofadditions asbefore theconstantnumberofmatrixadditionswillbesubsumedby notationwhenwesetuptherecurrenceequationtocharacterizetherunningtime strassen smethodisnotatallobvious thismightbethebiggestunderstate mentinthisbook ithasfoursteps dividetheinputmatricesaandbandoutputmatrixcinton subma trices asinequation thissteptakes timebyindexcalculation justasinsquare matrix recursive matricess eachofwhichisn andisthesumordifferenceoftwomatricescreatedinstep wecancreateall matricesin usingthesubmatricescreatedinstep andthe matricescreatedinstep recursivelycomputesevenmatrixproductsp eachmatrixpiisn computethedesiredsubmatricesc oftheresultmatrixcbyaddingandsubtractingvariouscombinationsofthepimatrices wecancom puteallfoursubmatricesin weshallseethedetailsofsteps inamoment butwealreadyhaveenoughinformationtosetuparecurrencefortherunningtimeofstrassen smethod letus assumethatoncethematrixsizengetsdownto weperformasimplescalarmul tiplication justasinline ofsquare matrix recursive whenn steps takeatotalof andstep requiresustoper formsevenmultiplicationsofn matrices hence weobtainthefollowingrecurrencefortherunningtimet ofstrassen salgorithm ifnd ifn chapter conquerwehavetradedoffonematrixmultiplicationforaconstantnumberofmatrixad ditions onceweunderstandrecurrencesandtheirsolutions weshallseethatthis tradeoffactuallyleadstoalowerasymptoticrunningtime bythemastermethod insection recurrence hasthesolutiont nlg wenowproceedtodescribethedetails instep wecreatethefollowing matrices sincewemustaddorsubtractn matrices times thisstepdoesindeedtake instep werecursivelymultiplyn matricesseventimestocomputethefollowingn matrices eachofwhichisthesumordifferenceofproductsofaandbsubmatrices notethattheonlymultiplicationsweneedtoperformarethoseinthemiddlecol umnoftheaboveequations theright handcolumnjustshowswhattheseproducts equalintermsoftheoriginalsubmatricescreatedinstep addsandsubtractsthepimatricescreatedinstep toconstructthefourn submatricesoftheproductc westartwithc strassen salgorithmformatrixmultiplication expandingouttheright handside withtheexpansionofeachpionitsownlineandverticallyaligningtermsthatcancelout weseethatc equalsa whichcorrespondstoequation similarly wesetc andsoc equalsa correspondingtoequation settingc makesc equala correspondingtoequation finally wesetc sothatc equalsa chapter conquerwhichcorrespondstoequation altogether weaddorsubtractn matriceseighttimesinstep andsothisstepindeedtakes weseethatstrassen salgorithm comprisingsteps producesthecor rectmatrixproductandthatrecurrence characterizesitsrunningtime weshallseeinsection thatthisrecurrencehasthesolutiont nlg strassen smethodisasymptoticallyfasterthanthestraightforwardsquare matrix multiplyprocedure thenotesattheendofthischapterdiscusssomeofthepracticalaspectsofstrassen salgorithm exercisesnote althoughexercises areaboutvariantsonstrassen salgorithm youshouldreadsection beforetryingtosolvethem usestrassen salgorithmtocomputethematrixproduct showyourwork writepseudocodeforstrassen salgorithm howwouldyoumodifystrassen salgorithmtomultiplynnmatricesinwhichnisnotanexactpowerof showthattheresultingalgorithmrunsintime nlg whatisthelargestksuchthatifyoucanmultiply matricesusingkmulti plications notassumingcommutativityofmultiplication thenyoucanmultiply nnmatricesintimeo nlg whatwouldtherunningtimeofthisalgorithmbe panhasdiscoveredawayofmultiplying matricesusing mul tiplications awayofmultiplying matricesusing multiplications andawayofmultiplying matricesusing multiplications whichmethodyieldsthebestasymptoticrunningtimewhenusedinadivide conquermatrix multiplicationalgorithm howdoesitcomparetostrassen salgorithm thesubstitutionmethodforsolvingrecurrences howquicklycanyoumultiplyaknnmatrixbyannknmatrix usingstrassen salgorithmasasubroutine answerthesamequestionwiththeorderoftheinput matricesreversed showhowtomultiplythecomplexnumbersacbiandccdiusingonlythreemultiplicationsofrealnumbers thealgorithmshouldtakea anddasinputandproducetherealcomponentacbdandtheimaginarycomponentadcbcseparately thesubstitutionmethodforsolvingrecurrencesnowthatwehaveseenhowrecurrencescharacterizetherunningtimesofdivide conqueralgorithms wewilllearnhowtosolverecurrences westartinthis sectionwiththe substitution thesubstitutionmethodforsolvingrecurrencescomprisestwosteps guesstheformofthesolution usemathematicalinductionto ndtheconstantsandshowthatthesolutionworks wesubstitutetheguessedsolutionforthefunctionwhenapplyingtheinductivehypothesistosmallervalues hencethename substitutionmethod thismethod ispowerful butwemustbeabletoguesstheformoftheanswerinordertoapplyit wecanusethesubstitutionmethodtoestablisheitherupperorlowerboundsonarecurrence asanexample letusdetermineanupperboundontherecurrencet whichissimilartorecurrences weguessthatthesolutionist nlgn thesubstitutionmethodrequiresustoprovethatt cnlgnforanappropriatechoiceoftheconstantc westartbyassumingthatthisboundholdsforallpositivem inparticularformdbn yieldingt cbn clg substitutingintotherecurrenceyieldst cbn clg cncnlg cndcnlgncnlg cndcnlgncncncnlgn chapter conquerwherethelaststepholdsaslongasc mathematicalinductionnowrequiresustoshowthatoursolutionholdsfortheboundaryconditions typically wedosobyshowingthattheboundarycondi tionsaresuitableasbasecasesfortheinductiveproof fortherecurrence wemustshowthatwecanchoosetheconstantclargeenoughsothattheboundt cnlgnworksfortheboundaryconditionsaswell thisrequirementcansometimesleadtoproblems letusassume forthesakeofargument isthesoleboundaryconditionoftherecurrence thenfornd theboundt cnlgnyieldst whichisatoddswitht consequently thebasecaseofourinductiveprooffailstohold wecanovercomethisobstacleinprovinganinductivehypothesisforaspe cboundaryconditionwithonlyalittlemoreeffort intherecurrence forexample wetakeadvantageofasymptoticnotationrequiringusonlytoprove cnlgnfornn wheren isaconstantthatwegettochoose wekeepthetroublesomeboundaryconditiont butremoveitfromconsid erationintheinductiveproof wedosoby rstobservingthatforn therecurrencedoesnotdependdirectlyont wecanreplacet byt andt asthebasecasesintheinductiveproof lettingn notethatwemakeadistinctionbetweenthebasecaseoftherecurrence andthebasecasesoftheinductiveproof andnd witht wederivefromtherecurrencethatt andt nowwecancompletetheinductiveproofthatt cnlgnforsomeconstantc bychoosingclargeenoughsothatt andt asitturnsout anychoiceofc suf cesforthebasecasesofnd andnd tohold formostoftherecurrencesweshallexamine itisstraightforwardtoextendboundaryconditionstomakethe inductiveassumptionworkforsmalln andweshallnotalwaysexplicitlyworkoutthedetails makingagoodguessunfortunately thereisnogeneralwaytoguessthecorrectsolutionstorecurrences guessingasolutiontakesexperienceand occasionally creativity fortunately youcanusesomeheuristicstohelpyoubecomeagoodguesser canalsouserecursiontrees whichweshallseeinsection togenerategood guesses ifarecurrenceissimilartooneyouhaveseenbefore thenguessingasimilarsolutionisreasonable asanexample considertherecurrencet whichlooksdif cultbecauseoftheadded intheargumenttotontheright handside intuitively however thisadditionaltermcannotsubstantiallyaffectthe thesubstitutionmethodforsolvingrecurrences solutiontotherecurrence whennislarge thedifferencebetweenbn candbn isnotthatlarge bothcutnnearlyevenlyinhalf consequently wemaketheguessthatt nlgn whichyoucanverifyascorrectbyusingthesubstitutionmethod seeexercise anotherwaytomakeagoodguessistoprovelooseupperandlowerboundsontherecurrenceandthenreducetherangeofuncertainty forexample wemight startwithalowerboundoft fortherecurrence sincewehavethetermnintherecurrence andwecanproveaninitialupperboundoft wecangraduallylowertheupperboundandraisethelowerbounduntilweconvergeonthecorrect asymptoticallytightsolutionof nlgn subtletiessometimesyoumightcorrectlyguessanasymptoticboundonthesolutionofarecurrence butsomehowthemathfailstoworkoutintheinduction theproblem frequentlyturnsouttobethattheinductiveassumptionisnotstrongenoughto provethedetailedbound ifyourevisetheguessbysubtractingalower orderterm whenyouhitsuchasnag themathoftengoesthrough considertherecurrencet weguessthatthesolutionist andwetrytoshowthatt cnforanappropriatechoiceoftheconstantc substitutingourguessintherecurrence weobtaint cbn cccdn dcnc whichdoesnotimplyt cnforanychoiceofc wemightbetemptedtotryalargerguess sayt althoughwecanmakethislargerguesswork ouroriginalguessoft iscorrect inordertoshowthatitiscorrect however wemustmakeastrongerinductivehypothesis intuitively ourguessisnearlyright weareoffonlybytheconstant alower orderterm nevertheless mathematicalinductiondoesnotworkunlesswe provetheexactformoftheinductivehypothesis weovercomeourdif culty bysubtractingalower ordertermfromourpreviousguess ournewguessist cnd whered isaconstant wenowhavet cbn cdn dcn cnd chapter conqueraslongasd asbefore wemustchoosetheconstantclargeenoughtohandletheboundaryconditions youmight ndtheideaofsubtractingalower ordertermcounterintuitive terall ifthemathdoesnotworkout weshouldincreaseourguess notnecessarily whenprovinganupperboundbyinduction itmayactuallybe moredif culttoprovethataweakerupperboundholds becauseinordertoprove theweakerbound wemustusethesameweakerboundinductivelyintheproof inourcurrentexample whentherecurrencehasmorethanonerecursiveterm wegettosubtractoutthelower ordertermoftheproposedboundonceperrecursiveterm intheaboveexample wesubtractedouttheconstantdtwice onceforthet termandonceforthet weendedupwiththeinequalityt anditwaseasyto ndvaluesofdtomakecn belessthanorequaltocnd avoidingpitfallsitiseasytoerrintheuseofasymptoticnotation forexample intherecur rence wecanfalsely byguessingt cnandthenarguingt cbn cncncndo sincecisaconstant theerroristhatwehavenotprovedtheexactformoftheinductivehypothesis thatis thatt wethereforewillexplicitlyprovethatt cnwhenwewanttoshowthatt changingvariablessometimes alittlealgebraicmanipulationcanmakeanunknownrecurrencesimi lartooneyouhaveseenbefore asanexample considertherecurrencet tpnclgn whichlooksdif cult wecansimplifythisrecurrence withachangeofvariables forconvenience weshallnotworryaboutroundingoffvalues aspn tobeintegers renamingmdlgnyieldst wecannowrenames toproducethenewrecurrences thesubstitutionmethodforsolvingrecurrences whichisverymuchlikerecurrence indeed thisnewrecurrencehasthesamesolution mlgm changingbackfroms tot weobtaint mlgm lgnlglgn exercises showthatthesolutionoft cniso showthatthesolutionoft iso lgn wesawthatthesolutionoft cniso nlgn showthattheso lutionofthisrecurrenceisalsonlgn concludethatthesolutionis nlgn showthatbymakingadifferentinductivehypothesis wecanovercomethedif cultywiththeboundaryconditiont forrecurrence withoutadjustingtheboundaryconditionsfortheinductiveproof showthat nlgn isthesolutiontothe recurrence formergesort showthatthesolutiontot cniso nlgn usingthemastermethodinsection youcanshowthatthesolutiontothe recurrencet cnist nlog showthatasubstitutionproofwiththeassumptiont cnlog fails thenshowhowtosubtractoffalower ordertermtomakeasubstitutionproofwork usingthemastermethodinsection youcanshowthatthesolutiontothe recurrencet ist showthatasubstitutionproofwiththeassumptiont fails thenshowhowtosubtractoffalower ordertermtomakeasubstitutionproofwork chapter conquer solvetherecurrencet clognbymakingachangeofvariables yoursolutionshouldbeasymptoticallytight donotworryaboutwhethervalues areintegral therecursion treemethodforsolvingrecurrencesalthoughyoucanusethesubstitutionmethodtoprovideasuccinctproofthat asolutiontoarecurrenceiscorrect youmighthavetroublecomingupwitha goodguess drawingoutarecursiontree aswedidinouranalysisofthemerge sortrecurrenceinsection servesasastraightforwardwaytodeviseagood inarecursiontree eachnoderepresentsthecostofasinglesubproblemsomewhereinthesetofrecursivefunctioninvocations wesumthecostswithin eachlevelofthetreetoobtainasetofper levelcosts andthenwesumallthe per levelcoststodeterminethetotalcostofalllevelsoftherecursion arecursiontreeisbestusedtogenerateagoodguess whichyoucanthenverifybythesubstitutionmethod whenusingarecursiontreetogenerateagoodguess youcanoftentolerateasmallamountof sloppiness sinceyouwillbeverifying yourguesslateron ifyouareverycarefulwhendrawingoutarecursiontreeand summingthecosts however youcanusearecursiontreeasadirectproofofa solutiontoarecurrence inthissection wewilluserecursiontreestogenerate goodguesses andinsection wewilluserecursiontreesdirectlytoprovethe theoremthatformsthebasisofthemastermethod forexample letusseehowarecursiontreewouldprovideagoodguessfortherecurrencet westartbyfocusingon ndinganupperboundforthesolution becauseweknowthat oorsandceilingsusuallydo notmatterwhensolvingrecurrences sanexampleofsloppinessthatwecan tolerate wecreatearecursiontreefortherecurrencet ccn havingwrittenouttheimpliedconstantcoef cientc showshowwederivetherecursiontreefort ccn forconvenience weassumethatnisanexactpowerof anotherexampleoftolerablesloppiness sothatallsubproblemsizesareintegers ofthe gure showst whichweexpandinpart intoanequivalenttreerepresentingtherecurrence thecn termattherootrepresentsthecostatthetoplevelofrecursion andthethreesubtreesoftherootrepresentthecostsincurredbythesubproblems ofsizen showsthisprocesscarriedonestepfurtherbyexpandingeachnodewithcostt frompart thecostforeachofthethreechildrenoftherootisc wecontinueexpandingeachnodeinthetreebybreakingitintoitsconstituentpartsasdeterminedbytherecurrence therecursion treemethodforsolvingrecurrences nnlog nlog total constructingarecursiontreefortherecurrencet ccn showst whichprogressivelyexpandsin toformtherecursiontree thefullyexpandedtreeinpart hasheightlog ithaslog levels chapter conquerbecausesubproblemsizesdecreasebyafactorof eachtimewegodownonelevel weeventuallymustreachaboundarycondition howfarfromtherootdo wereachone thesubproblemsizeforanodeatdepthiisn thesubproblemsizehitsnd whenn equivalently whenidlog thetreehaslog levels atdepths nextwedeterminethecostateachlevelofthetree eachlevelhasthreetimesmorenodesthanthelevelabove andsothenumberofnodesatdepthiis becausesubproblemsizesreducebyafactorof foreachlevelwegodownfromtheroot eachnodeatdepthi forid hasacostofc multiplying weseethatthetotalcostoverallnodesatdepthi forid icn thebottomlevel atdepthlog ndnlog nodes eachcontributingcostt foratotalcostofnlog whichis nlog sinceweassumethatt isaconstant nowweaddupthecostsoveralllevelstodeterminethecostfortheentiretree dcn nlog dlog xid icn nlog nlog byequation thislastformulalookssomewhatmessyuntilwerealizethatwecanagaintakeadvantageofsmallamountsofsloppinessanduseanin nitedecreasinggeometric seriesasanupperbound backinguponestepandapplyingequation havet dlog xid icn nlog xid icn nlog nlog nlog wehavederivedaguessoft forouroriginalrecurrencet inthisexample thecoef cientsofcn formadecreasinggeometricseriesand byequation thesumofthesecoef cients therecursion treemethodforsolvingrecurrences cncncncncn ntotal nlgn arecursiontreefortherecurrencet ccn isboundedfromabovebytheconstant sincetheroot scontributiontothetotalcostiscn therootcontributesaconstantfractionofthetotalcost inotherwords thecostoftherootdominatesthetotalcostofthetree infact ifo isindeedanupperboundfortherecurrence asweshallverifyinamoment thenitmustbeatightbound rstrecursivecallcontributes acostof andson mustbealowerboundfortherecurrence nowwecanusethesubstitutionmethodtoverifythatourguesswascor rect thatis isanupperboundfortherecurrencet wewanttoshowthatt forsomeconstantd usingthesameconstantc asbefore wehavet ccn dbn ccn ccn ccn wherethelaststepholdsaslongasd inanother moreintricate showstherecursiontreefort weomit oorandceilingfunctionsforsimplicity asbefore weletcrepresenttheconstantfactorintheo whenweaddthevaluesacrossthelevelsoftherecursiontreeshowninthe gure wegetavalueofcnforeverylevel chapter conquerthelongestsimplepathfromtheroottoaleafisn knd whenkdlog theheightofthetreeislog intuitively weexpectthesolutiontotherecurrencetobeatmostthenumberoflevelstimesthecostofeachlevel oro cnlog nlgn showsonlythetoplevelsoftherecursiontree however andnoteverylevelinthe treecontributesacostofcn considerthecostoftheleaves ifthisrecursiontreewereacompletebinarytreeofheightlog therewouldbe ndnlog leaves sincethecostofeachleafisaconstant thetotalcostofallleaveswouldthenbe nlog sincelog isaconstantstrictlygreaterthan nlgn thisrecursiontreeisnotacompletebinarytree however andsoithasfewerthannlog leaves moreover aswegodownfromtheroot moreandmoreinternalnodesareabsent consequently levelstowardthebottomofthe recursiontreecontributelessthancntothetotalcost wecouldworkoutanaccu rateaccountingofallcosts butrememberthatwearejusttryingtocomeupwitha guesstouseinthesubstitutionmethod letustoleratethesloppinessandattempt toshowthataguessofo nlgn fortheupperboundiscorrect indeed wecanusethesubstitutionmethodtoverifythato nlgn isanupperboundforthesolutiontotherecurrence weshowthatt dnlgn wheredisasuitablepositiveconstant wehavet ccnd ccnd lgnd lgnd ccnddnlgnd ccnddnlgnd ccnddnlgndn ccndnlgn aslongasdc wedidnotneedtoperformamoreaccurateaccountingofcostsintherecursiontree exercises usearecursiontreetodetermineagoodasymptoticupperboundontherecurrence usethesubstitutionmethodtoverifyyouranswer usearecursiontreetodetermineagoodasymptoticupperboundontherecurrence usethesubstitutionmethodtoverifyyouranswer themastermethodforsolvingrecurrences usearecursiontreetodetermineagoodasymptoticupperboundontherecurrence usethesubstitutionmethodtoverifyyouranswer usearecursiontreetodetermineagoodasymptoticupperboundontherecurrence usethesubstitutionmethodtoverifyyouranswer usearecursiontreetodetermineagoodasymptoticupperboundontherecurrencet usethesubstitutionmethodtoverifyyouranswer arguethatthesolutiontotherecurrencet ccn wherecisaconstant isnlgn byappealingtoarecursiontree drawtherecursiontreefort ccn wherecisaconstant andprovideatightasymptoticboundonitssolution verifyyourboundbythesubsti tutionmethod usearecursiontreetogiveanasymptoticallytightsolutiontotherecurrence ccn wherea andc areconstants usearecursiontreetogiveanasymptoticallytightsolutiontotherecurrence ccn isaconstantintherange andc isalsoaconstant themastermethodforsolvingrecurrencesthemastermethodprovidesa cookbook methodforsolvingrecurrencesoftheformt dat wherea andb areconstantsandf isanasymptoticallypositivefunction tousethemastermethod youwillneedtomemorizethreecases thenyouwillbeabletosolvemanyrecurrencesquiteeasily oftenwithoutpencil andpaper chapter conquertherecurrence describestherunningtimeofanalgorithmthatdividesaproblemofsizenintoasubproblems eachofsizen whereaandbarepositiveconstants theasubproblemsaresolvedrecursively eachintimet thefunctionf encompassesthecostofdividingtheproblemandcombiningtheresultsofthesubproblems forexample therecurrencearisingfromstrassen algorithmhasad andf asamatteroftechnicalcorrectness therecurrenceisnotactuallywellde ned becausen bmightnotbeaninteger replacingeachoftheatermst witheithert ort willnotaffecttheasymptoticbehavioroftherecur rence however wewillprovethisassertioninthenextsection wenormally nditconvenient therefore toomitthe oorandceilingfunctionswhenwriting conquerrecurrencesofthisform themastertheoremthemastermethoddependsonthefollowingtheorem theorem mastertheorem leta andb beconstants letf beafunction andlett bede nedonthenonnegativeintegersbytherecurrencet dat whereweinterpretn btomeaneitherbn bcordn thent hasthefollow ingasymptoticbounds iff nlogba forsomeconstant thent nlogba iff nlogba thent nlogbalgn iff dnlogbac forsomeconstant andifaf forsomeconstantc andallsuf cientlylargen thent beforeapplyingthemastertheoremtosomeexamples sspendamomenttryingtounderstandwhatitsays ineachofthethreecases wecomparethefunctionf withthefunctionnlogba intuitively thelargerofthetwofunctionsdeterminesthesolutiontotherecurrence asincase thefunctionnlogbaisthelarger thenthesolutionist nlogba asincase thefunctionf isthelarger thenthesolutionist asincase thetwofunc tionsarethesamesize wemultiplybyalogarithmicfactor andthesolutionis nlogbalgn lgn beyondthisintuition youneedtobeawareofsometechnicalities inthe rstcase notonlymustf besmallerthannlogba itmustbepolynomiallysmaller themastermethodforsolvingrecurrences thatis mustbeasymptoticallysmallerthannlogbabyafactorofnforsomeconstant inthethirdcase notonlymustf belargerthannlogba italsomustbepolynomiallylargerandinadditionsatisfythe regularity conditionthat thisconditionissatis edbymostofthepolynomiallyboundedfunctionsthatweshallencounter notethatthethreecasesdonotcoverallthepossibilitiesforf thereisagapbetweencases whenf issmallerthannlogbabutnotpolynomi allysmaller similarly thereisagapbetweencases whenf islargerthannlogbabutnotpolynomiallylarger ifthefunctionf fallsintooneofthesegaps oriftheregularityconditionincase failstohold youcannotusethemaster methodtosolvetherecurrence usingthemastermethodtousethemastermethod wesimplydeterminewhichcase ifany ofthemastertheoremappliesandwritedowntheanswer asa rstexample considert forthisrecurrence wehavead andthuswehavethatnlogbadnlog sincef nlog whered wecanapplycase ofthemastertheoremandconcludethatthesolutionist nowconsidert inwhichad andnlogbadnlog applies sincef nlogba andthusthesolutiontotherecurrenceist lgn fortherecurrencet cnlgn wehavead dnlgn andnlogbadnlog sincef dnlog appliesifwecanshowthattheregularityconditionholdsforf forsuf cientlylargen wehavethataf nlgndcf forcd consequently bycase thesolutiontotherecurrenceist nlgn themastermethoddoesnotapplytotherecurrencet cnlgn eventhoughitappearstohavetheproperform dnlgn andnlogbadn youmightmistakenlythinkthatcase shouldapply chapter conquerf dnlgnisasymptoticallylargerthannlogbadn theproblemisthatitisnotpolynomiallylarger theratiof nlogbad nlgn ndlgnisasymp toticallylessthannforanypositiveconstant consequently therecurrencefallsintothegapbetweencase andcase seeexercise forasolution susethemastermethodtosolvetherecurrenceswesawinsections recurrence characterizestherunningtimesofthedivide conqueralgorithmforboththemaximum subarrayproblemandmergesort asisourpractice weomitstating thebasecaseintherecurrence wehavead andthuswehavethatnlogbadnlog applies sincef andsowehavethesolutiont nlgn recurrence describestherunningtimeofthe rstdivide conqueralgorithmthatwesawformatrixmultiplication nowwehavead andf andsonlogbadnlog sincen ispolynomiallylargerthanf thatis ford applies andt finally considerrecurrence whichdescribestherunningtimeofstrassen salgorithm wehavead andthusnlogbadnlog rewritinglog aslg andrecallingthat weseethatf nlg ford applies andwehavethesolutiont nlg exercises usethemastermethodtogivetightasymptoticboundsforthefollowingrecur rences cpn proofofthemastertheorem professorcaesarwishestodevelopamatrix multiplicationalgorithmthatis asymptoticallyfasterthanstrassen salgorithm hisalgorithmwillusethedivide conquermethod dividingeachmatrixintopiecesofsizen andthedivideandcombinestepstogetherwilltake heneedstodeterminehowmanysubproblemshisalgorithmhastocreateinordertobeatstrassen salgo rithm ifhisalgorithmcreatesasubproblems thentherecurrencefortherunningtimet becomest dat whatisthelargestintegervalueofaforwhichprofessorcaesar salgorithmwouldbeasymptoticallyfasterthanstrassen salgorithm usethemastermethodtoshowthatthesolutiontothebinary searchrecurrence ist lgn seeexercise foradescriptionofbinarysearch canthemastermethodbeappliedtotherecurrencet lgn whyorwhynot giveanasymptoticupperboundforthisrecurrence considertheregularityconditionaf forsomeconstantc whichispartofcase ofthemastertheorem giveanexampleofconstantsa andb andafunctionf thatsatis esalltheconditionsincase ofthemastertheoremexcepttheregularitycondition proofofthemastertheoremthissectioncontainsaproofofthemastertheorem theorem youdonot needtounderstandtheproofinordertoapplythemastertheorem theproofappearsintwoparts rstpartanalyzesthemasterrecur rence underthesimplifyingassumptionthatt isde nedonlyonex actpowersofb thatis fornd thispartgivesalltheintuitionneededtounderstandwhythemastertheoremistrue thesecondpartshowshow toextendtheanalysistoallpositiveintegersn itappliesmathematicaltechniquetotheproblemofhandling oorsandceilings inthissection weshallsometimesabuseourasymptoticnotationslightlybyusingittodescribethebehavioroffunctionsthatarede nedonlyoverexactpowersofb recallthatthede nitionsofasymptoticnotationsrequirethat chapter conquerboundsbeprovedforallsuf cientlylargenumbers notjustthosethatarepow ersofb sincewecouldmakenewasymptoticnotationsthatapplyonlytothesetfbiwid insteadoftothenonnegativenumbers thisabuseisminor nevertheless wemustalwaysbeonguardwhenweuseasymptoticnotationoveralimiteddomainlestwedrawimproperconclusions forexample provingthat whennisanexactpowerof doesnotguaranteethatt thefunctiont couldbede nedast nifnd otherwise inwhichcasethebestupperboundthatappliestoallvaluesofnist becauseofthissortofdrasticconsequence weshallneveruseasymptoticnotation overalimiteddomainwithoutmakingitabsolutelyclearfromthecontextthatwe aredoingso theproofforexactpowersthe rstpartoftheproofofthemastertheoremanalyzestherecurrence dat forthemastermethod undertheassumptionthatnisanexactpowerofb wherebneednotbeaninteger webreaktheanalysisintothreelemmas rstreducestheproblemofsolvingthemasterrecurrencetotheproblemofevaluating anexpressionthatcontainsasummation theseconddeterminesboundsonthis summation thethirdlemmaputsthe rsttwotogethertoproveaversionofthe mastertheoremforthecaseinwhichnisanexactpowerofb lemma leta andb beconstants andletf beanonnegativefunctionde nedonexactpowersofb net onexactpowersofbbytherecurrencet ifnd ifndbi whereiisapositiveinteger thent nlogba clogbn xjd ajf proofweusetherecursiontreeinfigure therootofthetreehascostf andithasachildren eachwithcostf itisconvenienttothinkofaasbeing proofofthemastertheorem aaaaaaaaaaaaaf logbnnlogba nlogba total nlogba clogbn xjd ajf therecursiontreegeneratedbyt dat thetreeisacompletea arytreewithnlogbaleavesandheightlogbn thecostofthenodesateachdepthisshownattheright andtheirsumisgiveninequation aninteger especiallywhenvisualizingtherecursiontree butthemathematicsdoesnotrequireit eachofthesechildrenhasachildren makinga nodesatdepth andeachoftheachildrenhascostf ingeneral thereareajnodesatdepthj andeachhascostf thecostofeachleafist andeachleafisatdepthlogbn sincen blogbnd therearealogbndnlogbaleavesinthetree wecanobtainequation bysummingthecostsofthenodesateachdepthinthetree asshowninthe gure thecostforallinternalnodesatdepthjisajf andsothetotalcostofallinternalnodesislogbn xjd ajf intheunderlyingdivide conqueralgorithm thissumrepresentsthecostsofdividingproblemsintosubproblemsandthenrecombiningthesubproblems chapter conquercostofalltheleaves whichisthecostofdoingallnlogbasubproblemsofsize nlogba intermsoftherecursiontree thethreecasesofthemastertheoremcorrespondtocasesinwhichthetotalcostofthetreeis dominatedbythecostsinthe leaves evenlydistributedamongthelevelsofthetree dominatedbythe costoftheroot thesummationinequation describesthecostofthedividingandcom biningstepsintheunderlyingdivide conqueralgorithm thenextlemmapro videsasymptoticboundsonthesummation sgrowth lemma leta andb beconstants andletf beanonnegativefunctionde nedonexactpowersofb afunctiong nedoverexactpowersofbbyg dlogbn xjd ajf hasthefollowingasymptoticboundsforexactpowersofb iff nlogba forsomeconstant theng nlogba iff nlogba theng nlogbalgn ifaf forsomeconstantc andforallsuf cientlylargen theng proofforcase wehavef nlogba whichimpliesthatf logba substitutingintoequation yieldsg logbn xjd ajnbjlogba weboundthesummationwithintheo notationbyfactoringouttermsandsimpli fying whichleavesanincreasinggeometricseries logbn xjd ajnbjlogbadnlogbalogbn xjd abblogbajdnlogbalogbn xjd jdnlogbablogbn proofofthemastertheorem dnlogban sincebandareconstants wecanrewritethelastexpressionasnlogbao nlogba substitutingthisexpressionforthesummationinequation yieldsg nlogba therebyprovingcase becausecase assumesthatf nlogba wehavethatf logba substitutingintoequation yieldsg logbn xjd ajnbjlogba weboundthesummationwithinthe notationasincase butthistimewedonotobtainageometricseries instead wediscoverthateverytermofthesummationisthesame logbn xjd ajnbjlogbadnlogbalogbn xjd ablogbajdnlogbalogbn xjd dnlogbalogbn substitutingthisexpressionforthesummationinequation yields nlogbalogbn nlogbalgn provingcase weprovecase similarly sincef appearsinthede nition ofg andalltermsofg arenonnegative wecanconcludethatg forexactpowersofb weassumeinthestatementofthelemmathataf forsomeconstantc andallsuf cientlylargen werewritethisassumptionasf anditeratejtimes yieldingf equivalently ajf cjf whereweassumethatthevaluesweiterateonaresuf cientlylarge sincethelast andsmallest suchvalueisn itisenoughtoassumethatn issuf cientlylarge substitutingintoequation andsimplifyingyieldsageometricseries butunliketheseriesincase thisonehasdecreasingterms weuseano termto chapter conquercapturethetermsthatarenotcoveredbyourassumptionthatnissuf cientlylarge dlogbn xjd ajf logbn xjd cjf xjd cjco cco sincecisaconstant wecanconcludethatg forexactpowersofb withcase proved theproofofthelemmaiscomplete wecannowproveaversionofthemastertheoremforthecaseinwhichnisanexactpowerofb lemma leta andb beconstants andletf beanonnegativefunctionde nedonexactpowersofb net onexactpowersofbbytherecurrencet ifnd ifndbi whereiisapositiveinteger thent hasthefollowingasymptoticboundsforexactpowersofb iff nlogba forsomeconstant thent nlogba iff nlogba thent nlogbalgn iff dnlogbac forsomeconstant andifaf forsomeconstantc andallsuf cientlylargen thent proofweusetheboundsinlemma toevaluatethesummation fromlemma forcase wehavet nlogba nlogba nlogba proofofthemastertheorem andforcase nlogba nlogbalgn nlogbalgn forcase nlogba becausef dnlogbac floorsandceilingstocompletetheproofofthemastertheorem wemustnowextendouranalysistothesituationinwhich oorsandceilingsappearinthemasterrecurrence sothat therecurrenceisde nedforallintegers notforjustexactpowersofb obtainingalowerboundont dat andanupperboundon dat isroutine sincewecanpushthroughthebounddn ben binthe rstcasetoyieldthedesiredresult andwecanpushthroughtheboundbn bcn binthesecondcase weusemuchthesametechniquetolower boundtherecurrence astoupper boundtherecurrence andsoweshallpresentonlythislatter bound wemodifytherecursiontreeoffigure toproducetherecursiontreeinfig ure aswegodownintherecursiontree weobtainasequenceofrecursive invocationsontheargumentsn ddn dddn letusdenotethejthelementinthesequencebynj wherenjd nifjd dnj beifj chapter conquer aaaaaaaaaaaaaf blogbnc nlogba nlogba total nlogba cblogbn xjd ajf therecursiontreegeneratedbyt dat therecursiveargumentnjisgivenbyequation rstgoalistodeterminethedepthksuchthatnkisaconstant usingtheinequalitydxexc weobtainn nbc ingeneral wehave proofofthemastertheorem njnbjcj xid nbjc xid bidnbjcbb lettingjdblogbnc weobtainnblogbnc nbblogbnccbb nblogbn cbb dnn bcbb dbcbb andthusweseethatatdepthblogbnc theproblemsizeisatmostaconstant fromfigure weseethatt nlogba cblogbn xjd ajf whichismuchthesameasequation exceptthatnisanarbitraryintegerandnotrestrictedtobeanexactpowerofb wecannowevaluatethesummationg dblogbn xjd ajf fromequation inamanneranalogoustotheproofoflemma beginningwithcase ifaf forn bcb wherec isaconstant thenitfollowsthatajf cjf therefore wecanevaluatethesuminequation justasinlemma forcase wehavef nlogba ifwecanshowthatf nlogba logba thentheproofforcase oflemma willgothrough observethatjblogbncimpliesbj theboundf nlogba impliesthatthereexistsaconstantc suchthatforallsuf cientlylargenj chapter conquerf cnbjcbb logbadcnbj cbjnbb logbadcnlogbaaj cbjnbb logbacnlogbaaj cbb logbadonlogbaaj sincec logbaisaconstant wehaveprovedcase theproofofcase isalmostidentical thekeyistoprovetheboundf nlogba whichissimilartothecorrespondingproofofcase thoughthealgebraismore intricate wehavenowprovedtheupperboundsinthemastertheoremforallintegersn theproofofthelowerboundsissimilar exercises giveasimpleandexactexpressionfornjinequation forthecaseinwhichbisapositiveintegerinsteadofanarbitraryrealnumber showthatiff nlogbalgkn wherek thenthemasterrecurrencehassolutiont nlogbalgkc forsimplicity con neyouranalysistoexactpowersofb showthatcase ofthemastertheoremisoverstated inthesensethattheregularity conditionaf forsomeconstantc impliesthatthereexistsaconstant suchthatf dnlogbac problemsforchapter problems recurrenceexamplesgiveasymptoticupperandlowerboundsfort ineachofthefollowingrecur rences assumethatt isconstantforn makeyourboundsastightaspossible andjustifyyouranswers cpn parameter passingcoststhroughoutthisbook weassumethatparameterpassingduringprocedurecalls takesconstanttime evenifann elementarrayisbeingpassed thisassumptionisvalidinmostsystemsbecauseapointertothearrayispassed notthearrayitself thisproblemexaminestheimplicationsofthreeparameter passingstrategies anarrayispassedbypointer timed anarrayispassedbycopying timed wherenisthesizeofthearray anarrayispassedbycopyingonlythesubrangethatmightbeaccessedbythecalledprocedure timed qpc ifthesubarraya qispassed considertherecursivebinarysearchalgorithmfor ndinganumberinasortedarray seeexercise giverecurrencesfortheworst caserunningtimesofbinarysearchwhenarraysarepassedusingeachofthethreemethodsabove andgivegoodupperboundsonthesolutionsoftherecurrences letnbethesizeoftheoriginalproblemandnbethesizeofasubproblem redopart forthemerge sortalgorithmfromsection chapter conquer morerecurrenceexamplesgiveasymptoticupperandlowerboundsfort ineachofthefollowingrecur rences assumethatt isconstantforsuf cientlysmalln makeyourboundsastightaspossible andjustifyyouranswers cnlgn lgn lgn clgn lgn dpnt fibonaccinumbersthisproblemdevelopspropertiesofthefibonaccinumbers whicharede ned byrecurrence weshallusethetechniqueofgeneratingfunctionstosolve thefibonaccirecurrence nethegeneratingfunction orformalpowerse ries fasf xid wherefiistheithfibonaccinumber showthatf problemsforchapter showthatf whered andyd showthatf xid iyi usepart toprovethatfidi fori roundedtothenearestinteger hint observethat chiptestingprofessordiogeneshasnsupposedlyidenticalintegrated circuitchipsthatinprin ciplearecapableoftestingeachother theprofessor stestjigaccommodatestwo chipsatatime whenthejigisloaded eachchipteststheotherandreportswhether itisgoodorbad agoodchipalwaysreportsaccuratelywhethertheotherchipis goodorbad buttheprofessorcannottrusttheanswerofabadchip thefour possibleoutcomesofatestareasfollows chipasayschipbsaysconclusionbisgoodaisgoodbotharegood orbotharebadbisgoodaisbadatleastoneisbadbisbadaisgoodatleastoneisbadbisbadaisbadatleastoneisbada showthatifmorethann chipsarebad theprofessorcannotnecessarilyde terminewhichchipsaregoodusinganystrategybasedonthiskindofpairwise assumethatthebadchipscanconspiretofooltheprofessor chapter conquerb considertheproblemof ndingasinglegoodchipfromamongnchips sumingthatmorethann ofthechipsaregood showthatbn cpairwisetestsaresuf cienttoreducetheproblemtooneofnearlyhalfthesize showthatthegoodchipscanbeidenti edwith pairwisetests assumingthatmorethann ofthechipsaregood giveandsolvetherecurrencethatdescribesthenumberoftests mongearraysanmnarrayaofrealnumbersisamongearrayifforalli andlsuchthat kmand wehavea jca lca inotherwords wheneverwepicktworowsandtwocolumnsofamongearrayandconsiderthefourelementsattheintersectionsoftherowsandthecolumns thesum oftheupper leftandlower rightelementsislessthanorequaltothesumofthe lower leftandupper rightelements forexample thefollowingarrayismonge provethatanarrayismongeifandonlyifforallid andjd wehavea jca jca jcca hint forthe useinductionseparatelyonrowsandcolumns thefollowingarrayisnotmonge changeoneelementinordertomakeitmonge hint usepart notesforchapter letf betheindexofthecolumncontainingtheleftmostminimumelementofrowi provethatf foranymnmongearray hereisadescriptionofadivide conqueralgorithmthatcomputestheleft mostminimumelementineachrowofanmnmongearraya constructasubmatrixa ofaconsistingoftheeven numberedrowsofa recursivelydeterminetheleftmostminimumforeachrowofa thencomputetheleftmostminimumintheodd numberedrowsofa explainhowtocomputetheleftmostminimumintheodd numberedrowsofa giventhattheleftmostminimumoftheeven numberedrowsisknown ino mcn writetherecurrencedescribingtherunningtimeofthealgorithmdescribedinpart showthatitssolutioniso mcnlogm chapternotesdivide conquerasatechniquefordesigningalgorithmsdatesbacktoatleast inanarticlebykaratsubaandofman itmighthavebeenusedwellbe forethen however accordingtoheideman johnson andburrus gauss devisedthe rstfastfouriertransformalgorithmin andgauss sformulation breakstheproblemintosmallersubproblemswhosesolutionsarecombined themaximum subarrayprobleminsection isaminorvariationonaproblemstudiedbybentley chapter strassen salgorithm causedmuchexcitementwhenitwaspublishedin beforethen fewimaginedthepossibilityofanalgorithmasymptotically fasterthanthebasicsquare matrix multiplyprocedure theasymptoticupperboundformatrixmultiplicationhasbeenimprovedsincethen themostasymptoticallyef cientalgorithmformultiplyingnnmatricestodate duetocoppersmithandwinograd hasarunningtimeofo thebestlowerboundknownisjusttheobviousn bound obviousbecausewemust llinn elementsoftheproductmatrix fromapracticalpointofview strassen salgorithmisoftennotthemethodofchoiceformatrixmultiplication forfourreasons theconstantfactorhiddeninthe nlg runningtimeofstrassen salgo rithmislargerthantheconstantfactorinthe timesquare matrix multiplyprocedure whenthematricesaresparse methodstailoredforsparsematricesarefaster chapter conquer strassen salgorithmisnotquiteasnumericallystableassquare matrix inotherwords becauseofthelimitedprecisionofcomputerarith meticonnonintegervalues largererrorsaccumulateinstrassen salgorithm thaninsquare matrix thesubmatricesformedatthelevelsofrecursionconsumespace thelattertworeasonsweremitigatedaround higham demonstratedthatthedifferenceinnumericalstabilityhadbeenoveremphasized although strassen salgorithmistoonumericallyunstableforsomeapplications itiswithin acceptablelimitsforothers bailey lee andsimon discusstechniquesfor reducingthememoryrequirementsforstrassen salgorithm inpractice fastmatrix multiplicationimplementationsfordensematricesusestrassen salgorithmformatrixsizesabovea crossoverpoint andtheyswitch toasimplermethodoncethesubproblemsizereducestobelowthecrossover theexactvalueofthecrossoverpointishighlysystemdependent analyses thatcountoperationsbutignoreeffectsfromcachesandpipelininghaveproducedcrossoverpointsaslowasnd byhigham ornd byhuss ledermanetal albertoandnicolau developedanadaptivescheme determinesthecrossoverpointbybenchmarkingwhentheirsoftwarepackageis installed theyfoundcrossoverpointsonvarioussystemsrangingfromnd tond andtheycouldnot ndacrossoverpointonacoupleofsystems recurrenceswerestudiedasearlyas byl fibonacci forwhomthefi bonaccinumbersarenamed demoivreintroducedthemethodofgeneratingfunctions seeproblem forsolvingrecurrences themastermethodisadapted frombentley haken andsaxe whichprovidestheextendedmethodjusti byexercise knuth andliu showhowtosolvelinearrecurrences usingthemethodofgeneratingfunctions purdomandbrown andgraham knuth andpatashnik containextendeddiscussionsofrecurrencesolving severalresearchers includingakraandbazzi roura verma andyap havegivenmethodsforsolvingmoregeneraldivide conquerrecurrencesthanaresolvedbythemastermethod wedescribetheresultofakraandbazzihere asmodi edbyleighton theakra bazzimethodworksfor recurrencesoftheformt pkid ait bix ifx wherex isarealnumber isaconstantsuchthatx biandx forid aiisapositiveconstantforid notesforchapter biisaconstantintherange forid isanintegerconstant andf isanonnegativefunctionthatsatis esthepolynomial growthcondi tion thereexistpositiveconstantsc andc suchthatforallx forid andforallusuchthatbixux wehavec ifjf jisupper boundedbysomepolynomialinx thenf satis esthepolynomial growthcondition forexample xsatis esthisconditionforanyrealconstants althoughthemastermethoddoesnotapplytoarecurrencesuchast theakra bazzimethoddoes tosolvethere currence rst ndtheuniquerealnumberpsuchthatpkid aibpid suchapalwaysexists thesolutiontotherecurrenceisthent czx upc theakra bazzimethodcanbesomewhatdif culttouse butitservesinsolvingrecurrencesthatmodeldivisionoftheproblemintosubstantiallyunequallysized subproblems themastermethodissimplertouse butitappliesonlywhensub problemsizesareequal probabilisticanalysisandrandomizedalgorithmsthischapterintroducesprobabilisticanalysisandrandomizedalgorithms ifyouareunfamiliarwiththebasicsofprobabilitytheory youshouldreadappendixc whichreviewsthismaterial weshallrevisitprobabilisticanalysisandrandomized algorithmsseveraltimesthroughoutthisbook thehiringproblemsupposethatyouneedtohireanewof ceassistant yourpreviousattemptsat hiringhavebeenunsuccessful andyoudecidetouseanemploymentagency employmentagencysendsyouonecandidateeachday youinterviewthatpersonandthendecideeithertohirethatpersonornot youmustpaytheemploymentagencyasmallfeetointerviewanapplicant toactuallyhireanapplicantismore costly however sinceyoumust reyourcurrentof ceassistantandpayasubstan tialhiringfeetotheemploymentagency youarecommittedtohaving atalltimes thebestpossiblepersonforthejob therefore youdecidethat afterinterviewing eachapplicant ifthatapplicantisbetterquali edthanthecurrentof ceassistant youwill rethecurrentof ceassistantandhirethenewapplicant youarewilling topaytheresultingpriceofthisstrategy butyouwishtoestimatewhatthatprice willbe theprocedurehire assistant givenbelow expressesthisstrategyforhiringinpseudocode itassumesthatthecandidatesfortheof ceassistantjobarenum bered throughn theprocedureassumesthatyouareableto afterinterviewingcandidatei determinewhethercandidateiisthebestcandidateyouhaveseensofar toinitialize theprocedurecreatesadummycandidate numbered whoislessquali edthaneachoftheothercandidates thehiringproblem hire assistant bestd candidate isaleast quali eddummycandidate forid ton interviewcandidatei ifcandidateiisbetterthancandidatebest bestdi hirecandidateithecostmodelforthisproblemdiffersfromthemodeldescribedinchapter wefocusnotontherunningtimeofhire assistant butinsteadonthecostsincurredbyinterviewingandhiring onthesurface analyzingthecostofthisalgo rithmmayseemverydifferentfromanalyzingtherunningtimeof mergesort theanalyticaltechniquesused however areidenticalwhetherweareanalyzingcostorrunningtime ineithercase wearecountingthenumberoftimescertainbasicoperationsareexecuted interviewinghasalowcost sayci whereashiringisexpensive costingch tingmbethenumberofpeoplehired thetotalcostassociatedwiththisalgorithmiso cincchm nomatterhowmanypeoplewehire wealwaysinterviewncandidatesandthusalwaysincurthecostcinassociatedwithinterviewing wethereforeconcentrateonanalyzingchm thehiringcost thisquantityvarieswitheachrunofthealgorithm thisscenarioservesasamodelforacommoncomputationalparadigm weof tenneedto ndthemaximumorminimumvalueinasequencebyexaminingeach elementofthesequenceandmaintainingacurrent winner thehiringproblem modelshowoftenweupdateournotionofwhichelementiscurrentlywinning worst caseanalysisintheworstcase weactuallyhireeverycandidatethatweinterview thissituationoccursifthecandidatescomeinstrictlyincreasingorderofquality inwhichcase wehirentimes foratotalhiringcostofo chn ofcourse thecandidatesdonotalwayscomeinincreasingorderofquality infact wehavenoideaabouttheorderinwhichtheyarrive nordowehaveanycontroloverthisorder therefore itisnaturaltoaskwhatweexpecttohappenin atypicaloraveragecase probabilisticanalysisprobabilisticanalysisistheuseofprobabilityintheanalysisofproblems mostcommonly weuseprobabilisticanalysistoanalyzetherunningtimeofanalgo rithm sometimesweuseittoanalyzeotherquantities suchasthehiringcost chapter probabilisticanalysisandrandomizedalgorithmsinprocedurehire assistant inordertoperformaprobabilisticanalysis wemustuseknowledgeof ormakeassumptionsabout thedistributionoftheinputs thenweanalyzeouralgorithm computinganaverage caserunningtime wetaketheaverageoverthedistributionofthepossibleinputs thusweare averagingtherunningtimeoverallpossibleinputs whenreportingsucha runningtime wewillrefertoitastheaverage caserunningtime wemustbeverycarefulindecidingonthedistributionofinputs forsomeproblems wemayreasonablyassumesomethingaboutthesetofallpossiblein puts andthenwecanuseprobabilisticanalysisasatechniquefordesigninganef cientalgorithmandasameansforgaininginsightintoaproblem forother problems wecannotdescribeareasonableinputdistribution andinthesecases wecannotuseprobabilisticanalysis forthehiringproblem wecanassumethattheapplicantscomeinarandomorder whatdoesthatmeanforthisproblem weassumethatwecancompare anytwocandidatesanddecidewhichoneisbetterquali thatis thereisa totalorderonthecandidates seeappendixbforthede nitionofatotalor der wecanrankeachcandidatewithauniquenumberfrom throughn usingrank todenotetherankofapplicanti andadopttheconventionthatahigherrankcorrespondstoabetterquali edapplicant theorderedlisthrank rank rank iisapermutationofthelisth sayingthattheapplicantscomeinarandomorderisequivalenttosayingthatthislistofranksis equallylikelytobeanyoneofthen permutationsofthenumbers throughn alternatively wesaythattheranksformauniformrandompermutation thatis eachofthepossiblen permutationsappearswithequalprobability containsaprobabilisticanalysisofthehiringproblem randomizedalgorithmsinordertouseprobabilisticanalysis weneedtoknowsomethingaboutthedistri butionoftheinputs inmanycases weknowverylittleabouttheinputdistribution evenifwedoknowsomethingaboutthedistribution wemaynotbeabletomodel thisknowledgecomputationally yetweoftencanuseprobabilityandrandomnessasatoolforalgorithmdesignandanalysis bymakingthebehaviorofpartofthe algorithmrandom inthehiringproblem itmayseemasifthecandidatesarebeingpresentedtousinarandomorder butwehavenowayofknowingwhetherornottheyreallyare inordertodeveloparandomizedalgorithmforthehiringproblem wemust havegreatercontrolovertheorderinwhichweinterviewthecandidates wewill therefore changethemodelslightly wesaythattheemploymentagencyhasncandidates andtheysendusalistofthecandidatesinadvance oneachday randomly whichcandidatetointerview althoughweknownothingabout thehiringproblem thecandidates besidestheirnames wehavemadeasigni cantchange insteadofrelyingonaguessthatthecandidatescometousinarandomorder wehave insteadgainedcontroloftheprocessandenforcedarandomorder moregenerally wecallanalgorithmrandomizedifitsbehaviorisdeterminednotonlybyitsinputbutalsobyvaluesproducedbyarandom numbergener ator weshallassumethatwehaveatourdisposalarandom numbergeneratorrandom acalltorandom returnsanintegerbetweenaandb inclu sive witheachsuchintegerbeingequallylikely forexample random produces withprobability anditproduces withprobability acalltorandom returnseither eachwithprobability eachinte gerreturnedbyrandomisindependentoftheintegersreturnedonpreviouscalls youmayimaginerandomasrollinga bac sideddietoobtainitsout inpractice mostprogrammingenvironmentsofferapseudorandom numbergenerator adeterministicalgorithmreturningnumbersthat statisticallyrandom whenanalyzingtherunningtimeofarandomizedalgorithm wetaketheexpec tationoftherunningtimeoverthedistributionofvaluesreturnedbytherandomnumbergenerator wedistinguishthesealgorithmsfromthoseinwhichtheinputisrandombyreferringtotherunningtimeofarandomizedalgorithmasanex pectedrunningtime ingeneral wediscusstheaverage caserunningtimewhentheprobabilitydistributionisovertheinputstothealgorithm andwediscussthe expectedrunningtimewhenthealgorithmitselfmakesrandomchoices exercises showthattheassumptionthatwearealwaysabletodeterminewhichcandidateis inline ofprocedurehire assistant impliesthatweknowatotalorderontheranksofthecandidates describeanimplementationoftheprocedurerandom thatonlymakescallstorandom whatistheexpectedrunningtimeofyourprocedure asafunctionofaandb supposethatyouwanttooutput withprobability withprobability atyourdisposalisaprocedurebiased random thatoutputseither itoutputs withsomeprobabilitypand withprobability butyoudonotknowwhatpis giveanalgorithmthatusesbiased randomasasubroutine andreturnsanunbiasedanswer returning withprobability chapter probabilisticanalysisandrandomizedalgorithmsand withprobability whatistheexpectedrunningtimeofyouralgorithmasafunctionofp indicatorrandomvariablesinordertoanalyzemanyalgorithms includingthehiringproblem weuseindicatorrandomvariables indicatorrandomvariablesprovideaconvenientmethodfor convertingbetweenprobabilitiesandexpectations supposewearegivenasample spacesandaneventa thentheindicatorrandomvariableifagassociatedwitheventaisde nedasifagd ifaoccurs ifadoesnotoccur asasimpleexample letusdeterminetheexpectednumberofheadsthatweobtainwhen ippingafaircoin oursamplespaceissdfh withprfhgdprftgd wecanthende neanindicatorrandomvariablexh associatedwiththecoincomingupheads whichistheeventh thisvariablecountsthenumberofheadsobtainedinthis anditis ifthecoincomesupheadsand otherwise wewritexhdifhgd ifhoccurs iftoccurs theexpectednumberofheadsobtainedinone ipofthecoinissimplytheex pectedvalueofourindicatorvariablexh xhde ifhgd prfhgc prftgd thustheexpectednumberofheadsobtainedbyone ipofafaircoinis asthefollowinglemmashows theexpectedvalueofanindicatorrandomvariableassociatedwithaneventaisequaltotheprobabilitythataoccurs lemma givenasamplespacesandaneventainthesamplespaces letxadifag thene xadprfag indicatorrandomvariables proofbythede nitionofanindicatorrandomvariablefromequation andthede nitionofexpectedvalue wehavee xade ifagd prfagc adprfag whereadenotessa thecomplementofa althoughindicatorrandomvariablesmayseemcumbersomeforanapplicationsuchascountingtheexpectednumberofheadsona ipofasinglecoin theyareusefulforanalyzingsituationsinwhichweperformrepeatedrandomtrials indicatorrandomvariablesgiveusasimplewaytoarriveattheresult ofequation inthisequation wecomputethenumberofheadsinncoin ipsbyconsideringseparatelytheprobabilityofobtaining heads heads etc thesimplermethodproposedinequation insteadusesindicatorrandom variablesimplicitly makingthisargumentmoreexplicit weletxibetheindicatorrandomvariableassociatedwiththeeventinwhichtheith ipcomesupheads xidiftheith ipresultsintheeventhg letxbetherandomvariabledenotingthetotalnumberofheadsinthencoin ips sothatxdnxid wewishtocomputetheexpectednumberofheads andsowetaketheexpectationofbothsidesoftheaboveequationtoobtaine xde nxid theaboveequationgivestheexpectationofthesumofnindicatorrandomvari ables bylemma wecaneasilycomputetheexpectationofeachoftherandomvariables byequation linearityofexpectation itiseasytocomputetheexpectationofthesum itequalsthesumoftheexpectationsofthenrandomvariables linearityofexpectationmakestheuseofindicatorrandomvariablesapowerfulanalyticaltechnique itappliesevenwhenthereisdependenceamongtherandomvariables wenowcaneasilycomputetheexpectednumberofheads chapter probabilisticanalysisandrandomizedalgorithmse xde nxid dnxid xidnxid comparedtothemethodusedinequation indicatorrandomvariablesgreatlysimplifythecalculation weshalluseindicatorrandomvariablesthrough outthisbook analysisofthehiringproblemusingindicatorrandomvariablesreturningtothehiringproblem wenowwishtocomputetheexpectednumberoftimesthatwehireanewof ceassistant inordertouseaprobabilisticanalysis assumethatthecandidatesarriveinarandomorder asdiscussedintheprevious weshallseeinsection howtoremovethisassumption letxbetherandomvariablewhosevalueequalsthenumberoftimeswehireanewof ceas sistant wecouldthenapplythede nitionofexpectedvaluefromequation toobtaine xdnxxd xprfxdxg butthiscalculationwouldbecumbersome weshallinsteaduseindicatorrandomvariablestogreatlysimplifythecalculation touseindicatorrandomvariables insteadofcomputinge xbyde ningonevariableassociatedwiththenumberoftimeswehireanewof ceassistant nenvariablesrelatedtowhetherornoteachparticularcandidateishired inparticular weletxibetheindicatorrandomvariableassociatedwiththeeventinwhichtheithcandidateishired xidifcandidateiishiredgd ifcandidateiishired ifcandidateiisnothired andxdx ccxn indicatorrandomvariables bylemma wehavethate xidprfcandidateiishiredg andwemustthereforecomputetheprobabilitythatlines ofhire assistantareexecuted candidateiishired inline exactlywhencandidateiisbetterthaneachofcandidates throughi becausewehaveassumedthatthecandidatesarriveinarandomorder rsticandidateshaveappearedinarandomorder anyoneofthese rsticandidatesisequallylikelytobethebest quali edsofar candidateihasaprobabilityof iofbeingbetterquali edthancandidates throughi andthusaprobabilityof iofbeinghired bylemma weconcludethate xid nowwecancomputee xde nxid byequation dnxid bylinearityofexpectation dnxid byequation dlnnco byequation eventhoughweinterviewnpeople weactuallyhireonlyapproximatelylnnofthem onaverage wesummarizethisresultinthefollowinglemma lemma assumingthatthecandidatesarepresentedinarandomorder algorithmhire assistanthasanaverage casetotalhiringcostofo chlnn prooftheboundfollowsimmediatelyfromourde nitionofthehiringcostandequation whichshowsthattheexpectednumberofhiresisapproxi matelylnn theaverage casehiringcostisasigni cantimprovementovertheworst casehiringcostofo chn chapter probabilisticanalysisandrandomizedalgorithmsexercises inhire assistant assumingthatthecandidatesarepresentedinarandomor der whatistheprobabilitythatyouhireexactlyonetime whatistheprobabilitythatyouhireexactlyntimes inhire assistant assumingthatthecandidatesarepresentedinarandomor der whatistheprobabilitythatyouhireexactlytwice useindicatorrandomvariablestocomputetheexpectedvalueofthesumofndice useindicatorrandomvariablestosolvethefollowingproblem whichisknownas thehat checkproblem eachofncustomersgivesahattoahat checkpersonatarestaurant thehat checkpersongivesthehatsbacktothecustomersinarandom whatistheexpectednumberofcustomerswhogetbacktheirownhat leta nbeanarrayofndistinctnumbers ifi janda thenthepair iscalledaninversionofa seeproblem formoreoninver sions supposethattheelementsofaformauniformrandompermutationofh useindicatorrandomvariablestocomputetheexpectednumberofinversions randomizedalgorithmsintheprevioussection weshowedhowknowingadistributionontheinputscan helpustoanalyzetheaverage casebehaviorofanalgorithm manytimes wedo nothavesuchknowledge thusprecludinganaverage caseanalysis asmentionedinsection wemaybeabletousearandomizedalgorithm foraproblemsuchasthehiringproblem inwhichitishelpfultoassumethatallpermutationsoftheinputareequallylikely aprobabilisticanalysiscanguide thedevelopmentofarandomizedalgorithm insteadofassumingadistribution ofinputs weimposeadistribution inparticular beforerunningthealgorithm werandomlypermutethecandidatesinordertoenforcethepropertythatevery permutationisequallylikely althoughwehavemodi edthealgorithm westill expecttohireanewof ceassistantapproximatelylnntimes butnowweexpect randomizedalgorithms thistobethecaseforanyinput ratherthanforinputsdrawnfromaparticulardistribution letusfurtherexplorethedistinctionbetweenprobabilisticanalysisandrandom izedalgorithms insection weclaimedthat assumingthatthecandidatesar riveinarandomorder theexpectednumberoftimeswehireanewof ceassistant isaboutlnn notethatthealgorithmhereisdeterministic foranyparticularinput thenumberoftimesanewof ceassistantishiredisalwaysthesame furthermore thenumberoftimeswehireanewof ceassistantdiffersfordifferentinputs anditdependsontheranksofthevariouscandidates sincethisnumberdependsonlyontheranksofthecandidates wecanrepresentaparticularinputbylisting inorder theranksofthecandidates hrank rank rank giventheranklista anewof ceassistantisalwayshired times sinceeachsuccessivecandidateisbetterthanthepreviousone andlines executedineachiteration giventhelistofranksa anewof ceassistantishiredonlyonce inthe rstiteration givenalistofranksa anewof ceassistantishiredthreetimes uponinterviewingthecandidateswithranks recallingthatthecostofouralgorithmdependsonhowmanytimeswehireanewof ceassistant weseethatthereareexpensiveinputssuchasa inexpensiveinputssuchasa andmoderatelyexpensiveinputssuchasa ontheotherhand therandomizedalgorithmthat rstpermutesthecandidatesandthendeterminesthebestcandidate inthiscase werandomizeinthealgorithm notintheinputdistribution givenaparticularinput saya wecannotsayhowmanytimesthemaximumisupdated becausethisquantity differswitheachrunofthealgorithm rsttimewerunthealgorithmona itmayproducethepermutationa andperform updates butthesecondtimewerunthealgorithm wemayproducethepermutationa andperformonlyoneupdate thethirdtimewerunit wemayperformsomeothernumberofupdates eachtimewerunthealgorithm theexecutiondependsontherandomchoices madeandislikelytodifferfromthepreviousexecutionofthealgorithm forthis algorithmandmanyotherrandomizedalgorithms noparticularinputelicitsitsworst casebehavior evenyourworstenemycannotproduceabadinputarray sincetherandompermutationmakestheinputorderirrelevant therandomized algorithmperformsbadlyonlyiftherandom numbergeneratorproducesan lucky permutation forthehiringproblem theonlychangeneededinthecodeistorandomlyper mutethearray chapter probabilisticanalysisandrandomizedalgorithmsrandomized hire assistant randomlypermutethelistofcandidates bestd candidate isaleast quali eddummycandidate forid ton interviewcandidatei ifcandidateiisbetterthancandidatebest bestdi hirecandidateiwiththissimplechange wehavecreatedarandomizedalgorithmwhoseperfor mancematchesthatobtainedbyassumingthatthecandidateswerepresentedina randomorder lemma theexpectedhiringcostoftheprocedurerandomized hire assistantiso chlnn proofafterpermutingtheinputarray wehaveachievedasituationidenticaltothatoftheprobabilisticanalysisofhire assistant comparinglemmas highlightsthedifferencebetweenprobabilisticanalysisandrandomizedalgorithms inlemma wemakeanassumptionabout theinput inlemma wemakenosuchassumption althoughrandomizingthe inputtakessomeadditionaltime toremainconsistentwithourterminology wecouchedlemma intermsoftheaverage casehiringcostandlemma intermsoftheexpectedhiringcost intheremainderofthissection wediscusssome issuesinvolvedinrandomlypermutinginputs randomlypermutingarraysmanyrandomizedalgorithmsrandomizetheinputbypermutingthegiveninputarray thereareotherwaystouserandomization weshalldiscusstwo methodsfordoingso weassumethatwearegivenanarrayawhich withoutlossofgenerality containstheelements throughn ourgoalistoproducearandompermutationofthearray onecommonmethodistoassigneachelementa iofthearrayarandompri orityp andthensorttheelementsofaaccordingtothesepriorities forex ample ifourinitialarrayisadh iandwechooserandomprioritiespdh wewouldproduceanarraybdh sincethesecondpriorityisthesmallest followedbythefourth thenthe rst nallythethird wecallthisprocedurepermute sorting randomizedalgorithms permute sorting nda letp nbeanewarray forid ton idrandom sorta usingpassortkeysline choosesarandomnumberbetween andn weusearangeof ton tomakeitlikelythatalltheprioritiesinpareunique asksyoutoprovethattheprobabilitythatallentriesareuniqueisatleast andexercise askshowtoimplementthealgorithmeveniftwoormorepriorities areidentical letusassumethatalltheprioritiesareunique thetime consumingstepinthisprocedureisthesortinginline asweshallseeinchapter ifweuseacomparisonsort sortingtakesnlgn wecanachievethislowerbound sincewehaveseenthatmergesorttakes nlgn weshallseeothercomparisonsortsthattake nlgn timeinpartii asksyoutosolvetheverysimilarproblemofsortingnumbersintherange ton ino aftersorting ifp iisthejthsmallestpriority thena iliesinpositionjoftheoutput inthismannerweobtainapermutation itremainstoprovethattheprocedureproducesauniformrandompermutation thatis thattheprocedureisequallylikelytoproduceeverypermutationofthenumbers throughn lemma procedurepermute sortingproducesauniformrandompermutationoftheinput assumingthatallprioritiesaredistinct proofwestartbyconsideringtheparticularpermutationinwhicheachele menta ireceivestheithsmallestpriority weshallshowthatthispermutationoccurswithprobabilityexactly forid leteibetheeventthatelementa ireceivestheithsmallestpriority thenwewishtocomputetheprobabilitythatforalli eventeioccurs whichisprfe eng usingexercisec thisprobabilityisequaltoprfe gprfe gprfe gprfe gprfeijei gprfenjen wehavethatprfe nbecauseitistheprobabilitythatoneprioritychosenrandomlyoutofasetofnisthesmallestpriority weobserve chapter probabilisticanalysisandrandomizedalgorithmsthatprfe becausegiventhatelementa hasthesmall estpriority eachoftheremainingn elementshasanequalchanceofhav ingthesecondsmallestpriority ingeneral forid wehavethatprfeijei nic giventhatelementsa througha ihavethei smallestpriorities inorder eachoftheremainingn elementshasanequalchanceofhavingtheithsmallestpriority wehaveprfe engd andwehaveshownthattheprobabilityofobtainingtheidentitypermutationis wecanextendthisprooftoworkforanypermutationofpriorities considerany xedpermutationdh iofthesetf letusdenotebyritherankofthepriorityassignedtoelementa wheretheelementwiththejthsmallestpriorityhasrankj ifwede neeiastheeventinwhichelementa ireceivesthei thsmallestpriority orridi thesameproofstillapplies therefore ifwecalculatetheprobabilityofobtaininganyparticular permutation thecalculationisidenticaltotheoneabove sothattheprobabilityof obtainingthispermutationisalso youmightthinkthattoprovethatapermutationisauniformrandompermuta tion itsuf cestoshowthat foreachelementa theprobabilitythattheelementwindsupinpositionjis showsthatthisweakerconditionis infact insuf cient abettermethodforgeneratingarandompermutationistopermutethegivenarrayinplace theprocedurerandomize placedoessoino initsithiteration itchoosestheelementa irandomlyfromamongelementsa ithrough subsequenttotheithiteration iisneveraltered randomize nda forid ton swapa iwitha random weshallusealoopinvarianttoshowthatprocedurerandomize placeproducesauniformrandompermutation permutationonasetofnele mentsisasequencecontainingkofthenelements withnorepetitions seeappendixc therearen suchpossiblek permutations randomizedalgorithms lemma procedurerandomize placecomputesauniformrandompermutation proofweusethefollowingloopinvariant justpriortotheithiterationoftheforloopoflines foreachpossible permutationofthenelements thesubarraya icontainsthis permutationwithprobability nic weneedtoshowthatthisinvariantistruepriortothe rstloopiteration thateachiterationoftheloopmaintainstheinvariant andthattheinvariantprovidesauseful propertytoshowcorrectnesswhentheloopterminates initialization considerthesituationjustbeforethe rstloopiteration sothatid theloopinvariantsaysthatforeachpossible permutation thesub arraya containsthis permutationwithprobability nic thesubarraya isanemptysubarray anda permutationhasnoelements containsany permutationwithprobability andtheloopinvariantholdspriortothe rstiteration maintenance weassumethatjustbeforetheithiteration eachpossible permutationappearsinthesubarraya iwithprobability nic andweshallshowthataftertheithiteration eachpossiblei permutationappearsinthesubarraya iwithprobability incrementingiforthenextiterationthenmaintainstheloopinvariant letusexaminetheithiteration consideraparticulari permutation andde notetheelementsinitbyhx xii thispermutationconsistsofan permutationhx ifollowedbythevaluexithatthealgorithmplacesina lete denotetheeventinwhichthe rsti iterationshavecreatedtheparticular permutationhx iina bytheloopinvariant prfe nic lete betheeventthatithiterationputsxiinpositiona thei permutationhx xiiappearsina ipre ciselywhenbothe ande andsowewishtocomputeprfe usingequation wehaveprfe gdprfe gprfe theprobabilityprfe gequals nic becauseinline thealgorithmchoosesxirandomlyfromthenic valuesinpositionsa wehave chapter probabilisticanalysisandrandomizedalgorithmsprfe gdprfe gprfe nic nic termination attermination idnc andwehavethatthesubarraya isagivenn permutationwithprobability randomize placeproducesauniformrandompermutation arandomizedalgorithmisoftenthesimplestandmostef cientwaytosolveaproblem weshalluserandomizedalgorithmsoccasionallythroughoutthisbook exercises professormarceauobjectstotheloopinvariantusedintheproofoflemma questionswhetheritistruepriortothe rstiteration hereasonsthatwecouldjust aseasilydeclarethatanemptysubarraycontainsno permutations therefore theprobabilitythatanemptysubarraycontainsa permutationshouldbe thusinvalidatingtheloopinvariantpriortothe rstiteration rewritetheprocedurerandomize placesothatitsassociatedloopinvariantappliestoanonemptysubarraypriortothe rstiteration andmodifytheproofoflemma foryour procedure professorkelpdecidestowriteaprocedurethatproducesatrandomanypermuta tionbesidestheidentitypermutation heproposesthefollowingprocedure permute without identity nda forid ton swapa iwitha random doesthiscodedowhatprofessorkelpintends supposethatinsteadofswappingelementa iwitharandomelementfromthesubarraya weswappeditwitharandomelementfromanywhereinthearray randomizedalgorithms permute nda forid ton swapa iwitha random doesthiscodeproduceauniformrandompermutation whyorwhynot professorarmstrongsuggeststhefollowingprocedureforgeneratingauniform randompermutation permute cyclic nda letb nbeanewarray offsetdrandom forid ton destdicoffset ifdest destddestn destda returnbshowthateachelementa ihasa nprobabilityofwindingupinanyparticularpositioninb thenshowthatprofessorarmstrongismistakenbyshowingthattheresultingpermutationisnotuniformlyrandom provethatinthearraypinprocedurepermute sorting theprobabilitythatallelementsareuniqueisatleast explainhowtoimplementthealgorithmpermute sortingtohandlethecaseinwhichtwoormoreprioritiesareidentical thatis youralgorithmshouldproduceauniformrandompermutation eveniftwoormoreprioritiesareidentical supposewewanttocreatearandomsampleofthesetf thatis anm elementsubsets suchthateachm subsetisequallylikelytobecreated onewaywouldbetoseta idiforid callrandomize andthentakejustthe rstmarrayelements thismethodwouldmakencallstotherandomprocedure ifnismuchlargerthanm wecancreatearandomsamplewithfewercallstorandom showthat chapter probabilisticanalysisandrandomizedalgorithmsthefollowingrecursiveprocedurereturnsarandomm subsetsoff inwhicheachm subsetisequallylikely whilemakingonlymcallstorandom random sample ifm return elsesdrandom sample idrandom ifi sds fng elsesds returns probabilisticanalysisandfurtherusesofindicatorrandomvariablesthisadvancedsectionfurtherillustratesprobabilisticanalysisbywayoffourex amples rstdeterminestheprobabilitythatinaroomofkpeople twoofthemsharethesamebirthday thesecondexampleexamineswhathappenswhen werandomlytossballsintobins thethirdinvestigates streaks ofconsecutiveheadswhenwe ipcoins nalexampleanalyzesavariantofthehiringprob leminwhichyouhavetomakedecisionswithoutactuallyinterviewingallthe candidates thebirthdayparadoxour rstexampleisthebirthdayparadox howmanypeoplemusttherebeinaroombeforethereisa chancethattwoofthemwerebornonthesamedayof theyear theanswerissurprisinglyfew theparadoxisthatitisinfactfarfewer thanthenumberofdaysinayear orevenhalfthenumberofdaysinayear aswe shallsee toanswerthisquestion weindexthepeopleintheroomwiththeintegers wherekisthenumberofpeopleintheroom weignoretheissueofleapyearsandassumethatallyearshavend days forid letbibethedayoftheyearonwhichpersoni sbirthdayfalls bin wealsoassumethatbirthdaysareuniformlydistributedacrossthendaysoftheyear sothatprfbidrgd nforid kandrd theprobabilitythattwogivenpeople sayiandj havematchingbirthdaysdependsonwhethertherandomselectionofbirthdaysisindependent weassume fromnowonthatbirthdaysareindependent sothattheprobabilitythati sbirthday probabilisticanalysisandfurtherusesofindicatorrandomvariables andj sbirthdaybothfallondayrisprfbidrandbjdrgdprfbidrgprfbjdrgd theprobabilitythattheybothfallonthesamedayisprfbidbjgdnxrd prfbidrandbjdrgdnxrd moreintuitively oncebiischosen theprobabilitythatbjischosentobethesamedayis theprobabilitythatiandjhavethesamebirthdayisthesameastheprobabilitythatthebirthdayofoneofthemfallsonagivenday however thatthiscoincidencedependsontheassumptionthatthebirthdaysare independent wecananalyzetheprobabilityofatleast outofkpeoplehavingmatchingbirthdaysbylookingatthecomplementaryevent theprobabilitythatatleasttwo ofthebirthdaysmatchis minustheprobabilitythatallthebirthdaysaredifferent theeventthatkpeoplehavedistinctbirthdaysisbkdk whereaiistheeventthatpersoni sbirthdayisdifferentfrompersonj sforallj sincewecanwritebkdak weobtainfromequation therecurrenceprfbkgdprfbk gprfakjbk wherewetakeprfb gdprfa asaninitialcondition inotherwords theprobabilitythatb bkaredistinctbirthdaysistheprobabilitythatb aredistinctbirthdaystimestheprobabilitythatbk biforid giventhatb aredistinct ifb aredistinct theconditionalprobabilitythatbk biforid isprfakjbk nkc sinceoutofthendays daysarenottaken weiterativelyapplytherecurrence toobtain chapter probabilisticanalysisandrandomizedalgorithmsprfbkgdprfbk gprfakjbk gdprfbk gprfak jbk gprfakjbk dprfb gprfa gprfa gprfakjbk nnkc inequality cxex givesusprfbkge ndepk ndek whenk nln theprobabilitythatallkbirthdaysaredistinctisatmost whenk nln solvingthequadraticequation whenk fornd wemusthavek ifatleast peopleareinaroom theprobabilityisatleast thatatleasttwopeoplehavethesamebirthday onmars ayearis martiandayslong ittherefore takes martianstogetthesameeffect ananalysisusingindicatorrandomvariableswecanuseindicatorrandomvariablestoprovideasimplerbutapproximateanal ysisofthebirthdayparadox foreachpair ofthekpeopleintheroom wede netheindicatorrandomvariablexij byxijdifpersoniandpersonjhavethesamebirthdaygd ifpersoniandpersonjhavethesamebirthday otherwise byequation theprobabilitythattwopeoplehavematchingbirthdaysis andthusbylemma wehavee xijdprfpersoniandpersonjhavethesamebirthdaygd lettingxbetherandomvariablethatcountsthenumberofpairsofindividualshavingthesamebirthday wehave probabilisticanalysisandfurtherusesofindicatorrandomvariables xdkxid kxjdic xij takingexpectationsofbothsidesandapplyinglinearityofexpectation weobtaine xde kxid kxjdic xij dkxid kxjdic xijd ndk whenk therefore theexpectednumberofpairsofpeoplewiththesamebirthdayisatleast ifwehaveatleastp individualsinaroom wecanexpectatleasttwotohavethesamebirthday fornd ifkd theexpectednumberofpairswiththesamebirthdayis withatleast weexpectto ndatleastonematchingpairofbirth days onmars whereayearis martiandayslong weneedatleast mar tians rstanalysis whichusedonlyprobabilities determinedthenumberofpeo plerequiredfortheprobabilitytoexceed thatamatchingpairofbirthdaysexists andthesecondanalysis whichusedindicatorrandomvariables determinedthenumbersuchthattheexpectednumberofmatchingbirthdaysis althoughtheexactnumbersofpeopledifferforthetwosituations theyarethesameasymp totically ballsandbinsconsideraprocessinwhichwerandomlytossidenticalballsintobbins numbered thetossesareindependent andoneachtosstheballisequallylikelytoendupinanybin theprobabilitythatatossedballlandsinanygivenbinis theball tossingprocessisasequenceofbernoullitrials seeappendixc withaprobability bofsuccess wheresuccessmeansthattheballfallsinthegivenbin thismodelisparticularlyusefulforanalyzinghashing seechapter andwecanansweravarietyofinterestingquestionsabouttheball tossingprocess problemc asksadditionalquestionsaboutballsandbins chapter probabilisticanalysisandrandomizedalgorithmshowmanyballsfallinagivenbin thenumberofballsthatfallinagivenbinfollowsthebinomialdistributionb kin ifwetossnballs equation tellsusthattheexpectednumberofballsthatfallinthegivenbinisn howmanyballsmustwetoss ontheaverage untilagivenbincontainsaball thenumberoftossesuntilthegivenbinreceivesaballfollowsthegeometric distributionwithprobability byequation theexpectednumberoftossesuntilsuccessis howmanyballsmustwetossuntileverybincontainsatleastoneball letuscallatossinwhichaballfallsintoanemptybina wewanttoknowtheexpectednumbernoftossesrequiredtogetbhits usingthehits wecanpartitionthentossesintostages theithstageconsistsofthetossesafterthe sthituntiltheithhit rststageconsistsofthe rsttoss sinceweareguaranteedtohaveahitwhenallbinsareempty foreachtoss duringtheithstage binscontainballsandbic binsareempty foreachtossintheithstage theprobabilityofobtainingahitis bic letnidenotethenumberoftossesintheithstage thenumberoftossesrequiredtogetbhitsisndpbid eachrandomvariablenihasageometricdistributionwithprobabilityofsuccess bic bandthus byequation wehavee nidbbic bylinearityofexpectation wehaveede bxid dbxid nidbxid bbic dbbxid idb lnbco byequation itthereforetakesapproximatelyblnbtossesbeforewecanexpectthateverybinhasaball thisproblemisalsoknownasthecouponcollector sproblem whichsaysthatapersontryingtocollecteachofbdifferentcouponsexpectstoacquireapproximatelyblnbrandomlyobtainedcouponsinordertosucceed probabilisticanalysisandfurtherusesofindicatorrandomvariables streakssupposeyou ipafaircoinntimes whatisthelongeststreakofconsecutiveheadsthatyouexpecttosee theansweris lgn asthefollowinganalysisshows rstprovethattheexpectedlengthofthelongeststreakofheadsiso lgn theprobabilitythateachcoin ipisaheadis letaikbetheeventthatastreakofheadsoflengthatleastkbeginswiththeithcoin ipor moreprecisely theeventthatthekconsecutivecoin ipsi ick yieldonlyheads knand inkc sincecoin ipsaremutuallyindependent foranygiveneventaik theprobabilitythatallk ipsareheadsisprfaikgd forkd dlgne prfai dlgnegd dlgne lgnd andthustheprobabilitythatastreakofheadsoflengthatleast dlgnebeginsinpositioniisquitesmall thereareatmostn dlgnec positionswheresuchastreakcanbegin theprobabilitythatastreakofheadsoflengthatleast dlgnebeginsanywhereisthereforepr dlgnec dlgne dlgnec xid nxid sincebyboole sinequality theprobabilityofaunionofeventsisatmostthesumoftheprobabilitiesoftheindividualevents notethatboole sinequalityholdsevenforeventssuchasthesethatarenotindependent wenowuseinequality toboundthelengthofthelongeststreak forjd letljbetheeventthatthelongeststreakofheadshaslengthex actlyj andletlbethelengthofthelongeststreak bythede nitionofexpectedvalue wehavee ldnxjd jprfljg chapter probabilisticanalysisandrandomizedalgorithmswecouldtrytoevaluatethissumusingupperboundsoneachprfljgsimilartothosecomputedininequality unfortunately thismethodwouldyieldweak bounds wecanusesomeintuitiongainedbytheaboveanalysistoobtainagood bound however informally weobservethatfornoindividualterminthesum mationinequation areboththefactorsjandprfljglarge whenj dlgne thenprfljgisverysmall andwhenj dlgne thenjisfairlysmall moreformally wenotethattheeventsljforjd naredisjoint andsotheprobabilitythatastreakofheadsoflengthatleast dlgnebeginsany whereispnjd dlgneprfljg byinequality wehavepnjd dlgneprfljg notingthatpnjd prfljgd wehavethatp dlgn prfljg weobtainednxjd jprfljgd dlgn xjd jprfljgcnxjd dlgnejprfljg dlgn xjd dlgne prfljgcnxjd dlgnenprfljgd dlgne dlgn xjd prfljgcnnxjd dlgneprfljg dlgne lgn theprobabilitythatastreakofheadsexceedsrdlgne ipsdiminishesquicklywithr forr theprobabilitythatastreakofatleastrdlgneheadsstartsinpositioniisprfai rdlgnegd rdlgne theprobabilityisatmostn nrd thatthelongeststreakisatleastrdlgne orequivalently theprobabilityisatleast thatthelongeststreakhaslengthlessthanrdlgne asanexample fornd coin ips theprobabilityofhavingastreakofatleast dlgned headsisatmost thechanceofhavingastreaklongerthan dlgned headsisatmost wenowproveacomplementarylowerbound theexpectedlengthofthelongeststreakofheadsinncoin ipsislgn toprovethisbound welookforstreaks probabilisticanalysisandfurtherusesofindicatorrandomvariables oflengthsbypartitioningthen ipsintoapproximatelyn sgroupsofs ipseach ifwechoosesdb lgn wecanshowthatitislikelythatatleastoneofthesegroupscomesupallheads andhenceitislikelythatthelongeststreak haslengthatleastsdlgn wethenshowthatthelongeststreakhasexpectedlengthlgn wepartitionthencoin ipsintoatleastbn lgn ccgroupsofb lgn cconsecutive ips andweboundtheprobabilitythatnogroupcomesupallheads byequation theprobabilitythatthegroupstartinginpositionicomesupallheadsisprfai lgn cgd lgn theprobabilitythatastreakofheadsoflengthatleastb lgn cdoesnotbegininpositioniisthereforeatmost sincethebn lgn ccgroupsareformedfrommutuallyexclusive independentcoin ips theprobabilitythatevery oneofthesegroupsfailstobeastreakoflengthb lgn cisatmost pnbn lgn pnn lgn lgn lgn pndo elgn forthisargument weusedinequality cxex andthefact whichyoumightwanttoverify lgn pnlgnforsuf cientlylargen theprobabilitythatthelongeststreakexceedsb lgn cisnxjdb lgn prfljg wecannowcalculatealowerboundontheexpectedlengthofthelongeststreak beginningwithequation andproceedinginamannersimilartoouranalysis oftheupperbound chapter probabilisticanalysisandrandomizedalgorithmsednxjd jprfljgdb lgn cxjd jprfljgcnxjdb lgn jprfljgb lgn cxjd prfljgcnxjdb lgn lgn cprfljgd lgn cxjd prfljgcb lgn cnxjdb lgn prfljg lgn byinequality dlgn aswiththebirthdayparadox wecanobtainasimplerbutapproximateanalysisusingindicatorrandomvariables weletxikdifaikgbetheindicatorrandomvariableassociatedwithastreakofheadsoflengthatleastkbeginningwiththeithcoin tocountthetotalnumberofsuchstreaks wede nexdnkc xid xik takingexpectationsandusinglinearityofexpectation wehavee xde nkc xid xik dnkc xid xikdnkc xid prfaikgdnkc xid kdnkc byplugginginvariousvaluesfork wecancalculatetheexpectednumberofstreaksoflengthk ifthisnumberislarge muchgreaterthan thenweexpectmanystreaksoflengthktooccurandtheprobabilitythatoneoccursishigh probabilisticanalysisandfurtherusesofindicatorrandomvariables thisnumberissmall muchlessthan thenweexpectfewstreaksoflengthktooccurandtheprobabilitythatoneoccursislow ifkdclgn forsomepositiveconstantc weobtaine xdnclgnc clgndnclgnc ncd clgn nnc ifcislarge theexpectednumberofstreaksoflengthclgnissmall andwecon cludethattheyareunlikelytooccur ontheotherhand ifcd thenweobtaine andweexpectthattherearealargenumberofstreaksoflength lgn therefore onestreakofsuchalengthislikelytooccur fromtheseroughestimatesalone wecanconcludethattheexpectedlength ofthelongeststreakis lgn theon linehiringproblemasa nalexample weconsideravariantofthehiringproblem supposenowthatwedonotwishtointerviewallthecandidatesinorderto ndthebestone alsodonotwishtohireand reaswe ndbetterandbetterapplicants instead arewillingtosettleforacandidatewhoisclosetothebest inexchangeforhiring exactlyonce wemustobeyonecompanyrequirement aftereachinterviewwe musteitherimmediatelyofferthepositiontotheapplicantorimmediatelyrejecttheapplicant whatisthetrade offbetweenminimizingtheamountofinterviewingandmaximizingthequalityofthecandidatehired wecanmodelthisprobleminthefollowingway aftermeetinganapplicant weareabletogiveeachoneascore letscore denotethescorewegivetotheithapplicant andassumethatnotwoapplicantsreceivethesamescore afterwehave seenjapplicants weknowwhichofthejhasthehighestscore butwedonotknowwhetheranyoftheremainingnjapplicantswillreceiveahigherscore wedecidetoadoptthestrategyofselectingapositiveintegerk interviewingandthenrejectingthe rstkapplicants andhiringthe rstapplicantthereafterwhohasahigherscorethanallprecedingapplicants ifitturnsoutthatthebest quali applicantwasamongthe rstkinterviewed thenwehirethenthapplicant weformalizethisstrategyintheprocedureon maximum whichreturnstheindexofthecandidatewewishtohire chapter probabilisticanalysisandrandomizedalgorithmson maximum bestscore forid tok ifscore bestscore bestscoredscore foridkc ton ifscore bestscore returni returnnwewishtodetermine foreachpossiblevalueofk theprobabilitythatwehirethemostquali edapplicant wethenchoosethebestpossiblek andimplementthestrategywiththatvalue forthemoment assumethatkis xed letm dmax ijfscore gdenotethemaximumscoreamongap plicants throughj letsbetheeventthatwesucceedinchoosingthebest quali edapplicant andletsibetheeventthatwesucceedwhenthebest quali edapplicantistheithoneinterviewed sincethevarioussiaredisjoint wehavethatprfsgdpnid prfsig notingthatweneversucceedwhenthebest quali edapplicantisoneofthe rstk wehavethatprfsigd forid weobtainprfsgdnxidkc prfsig wenowcomputeprfsig inordertosucceedwhenthebest quali edapplicantistheithone twothingsmusthappen thebest quali edapplicantmustbeinpositioni aneventwhichwedenotebybi thealgorithmmustnotselectanyoftheapplicantsinpositionskc throughi whichhappensonlyif foreachjsuchthatkc ndthatscore bestscoreinline becausescoresareunique wecanignorethepossibilityofscore dbestscore inotherwords allofthevaluesscore throughscore mustbelessthanm ifanyaregreaterthanm weinsteadreturntheindexofthe rstonethatisgreater weuseoitodenotetheeventthatnoneoftheapplicantsinpositionkc throughi arechosen fortunately thetwoeventsbiandoiareindependent theeventoidependsonlyontherelativeorderingofthevaluesinpositions throughi whereasbidependsonlyonwhetherthevalueinpositioniisgreaterthanthevaluesinallotherpositions theorderingofthevaluesinpositions throughi doesnotaffectwhetherthevalueinpositioniisgreaterthanallofthem andthevalueinpositionidoesnotaffecttheorderingofthevaluesinpositions throughi thuswecanapplyequation toobtain probabilisticanalysisandfurtherusesofindicatorrandomvariables prfsigdprfbi oigdprfbigprfoig theprobabilityprfbigisclearly sincethemaximumisequallylikelytobeinanyoneofthenpositions foreventoitooccur themaximumvalueinpositions throughi whichisequallylikelytobeinanyofthesei positions mustbeinoneofthe rstkpositions consequently prfoigdk andprfsigdk usingequation wehaveprfsgdnxidkc prfsigdnxidkc dknnxidkc dknn xidk weapproximatebyintegralstoboundthissummationfromaboveandbelow bytheinequalities wehaveznk xdxn xidk izn xdx evaluatingthesede niteintegralsgivesustheboundskn lnnlnk prfsgkn whichprovidearathertightboundforprfsg becausewewishtomaximizeourprobabilityofsuccess letusfocusonchoosingthevalueofkthatmaximizesthelowerboundonprfsg besides thelower boundexpressioniseasiertomaximizethantheupper boundexpression differentiatingtheexpression lnnlnk withrespecttok weobtain lnnlnk settingthisderivativeequalto weseethatwemaximizethelowerboundontheprobabilitywhenlnkdlnn dln equivalently whenkdn ifweimplementourstrategywithkdn wesucceedinhiringourbest quali edapplicantwithprobabilityatleast chapter probabilisticanalysisandrandomizedalgorithmsexercises howmanypeoplemusttherebeinaroombeforetheprobabilitythatsomeone hasthesamebirthdayasyoudoisatleast howmanypeoplemusttherebebeforetheprobabilitythatatleasttwopeoplehaveabirthdayonjuly isgreaterthan supposethatwetossballsintobbinsuntilsomebincontainstwoballs eachtossisindependent andeachballisequallylikelytoendupinanybin whatistheexpectednumberofballtosses fortheanalysisofthebirthdayparadox isitimportantthatthebirthdaysbemutu allyindependent orispairwiseindependencesuf cient justifyyouranswer howmanypeopleshouldbeinvitedtoapartyinordertomakeitlikelythattherearethreepeoplewiththesamebirthday whatistheprobabilitythatak stringoverasetofsizenformsak permutation howdoesthisquestionrelatetothebirthdayparadox supposethatnballsaretossedintonbins whereeachtossisindependentandtheballisequallylikelytoendupinanybin whatistheexpectednumberofempty bins whatistheexpectednumberofbinswithexactlyoneball sharpenthelowerboundonstreaklengthbyshowingthatinn ipsofafaircoin theprobabilityislessthan nthatnostreaklongerthanlgn lglgnconsecutiveheadsoccurs problemsforchapter problems probabilisticcountingwithab bitcounter wecanordinarilyonlycountupto withr morris sprobabilisticcounting wecancountuptoamuchlargervalueattheexpenseofsomelossofprecision weletacountervalueofirepresentacountofniforid wheretheniformanincreasingsequenceofnonnegativevalues weassumethattheini tialvalueofthecounteris representingacountofn theincrementoperationworksonacountercontainingthevalueiinaprobabilisticmanner ifid thentheoperationreportsanover owerror otherwise theincre mentoperationincreasesthecounterby withprobability nic anditleavesthecounterunchangedwithprobability nic ifweselectnidiforalli thenthecounterisanordinaryone moreinterestingsituationsariseifweselect nid fori ornidfi theithfibonaccinumber seesection forthisproblem assumethatn islargeenoughthattheprobabilityofanover owerrorisnegligible showthattheexpectedvaluerepresentedbythecounterafternincrementoperationshavebeenperformedisexactlyn theanalysisofthevarianceofthecountrepresentedbythecounterdependsonthesequenceoftheni letusconsiderasimplecase nid iforalli estimatethevarianceinthevaluerepresentedbytheregisterafternincrementoperationshavebeenperformed searchinganunsortedarraythisproblemexaminesthreealgorithmsforsearchingforavaluexinanunsortedarrayaconsistingofnelements considerthefollowingrandomizedstrategy pickarandomindexiintoa ifa idx thenweterminate otherwise wecontinuethesearchbypickinganewrandomindexintoa wecontinuepickingrandomindicesintoauntilwe ndanindexjsuchthata jdxoruntilwehavecheckedeveryelementofa notethatwepickfromthewholesetofindiceseachtime sothatwemayexaminea givenelementmorethanonce writepseudocodeforaprocedurerandom searchtoimplementthestrat egyabove besurethatyouralgorithmterminateswhenallindicesintoahavebeenpicked chapter probabilisticanalysisandrandomizedalgorithmsb supposethatthereisexactlyoneindexisuchthata idx whatistheexpectednumberofindicesintoathatwemustpickbeforewe ndxandrandom searchterminates generalizingyoursolutiontopart supposethattherearek indicesisuchthata idx whatistheexpectednumberofindicesintoathatwemustpickbeforewe ndxandrandom searchterminates youranswershouldbeafunctionofnandk supposethattherearenoindicesisuchthata idx whatistheexpectednumberofindicesintoathatwemustpickbeforewehavecheckedallelementsofaandrandom searchterminates nowconsideradeterministiclinearsearchalgorithm whichwerefertoasdeterministic speci cally thealgorithmsearchesaforxinorder consideringa nuntileitherit ndsa idxoritreachestheendofthearray assumethatallpossiblepermutationsoftheinputarrayareequallylikely supposethatthereisexactlyoneindexisuchthata idx whatistheaverage caserunningtimeofdeterministic whatistheworst caserunningtimeofdeterministic generalizingyoursolutiontopart supposethattherearek indicesisuchthata idx whatistheaverage caserunningtimeofdeterministic whatistheworst caserunningtimeofdeterministic youranswershouldbeafunctionofnandk supposethattherearenoindicesisuchthata idx whatistheaverage caserunningtimeofdeterministic whatistheworst caserunningtimeofdeterministic finally considerarandomizedalgorithmscramble searchthatworksby rstrandomlypermutingtheinputarrayandthenrunningthedeterministiclin earsearchgivenaboveontheresultingpermutedarray lettingkbethenumberofindicesisuchthata idx givetheworst caseandexpectedrunningtimesofscramble searchforthecasesinwhichkd andkd generalizeyoursolutiontohandlethecaseinwhichk whichofthethreesearchingalgorithmswouldyouuse explainyouranswer notesforchapter chapternotesbollob hofri andspencer containawealthofadvancedprob abilistictechniques theadvantagesofrandomizedalgorithmsarediscussedand surveyedbykarp andrabin thetextbookbymotwaniandraghavan givesanextensivetreatmentofrandomizedalgorithms severalvariantsofthehiringproblemhavebeenwidelystudied theseproblemsaremorecommonlyreferredtoas secretaryproblems anexampleofworkin thisareaisthepaperbyajtai meggido andwaarts iisortingandorderstatistics introductionthispartpresentsseveralalgorithmsthatsolvethefollowingsortingproblem input asequenceofnnumbersha ani output apermutation reordering nioftheinputsequencesuchthata theinputsequenceisusuallyann elementarray althoughitmayberepresentedinsomeotherfashion suchasalinkedlist thestructureofthedatainpractice thenumberstobesortedarerarelyisolatedvalues eachisusuallypartofacollectionofdatacalledarecord eachrecordcontainsakey whichisthevaluetobesorted theremainderoftherecordconsistsofsatellitedata whichareusuallycarriedaroundwiththekey inpractice whenasortingalgorithmpermutes thekeys itmustpermutethesatellitedataaswell ifeachrecordincludesalargeamountofsatellitedata weoftenpermuteanarrayofpointerstotherecordsratherthantherecordsthemselvesinordertominimizedatamovement inasense itistheseimplementationdetailsthatdistinguishanalgorithmfromafull blownprogram asortingalgorithmdescribesthemethodbywhichwedeterminethesortedorder regardlessofwhetherwearesortingindividualnumbers orlargerecordscontainingmanybytesofsatellitedata whenfocusingonthe problemofsorting wetypicallyassumethattheinputconsistsonlyofnumbers translatinganalgorithmforsortingnumbersintoaprogramforsortingrecords partiisortingandorderstatisticsisconceptuallystraightforward althoughinagivenengineeringsituationothersubtletiesmaymaketheactualprogrammingtaskachallenge whysorting manycomputerscientistsconsidersortingtobethemostfundamentalprobleminthestudyofalgorithms thereareseveralreasons sometimesanapplicationinherentlyneedstosortinformation forexample inordertopreparecustomerstatements banksneedtosortchecksbycheck algorithmsoftenusesortingasakeysubroutine forexample aprogramthat rendersgraphicalobjectswhicharelayeredontopofeachothermighthavetosorttheobjectsaccordingtoan relationsothatitcandrawtheseobjectsfrombottomtotop weshallseenumerousalgorithmsinthistextthat usesortingasasubroutine wecandrawfromamongawidevarietyofsortingalgorithms andtheyem ployarichsetoftechniques infact manyimportanttechniquesusedthrough outalgorithmdesignappearinthebodyofsortingalgorithmsthathavebeen developedovertheyears inthisway sortingisalsoaproblemofhistorical wecanproveanontriviallowerboundforsorting asweshalldoinchapter ourbestupperboundsmatchthelowerboundasymptotically andsoweknow thatoursortingalgorithmsareasymptoticallyoptimal moreover wecanuse thelowerboundforsortingtoprovelowerboundsforcertainotherproblems manyengineeringissuescometotheforewhenimplementingsortingalgo rithms thefastestsortingprogramforaparticularsituationmaydependon manyfactors suchaspriorknowledgeaboutthekeysandsatellitedata memoryhierarchy cachesandvirtualmemory ofthehostcomputer andthe softwareenvironment manyoftheseissuesarebestdealtwithatthealgorith miclevel ratherthanby tweaking thecode sortingalgorithmsweintroducedtwoalgorithmsthatsortnrealnumbersinchapter insertionsorttakes timeintheworstcase becauseitsinnerloopsaretight however itisafastin placesortingalgorithmforsmallinputsizes recallthatasorting algorithmsortsinplaceifonlyaconstantnumberofelementsoftheinputar rayareeverstoredoutsidethearray mergesorthasabetterasymptoticrunning nlgn butthemergeprocedureitusesdoesnotoperateinplace partiisortingandorderstatistics inthispart weshallintroducetwomorealgorithmsthatsortarbitraryrealnum bers heapsort presentedinchapter sortsnnumbersinplaceino nlgn itusesanimportantdatastructure calledaheap withwhichwecanalsoimple mentapriorityqueue quicksort inchapter alsosortsnnumbersinplace butitsworst caserunningtimeis itsexpectedrunningtimeis nlgn however anditgenerallyoutperformsheapsortinpractice likeinsertionsort quicksorthastightcode sothehiddenconstantfactorinitsrunningtimeissmall itisapopularalgorithmforsortinglargeinputarrays insertionsort mergesort heapsort andquicksortareallcomparisonsorts theydeterminethesortedorderofaninputarraybycomparingelements chapter ginsbyintroducingthedecision treemodelinordertostudytheperformancelimi tationsofcomparisonsorts usingthismodel weprovealowerboundofnlgn ontheworst caserunningtimeofanycomparisonsortonninputs thusshowingthatheapsortandmergesortareasymptoticallyoptimalcomparisonsorts chapter thengoesontoshowthatwecanbeatthislowerboundofnlgn ifwecangatherinformationaboutthesortedorderoftheinputbymeansotherthancomparingelements thecountingsortalgorithm forexample assumesthattheinputnumbersareinthesetf byusingarrayindexingasatoolfordeterminingrelativeorder countingsortcansortnnumbersin kcn whenkdo countingsortrunsintimethatislinearinthesizeoftheinputarray arelatedalgorithm radixsort canbeusedtoextendtherangeofcountingsort iftherearenintegerstosort eachintegerhasddigits andeachdigitcantakeonuptokpossiblevalues thenradixsortcansortthenumbersin nck whendisaconstantandkiso radixsortrunsinlineartime athirdalgorithm bucketsort requiresknowledgeoftheprobabilistic distributionofnumbersintheinputarray itcansortnrealnumbersuniformlydistributedinthehalf openinterval inaverage caseo thefollowingtablesummarizestherunningtimesofthesortingalgorithmsfromchapters asusual ndenotesthenumberofitemstosort forcountingsort theitemstosortareintegersinthesetf forradixsort eachitemisad digitnumber whereeachdigittakesonkpossiblevalues forbucketsort weassumethatthekeysarerealnumbersuniformlydistributedinthehalf interval therightmostcolumngivestheaverage caseorexpectedrunningtime indicatingwhichitgiveswhenitdiffersfromtheworst caserunningtime weomittheaverage caserunningtimeofheapsortbecausewedonotanalyzeitin thisbook partiisortingandorderstatisticsworst caseaverage expectedalgorithmrunningtimerunningtimeinsertionsort mergesort nlgn nlgn heapsorto nlgn quicksort nlgn expected countingsort kcn kcn radixsort nck nck bucketsort average orderstatisticstheithorderstatisticofasetofnnumbersistheithsmallestnumberintheset wecan ofcourse selecttheithorderstatisticbysortingtheinputandindexingtheithelementoftheoutput withnoassumptionsabouttheinputdistribution thismethodrunsinnlgn asthelowerboundprovedinchapter shows inchapter weshowthatwecan ndtheithsmallestelementino evenwhentheelementsarearbitraryrealnumbers wepresentarandomizedalgo rithmwithtightpseudocodethatrunsin timeintheworstcase butwhoseexpectedrunningtimeiso wealsogiveamorecomplicatedalgorithmthatrunsino worst casetime backgroundalthoughmostofthispartdoesnotrelyondif cultmathematics somesectionsdorequiremathematicalsophistication inparticular analysesofquicksort bucket sort andtheorder statisticalgorithmuseprobability whichisreviewedinap pendixc andthematerialonprobabilisticanalysisandrandomizedalgorithmsin chapter theanalysisoftheworst caselinear timealgorithmfororderstatis ticsinvolvessomewhatmoresophisticatedmathematicsthantheotherworst analysesinthispart heapsortinthischapter weintroduceanothersortingalgorithm heapsort likemergesort butunlikeinsertionsort heapsort srunningtimeiso nlgn likeinsertionsort butunlikemergesort heapsortsortsinplace onlyaconstantnumberofarray elementsarestoredoutsidetheinputarrayatanytime heapsortcombines thebetterattributesofthetwosortingalgorithmswehavealreadydiscussed heapsortalsointroducesanotheralgorithmdesigntechnique usingadatastruc ture inthiscaseonewecalla heap tomanageinformation notonlyistheheap datastructureusefulforheapsort butitalsomakesanef cientpriorityqueue heapdatastructurewillreappearinalgorithmsinlaterchapters theterm heap wasoriginallycoinedinthecontextofheapsort butithassincecometoreferto garbage collectedstorage suchastheprogramminglanguagesjavaandlispprovide ourheapdatastructureisnotgarbage collectedstorage andwheneverwerefertoheapsinthisbook weshallmeanadatastructurerather thananaspectofgarbagecollection heapsthe binary heapdatastructureisanarrayobjectthatwecanviewasanearlycompletebinarytree seesectionb asshowninfigure nodeofthetreecorrespondstoanelementofthearray thetreeiscom pletely lledonalllevelsexceptpossiblythelowest whichis lledfromthe leftuptoapoint anarrayathatrepresentsaheapisanobjectwithtwoat tributes asusual givesthenumberofelementsinthearray anda heap whichrepresentshowmanyelementsintheheaparestoredwithinarraya thatis althougha lengthmaycontainnumbers onlytheele mentsina heap heap sizea arevalidele mentsoftheheap therootofthetreeisa andgiventheindexiofanode wecaneasilycomputetheindicesofitsparent leftchild andrightchild chapter heapsort amax heapviewedas abinarytreeand anarray thenumberwithinthecircleateachnodeinthetreeisthevaluestoredatthatnode thenumberaboveanodeisthecorrespondingindexinthearray aboveandbelowthearrayarelinesshowingparent childrelationships parentsarealwaystotheleftoftheirchildren thetreehasheightthree thenodeatindex withvalue hasheightone returnbi cleft return iright return onmostcomputers theleftprocedurecancompute iinoneinstructionbysimplyshiftingthebinaryrepresentationofileftbyonebitposition similarly therightprocedurecanquicklycompute byshiftingthebinaryrepresentationofileftbyonebitpositionandthenaddingina asthelow orderbit theparentprocedurecancomputebi cbyshiftingirightonebitposition goodimplementationsofheapsortoftenimplementtheseproceduresas macros procedures therearetwokindsofbinaryheaps max heapsandmin heaps inbothkinds thevaluesinthenodessatisfyaheapproperty thespeci csofwhichdependonthekindofheap inamax heap themax heappropertyisthatforeverynodeiotherthantheroot thatis thevalueofanodeisatmostthevalueofitsparent thelargestelementinamax heapisstoredattheroot andthesubtreerootedatanodecontains heaps valuesnolargerthanthatcontainedatthenodeitself amin heapisorganizedintheoppositeway themin heappropertyisthatforeverynodeiotherthantheroot thesmallestelementinamin heapisattheroot fortheheapsortalgorithm weusemax heaps min heapscommonlyimple mentpriorityqueues whichwediscussinsection weshallbepreciseinspecifyingwhetherweneedamax heaporamin heapforanyparticularapplica tion andwhenpropertiesapplytoeithermax heapsormin heaps wejustusethe heap viewingaheapasatree wede netheheightofanodeinaheaptobethenumberofedgesonthelongestsimpledownwardpathfromthenodetoaleaf wede netheheightoftheheaptobetheheightofitsroot sinceaheapofnele mentsisbasedonacompletebinarytree itsheightis lgn seeexercise weshallseethatthebasicoperationsonheapsrunintimeatmostproportional totheheightofthetreeandthustakeo lgn theremainderofthischapterpresentssomebasicproceduresandshowshowtheyareusedinasortingalgorithm andapriority queuedatastructure themax heapifyprocedure whichrunsino lgn isthekeytomain tainingthemax heapproperty thebuild max heapprocedure whichrunsinlineartime producesamax heapfromanunorderedinputarray theheapsortprocedure whichrunsino nlgn sortsanarrayinplace themax heap insert heap extract max heap increase andheap maximumprocedures whichrunino lgn allowtheheapdatastructuretoimplementapriorityqueue exercises whataretheminimumandmaximumnumbersofelementsinaheapofheighth showthatann elementheaphasheightblgnc showthatinanysubtreeofamax heap therootofthesubtreecontainsthelargest valueoccurringanywhereinthatsubtree chapter heapsort whereinamax heapmightthesmallestelementreside assumingthatallelements aredistinct isanarraythatisinsortedorderamin heap isthearraywithvaluesh iamax heap showthat withthearrayrepresentationforstoringann elementheap theleavesarethenodesindexedbybn maintainingtheheappropertyinordertomaintainthemax heapproperty wecalltheproceduremax heapify itsinputsareanarrayaandanindexiintothearray whenitiscalled max heapifyassumesthatthebinarytreesrootedatleft andright aremax heaps butthata imightbesmallerthanitschildren thusviolatingthemax heapproperty max heapifyletsthevalueata oatdown inthemax heapsothatthesubtreerootedatindexiobeysthemax heapproperty max heapify ldleft rdright ifla heap sizeanda largestdl elselargestdi ifra heap sizeanda largest largestdr iflargest exchangea iwitha largest max heapify largest illustratestheactionofmax heapify ateachstep thelargestoftheelementsa anda iisdetermined anditsindexisstoredinlargest ifa iislargest thenthesubtreerootedatnodeiisalreadyamax heapandtheprocedureterminates otherwise oneofthetwochildrenhasthe largestelement anda iisswappedwitha largest whichcausesnodeiandits maintainingtheheapproperty iiifigure theactionofmax heapify wherea heap sized theinitialcon guration withatnodeid violatingthemax heappropertysinceitisnotlargerthanbothchildren themax heappropertyisrestoredfornode byexchangingwith whichdestroysthemax heappropertyfornode therecursivecallmax heapify nowhasid afterswappingwith asshownin node xedup andtherecursivecallmax heapify yieldsnofurtherchangetothedatastructure childrentosatisfythemax heapproperty thenodeindexedbylargest however nowhastheoriginalvaluea andthusthesubtreerootedatlargestmightviolatethemax heapproperty consequently wecallmax heapifyrecursivelyonthatsubtree therunningtimeofmax heapifyonasubtreeofsizenrootedatagivennodeiisthe timeto xuptherelationshipsamongtheelementsa anda plusthetimetorunmax heapifyonasubtreerootedatoneofthechildrenofnodei assumingthattherecursivecalloccurs thechildren ssubtreeseachhavesizeatmost theworstcaseoccurswhenthebottomlevelofthetreeisexactlyhalffull andthereforewecandescribetherunningtimeofmax heapifybytherecurrencet chapter heapsortthesolutiontothisrecurrence bycase ofthemastertheorem theorem ist lgn alternatively wecancharacterizetherunningtimeofmax heapifyonanodeofheighthaso exercises usingfigure asamodel illustratetheoperationofmax heapify onthearrayadh startingwiththeproceduremax heapify writepseudocodefortheproceduremin heapify whichperformsthecorrespondingmanipulationonamin heap howdoestherunningtimeofmin heapifycomparetothatofmax heapify whatistheeffectofcallingmax heapify whentheelementa iislargerthanitschildren whatistheeffectofcallingmax heapify fori heap thecodeformax heapifyisquiteef cientintermsofconstantfactors exceptpossiblyfortherecursivecallinline whichmightcausesomecompilerstoproduceinef cientcode writeanef cientmax heapifythatusesaniterativecontrolconstruct aloop insteadofrecursion showthattheworst caserunningtimeofmax heapifyonaheapofsizenislgn hint foraheapwithnnodes givenodevaluesthatcausemax heapifytobecalledrecursivelyateverynodeonasimplepathfromtherootdowntoaleaf buildingaheapwecanusetheproceduremax heapifyinabottom upmannertoconvertanarraya wherenda intoamax heap byexercise theelementsinthesubarraya nareallleavesofthetree andsoeachis buildingaheap elementheaptobeginwith theprocedurebuild max heapgoesthroughtheremainingnodesofthetreeandrunsmax heapifyoneachone max heap heap sizeda foridba cdownto max heapify showsanexampleoftheactionofbuild max heap toshowwhybuild max heapworkscorrectly weusethefollowingloopinvariant atthestartofeachiterationoftheforloopoflines eachnodeic nistherootofamax heap weneedtoshowthatthisinvariantistruepriortothe rstloopiteration thateachiterationoftheloopmaintainstheinvariant andthattheinvariantprovidesauseful propertytoshowcorrectnesswhentheloopterminates initialization priortothe rstiterationoftheloop idbn eachnodebn nisaleafandisthustherootofatrivialmax heap maintenance toseethateachiterationmaintainstheloopinvariant observethatthechildrenofnodeiarenumberedhigherthani bytheloopinvariant fore theyarebothrootsofmax heaps thisispreciselytheconditionrequired forthecallmax heapify tomakenodeiamax heaproot moreover themax heapifycallpreservesthepropertythatnodesic nareallrootsofmax heaps decrementingiintheforloopupdatereestablishestheloopinvariantforthenextiteration termination attermination bytheloopinvariant eachnode nistherootofamax heap inparticular node wecancomputeasimpleupperboundontherunningtimeofbuild max heapasfollows eachcalltomax heapifycostso lgn andbuild max heapmakeso suchcalls therunningtimeiso nlgn thisupperbound thoughcorrect isnotasymptoticallytight wecanderiveatighterboundbyobservingthatthetimeformax heapifytorunatanodevarieswiththeheightofthenodeinthetree andtheheightsofmost nodesaresmall ourtighteranalysisreliesonthepropertiesthatann elementheaphasheightblgnc seeexercise andatmost nodesofanyheighth seeexercise thetimerequiredbymax heapifywhencalledonanodeofheighthiso andsowecanexpressthetotalcostofbuild max heapasbeingboundedfromaboveby chapter heapsort aiiiiifigure theoperationofbuild max heap showingthedatastructurebeforethecalltomax heapifyinline ofbuild max heap elementinputarrayaandthebi narytreeitrepresents gureshowsthattheloopindexireferstonode beforethecallmax heapify thedatastructurethatresults theloopindexiforthenextiterationreferstonode subsequentiterationsoftheforloopinbuild max heap observethatwhenevermax heapifyiscalledonanode thetwosubtreesofthatnodearebothmax heaps themax heapafterbuild max heap nishes theheapsortalgorithm blgncxhd nblgncxhd weevalautethelastsummationbysubstitutingxd intheformula yielding xhd wecanboundtherunningtimeofbuild max heapaso nblgncxhd xhd hence wecanbuildamax heapfromanunorderedarrayinlineartime wecanbuildamin heapbytheprocedurebuild min heap whichisthesameasbuild max heapbutwiththecalltomax heapifyinline replacedbyacalltomin heapify seeexercise min heapproducesamin heapfromanunorderedlineararrayinlineartime exercises usingfigure asamodel illustratetheoperationofbuild max heaponthearrayadh whydowewanttheloopindexiinline ofbuild max heaptodecreasefromba cto ratherthanincreasefrom toba showthatthereareatmost nodesofheighthinanyn elementheap theheapsortalgorithmtheheapsortalgorithmstartsbyusingbuild max heaptobuildamax heapontheinputarraya wherenda sincethemaximumelementofthearrayisstoredattheroota wecanputitintoitscorrect nalposition chapter heapsortbyexchangingitwith ifwenowdiscardnodenfromtheheap andwecandosobysimplydecrementinga heap weobservethatthechildrenoftherootremainmax heaps butthenewrootelementmightviolatethemax heap allweneedtodotorestorethemax heapproperty however iscallmax heapify whichleavesamax heapina theheapsortalgorithmthenrepeatsthisprocessforthemax heapofsizen downtoaheapofsize seeexercise forapreciseloopinvariant heapsort max heap forida lengthdownto exchangea witha heap sizeda heap max heapify showsanexampleoftheoperationofheapsortafterline hasbuilttheinitialmax heap gureshowsthemax heapbeforethe rstiterationof theforloopoflines andaftereachiteration theheapsortproceduretakestimeo nlgn sincethecalltobuild max heaptakestimeo andeachofthen callstomax heapifytakestimeo lgn exercises usingfigure asamodel illustratetheoperationofheapsortonthearrayadh arguethecorrectnessofheapsortusingthefollowingloopinvariant atthestartofeachiterationoftheforloopoflines thesubarraya iisamax heapcontainingtheismallestelementsofa andthesubarraya ncontainsthenilargestelementsofa sorted whatistherunningtimeofheapsortonanarrayaoflengthnthatisalreadysortedinincreasingorder whataboutdecreasingorder showthattheworst caserunningtimeofheapsortisnlgn theheapsortalgorithm aiiiiiiiiifigure theoperationofheapsort themax heapdatastructurejustafterbuild max heaphasbuiltitinline themax heapjustaftereachcallofmax heapifyinline showingthevalueofiatthattime onlylightlyshadednodesremainintheheap theresultingsortedarraya chapter heapsort showthatwhenallelementsaredistinct thebest caserunningtimeofheapsortisnlgn priorityqueuesheapsortisanexcellentalgorithm butagoodimplementationofquicksort pre sentedinchapter usuallybeatsitinpractice nevertheless theheapdatastruc tureitselfhasmanyuses inthissection wepresentoneofthemostpopularap plicationsofaheap asanef cientpriorityqueue aswithheaps priorityqueues comeintwoforms max priorityqueuesandmin priorityqueues wewillfocus hereonhowtoimplementmax priorityqueues whichareinturnbasedonmax heaps asksyoutowritetheproceduresformin priorityqueues apriorityqueueisadatastructureformaintainingasetsofelements eachwithanassociatedvaluecalledakey amax priorityqueuesupportsthefollowingoperations insert insertstheelementxintothesets whichisequivalenttotheoper ationsds fxg maximum returnstheelementofswiththelargestkey extract max removesandreturnstheelementofswiththelargestkey increase increasesthevalueofelementx skeytothenewvaluek whichisassumedtobeatleastaslargeasx scurrentkeyvalue amongtheirotherapplications wecanusemax priorityqueuestoschedulejobsonasharedcomputer themax priorityqueuekeepstrackofthejobsto beperformedandtheirrelativepriorities whenajobis nishedorinterrupted theschedulerselectsthehighest priorityjobfromamongthosependingbycallingextract max theschedulercanaddanewjobtothequeueatanytimebycallinginsert alternatively amin priorityqueuesupportstheoperationsinsert minimum extract min anddecrease amin priorityqueuecanbeusedinanevent drivensimulator theitemsinthequeueareeventstobesimulated withanassociatedtimeofoccurrencethatservesasitskey theeventsmustbe simulatedinorderoftheirtimeofoccurrence becausethesimulationofanevent cancauseothereventstobesimulatedinthefuture thesimulationprogramcallsextract minateachsteptochoosethenexteventtosimulate asneweventsareproduced thesimulatorinsertsthemintothemin priorityqueuebycallinginsert priorityqueues weshallseeotherusesformin priorityqueues highlightingthedecrease keyoperation inchapters notsurprisingly wecanuseaheaptoimplementapriorityqueue inagivenap plication suchasjobschedulingorevent drivensimulation elementsofapriority queuecorrespondtoobjectsintheapplication weoftenneedtodeterminewhich applicationobjectcorrespondstoagivenpriority queueelement andviceversa whenweuseaheaptoimplementapriorityqueue therefore weoftenneedto storeahandletothecorrespondingapplicationobjectineachheapelement theexactmakeupofthehandle suchasapointeroraninteger dependsontheap plication similarly weneedtostoreahandletothecorrespondingheapelement ineachapplicationobject thehandlewouldtypicallybeanarrayindex becauseheapelementschangelocationswithinthearrayduringheapoperations anactualimplementation uponrelocatingaheapelement wouldalsohavetoup datethearrayindexinthecorrespondingapplicationobject becausethedetails ofaccessingapplicationobjectsdependheavilyontheapplicationanditsimple mentation weshallnotpursuethemhere otherthannotingthatinpractice handlesdoneedtobecorrectlymaintained nowwediscusshowtoimplementtheoperationsofamax priorityqueue theprocedureheap maximumimplementsthemaximumoperationin heap maximum returna theprocedureheap extract maximplementstheextract maxopera tion itissimilartotheforloopbody lines oftheheapsortprocedure heap extract max ifa heap error heapunder maxda heap heap sizeda heap max heapify returnmaxtherunningtimeofheap extract maxiso lgn sinceitperformsonlyaconstantamountofworkontopoftheo lgn timeformax heapify theprocedureheap increase keyimplementstheincrease keyopera tion anindexiintothearrayidenti esthepriority queueelementwhosekeywewishtoincrease theprocedure rstupdatesthekeyofelementa itoitsnewvalue becauseincreasingthekeyofa imightviolatethemax heapproperty chapter heapsorttheprocedurethen inamannerreminiscentoftheinsertionloop lines ofinsertion sortfromsection traversesasimplepathfromthisnodetowardtherootto ndaproperplaceforthenewlyincreasedkey asheap increase keytraversesthispath itrepeatedlycomparesanelementtoitsparent exchang ingtheirkeysandcontinuingiftheelement skeyislarger andterminatingiftheel ement skeyissmaller sincethemax heappropertynowholds seeexercise forapreciseloopinvariant heap increase ifkey error newkeyissmallerthancurrentkey idkey whilei anda exchangea iwitha idparent showsanexampleofaheap increase keyoperation therunningtimeofheap increase keyonann elementheapiso lgn sincethepathtracedfromthenodeupdatedinline totheroothaslengtho lgn theproceduremax heap insertimplementstheinsertoperation ittakesasaninputthekeyofthenewelementtobeinsertedintomax heapa theproce dure rstexpandsthemax heapbyaddingtothetreeanewleafwhosekeyis thenitcallsheap increase keytosetthekeyofthisnewnodetoitscorrectvalueandmaintainthemax heapproperty max heap insert heap sizeda heap sizec heap heap increase heap therunningtimeofmax heap insertonann elementheapiso lgn insummary aheapcansupportanypriority queueoperationonasetofsizenino lgn exercises illustratetheoperationofheap extract maxontheheapadh priorityqueues ifigure theoperationofheap increase themax heapoffigure withanodewhoseindexisiheavilyshaded thisnodehasitskeyincreasedto afteroneiterationofthewhileloopoflines thenodeanditsparenthaveexchangedkeys andtheindeximovesuptotheparent themax heapafteronemoreiterationofthewhileloop atthispoint themax heappropertynowholdsandtheprocedureterminates illustratetheoperationofmax heap insert ontheheapadh writepseudocodefortheproceduresheap minimum heap extract min heap decrease andmin heap insertthatimplementamin priorityqueuewithamin heap whydowebothersettingthekeyoftheinsertednodetoinline ofmax heap insertwhenthenextthingwedoisincreaseitskeytothedesiredvalue chapter heapsort arguethecorrectnessofheap increase keyusingthefollowingloopinvari ant atthestartofeachiterationofthewhileloopoflines thesubarraya heap sizesatis esthemax heapproperty exceptthattheremaybeoneviolation imaybelargerthana youmayassumethatthesubarraya heap sizesatis esthemax heapprop ertyatthetimeheap increase keyiscalled eachexchangeoperationonline ofheap increase keytypicallyrequiresthreeassignments showhowtousetheideaoftheinnerloopofinsertion sorttoreducethethreeassignmentsdowntojustoneassignment showhowtoimplementa rst rst outqueuewithapriorityqueue howtoimplementastackwithapriorityqueue queuesandstacksarede nedin theoperationheap delete deletestheiteminnodeifromheapa giveanimplementationofheap deletethatrunsino lgn timeforann elementmax heap giveano nlgk timealgorithmtomergeksortedlistsintoonesortedlist wherenisthetotalnumberofelementsinalltheinputlists hint useamin heapfork waymerging problems buildingaheapusinginsertionwecanbuildaheapbyrepeatedlycallingmax heap inserttoinserttheele mentsintotheheap considerthefollowingvariationonthebuild max heapprocedure problemsforchapter max heap heap sized forid toa max heap insert dotheproceduresbuild max heapandbuild max heap alwayscreatethesameheapwhenrunonthesameinputarray provethattheydo orprovide acounterexample showthatintheworstcase max heap requires nlgn timetobuildann elementheap analysisofd aryheapsad aryheapislikeabinaryheap withonepossibleexception non leafnodeshavedchildreninsteadof howwouldyourepresentad aryheapinanarray whatistheheightofad aryheapofnelementsintermsofnandd giveanef cientimplementationofextract maxinad arymax heap alyzeitsrunningtimeintermsofdandn giveanef cientimplementationofinsertinad arymax heap analyzeitsrunningtimeintermsofdandn giveanef cientimplementationofincrease agsanerrorifk butotherwisesetsa idkandthenupdatesthed arymax heapstructureappropriately analyzeitsrunningtimeintermsofdandn youngtableausanmnyoungtableauisanmnmatrixsuchthattheentriesofeachrowareinsortedorderfromlefttorightandtheentriesofeachcolumnareinsortedorderfromtoptobottom someoftheentriesofayoungtableaumaybe whichwetreatasnonexistentelements ayoungtableaucanbeusedtoholdrmn nitenumbers drawa youngtableaucontainingtheelementsf arguethatanmnyoungtableauyisemptyify arguethatyisfull containsmnelements ify chapter heapsortc giveanalgorithmtoimplementextract minonanonemptymnyoungtableauthatrunsino mcn youralgorithmshouldusearecur sivesubroutinethatsolvesanmnproblembyrecursivelysolvingeitheran noranm subproblem hint thinkaboutmax heapify net wherepdmcn tobethemaximumrunningtimeofextract minonanymnyoungtableau giveandsolvearecurrencefort thatyieldstheo mcn timebound showhowtoinsertanewelementintoanonfullmnyoungtableauino mcn usingnoothersortingmethodasasubroutine showhowtouseannnyoungtableautosortn numbersino giveano mcn timealgorithmtodeterminewhetheragivennumberisstoredinagivenmnyoungtableau chapternotestheheapsortalgorithmwasinventedbywilliams whoalsodescribedhowtoimplementapriorityqueuewithaheap thebuild max heapprocedurewassuggestedbyfloyd weusemin heapstoimplementmin priorityqueuesinchapters wealsogiveanimplementationwithimprovedtimeboundsforcertainoperations inchapter assumingthatthekeysaredrawnfromaboundedsetofnon negativeintegers chapter ifthedataareb bitintegers andthecomputermemoryconsistsofaddressableb bitwords fredmanandwillard showedhowtoimplementminimumino timeandinsertandextract minino plgn thorup hasimprovedtheo plgn boundtoo lglgn thisboundusesanamountofspaceunboundedinn butitcanbeimplementedinlinearspacebyusingrandom izedhashing animportantspecialcaseofpriorityqueuesoccurswhenthesequenceofextract minoperationsismonotone thatis thevaluesreturnedbysucces siveextract minoperationsaremonotonicallyincreasingovertime thiscasearisesinseveralimportantapplications suchasdijkstra ssingle sourceshortest pathsalgorithm whichwediscussinchapter andindiscrete eventsimula tion fordijkstra salgorithmitisparticularlyimportantthatthedecrease keyoperationbeimplementedef ciently forthemonotonecase ifthedataarein tegersintherange ahuja mehlhorn orlin andtarjan notesforchapter howtoimplementextract minandinsertino lgc amortizedtime seechapter formoreonamortizedanalysis anddecrease keyino usingadatastructurecalledaradixheap theo lgc boundcanbeimprovedtoo plgc usingfibonacciheaps seechapter inconjunctionwithradixheaps cherkassky goldberg andsilverstein furtherimprovedtheboundto expectedtimebycombiningthemultilevelbucketingstructureofdenardoandfox withtheheapofthorupmentionedearlier raman furtherimprovedtheseresultstoobtainaboundofo min forany xed quicksortthequicksortalgorithmhasaworst caserunningtimeof onaninputarrayofnnumbers despitethisslowworst caserunningtime quicksortisoftenthebestpracticalchoiceforsortingbecauseitisremarkablyef cientontheaverage its expectedrunningtimeis nlgn andtheconstantfactorshiddeninthe nlgn notationarequitesmall italsohastheadvantageofsortinginplace seepage anditworkswelleveninvirtual memoryenvironments describesthealgorithmandanimportantsubroutineusedbyquick sortforpartitioning becausethebehaviorofquicksortiscomplex westartwithanintuitivediscussionofitsperformanceinsection andpostponeitspreciseanalysistotheendofthechapter presentsaversionofquicksortthatusesrandomsampling thisalgorithmhasagoodexpectedrunningtime andnoparticularinputelicitsitsworst casebehavior analyzestherandom izedalgorithm showingthatitrunsin timeintheworstcaseand assumingdistinctelements inexpectedo nlgn descriptionofquicksortquicksort likemergesort appliesthedivide conquerparadigmintroducedinsection hereisthethree stepdivide conquerprocessforsortinga typicalsubarraya partition rearrange thearraya rintotwo possiblyempty subar raysa qanda rsuchthateachelementofa qislessthanorequaltoa whichis inturn lessthanorequaltoeachelementofa computetheindexqaspartofthispartitioningprocedure conquer sortthetwosubarraysa qanda rbyrecursivecallstoquicksort descriptionofquicksort combine becausethesubarraysarealreadysorted noworkisneededtocombinethem theentirearraya risnowsorted thefollowingprocedureimplementsquicksort quicksort ifp qdpartition quicksort quicksort tosortanentirearraya theinitialcallisquicksort partitioningthearraythekeytothealgorithmisthepartitionprocedure whichrearrangesthesubar raya rinplace partition xda idp forjdptor ifa idic exchangea iwitha exchangea icwitha returnic showshowpartitionworksonan elementarray partitionalwaysselectsanelementxda rasapivotelementaroundwhichtopartitionthesubarraya astheprocedureruns itpartitionsthearrayintofour possiblyempty regions atthestartofeachiterationoftheforloopinlines theregionssatisfycertainproperties showninfigure westatethesepropertiesasaloop invariant atthebeginningofeachiterationoftheloopoflines foranyarrayindexk ifpki thena ific thena ifkdr thena kdx chapter quicksort jri irj irj irj prj prj prj ifigure theoperationofpartitiononasamplearray arrayentrya rbecomesthepivotelementx lightlyshadedarrayelementsareallinthe rstpartitionwithvaluesnogreaterthanx heavilyshadedelementsareinthesecondpartitionwithvaluesgreaterthanx theunshadedel ementshavenotyetbeenputinoneofthe rsttwopartitions andthe nalwhiteelementisthepivotx theinitialarrayandvariablesettings noneoftheelementshavebeenplacedineitherofthe rsttwopartitions thevalue swappedwithitself andputinthepartitionofsmallervalues thevalues areaddedtothepartitionoflargervalues thevalues areswapped andthesmallerpartitiongrows thevalues areswapped andthesmallerpartitiongrows thelargerpartitiongrowstoinclude andtheloopterminates inlines thepivotelementisswappedsothatitliesbetweenthetwopartitions theindicesbetweenjandr arenotcoveredbyanyofthethreecases andthevaluesintheseentrieshavenoparticularrelationshiptothepivotx weneedtoshowthatthisloopinvariantistruepriortothe rstiteration thateachiterationoftheloopmaintainstheinvariant andthattheinvariantprovidesa usefulpropertytoshowcorrectnesswhentheloopterminates descriptionofquicksort xunrestrictedxpijrfigure thefourregionsmaintainedbytheprocedurepartitiononasubarraya thevaluesina iarealllessthanorequaltox thevaluesina jareallgreaterthanx anda rdx thesubarraya rcantakeonanyvalues initialization priortothe rstiterationoftheloop idp andjdp causenovaluesliebetweenpandiandnovaluesliebetweenic andj rsttwoconditionsoftheloopinvariantaretriviallysatis theassign mentinline satis esthethirdcondition maintenance asfigure shows weconsidertwocases dependingontheoutcomeofthetestinline showswhathappenswhena theonlyactionintheloopistoincrementj afterjisincremented holdsfora jandallotherentriesremainunchanged showswhathappenswhena theloopincrementsi swapsa ianda andthenincrementsj becauseoftheswap wenowhavethata andcondition issatis similarly wealsohavethata sincetheitemthatwasswappedintoa jis bytheloopinvariant greaterthanx termination attermination jdr therefore everyentryinthearrayisinoneofthethreesetsdescribedbytheinvariant andwehavepartitionedthevaluesinthearrayintothreesets thoselessthanorequaltox thosegreaterthanx andasingletonsetcontainingx naltwolinesofpartition nishupbyswappingthepivotelementwiththeleftmostelementgreaterthanx therebymovingthepivotintoitscorrectplaceinthepartitionedarray andthenreturningthepivot snewindex theoutputofpartitionnowsatis esthespeci cationsgivenforthedividestep infact itsatis esaslightlystrongercondition afterline ofquicksort qisstrictlylessthaneveryelementofa therunningtimeofpartitiononthesubarraya ris wherendrpc seeexercise exercises usingfigure asamodel illustratetheoperationofpartitiononthearrayadh chapter quicksortx xxpijr xxpijrx xxpijrx xxpijrfigure thetwocasesforoneiterationofprocedurepartition ifa theonlyactionistoincrementj whichmaintainstheloopinvariant ifa indexiisincremented ianda jareswapped andthenjisincremented theloopinvariantismaintained whatvalueofqdoespartitionreturnwhenallelementsinthearraya rhavethesamevalue modifypartitionsothatqdb pcr cwhenallelementsinthearraya rhavethesamevalue giveabriefargumentthattherunningtimeofpartitiononasubarrayofsizenis howwouldyoumodifyquicksorttosortintononincreasingorder performanceofquicksorttherunningtimeofquicksortdependsonwhetherthepartitioningisbalancedor unbalanced whichinturndependsonwhichelementsareusedforpartitioning ifthepartitioningisbalanced thealgorithmrunsasymptoticallyasfastasmerge performanceofquicksort sort ifthepartitioningisunbalanced however itcanrunasymptoticallyasslowlyasinsertionsort inthissection weshallinformallyinvestigatehowquicksort performsundertheassumptionsofbalancedversusunbalancedpartitioning worst casepartitioningtheworst casebehaviorforquicksortoccurswhenthepartitioningroutinepro ducesonesubproblemwithn elementsandonewith elements weprovethisclaiminsection letusassumethatthisunbalancedpartitioningarises ineachrecursivecall thepartitioningcosts sincetherecursivecallonanarrayofsize justreturns andtherecurrencefortherunningtimeist intuitively ifwesumthecostsincurredateachleveloftherecursion wegetanarithmeticseries equation whichevaluatesto indeed itisstraightforwardtousethesubstitutionmethodtoprovethattherecurrencet hasthesolutiont seeexercise ifthepartitioningismaximallyunbalancedateveryrecursivelevelofthealgorithm therunningtimeis thereforetheworst caserunningtimeofquicksortisnobetterthanthatofinsertionsort moreover runningtimeoccurswhentheinputarrayisalreadycompletelysorted acommonsituationin whichinsertionsortrunsino casepartitioninginthemostevenpossiblesplit partitionproducestwosubproblems eachofsizenomorethann sinceoneisofsizebn candoneofsizedn inthiscase quicksortrunsmuchfaster therecurrencefortherunningtimeisthent wherewetoleratethesloppinessfromignoringthe oorandceilingandfromsub tracting bycase ofthemastertheorem theorem thisrecurrencehasthesolutiont nlgn byequallybalancingthetwosidesofthepartitionateveryleveloftherecursion wegetanasymptoticallyfasteralgorithm balancedpartitioningtheaverage caserunningtimeofquicksortismuchclosertothebestcasethantotheworstcase astheanalysesinsection willshow thekeytounderstand chapter quicksortncncncncncncn nlgn nlog nfigure arecursiontreeforquicksortinwhichpartitionalwaysproducesa split yieldingarunningtimeofo nlgn nodesshowsubproblemsizes withper levelcostsontheright theper levelcostsincludetheconstantcimplicitinthe ingwhyistounderstandhowthebalanceofthepartitioningisre ectedintherecurrencethatdescribestherunningtime suppose forexample thatthepartitioningalgorithmalwaysproducesa proportionalsplit whichat rstblushseemsquiteunbalanced wethenobtainthe recurrencet ccn ontherunningtimeofquicksort wherewehaveexplicitlyincludedtheconstantchiddeninthe showstherecursiontreeforthisrecurrence noticethateverylevelofthetreehascostcn untiltherecursionreachesabound aryconditionatdepthlog lgn andthenthelevelshavecostatmostcn therecursionterminatesatdepthlog lgn thetotalcostofquick sortisthereforeo nlgn witha proportionalsplitateverylevelofrecursion whichintuitivelyseemsquiteunbalanced quicksortrunsino nlgn asymptoticallythesameasifthesplitwererightdownthemiddle indeed evena splityieldsano nlgn runningtime infact anysplitofconstantproportionalityyieldsarecursiontreeofdepth lgn wherethecostateachleveliso therunningtimeisthereforeo nlgn wheneverthesplithasconstantproportionality performanceofquicksort twolevelsofarecursiontreeforquicksort thepartitioningattherootcostsnandproducesa split twosubarraysofsizes andn thepartitioningofthesubarrayofsizen costsn andproducesa split subarraysofsize asinglelevelofarecursiontreethatisverywellbalanced inbothparts thepartitioningcostforthesubproblemsshownwithellipticalshadingis yetthesubproblemsremainingtobesolvedin shownwithsquareshading arenolargerthanthecorrespondingsubproblemsremainingtobesolvedin intuitionfortheaveragecasetodevelopaclearnotionoftherandomizedbehaviorofquicksort wemustmakeanassumptionabouthowfrequentlyweexpecttoencounterthevariousinputs thebehaviorofquicksortdependsontherelativeorderingofthevaluesinthearrayelementsgivenastheinput andnotbytheparticularvaluesinthearray inourprobabilisticanalysisofthehiringprobleminsection wewillassume fornowthatallpermutationsoftheinputnumbersareequallylikely whenwerunquicksortonarandominputarray thepartitioningishighlyun likelytohappeninthesamewayateverylevel asourinformalanalysishasas sumed weexpectthatsomeofthesplitswillbereasonablywellbalancedand thatsomewillbefairlyunbalanced forexample asksyoutoshow thatabout percentofthetimepartitionproducesasplitthatismorebalancedthan andabout percentofthetimeitproducesasplitthatislessbalancedthan intheaveragecase partitionproducesamixof splits inarecursiontreeforanaverage caseexecutionofpartition thegoodandbadsplitsaredistributedrandomlythroughoutthetree suppose forthesakeofintuition thatthegoodandbadsplitsalternatelevelsinthetree andthatthegoodsplitsarebest casesplitsandthebadsplitsareworst casesplits showsthesplitsattwoconsecutivelevelsintherecursiontree attherootofthetree thecostisnforpartitioning andthesubarraysproducedhavesizesn theworstcase atthenextlevel thesubarrayofsizen undergoesbest casepartitioningintosubarraysofsize sassumethattheboundary conditioncostis forthesubarrayofsize chapter quicksortthecombinationofthebadsplitfollowedbythegoodsplitproducesthreesub arraysofsizes atacombinedpartitioningcostof certainly thissituationisnoworsethanthatinfigure namelyasinglelevelofpartitioningthatproducestwosubarraysof atacostof yetthislattersituationisbalanced intuitively costofthebadsplitcanbeabsorbedintothe costofthegoodsplit andtheresultingsplitisgood therunningtimeofquicksort whenlev elsalternatebetweengoodandbadsplits isliketherunningtimeforgoodsplitsalone stillo nlgn butwithaslightlylargerconstanthiddenbytheo notation weshallgivearigorousanalysisoftheexpectedrunningtimeofarandomized versionofquicksortinsection exercises usethesubstitutionmethodtoprovethattherecurrencet hasthesolutiont asclaimedatthebeginningofsection whatistherunningtimeofquicksortwhenallelementsofarrayahavethesamevalue showthattherunningtimeofquicksortis whenthearrayacontainsdistinctelementsandissortedindecreasingorder banksoftenrecordtransactionsonanaccountinorderofthetimesofthetransac tions butmanypeopleliketoreceivetheirbankstatementswithcheckslistedinorderbychecknumber peopleusuallywritechecksinorderbychecknumber merchantsusuallycashthemwithreasonabledispatch theproblemofconverting transactionorderingtocheck numberorderingisthereforetheproblemof sortingalmost sortedinput arguethattheprocedureinsertion sortwouldtendtobeattheprocedurequicksortonthisproblem supposethatthesplitsateverylevelofquicksortareintheproportion isaconstant showthattheminimumdepthofaleafinthere cursiontreeisapproximatelylgn andthemaximumdepthisapproximatelylgn don tworryaboutintegerround arandomizedversionofquicksort arguethatforanyconstant theprobabilityisapproximately thatonarandominputarray partitionproducesasplitmorebalancedthan arandomizedversionofquicksortinexploringtheaverage casebehaviorofquicksort wehavemadeanassumptionthatallpermutationsoftheinputnumbersareequallylikely inanengineering situation however wecannotalwaysexpectthisassumptiontohold seeexer cise aswesawinsection wecansometimesaddrandomizationtoan algorithminordertoobtaingoodexpectedperformanceoverallinputs manypeo pleregardtheresultingrandomizedversionofquicksortasthesortingalgorithm ofchoiceforlargeenoughinputs insection werandomizedouralgorithmbyexplicitlypermutingthein wecoulddosoforquicksortalso butadifferentrandomizationtechnique calledrandomsampling yieldsasimpleranalysis insteadofalwaysusinga rasthepivot wewillselectarandomlychosenelementfromthesubarraya wedosoby rstexchangingelementa rwithanelementchosenatrandomfroma byrandomlysamplingtherangep weensurethatthepivotelementxda risequallylikelytobeanyoftherpc elementsinthesubarray becausewerandomlychoosethepivotelement weexpectthesplitoftheinputarraytobereasonablywellbalancedonaverage thechangestopartitionandquicksortaresmall inthenewpartitionprocedure wesimplyimplementtheswapbeforeactuallypartitioning randomized partition idrandom exchangea rwitha returnpartition thenewquicksortcallsrandomized partitioninplaceofpartition randomized quicksort ifp qdrandomized partition randomized quicksort randomized quicksort weanalyzethisalgorithminthenextsection chapter quicksortexercises whydoweanalyzetheexpectedrunningtimeofarandomizedalgorithmandnot itsworst caserunningtime whenrandomized quicksortruns howmanycallsaremadetotherandom numbergeneratorrandomintheworstcase howaboutinthebestcase giveyouranswerintermsof notation analysisofquicksortsection gavesomeintuitionfortheworst casebehaviorofquicksortandforwhyweexpectittorunquickly inthissection weanalyzethebehaviorofquick sortmorerigorously webeginwithaworst caseanalysis whichappliestoeitherquicksortorrandomized quicksort andconcludewithananalysisoftheexpectedrunningtimeofrandomized quicksort worst caseanalysiswesawinsection thataworst casesplitateverylevelofrecursioninquicksortproducesa runningtime intuitively istheworst caserunningtimeofthealgorithm wenowprovethisassertion usingthesubstitutionmethod seesection wecanshowthattherunningtimeofquicksortiso lett betheworst casetimefortheprocedurequicksortonaninputofsizen wehavetherecurrencet dmax wheretheparameterqrangesfrom ton becausetheprocedurepartitionproducestwosubproblemswithtotalsizen weguessthatt forsomeconstantc substitutingthisguessintorecurrence weobtaint max dcmax theexpressionq achievesamaximumovertheparameter srange ateitherendpoint toverifythisclaim notethatthesecondderivativeoftheexpressionwithrespecttoqispositive seeexercise analysisofquicksort observationgivesustheboundmax continuingwithourboundingoft weobtaint sincewecanpicktheconstantclargeenoughsothatthec termdom inatesthe wesawinsection aspeci ccaseinwhichquicksorttakesn whenpartitioningisunbalanced ternatively asksyoutoshowthatrecurrence hasasolutionof worst runningtimeofquicksortis expectedrunningtimewehavealreadyseentheintuitionbehindwhytheexpectedrunningtimeofrandomized quicksortiso nlgn ineachlevelofrecursion thesplitinducedbyrandomized partitionputsanyconstantfractionoftheelementsononesideofthepartition thentherecursiontreehasdepth lgn ando workisperformedateachlevel evenifweaddafewnewlevelswiththemostun balancedsplitpossiblebetweentheselevels thetotaltimeremainso nlgn wecananalyzetheexpectedrunningtimeofrandomized quicksortpreciselyby rstunderstandinghowthepartitioningprocedureoperatesandthenusingthisunderstandingtoderiveano nlgn boundontheexpectedrunningtime thisupperboundontheexpectedrunningtime combinedwiththe nlgn caseboundwesawinsection yieldsa nlgn expectedrunningtime weassumethroughoutthatthevaluesoftheelementsbeingsortedaredistinct runningtimeandcomparisonsthequicksortandrandomized quicksortproceduresdifferonlyinhowtheyselectpivotelements theyarethesameinallotherrespects wecanthereforecouchouranalysisofrandomized quicksortbydiscussingthequicksortandpartitionprocedures butwiththeassumptionthatpivotelementsarese lectedrandomlyfromthesubarraypassedtorandomized partition therunningtimeofquicksortisdominatedbythetimespentintheparti tionprocedure eachtimethepartitionprocedureiscalled itselectsapivotelement andthiselementisneverincludedinanyfuturerecursivecallstoquick sortandpartition therecanbeatmostncallstopartitionovertheentireexecutionofthequicksortalgorithm onecalltopartitiontakeso timeplusanamountoftimethatisproportionaltothenumberofiterationsofthe forloopinlines eachiterationofthisforloopperformsacomparisoninline comparingthepivotelementtoanotherelementofthearraya therefore chapter quicksortifwecancountthetotalnumberoftimesthatline isexecuted wecanboundthetotaltimespentintheforloopduringtheentireexecutionofquicksort lemma letxbethenumberofcomparisonsperformedinline ofpartitionovertheentireexecutionofquicksortonann elementarray thentherunningtimeofquicksortiso ncx proofbythediscussionabove thealgorithmmakesatmostncallstoparti tion eachofwhichdoesaconstantamountofworkandthenexecutestheforloopsomenumberoftimes eachiterationoftheforloopexecutesline ourgoal therefore istocomputex thetotalnumberofcomparisonsperformedinallcallstopartition wewillnotattempttoanalyzehowmanycomparisonsaremadeineachcalltopartition wewillderiveanoverallboundonthetotalnumberofcomparisons todoso wemustunderstandwhenthealgorithm comparestwoelementsofthearrayandwhenitdoesnot foreaseofanalysis renametheelementsofthearrayaas ibeingtheithsmallestelement wealsode nethesetzijdf jgtobethesetofelementsbetween iand inclusive whendoesthealgorithmcompare iand toanswerthisquestion rstobservethateachpairofelementsiscomparedatmostonce elements arecomparedonlytothepivotelementand afteraparticularcallofpartition nishes thepivotelementusedinthatcallisneveragaincomparedtoanyother elements ouranalysisusesindicatorrandomvariables seesection wede nexijdif iiscomparedto whereweareconsideringwhetherthecomparisontakesplaceatanytimeduringtheexecutionofthealgorithm notjustduringoneiterationoronecallofparti tion sinceeachpairiscomparedatmostonce wecaneasilycharacterizethetotalnumberofcomparisonsperformedbythealgorithm xdn xid nxjdic xij takingexpectationsofbothsides andthenusinglinearityofexpectationandlemma weobtaine xde xid nxjdic xij analysisofquicksort xid nxjdic xijdn xid nxjdic prf iiscomparedto itremainstocomputeprf iiscomparedto ouranalysisassumesthattherandomized partitionprocedurechooseseachpivotrandomlyandindepen dently letusthinkaboutwhentwoitemsarenotcompared consideraninputtoquicksortofthenumbers inanyorder andsupposethatthe rstpivotelementis thenthe rstcalltopartitionseparatesthenumbersintotwosets gandf indoingso thepivotelement iscomparedtoallotherelements butnonumberfromthe rstset isoreverwillbe comparedtoanynumberfromthesecondset ingeneral becauseweassumethatelementvaluesaredistinct onceapivotxischosenwith weknowthat iand jcannotbecomparedatanysubsequenttime ontheotherhand iischosenasapivotbeforeanyotheriteminzij iwillbecomparedtoeachiteminzij exceptforitself similarly jischosenasapivotbeforeanyotheriteminzij jwillbecomparedtoeachiteminzij exceptforitself inourexample thevalues arecomparedbecause isthe rstitemfromz tobechosenasapivot incontrast willneverbecomparedbecausethe rstpivotelementchosenfromz iand jarecomparedifandonlyifthe rstelementtobechosenasapivotfromzijiseither ior wenowcomputetheprobabilitythatthiseventoccurs priortothepointatwhichanelementfromzijhasbeenchosenasapivot thewholesetzijistogetherinthesamepartition therefore anyelementofzijisequallylikelytobethe rstonechosenasapivot becausethesetzijhasjic elements andbecausepivotsarechosenrandomlyandindependently theprobabilitythatanygivenelementis rstonechosenasapivotis jic wehaveprf iiscomparedto jgdprf ior jis rstpivotchosenfromzijgdprf iis rstpivotchosenfromzijgcprf jis rstpivotchosenfromzijgd jic jic jic chapter quicksortthesecondlinefollowsbecausethetwoeventsaremutuallyexclusive combiningequations wegetthate xdn xid nxjdic jic wecanevaluatethissumusingachangeofvariables kdji andtheboundontheharmonicseriesinequation xdn xid nxjdic jic xid nixkd xid nxkd kdn xid lgn nlgn thusweconcludethat usingrandomized partition theexpectedrunningtimeofquicksortiso nlgn whenelementvaluesaredistinct exercises showthatintherecurrencet dmax showthatquicksort sbest caserunningtimeisnlgn showthattheexpressionq achievesamaximumoverqd whenqd orqdn showthatrandomized quicksort sexpectedrunningtimeisnlgn problemsforchapter wecanimprovetherunningtimeofquicksortinpracticebytakingadvantageofthe fastrunningtimeofinsertionsortwhenitsinputis nearly sorted uponcalling quicksortonasubarraywithfewerthankelements letitsimplyreturnwithoutsortingthesubarray afterthetop levelcalltoquicksortreturns runinsertionsort ontheentirearrayto nishthesortingprocess arguethatthissortingalgorithm runsino nkcnlg expectedtime howshouldwepickk bothintheoryandinpractice considermodifyingthepartitionprocedurebyrandomlypickingthreeelementsfromarrayaandpartitioningabouttheirmedian themiddlevalueofthethreeelements approximatetheprobabilityofgettingatworstan split asafunctionof intherange problems hoarepartitioncorrectnesstheversionofpartitiongiveninthischapterisnottheoriginalpartitioningalgorithm hereistheoriginalpartitionalgorithm whichisduetoc hoare hoare partition xda idp jdrc whiletrue jdj untila idic untila ifi exchangea iwitha elsereturnja demonstratetheoperationofhoare partitiononthearrayadh showingthevaluesofthearrayandauxiliaryvaluesaftereachiterationofthewhileloopinlines chapter quicksortthenextthreequestionsaskyoutogiveacarefulargumentthattheprocedurehoare partitioniscorrect assumingthatthesubarraya rcontainsatleasttwoelements provethefollowing theindicesiandjaresuchthatweneveraccessanelementofaoutsidethesubarraya whenhoare partitionterminates itreturnsavaluejsuchthatpj everyelementofa jislessthanorequaltoeveryelementofa rwhenhoare partitionterminates thepartitionprocedureinsection separatesthepivotvalue originallyina fromthetwopartitionsitforms thehoare partitionprocedure ontheotherhand alwaysplacesthepivotvalue originallyina intooneofthetwopartitionsa janda sincepj thissplitisalwaysnontrivial rewritethequicksortproceduretousehoare partition quicksortwithequalelementvaluestheanalysisoftheexpectedrunningtimeofrandomizedquicksortinsection assumesthatallelementvaluesaredistinct inthisproblem weexaminewhat happenswhentheyarenot supposethatallelementvaluesareequal whatwouldberandomizedquick sort srunningtimeinthiscase thepartitionprocedurereturnsanindexqsuchthateachelementofa qislessthanorequaltoa qandeachelementofa risgreaterthana modifythepartitionproceduretoproduceaprocedurepartition whichpermutestheelementsofa randreturnstwoindicesqandt wherepqtr suchthatallelementsofa tareequal eachelementofa qislessthana andeachelementofa risgreaterthana likepartition yourpartition procedureshouldtake modifytherandomized quicksortproceduretocallpartition andnamethenewprocedurerandomized quicksort thenmodifythequicksortproceduretoproduceaprocedurequicksort thatcalls problemsforchapter randomized partition andrecursesonlyonpartitionsofelementsnotknowntobeequaltoeachother usingquicksort howwouldyouadjusttheanalysisinsection toavoidtheassumptionthatallelementsaredistinct alternativequicksortanalysisanalternativeanalysisoftherunningtimeofrandomizedquicksortfocuseson theexpectedrunningtimeofeachindividualrecursivecalltorandomized quicksort ratherthanonthenumberofcomparisonsperformed arguethat givenanarrayofsizen theprobabilitythatanyparticularelementischosenasthepivotis usethistode neindicatorrandomvariablesxidifithsmallestelementischosenasthepivotg whatise lett bearandomvariabledenotingtherunningtimeofquicksortonanarrayofsizen arguethate tde nxqd showthatwecanrewriteequation ase xqd showthatn xkd klgk lgn hint splitthesummationintotwoparts oneforkd andoneforkddn usingtheboundfromequation showthattherecurrenceinequation hasthesolutione nlgn hint bysubstitution thate tanlgnforsuf cientlylargenandforsomepositiveconstanta chapter quicksort stackdepthforquicksortthequicksortalgorithmofsection containstworecursivecallstoitself afterquicksortcallspartition itrecursivelysortstheleftsubarrayandthenitrecursivelysortstherightsubarray thesecondrecursivecallinquicksortisnotreallynecessary wecanavoiditbyusinganiterativecontrolstructure thistechnique calledtailrecursion isprovidedautomaticallybygoodcompilers considerthefollowingversionofquicksort whichsimulatestailrecursion recursive quicksort whilep partitionandsortleftsubarray qdpartition recursive quicksort pdqc arguethattail recursive quicksort correctlysortsthearraya compilersusuallyexecuterecursiveproceduresbyusingastackthatcontainsper tinentinformation includingtheparametervalues foreachrecursivecall informationforthemostrecentcallisatthetopofthestack andtheinformation fortheinitialcallisatthebottom uponcallingaprocedure itsinformationis pushedontothestack whenitterminates itsinformationispopped sinceweassumethatarrayparametersarerepresentedbypointers theinformationforeachprocedurecallonthestackrequireso stackspace thestackdepthisthemax imumamountofstackspaceusedatanytimeduringacomputation describeascenarioinwhichtail recursive quicksort sstackdepthis onann elementinputarray modifythecodefortail recursive quicksortsothattheworst casestackdepthis lgn maintaintheo nlgn expectedrunningtimeofthealgorithm median partitiononewaytoimprovetherandomized quicksortprocedureistopartitionaroundapivotthatischosenmorecarefullythanbypickingarandomelement fromthesubarray onecommonapproachisthemedian choosethepivotasthemedian middleelement ofasetof elementsrandomlyselectedfromthesubarray seeexercise forthisproblem letusassumethatthe elementsintheinputarraya naredistinctandthatn wedenotethe problemsforchapter sortedoutputarraybya usingthemedian methodtochoosethepivotelementx nepidprfxda giveanexactformulaforpiasafunctionofnandiforid notethatp dpnd bywhatamounthaveweincreasedthelikelihoodofchoosingthepivotasxda themedianofa comparedwiththeordinaryimplementation assumethatn andgivethelimitingratiooftheseprobabilities ifwede nea splittomeanchoosingthepivotasxda wheren bywhatamounthaveweincreasedthelikelihoodofgettingagoodsplitcomparedwiththeordinaryimplementation hint approximatethesumbyanintegral arguethatinthenlgn runningtimeofquicksort themedian methodaffectsonlytheconstantfactor fuzzysortingofintervalsconsiderasortingprobleminwhichwedonotknowthenumbersexactly foreachnumber weknowanintervalonthereallinetowhichitbelongs thatis wearegivennclosedintervalsoftheform whereaibi wewishtofuzzy sorttheseintervals toproduceapermutationhi inioftheintervalssuchthatforjd thereexistcj aij bijsatisfyingc designarandomizedalgorithmforfuzzy sortingnintervals youralgorithmshouldhavethegeneralstructureofanalgorithmthatquicksortstheleftend points theaivalues butitshouldtakeadvantageofoverlappingintervalstoimprovetherunningtime astheintervalsoverlapmoreandmore theprob lemoffuzzy sortingtheintervalsbecomesprogressivelyeasier youralgorithm shouldtakeadvantageofsuchoverlapping totheextentthatitexists arguethatyouralgorithmrunsinexpectedtime nlgn ingeneral butrunsinexpectedtime whenalloftheintervalsoverlap whenthereexistsavaluexsuchthatx biforalli youralgorithmshouldnotbecheckingforthiscaseexplicitly itsperformanceshouldnaturallyimproveasthe amountofoverlapincreases chapter quicksortchapternotesthequicksortprocedurewasinventedbyhoare hoare sversionappearsinproblem thepartitionproceduregiveninsection isdueton lomuto theanalysisinsection isduetoavrimblum sedgewick andbent ley provideagoodreferenceonthedetailsofimplementationandhowtheymatter mcilroy showedhowtoengineera killeradversary thatproducesanarrayonwhichvirtuallyanyimplementationofquicksorttakes iftheimplementationisrandomized theadversaryproducesthearrayafterseeingthe randomchoicesofthequicksortalgorithm sortinginlineartimewehavenowintroducedseveralalgorithmsthatcansortnnumbersino nlgn mergesortandheapsortachievethisupperboundintheworstcase quicksort achievesitonaverage moreover foreachofthesealgorithms wecanproducea sequenceofninputnumbersthatcausesthealgorithmtoruninnlgn thesealgorithmsshareaninterestingproperty thesortedordertheydetermineisbasedonlyoncomparisonsbetweentheinputelements wecallsuchsortingalgorithmscomparisonsorts allthesortingalgorithmsintroducedthusfararecomparisonsorts insection weshallprovethatanycomparisonsortmustmakenlgn comparisonsintheworstcasetosortnelements mergesortandheapsortareasymptoticallyoptimal andnocomparisonsortexiststhatisfasterbymorethanaconstantfactor sections examinethreesortingalgorithms countingsort radixsort andbucketsort thatruninlineartime ofcourse thesealgorithmsuseoperationsotherthancomparisonstodeterminethesortedorder consequently thenlgn lowerbounddoesnotapplytothem lowerboundsforsortinginacomparisonsort weuseonlycomparisonsbetweenelementstogainorderinformationaboutaninputsequenceha ani thatis giventwoelementsaiandaj weperformoneofthetestsai aiaj aidaj aiaj orai ajtodeterminetheirrelativeorder wemaynotinspectthevaluesoftheelementsorgainorderinformationabouttheminanyotherway inthissection weassumewithoutlossofgeneralitythatalltheinputelementsaredistinct giventhisassumption comparisonsoftheformaidajareuseless sowecanassumethatnocomparisonsofthisformaremade wealsonotethat thecomparisonsaiaj aiaj andai ajareallequivalentinthat chapter sortinginlineartime thedecisiontreeforinsertionsortoperatingonthreeelements aninternalnodean notatedbyi jindicatesacomparisonbetweenaiandaj aleafannotatedbythepermutationh iindicatestheorderinga theshadedpathindicatesthedecisionsmadewhensortingtheinputsequenceha thepermutationh iattheleafindicatesthatthesortedorderingisa thereare possiblepermutationsoftheinputelements andsothedecisiontreemusthaveatleast leaves theyyieldidenticalinformationabouttherelativeorderofaiandaj wethereforeassumethatallcomparisonshavetheformaiaj thedecision treemodelwecanviewcomparisonsortsabstractlyintermsofdecisiontrees adecisiontreeisafullbinarytreethatrepresentsthecomparisonsbetweenelementsthatareperformedbyaparticularsortingalgorithmoperatingonaninputofagiven datamovement andallotheraspectsofthealgorithmareignored showsthedecisiontreecorrespondingtotheinsertionsortalgorithm fromsection operatingonaninputsequenceofthreeelements inadecisiontree weannotateeachinternalnodebyi jforsomeiandjintherange wherenisthenumberofelementsintheinputsequence wealsoannotateeachleafbyapermutationh seesectionc forbackgroundonpermutations theexecutionofthesortingalgorithmcorre spondstotracingasimplepathfromtherootofthedecisiontreedowntoaleaf eachinternalnodeindicatesacomparisonaiaj theleftsubtreethendictatessubsequentcomparisonsonceweknowthataiaj andtherightsubtreedictatessubsequentcomparisonsknowingthatai whenwecometoaleaf thesort ingalgorithmhasestablishedtheorderinga becauseanycorrectsortingalgorithmmustbeabletoproduceeachpermutationofitsinput eachofthen permutationsonnelementsmustappearasoneoftheleavesofthedecisiontreeforacomparisonsorttobecorrect furthermore eachoftheseleavesmustbereachablefromtherootbyadownwardpathcorrespondingtoanactual lowerboundsforsorting executionofthecomparisonsort weshallrefertosuchleavesas reachable weshallconsideronlydecisiontreesinwhicheachpermutationappearsas areachableleaf alowerboundfortheworstcasethelengthofthelongestsimplepathfromtherootofadecisiontreetoanyofitsreachableleavesrepresentstheworst casenumberofcomparisonsthatthecor respondingsortingalgorithmperforms consequently theworst casenumberof comparisonsforagivencomparisonsortalgorithmequalstheheightofitsdecision alowerboundontheheightsofalldecisiontreesinwhicheachpermutation appearsasareachableleafisthereforealowerboundontherunningtimeofany comparisonsortalgorithm thefollowingtheoremestablishessuchalowerbound theorem anycomparisonsortalgorithmrequiresnlgn comparisonsintheworstcase prooffromtheprecedingdiscussion itsuf cestodeterminetheheightofadecisiontreeinwhicheachpermutationappearsasareachableleaf consideradecisiontreeofheighthwithlreachableleavescorrespondingtoacomparisonsortonnelements becauseeachofthen permutationsoftheinputappearsassomeleaf wehaven sinceabinarytreeofheighthhasnomorethan hleaves wehaven bytakinglogarithms implies hlg sincethelgfunctionismonotonicallyincreasing dnlgn byequation corollary heapsortandmergesortareasymptoticallyoptimalcomparisonsorts prooftheo nlgn upperboundsontherunningtimesforheapsortandmergesortmatchthenlgn worst caselowerboundfromtheorem exercises whatisthesmallestpossibledepthofaleafinadecisiontreeforacomparison sort chapter sortinginlineartime obtainasymptoticallytightboundsonlg withoutusingstirling sapproxi mation instead evaluatethesummationpnkd lgkusingtechniquesfromsec tiona showthatthereisnocomparisonsortwhoserunningtimeislinearforatleasthalf ofthen inputsoflengthn whataboutafractionof noftheinputsoflengthn whataboutafraction supposethatyouaregivenasequenceofnelementstosort theinputsequenceconsistsofn ksubsequences eachcontainingkelements theelementsinagivensubsequenceareallsmallerthantheelementsinthesucceedingsubsequenceand largerthantheelementsintheprecedingsubsequence allthatisneededto sortthewholesequenceoflengthnistosortthekelementsineachofthen ksubsequences showannlgk lowerboundonthenumberofcomparisonsneededtosolvethisvariantofthesortingproblem hint itisnotrigoroustosimplycombinethelowerboundsfortheindividualsubsequences countingsortcountingsortassumesthateachoftheninputelementsisanintegerintherange tok forsomeintegerk whenkdo thesortrunsin countingsortdetermines foreachinputelementx thenumberofelementslessthanx itusesthisinformationtoplaceelementxdirectlyintoitspositionintheoutputarray forexample elementsarelessthanx thenxbelongsinoutputposition wemustmodifythisschemeslightlytohandlethesituationinwhichseveralelementshavethesamevalue sincewedonotwanttoputthemallinthe sameposition inthecodeforcountingsort weassumethattheinputisanarraya andthusa lengthdn werequiretwootherarrays thearrayb nholdsthesortedoutput andthearrayc kprovidestemporaryworkingstorage countingsort theoperationofcounting sortonaninputarraya whereeachelementofaisanonnegativeintegernolargerthankd thearrayaandtheauxiliaryarraycafterline thearraycafterline theoutputarraybandtheauxiliaryarraycafterone andthreeiterationsoftheloopinlines respectively onlythelightlyshadedelementsof arraybhavebeen lledin nalsortedoutputarrayb counting sort letc kbeanewarray forid tok forjd toa jdc inowcontainsthenumberofelementsequaltoi forid tok idc icc inowcontainsthenumberofelementslessthanorequaltoi forjda lengthdownto jda jdc illustratescountingsort aftertheforloopoflines initializesthearrayctoallzeros theforloopoflines inspectseachinputelement ifthevalueofaninputelementisi weincrementc afterline iholdsthenumberofinputelementsequaltoiforeachintegerid lines determineforeachid khowmanyinputelementsarelessthanorequaltoibykeepingarunningsumofthearrayc chapter sortinginlineartimefinally theforloopoflines placeseachelementa jintoitscorrectsortedpositionintheoutputarrayb ifallnelementsaredistinct thenwhenwe rstenterline foreacha thevaluec jisthecorrect nalpositionofa jintheoutputarray sincetherearec jelementslessthanorequaltoa becausetheelementsmightnotbedistinct wedecrementc jeachtimeweplaceavaluea jintothebarray decrementingc jcausesthenextinputelementwithavalueequaltoa ifoneexists togotothepositionimmediatelybeforea jintheoutputarray howmuchtimedoescountingsortrequire theforloopoflines takestime theforloopoflines takestime theforloopoflines takestime andtheforloopoflines takestime theoveralltimeis kcn inpractice weusuallyusecountingsortwhenwehavekdo inwhichcasetherunningtimeis countingsortbeatsthelowerboundofnlgn provedinsection becauseitisnotacomparisonsort infact nocomparisonsbetweeninputelementsoccuranywhereinthecode instead countingsortusestheactualvaluesoftheelementstoindexintoanarray thenlgn lowerboundforsortingdoesnotapplywhenwedepartfromthecomparisonsortmodel animportantpropertyofcountingsortisthatitisstable numberswiththesamevalueappearintheoutputarrayinthesameorderastheydointheinputarray itbreakstiesbetweentwonumbersbytherulethatwhichevernumberappears rstintheinputarrayappears rstintheoutputarray normally thepropertyofstabilityisimportantonlywhensatellitedataarecarriedaroundwiththeelementbeingsorted countingsort sstabilityisimportantforanotherreason counting sortisoftenusedasasubroutineinradixsort asweshallseeinthenextsection inorderforradixsorttoworkcorrectly countingsortmustbestable exercises usingfigure asamodel illustratetheoperationofcounting sortonthearrayadh provethatcounting sortisstable supposethatweweretorewritetheforloopheaderinline ofthecounting sortas forjd toa lengthshowthatthealgorithmstillworksproperly isthemodi edalgorithmstable radixsort describeanalgorithmthat givennintegersintherange tok preprocessesitsinputandthenanswersanyqueryabouthowmanyofthenintegersfallintoarange bino youralgorithmshoulduse nck preprocessingtime radixsortradixsortisthealgorithmusedbythecard sortingmachinesyounow ndonlyincomputermuseums thecardshave columns andineachcolumnamachinecan punchaholeinoneof places thesortercanbemechanically programmed toexamineagivencolumnofeachcardinadeckanddistributethecardintoone binsdependingonwhichplacehasbeenpunched anoperatorcanthen gatherthecardsbinbybin sothatcardswiththe rstplacepunchedareontopof cardswiththesecondplacepunched andsoon fordecimaldigits eachcolumnusesonly places theothertwoplacesarereservedforencodingnonnumericcharacters digitnumberwouldthenoccupya eldofdcolumns sincethecardsortercanlookatonlyonecolumnatatime theproblemofsortingncardsonad digitnumberrequiresasortingalgorithm intuitively youmightsortnumbersontheirmostsigni cantdigit sorteachoftheresultingbinsrecursively andthencombinethedecksinorder unfortunately sincethecardsin ofthe binsmustbeputasidetosorteachofthebins thisproceduregeneratesmanyintermediatepilesofcardsthatyouwouldhavetokeeptrackof seeexercise radixsortsolvestheproblemofcardsorting counterintuitively bysortingontheleastsigni cantdigit rst thealgorithmthencombinesthecardsintoasingledeck withthecardsinthe binprecedingthecardsinthe binprecedingthecardsinthe bin andsoon thenitsortstheentiredeckagainonthesecond leastsigni cantdigitandrecombinesthedeckinalikemanner theprocesscontinuesuntilthecardshavebeensortedonallddigits remarkably atthatpointthecardsarefullysortedonthed digitnumber onlydpassesthroughthedeckarerequiredtosort showshowradixsortoperatesona deck ofseven digitnumbers inorderforradixsorttoworkcorrectly thedigitsortsmustbestable thesortperformedbyacardsorterisstable buttheoperatorhastobewaryaboutnot changingtheorderofthecardsastheycomeoutofabin eventhoughallthecards inabinhavethesamedigitinthechosencolumn chapter sortinginlineartime theoperationofradixsortonalistofseven digitnumbers theleftmostcolumnistheinput theremainingcolumnsshowthelistaftersuccessivesortsonincreasinglysigni cantdigitpositions shadingindicatesthedigitpositionsortedontoproduceeachlistfromthepreviousone inatypicalcomputer whichisasequentialrandom accessmachine wesome timesuseradixsorttosortrecordsofinformationthatarekeyedbymultiple elds forexample wemightwishtosortdatesbythreekeys andday couldrunasortingalgorithmwithacomparisonfunctionthat giventwodates comparesyears andifthereisatie comparesmonths andifanothertieoccurs comparesdays alternatively wecouldsorttheinformationthreetimeswitha stablesort rstonday nextonmonth nallyonyear thecodeforradixsortisstraightforward thefollowingprocedureassumesthateachelementinthen elementarrayahasddigits wheredigit isthelowest orderdigitanddigitdisthehighest orderdigit radix sort forid tod useastablesorttosortarrayaondigitilemma givennd digitnumbersinwhicheachdigitcantakeonuptokpossiblevalues radix sortcorrectlysortsthesenumbersin nck timeifthestablesortitusestakes nck proofthecorrectnessofradixsortfollowsbyinductiononthecolumnbeingsorted seeexercise theanalysisoftherunningtimedependsonthestablesortusedastheintermediatesortingalgorithm wheneachdigitisintherange tok sothatitcantakeonkpossiblevalues andkisnottoolarge countingsortistheobviouschoice eachpassovernd digitnumbersthentakestime nck therearedpasses andsothetotaltimeforradixsortis nck whendisconstantandkdo wecanmakeradixsortruninlineartime moregenerally wehavesome exibilityinhowtobreakeachkeyintodigits radixsort lemma givennb bitnumbersandanypositiveintegerrb radix sortcorrectlysortsthesenumbersin timeifthestablesortitusestakes nck timeforinputsintherange tok proofforavaluerb wevieweachkeyashavingdddb redigitsofrbitseach eachdigitisanintegerintherange sothatwecanusecountingsortwithkd forexample wecanviewa bitwordashavingfour bitdigits sothatbd andddb eachpassofcountingsorttakestime nck andtherearedpasses foratotalrunningtimeof forgivenvaluesofnandb wewishtochoosethevalueofr withrb thatminimizestheexpression ifb blgnc thenforanyvalueofrb wehavethat choosingrdbyieldsarunningtimeof whichisasymptoticallyoptimal ifbblgnc thenchoosingrdblgncgivesthebesttimetowithinaconstantfactor whichwecanseeasfollows choosingrdblgncyieldsarunningtimeof lgn asweincreaseraboveblgnc rterminthenumeratorincreasesfasterthantherterminthedenominator andsoincreasingraboveblgncyieldsarunningtimeofbn lgn ifinsteadweweretodecreaserbelowblgnc thentheb rtermincreasesandthenc rtermremainsat isradixsortpreferabletoacomparison basedsortingalgorithm suchasquick sort ifbdo lgn asisoftenthecase andwechooserlgn thenradixsort srunningtimeis whichappearstobebetterthanquicksort sexpectedrunningtimeof nlgn theconstantfactorshiddeninthe notationdiffer however althoughradixsortmaymakefewerpassesthanquicksortoverthenkeys eachpassofradixsortmaytakesigni cantlylonger whichsortingalgorithmweprefer dependsonthecharacteristicsoftheimplementations oftheunderlyingmachine quicksortoftenuseshardwarecachesmoreeffectivelythanradixsort oftheinputdata moreover theversionofradixsortthatusescountingsortasthe intermediatestablesortdoesnotsortinplace whichmanyofthe nlgn timecomparisonsortsdo whenprimarymemorystorageisatapremium mightpreferanin placealgorithmsuchasquicksort exercises usingfigure asamodel illustratetheoperationofradix sortonthefol lowinglistofenglishwords rug mob tab tar dig tea fox chapter sortinginlineartime whichofthefollowingsortingalgorithmsarestable insertionsort mergesort heapsort andquicksort giveasimpleschemethatmakesanysortingalgorithm stable howmuchadditionaltimeandspacedoesyourschemeentail useinductiontoprovethatradixsortworks wheredoesyourproofneedthe assumptionthattheintermediatesortisstable showhowtosortnintegersintherange ton ino inthe rstcard sortingalgorithminthissection exactlyhowmanysortingpasses areneededtosortd digitdecimalnumbersintheworstcase howmanypilesofcardswouldanoperatorneedtokeeptrackofintheworstcase bucketsortbucketsortassumesthattheinputisdrawnfromauniformdistributionandhasanaverage caserunningtimeofo likecountingsort bucketsortisfastbecauseitassumessomethingabouttheinput whereascountingsortassumesthattheinput consistsofintegersinasmallrange bucketsortassumesthattheinputisgenerated byarandomprocessthatdistributeselementsuniformlyandindependentlyover theinterval seesectionc forade nitionofuniformdistribution bucketsortdividestheinterval intonequal sizedsubintervals orbuckets andthendistributestheninputnumbersintothebuckets sincetheinputsareuni formlyandindependentlydistributedover wedonotexpectmanynumberstofallintoeachbucket toproducetheoutput wesimplysortthenumbersineachbucketandthengothroughthebucketsinorder listingtheelementsineach ourcodeforbucketsortassumesthattheinputisann elementarrayaandthateachelementa iinthearraysatis thecoderequiresanauxiliaryarrayb noflinkedlists buckets andassumesthatthereisamechanismformaintainingsuchlists describeshowtoimplementbasicoperationsonlinkedlists bucketsort theoperationofbucket sortfornd theinputarraya thearrayb ofsortedlists buckets afterline ofthealgorithm bucketiholdsvaluesinthehalf openinterval thesortedoutputconsistsofaconcatenationinorderofthelistsb bucket sort letb nbeanewarray nda forid ton makeb ianemptylist forid ton inserta iintolistb bna forid ton sortlistb iwithinsertionsort concatenatethelistsb ntogetherinorderfigure showstheoperationofbucketsortonaninputarrayof numbers toseethatthisalgorithmworks considertwoelementsa ianda assumewithoutlossofgeneralitythata sincebna icbna eitherelementa igoesintothesamebucketasa joritgoesintoabucketwithalowerindex ifa ianda jgointothesamebucket thentheforloopoflines putsthemintotheproperorder ifa ianda jgointodifferentbuckets thenline putsthemintotheproperorder therefore bucketsortworkscorrectly toanalyzetherunningtime observethatalllinesexceptline takeo timeintheworstcase weneedtoanalyzethetotaltimetakenbythencallstoinsertionsortinline chapter sortinginlineartimetoanalyzethecostofthecallstoinsertionsort letnibetherandomvariabledenotingthenumberofelementsplacedinbucketb sinceinsertionsortrunsinquadratictime seesection therunningtimeofbucketsortist xid wenowanalyzetheaverage caserunningtimeofbucketsort bycomputingtheexpectedvalueoftherunningtime wherewetaketheexpectationovertheinput distribution takingexpectationsofbothsidesandusinglinearityofexpectation wehavee tde xid xid bylinearityofexpectation xid oen byequation weclaimthaten forid itisnosurprisethateachbucketihasthesamevalueofe sinceeachvalueintheinputarrayaisequallylikelytofallinanybucket toproveequation wede neindicatorrandomvariablesxijdifa jfallsinbucketigforid andjd nidnxjd xij tocomputee weexpandthesquareandregroupterms bucketsort ide nxjd xij nxjd nxkd xijxik nxjd ijcx jnx knk jxijxik dnxjd ijcx jnx knk xijxik wherethelastlinefollowsbylinearityofexpectation weevaluatethetwosum mationsseparately indicatorrandomvariablexijis withprobability nand otherwise andthereforeex ijd whenk thevariablesxijandxikareindependent andhencee xijxikde xije xikd substitutingthesetwoexpectedvaluesinequation weobtainen idnxjd ncx jnx knk ncn whichprovesequation chapter sortinginlineartimeusingthisexpectedvalueinequation weconcludethattheaverage caserunningtimeforbucketsortis cno eveniftheinputisnotdrawnfromauniformdistribution bucketsortmaystillruninlineartime aslongastheinputhasthepropertythatthesumofthesquares ofthebucketsizesislinearinthetotalnumberofelements equation tellsus thatbucketsortwillruninlineartime exercises usingfigure asamodel illustratetheoperationofbucket sortonthearrayadh explainwhytheworst caserunningtimeforbucketsortis whatsimplechangetothealgorithmpreservesitslinearaverage caserunningtimeandmakes itsworst caserunningtimeo nlgn letxbearandomvariablethatisequaltothenumberofheadsintwo ipsofafaircoin whatise whatise wearegivennpointsintheunitcircle pid suchthat icy forid supposethatthepointsareuniformlydistributed thatis theprobabilityof ndingapointinanyregionofthecircleisproportionaltotheareaofthatregion designanalgorithmwithanaverage caserunningtimeof tosortthenpointsbytheirdistancesdidpx icy ifromtheorigin hint designthebucketsizesinbucket sorttore ecttheuniformdistributionofthepointsintheunitcircle aprobabilitydistributionfunctionp forarandomvariablexisde nedbyp dprfxxg supposethatwedrawalistofnrandomvariablesx xnfromacontinuousprobabilitydistributionfunctionpthatiscom putableino giveanalgorithmthatsortsthesenumbersinlinearaverage casetime problemsforchapter problems probabilisticlowerboundsoncomparisonsortinginthisproblem weproveaprobabilisticnlgn lowerboundontherunningtimeofanydeterministicorrandomizedcomparisonsortonndistinctinputelements webeginbyexaminingadeterministiccomparisonsortawithdecisiontreeta weassumethateverypermutationofa sinputsisequallylikely supposethateachleafoftaislabeledwiththeprobabilitythatitisreachedgivenarandominput provethatexactlyn leavesarelabeled andthattherestarelabeled letd denotetheexternalpathlengthofadecisiontreet thatis isthesumofthedepthsofalltheleavesoft lettbeadecisiontreewithk leaves andletltandrtbetheleftandrightsubtreesoft showthatd letd betheminimumvalueofd overalldecisiontreestwithk leaves showthatd dmin ckg hint consideradecisiontreetwithkleavesthatachievestheminimum leti bethenumberofleavesinltandki thenumberofleavesinrt provethatforagivenvalueofk andiintherange thefunctionilgic isminimizedatidk concludethatd dklgk provethatd andconcludethattheaverage casetimetosortnelementsisnlgn considerarandomizedcomparisonsortb wecanextendthedecision treemodeltohandlerandomizationbyincorporatingtwokindsofnodes ordinarycomparisonnodesand randomization nodes arandomizationnodemodelsa randomchoiceoftheformrandom madebyalgorithmb thenodehasrchildren eachofwhichisequallylikelytobechosenduringanexecutionofthe algorithm showthatforanyrandomizedcomparisonsortb thereexistsadeterministiccomparisonsortawhoseexpectednumberofcomparisonsisnomorethanthosemadebyb chapter sortinginlineartime sortinginplaceinlineartimesupposethatwehaveanarrayofndatarecordstosortandthatthekeyofeachrecordhasthevalue analgorithmforsortingsuchasetofrecordsmightpossesssomesubsetofthefollowingthreedesirablecharacteristics thealgorithmrunsino thealgorithmisstable thealgorithmsortsinplace usingnomorethanaconstantamountofstoragespaceinadditiontotheoriginalarray giveanalgorithmthatsatis escriteria giveanalgorithmthatsatis escriteria giveanalgorithmthatsatis escriteria canyouuseanyofyoursortingalgorithmsfromparts asthesortingmethodusedinline ofradix sort sothatradix sortsortsnrecordswithb bitkeysino explainhoworwhynot supposethatthenrecordshavekeysintherangefrom tok showhowtomodifycountingsortsothatitsortstherecordsinplaceino nck youmayuseo storageoutsidetheinputarray isyouralgorithmstable hint howwouldyoudoitforkd sortingvariable lengthitemsa youaregivenanarrayofintegers wheredifferentintegersmayhavedifferentnumbersofdigits butthetotalnumberofdigitsoveralltheintegersinthearrayisn showhowtosortthearrayino youaregivenanarrayofstrings wheredifferentstringsmayhavedifferentnumbersofcharacters butthetotalnumberofcharactersoverallthestrings isn showhowtosortthestringsino notethatthedesiredorderhereisthestandardalphabeticalorder forexample waterjugssupposethatyouaregivennredandnbluewaterjugs allofdifferentshapesandsizes allredjugsholddifferentamountsofwater asdotheblueones moreover foreveryredjug thereisabluejugthatholdsthesameamountofwater andvice versa problemsforchapter yourtaskisto ndagroupingofthejugsintopairsofredandbluejugsthatholdthesameamountofwater todoso youmayperformthefollowingoperation apairofjugsinwhichoneisredandoneisblue lltheredjugwithwater thenpourthewaterintothebluejug thisoperationwilltellyouwhetherthered orthebluejugcanholdmorewater orthattheyhavethesamevolume assume thatsuchacomparisontakesonetimeunit yourgoalisto ndanalgorithmthat makesaminimumnumberofcomparisonstodeterminethegrouping thatyoumaynotdirectlycomparetworedjugsortwobluejugs describeadeterministicalgorithmthatuses comparisonstogroupthejugsintopairs provealowerboundofnlgn forthenumberofcomparisonsthatanalgo rithmsolvingthisproblemmustmake givearandomizedalgorithmwhoseexpectednumberofcomparisonsiso nlgn andprovethatthisboundiscorrect whatistheworst casenum berofcomparisonsforyouralgorithm averagesortingsupposethat insteadofsortinganarray wejustrequirethattheelementsincrease onaverage moreprecisely wecallann elementarrayak sortedif forallid thefollowingholds jdia jkpickjdic whatdoesitmeanforanarraytobe sorted giveapermutationofthenumbers thatis sorted butnotsorted provethatann elementarrayisk sortedifandonlyifa icforallid giveanalgorithmthatk sortsann elementarrayino nlg wecanalsoshowalowerboundonthetimetoproduceak sortedarray whenkisaconstant showthatwecansortak sortedarrayoflengthnino nlgk hint usethesolutiontoexercise showthatwhenkisaconstant sortingann elementarrayrequiresnlgn hint usethesolutiontothepreviouspartalongwiththelowerboundoncomparisonsorts chapter sortinginlineartime lowerboundonmergingsortedliststheproblemofmergingtwosortedlistsarisesfrequently wehaveseenapro cedureforitasthesubroutinemergeinsection inthisproblem wewillprovealowerboundof ontheworst casenumberofcomparisonsrequiredtomergetwosortedlists eachcontainingnitems firstwewillshowalowerboundof comparisonsbyusingadecisiontree given nnumbers computethenumberofpossiblewaystodividethemintotwosortedlists eachwithnnumbers usingadecisiontreeandyouranswertopart showthatanyalgorithmthatcorrectlymergestwosortedlistsmustperformatleast comparisons nowwewillshowaslightlytighter bound showthatiftwoelementsareconsecutiveinthesortedorderandfromdifferentlists thentheymustbecompared useyouranswertothepreviousparttoshowalowerboundof compar isonsformergingtwosortedlists sortinglemmaandcolumnsortacompare exchangeoperationontwoarrayelementsa ianda wherei hastheformcompare exchange ifa exchangea iwitha jafterthecompare exchangeoperation weknowthata anobliviouscompare exchangealgorithmoperatessolelybyasequenceofprespeci edcompare exchangeoperations theindicesofthepositionscompared inthesequencemustbedeterminedinadvance andalthoughtheycandepend onthenumberofelementsbeingsorted theycannotdependonthevaluesbeing sorted norcantheydependontheresultofanypriorcompare exchangeoperation forexample hereisinsertionsortexpressedasanobliviouscompare exchangealgorithm insertion sort forjd toa foridj downto exchange problemsforchapter sortinglemmaprovidesapowerfulwaytoprovethatanobliviouscompare exchangealgorithmproducesasortedresult itstatesthatifanoblivi ouscompare exchangealgorithmcorrectlysortsallinputsequencesconsistingof thenitcorrectlysortsallinputscontainingarbitraryvalues youwillprovethe sortinglemmabyprovingitscontrapositive ifanoblivi ouscompare exchangealgorithmfailstosortaninputcontainingarbitraryvalues thenitfailstosortsome input assumethatanobliviouscompare exchangeal gorithmxfailstocorrectlysortthearraya leta pbethesmallestvalueinathatalgorithmxputsintothewronglocation andleta qbethevaluethatalgorithmxmovestothelocationintowhicha pshouldhavegone neanarrayb nof sasfollows ifa ifa arguethata sothatb andb tocompletetheproofofthe sortinglemma provethatalgorithmxfailstosortarraybcorrectly nowyouwillusethe sortinglemmatoprovethataparticularsortingalgo rithmworkscorrectly thealgorithm columnsort worksonarectangulararrayofnelements thearrayhasrrowsandscolumns sothatndrs subjecttothreerestrictions rmustbeeven smustbeadivisorofr andr whencolumnsortcompletes thearrayissortedincolumn majororder readingdownthecolumns fromlefttoright theelementsmonotonicallyincrease columnsortoperatesineightsteps regardlessofthevalueofn theoddstepsareallthesame sorteachcolumnindividually eachevenstepisa xedpermuta tion herearethesteps sorteachcolumn transposethearray butreshapeitbacktorrowsandscolumns inotherwords turntheleftmostcolumnintothetopr srows inorder turnthenextcolumnintothenextr srows inorder andsoon sorteachcolumn performtheinverseofthepermutationperformedinstep chapter sortinginlineartime thestepsofcolumnsort theinputarraywith rowsand columns aftersortingeachcolumninstep aftertransposingandreshapinginstep aftersortingeachcolumninstep afterperformingstep whichinvertsthepermutationfromstep aftersortingeachcolumninstep aftershiftingbyhalfacolumninstep aftersortingeachcolumninstep afterperformingstep whichinvertsthepermutationfromstep thearrayisnowsortedincolumn majororder sorteachcolumn shiftthetophalfofeachcolumnintothebottomhalfofthesamecolumn andshiftthebottomhalfofeachcolumnintothetophalfofthenextcolumntothe leavethetophalfoftheleftmostcolumnempty shiftthebottomhalf ofthelastcolumnintothetophalfofanewrightmostcolumn andleavethe bottomhalfofthisnewcolumnempty sorteachcolumn performtheinverseofthepermutationperformedinstep showsanexampleofthestepsofcolumnsortwithrd andsd eventhoughthisexampleviolatestherequirementthatr ithappenstowork arguethatwecantreatcolumnsortasanobliviouscompare exchangealgo rithm evenifwedonotknowwhatsortingmethodtheoddstepsuse althoughitmightseemhardtobelievethatcolumnsortactuallysorts youwillusethe sortinglemmatoprovethatitdoes sortinglemmaapplies becausewecantreatcolumnsortasanobliviouscompare exchangealgorithm notesforchapter coupleofde nitionswillhelpyouapplythe sortinglemma wesaythatanareaofanarrayiscleanifweknowthatitcontainseitherall sorall otherwise theareamightcontainmixed anditisdirty fromhereon assumethattheinputarraycontainsonly andthatwecantreatitasanarraywithrrowsandscolumns provethataftersteps thearrayconsistsofsomecleanrowsof satthetop somecleanrowsof satthebottom andatmostsdirtyrowsbetweenthem provethatafterstep thearray readincolumn majororder startswithacleanareaof endswithacleanareaof andhasadirtyareaofatmosts elementsinthemiddle provethatsteps produceafullysorted output concludethatcolumn sortcorrectlysortsallinputscontainingarbitraryvalues nowsupposethatsdoesnotdivider provethataftersteps thearrayconsistsofsomecleanrowsof satthetop somecleanrowsof satthe andatmost dirtyrowsbetweenthem howlargemustrbe comparedwiths forcolumnsorttocorrectlysortwhensdoesnotdivider suggestasimplechangetostep thatallowsustomaintaintherequirementthatr evenwhensdoesnotdivider andprovethatwithyourchange columnsortcorrectlysorts chapternotesthedecision treemodelforstudyingcomparisonsortswasintroducedbyford andjohnson knuth scomprehensivetreatiseonsorting coversmany variationsonthesortingproblem includingtheinformation theoreticlowerbound onthecomplexityofsortinggivenhere ben studiedlowerboundsfor sortingusinggeneralizationsofthedecision treemodel knuthcreditsh sewardwithinventingcountingsortin aswellaswiththeideaofcombiningcountingsortwithradixsort radixsortingstartingwiththe leastsigni cantdigitappearstobeafolkalgorithmwidelyusedbyoperatorsof mechanicalcard sortingmachines accordingtoknuth rstpublishedrefer encetothemethodisa documentbyl comriedescribingpunched equipment bucketsortinghasbeeninusesince whenthebasicideawas proposedbye isaacandr singleton munroandraman giveastablesortingalgorithmthatperformso comparisonsintheworstcase isany xedconstant although chapter sortinginlineartimeanyoftheo nlgn timealgorithmsmakefewercomparisons thealgorithmbymunroandramanmovesdataonlyo timesandoperatesinplace thecaseofsortingnb bitintegersino nlgn timehasbeenconsideredbymanyresearchers severalpositiveresultshavebeenobtained eachunderslightly differentassumptionsaboutthemodelofcomputationandtherestrictionsplaced onthealgorithm alltheresultsassumethatthecomputermemoryisdividedinto addressableb bitwords fredmanandwillard introducedthefusiontreedatastructureandusedittosortnintegersino nlgn lglgn thisboundwaslaterimprovedtoo nplgn timebyandersson thesealgorithmsrequiretheuseofmultiplicationandseveralprecomputedconstants andersson hagerup nilsson andraman haveshownhowtosortnintegersino nlglgn timewithoutusingmultiplication buttheirmethodrequiresstoragethatcanbeun boundedintermsofn usingmultiplicativehashing wecanreducethestorageneededtoo butthentheo nlglgn worst caseboundontherunningtimebecomesanexpected timebound generalizingtheexponentialsearchtreesof andersson thorup gaveano lglgn timesortingalgorithmthatdoesnotusemultiplicationorrandomization andituseslinearspace combining thesetechniqueswithsomenewideas han improvedtheboundforsorting nlglgnlglglgn althoughthesealgorithmsareimportanttheoreticalbreakthroughs theyareallfairlycomplicatedandatthepresenttimeseemunlikelytocompetewithexistingsortingalgorithmsinpractice thecolumnsortalgorithminproblem isbyleighton mediansandorderstatisticstheithorderstatisticofasetofnelementsistheithsmallestelement forexample theminimumofasetofelementsisthe rstorderstatistic andthemaximumisthenthorderstatistic idn amedian informally isthe halfwaypoint oftheset whennisodd themedianisunique occurringatid whenniseven therearetwomedians occurringatidn andidn regardlessoftheparityofn mediansoccuratidb thelowermedian andidd theuppermedian forsimplicityinthistext however weconsistentlyusethephrase themedian torefertothelowermedian thischapteraddressestheproblemofselectingtheithorderstatisticfromasetofndistinctnumbers weassumeforconveniencethatthesetcontainsdis tinctnumbers althoughvirtuallyeverythingthatwedoextendstothesituationin whichasetcontainsrepeatedvalues weformallyspecifytheselectionproblemasfollows input asetaofn distinct numbersandanintegeri output theelementx athatislargerthanexactlyi otherelementsofa wecansolvetheselectionproblemino nlgn sincewecansortthenum bersusingheapsortormergesortandthensimplyindextheithelementintheoutputarray thischapterpresentsfasteralgorithms insection weexaminetheproblemofselectingtheminimumandmaxi mumofasetofelements moreinterestingisthegeneralselectionproblem weinvestigateinthesubsequenttwosections analyzesapractical randomizedalgorithmthatachievesano expectedrunningtime assumingdis tinctelements containsanalgorithmofmoretheoreticalinterestthat achievestheo runningtimeintheworstcase chapter mediansandorderstatistics minimumandmaximumhowmanycomparisonsarenecessarytodeterminetheminimumofasetofnelements wecaneasilyobtainanupperboundofn comparisons examineeachelementofthesetinturnandkeeptrackofthesmallestelementseenso inthefollowingprocedure weassumethatthesetresidesinarraya wherea lengthdn minimum minda forid toa ifmin minda returnminwecan ofcourse ndthemaximumwithn comparisonsaswell isthisthebestwecando sincewecanobtainalowerboundofn comparisonsfortheproblemofdeterminingtheminimum thinkofanyalgorithmthatdeterminestheminimumasatournamentamongtheelements eachcompar isonisamatchinthetournamentinwhichthesmallerofthetwoelementswins observingthateveryelementexceptthewinnermustloseatleastonematch concludethatn comparisonsarenecessarytodeterminetheminimum hence thealgorithmminimumisoptimalwithrespecttothenumberofcomparisonsperformed simultaneousminimumandmaximuminsomeapplications wemust ndboththeminimumandthemaximumofasetofnelements forexample agraphicsprogrammayneedtoscaleasetof datato tontoarectangulardisplayscreenorothergraphicaloutputdevice todoso theprogrammust rstdeterminetheminimumandmaximumvalueofeachcoordinate atthispoint itshouldbeobvioushowtodetermineboththeminimumandthemaximumofnelementsusing comparisons whichisasymptoticallyoptimal simply ndtheminimumandmaximumindependently usingn comparisonsforeach foratotalof comparisons infact wecan ndboththeminimumandthemaximumusingatmost ccomparisons wedosobymaintainingboththeminimumandmaximumelements seenthusfar ratherthanprocessingeachelementoftheinputbycomparingitagainstthecurrentminimumandmaximum atacostof comparisonsperelement selectioninexpectedlineartime weprocesselementsinpairs wecomparepairsofelementsfromtheinput rstwitheachother andthenwecomparethesmallerwiththecurrentminimumandthelargertothecurrentmaximum atacostof comparisonsforevery elements howwesetupinitialvaluesforthecurrentminimumandmaximumdependsonwhethernisoddoreven ifnisodd wesetboththeminimumandmaximumtothevalueofthe rstelement andthenweprocesstherestoftheelementsin pairs ifniseven weperform comparisononthe rst elementstodeterminetheinitialvaluesoftheminimumandmaximum andthenprocesstherestoftheelementsinpairsasinthecaseforoddn letusanalyzethetotalnumberofcomparisons ifnisodd thenweperform ccomparisons ifniseven weperform initialcomparisonfollowedby comparisons foratotalof ineithercase thetotalnumberofcomparisonsisatmost exercises showthatthesecondsmallestofnelementscanbefoundwithncdlgne comparisonsintheworstcase hint ndthesmallestelement provethelowerboundofd comparisonsintheworstcaseto ndboththemaximumandminimumofnnumbers hint considerhowmanynumbersarepotentiallyeitherthemaximumorminimum andinvestigatehowacomparisonaffectsthesecounts selectioninexpectedlineartimethegeneralselectionproblemappearsmoredif cultthanthesimpleproblemof ndingaminimum surprisingly theasymptoticrunningtimeforbothprob lemsisthesame inthissection wepresentadivide conqueralgorithmfortheselectionproblem thealgorithmrandomized selectismodeledafterthequicksortalgorithmofchapter asinquicksort wepartitiontheinputarray recursively butunlikequicksort whichrecursivelyprocessesbothsidesofthe partition randomized selectworksononlyonesideofthepartition thisdifferenceshowsupintheanalysis whereasquicksorthasanexpectedrunning timeof nlgn theexpectedrunningtimeofrandomized selectis assumingthattheelementsaredistinct chapter mediansandorderstatisticsrandomized selectusestheprocedurerandomized partitionintro ducedinsection likerandomized quicksort itisarandomizedal gorithm sinceitsbehaviorisdeterminedinpartbytheoutputofarandom generator thefollowingcodeforrandomized selectreturnstheithsmallestelementofthearraya randomized ifp returna qdrandomized partition kdqpc ifi thepivotvalueistheanswer returna elseifi returnrandomized elsereturnrandomized therandomized selectprocedureworksasfollows checksforthebasecaseoftherecursion inwhichthesubarraya rconsistsofjustoneelement inthiscase imustequal andwesimplyreturna pinline astheithsmallestelement otherwise thecalltorandomized partitioninline partitionsthearraya rintotwo possiblyempty subarraysa qanda rsuchthateachelementofa qislessthanorequaltoa whichinturnislessthaneachelementofa asinquicksort wewillrefertoa qasthepivotelement computesthenumberkofelementsinthesubarraya thatis thenumberofelementsinthelowsideofthepartition plusoneforthepivotelement thencheckswhethera qistheithsmallestelement ifitis thenline returnsa otherwise thealgorithmdeterminesinwhichofthetwosubarraysa qanda rtheithsmallestelementlies ifi thenthedesiredelementliesonthelowsideofthepartition andline recursivelyselectsitfromthesubarray ifi however thenthedesiredelementliesonthehighsideofthepartition sincewealready knowkvaluesthataresmallerthantheithsmallestelementofa namely theelementsofa thedesiredelementisthe thsmallestelementofa whichline ndsrecursively thecodeappearstoallowrecursivecallstosubarrayswith elements butexercise asksyoutoshowthatthissituationcannothappen theworst caserunningtimeforrandomized selectis evento ndtheminimum becausewecouldbeextremelyunluckyandalwayspartitionaround thelargestremainingelement andpartitioningtakes wewillseethat selectioninexpectedlineartime thealgorithmhasalinearexpectedrunningtime andbecauseitisrandom ized noparticularinputelicitstheworst casebehavior toanalyzetheexpectedrunningtimeofrandomized welettherun ningtimeonaninputarraya rofnelementsbearandomvariablethatwedenotebyt andweobtainanupperboundone tasfollows thepro cedurerandomized partitionisequallylikelytoreturnanyelementasthepivot therefore foreachksuchthat thesubarraya qhaskele ments alllessthanorequaltothepivot withprobability forkd wede neindicatorrandomvariablesxkwherexkdifthesubarraya qhasexactlykelementsg andso assumingthattheelementsaredistinct wehave xkd whenwecallrandomized selectandchoosea qasthepivotelement wedonotknow apriori ifwewillterminateimmediatelywiththecorrectanswer recurseonthesubarraya orrecurseonthesubarraya thisdecisiondependsonwheretheithsmallestelementfallsrelativetoa assumingthatt ismonotonicallyincreasing wecanupper boundthetimeneededfortherecursivecallbythetimeneededfortherecursivecallonthelargestpossibleinput inotherwords toobtainanupperbound weassumethattheithelementisalwaysonthesideofthepartitionwiththegreaternumberofelements foragivencallofrandomized theindicatorrandomvariablexkhasthevalue forexactlyonevalueofk anditis forallotherk whenxkd thetwosubarraysonwhichwemightrecursehavesizesk andnk hence wehavetherecurrencet nxkd max dnxkd xkt max chapter mediansandorderstatisticstakingexpectedvalues wehavee nxkd xkt max dnxkd xkt max nkco bylinearityofexpectation dnxkd xke max nkco byequation dnxkd max nkco byequation inordertoapplyequation werelyonxkandt max beingindependentrandomvariables asksyoutojustifythisassertion letusconsidertheexpressionmax wehavemax ifk nkifkdn ifniseven eachtermfromt uptot appearsexactlytwiceinthesummation andifnisodd allthesetermsappeartwiceandt appearsonce wehavee xkdbn kco weshowthate tdo bysubstitution assumethate tcnforsomeconstantcthatsatis estheinitialconditionsoftherecurrence weassumethatt fornlessthansomeconstant weshallpickthisconstantlater wealsopickaconstantasuchthatthefunctiondescribedbytheo termabove whichdescribesthenon recursivecomponentoftherunningtimeofthealgo rithm isboundedfromabovebyanforalln usingthisinductivehypothesis wehavee xkdbn cckcand xkd kbn xkd selectioninexpectedlineartime cand cnn candcn candc ncan candcncn inordertocompletetheproof weneedtoshowthatforsuf cientlylargen thislastexpressionisatmostcnor equivalently thatcn ifweaddc tobothsidesandfactoroutn wegetn aslongaswechoosetheconstantcsothatc wecandividebothsidesbyc givingnc ifweassumethatt forn thene tdo weconcludethatwecan ndanyorderstatistic andinparticularthemedian expectedlineartime assumingthattheelementsaredistinct exercises showthatrandomized selectnevermakesarecursivecalltoa lengtharray arguethattheindicatorrandomvariablexkandthevaluet max areindependent writeaniterativeversionofrandomized chapter mediansandorderstatistics supposeweuserandomized selecttoselecttheminimumelementofthearrayadh describeasequenceofpartitionsthatresultsinaworst caseperformanceofrandomized selectioninworst caselineartimewenowexamineaselectionalgorithmwhoserunningtimeiso intheworstcase likerandomized thealgorithmselect ndsthedesiredele mentbyrecursivelypartitioningtheinputarray however weguaranteeagoodsplituponpartitioningthearray selectusesthedeterministicpartitioningalgorithmpartitionfromquicksort seesection butmodi edtotaketheelementtopartitionaroundasaninputparameter theselectalgorithmdeterminestheithsmallestofaninputarrayofn distinctelementsbyexecutingthefollowingsteps ifnd thenselectmerelyreturnsitsonlyinputvalueastheithsmallest dividethenelementsoftheinputarrayintobn cgroupsof elementseachandatmostonegroupmadeupoftheremainingnmod elements findthemedianofeachofthedn egroupsby rstinsertion sortingtheele mentsofeachgroup ofwhichthereareatmost andthenpickingthemedianfromthesortedlistofgroupelements useselectrecursivelyto ndthemedianxofthedn emediansfoundinstep ifthereareanevennumberofmedians thenbyourconvention xisthelowermedian partitiontheinputarrayaroundthemedian mediansxusingthemodi edversionofpartition letkbeonemorethanthenumberofelementsonthelowsideofthepartition sothatxisthekthsmallestelementandtherearenkelementsonthehighsideofthepartition ifidk thenreturnx otherwise useselectrecursivelyto ndtheithsmallestelementonthelowsideifi orthe thsmallestelementonthehighsideifi toanalyzetherunningtimeofselect rstdeterminealowerboundonthenumberofelementsthataregreaterthanthepartitioningelementx helpsustovisualizethisbookkeeping atleasthalfofthemediansfoundin selectioninworst caselineartime xfigure analysisofthealgorithmselect thenelementsarerepresentedbysmallcircles andeachgroupof elementsoccupiesacolumn themediansofthegroupsarewhitened andthemedian mediansxislabeled ndingthemedianofanevennumberofelements weusethelowermedian arrowsgofromlargerelementstosmaller fromwhichwecanseethat outofeveryfullgroupof elementstotherightofxaregreaterthanx outofeverygroupof elementstotheleftofxarelessthanx theelementsknowntobegreaterthanxappearonashadedbackground aregreaterthanorequaltothemedian mediansx atleasthalfofthedn egroupscontributeatleast elementsthataregreaterthanx exceptfortheonegroupthathasfewerthan elementsif doesnotdividenexactly andtheonegroupcontainingxitself discountingthesetwogroups itfollowsthatthenumberofelementsgreaterthanxisatleast similarly atleast elementsarelessthanx intheworstcase callsselectrecursivelyonatmost elements wecannowdeveloparecurrencefortheworst caserunningtimet ofthealgorithmselect steps takeo consistsofo callsofinsertionsortonsetsofsizeo takestimet andstep takestimeatmostt assumingthattismonotonicallyincreasing wemaketheassumption whichseemsunmotivatedat rst thatanyinputoffewer elementsrequireso theoriginofthemagicconstant willbeclearshortly wecanthereforeobtaintherecurrence becauseofourassumptionthatthenumbersaredistinct allmediansexceptxareeithergreaterthanorlessthanx chapter mediansandorderstatisticst ifn ifn weshowthattherunningtimeislinearbysubstitution morespeci cally wewillshowthatt cnforsomesuitablylargeconstantcandalln webeginbyassumingthatt cnforsomesuitablylargeconstantcandalln thisassumptionholdsifcislargeenough wealsopickaconstantasuchthatthefunc tiondescribedbytheo termabove whichdescribesthenon recursivecompo nentoftherunningtimeofthealgorithm isboundedabovebyanforalln substitutingthisinductivehypothesisintotheright handsideoftherecurrence yieldst cdn ecc cancn ccc ccand ccandcnc ccan whichisatmostcnifcn ccan inequality isequivalenttotheinequalityc whenn becauseweassumethatn wehaven andsochoos ingc awillsatisfyinequality notethatthereisnothingspecialabouttheconstant wecouldreplaceitbyanyintegerstrictlygreaterthan thenchoosecaccordingly theworst caserunningtimeofselectisthereforelinear asinacomparisonsort seesection selectandrandomized selectdetermineinformationabouttherelativeorderofelementsonlybycomparingele ments recallfromchapter thatsortingrequiresnlgn timeinthecompari sonmodel evenonaverage seeproblem thelinear timesortingalgorithms inchapter makeassumptionsabouttheinput incontrast thelinear timese lectionalgorithmsinthischapterdonotrequireanyassumptionsabouttheinput theyarenotsubjecttothenlgn lowerboundbecausetheymanagetosolvetheselectionproblemwithoutsorting solvingtheselectionproblembysort ingandindexing aspresentedintheintroductiontothischapter isasymptotically inef cient selectioninworst caselineartime exercises inthealgorithmselect theinputelementsaredividedintogroupsof willthealgorithmworkinlineartimeiftheyaredividedintogroupsof arguethatselectdoesnotruninlineartimeifgroupsof areused analyzeselecttoshowthatifn thenatleastdn eelementsaregreaterthanthemedian mediansxandatleastdn eelementsarelessthanx showhowquicksortcanbemadetorunino nlgn timeintheworstcase sumingthatallelementsaredistinct supposethatanalgorithmusesonlycomparisonsto ndtheithsmallestelementinasetofnelements showthatitcanalso ndthei smallerelementsandthenilargerelementswithoutperforminganyadditionalcomparisons supposethatyouhavea worst caselinear timemediansubroutine giveasimple linear timealgorithmthatsolvestheselectionproblemforanarbi traryorderstatistic thekthquantilesofann elementsetarethek orderstatisticsthatdividethesortedsetintokequal sizedsets towithin giveano nlgk timealgorithmtolistthekthquantilesofaset describeano timealgorithmthat givenasetsofndistinctnumbersandapositiveintegerkn determinestheknumbersinsthatareclosesttothemedianofs letx nandy nbetwoarrays eachcontainingnnumbersalreadyinsortedorder giveano lgn timealgorithmto ndthemedianofall nelementsinarraysxandy professorolayisconsultingforanoilcompany whichisplanningalargepipeline runningeasttowestthroughanoil eldofnwells thecompanywantstoconnect chapter mediansandorderstatisticsfigure professorolayneedstodeterminethepositionoftheeast westoilpipelinethatmini mizesthetotallengthofthenorth southspurs aspurpipelinefromeachwelldirectlytothemainpipelinealongashortestroute eithernorthorsouth asshowninfigure giventhex andy coordinatesofthewells howshouldtheprofessorpicktheoptimallocationofthemainpipeline whichwouldbetheonethatminimizesthetotallengthofthespurs showhowto determinetheoptimallocationinlineartime problems largestinumbersinsortedordergivenasetofnnumbers wewishto ndtheilargestinsortedorderusingacomparison basedalgorithm findthealgorithmthatimplementseachofthefol lowingmethodswiththebestasymptoticworst caserunningtime andanalyzethe runningtimesofthealgorithmsintermsofnandi sortthenumbers andlisttheilargest buildamax priorityqueuefromthenumbers andcallextract maxitimes useanorder statisticalgorithmto ndtheithlargestnumber partitionaroundthatnumber andsorttheilargestnumbers problemsforchapter weightedmedianforndistinctelementsx xnwithpositiveweightsw wnsuchthatpnid wid theweighted lower medianistheelementxksatisfyingxxi xkwi andxxi xkwi forexample iftheelementsare andeachele mentequalsitsweight thatis widxiforid thenthemedianis buttheweightedmedianis arguethatthemedianofx xnistheweightedmedianofthexiwithweightswid nforid showhowtocomputetheweightedmedianofnelementsino nlgn worst casetimeusingsorting showhowtocomputetheweightedmedianin worst casetimeusingalinear timemedianalgorithmsuchasselectfromsection thepost celocationproblemisde nedasfollows wearegivennpointsp pnwithassociatedweightsw wewishto ndapointp notnecessarilyoneoftheinputpoints thatminimizesthesumpnid wid whered isthedistancebetweenpointsaandb arguethattheweightedmedianisabestsolutionforthe dimensionalpost celocationproblem inwhichpointsaresimplyrealnumbersandthedis tancebetweenpointsaandbisd djabj findthebestsolutionforthe dimensionalpost celocationproblem inwhichthepointsare coordinatepairsandthedistancebetweenpointsad andbd isthemanhattandistancegivenbyd djx jcjy smallorderstatisticsweshowedthattheworst casenumbert ofcomparisonsusedbyselecttoselecttheithorderstatisticfromnnumberssatis est buttheconstanthiddenbythe notationisratherlarge wheniissmallrelativeton wecanimplementadifferentprocedurethatusesselectasasubroutinebutmakesfewercomparisonsintheworstcase chapter mediansandorderstatisticsa describeanalgorithmthatusesui comparisonsto ndtheithsmallestofnelements whereui ifin ccui otherwise hint beginwithbn cdisjointpairwisecomparisons andrecurseonthesetcontainingthesmallerelementfromeachpair showthat ifi thenui dnco showthatifiisaconstantlessthann thenui dnco lgn showthatifidn kfork thenui dnco lgk alternativeanalysisofrandomizedselectioninthisproblem weuseindicatorrandomvariablestoanalyzetherandomized selectprocedureinamannerakintoouranalysisofrandomized quicksortinsection asinthequicksortanalysis weassumethatallelementsaredistinct andwerenametheelementsoftheinputarrayaas iistheithsmallestelement thecallrandomized returns letxijkdif iiscomparedwith jsometimeduringtheexecutionofthealgorithmto giveanexactexpressionfore xijk hint yourexpressionmayhavediffer entvalues dependingonthevaluesofi andk letxkdenotethetotalnumberofcomparisonsbetweenelementsofarrayawhen nding showthate kxid nxjdk jic cnxjdkc jkc xid kic showthate concludethat assumingallelementsofarrayaaredistinct randomized selectrunsinexpectedtimeo notesforchapter chapternotestheworst caselinear timemedian ndingalgorithmwasdevisedbyblum floyd pratt rivest andtarjan thefastrandomizedversionisduetohoare floydandrivest havedevelopedanimprovedrandomizedversionthatparti tionsaroundanelementrecursivelyselectedfromasmallsampleoftheelements itisstillunknownexactlyhowmanycomparisonsareneededtodeterminethemedian bentandjohn gavealowerboundof ncomparisonsformedian nding andsch onhage paterson andpippenger gaveanupperboundof dorandzwickhaveimprovedonbothofthesebounds theirupperbound isslightlylessthan andtheirlowerbound forasmallpositiveconstant therebyimprovingslightlyonrelatedworkbydoretal paterson describessomeoftheseresultsalongwithotherrelatedwork iiidatastructures introductionsetsareasfundamentaltocomputerscienceastheyaretomathematics whereasmathematicalsetsareunchanging thesetsmanipulatedbyalgorithmscangrow shrink orotherwisechangeovertime wecallsuchsetsdynamic thenext vechapterspresentsomebasictechniquesforrepresenting nitedynamicsetsand manipulatingthemonacomputer algorithmsmayrequireseveraldifferenttypesofoperationstobeperformedonsets forexample manyalgorithmsneedonlytheabilitytoinsertelementsinto deleteelementsfrom andtestmembershipinaset wecalladynamicsetthat supportstheseoperationsadictionary otheralgorithmsrequiremorecomplicatedoperations forexample min priorityqueues whichchapter introducedinthe contextoftheheapdatastructure supporttheoperationsofinsertinganelement intoandextractingthesmallestelementfromaset thebestwaytoimplementadynamicsetdependsupontheoperationsthatmustbesupported elementsofadynamicsetinatypicalimplementationofadynamicset eachelementisrepresentedbyanobjectwhoseattributescanbeexaminedandmanipulatedifwehaveapointertotheobject discussestheimplementationofobjectsandpointersinprogrammingenvironmentsthatdonotcontainthemasbasicdatatypes somekindsofdynamicsetsassumethatoneoftheobject sattributesisanidentifyingkey ifthekeysarealldifferent wecanthinkofthedynamicsetasbeingasetofkeyvalues theobjectmaycontainsatellitedata whicharecarriedaroundinotherobjectattributesbutareotherwiseunusedbythesetimplementation itmay partiiidatastructuresalsohaveattributesthataremanipulatedbythesetoperations theseattributesmaycontaindataorpointerstootherobjectsintheset somedynamicsetspresupposethatthekeysaredrawnfromatotallyorderedset suchastherealnumbers orthesetofallwordsundertheusualalphabetic ordering atotalorderingallowsustode netheminimumelementoftheset ortospeakofthenextelementlargerthanagivenelementinaset operationsondynamicsetsoperationsonadynamicsetcanbegroupedintotwocategories queries whichsimplyreturninformationabouttheset andmodifyingoperations whichchangetheset hereisalistoftypicaloperations anyspeci capplicationwillusually requireonlyafewofthesetobeimplemented aquerythat givenasetsandakeyvaluek returnsapointerxtoanelementinssuchthatx keydk ornilifnosuchelementbelongstos insert amodifyingoperationthataugmentsthesetswiththeelementpointedtobyx weusuallyassumethatanyattributesinelementxneededbythesetimplementationhavealreadybeeninitialized delete amodifyingoperationthat givenapointerxtoanelementinthesets movesxfroms notethatthisoperationtakesapointertoanelementx notakeyvalue minimum aqueryonatotallyorderedsetsthatreturnsapointertotheelementofswiththesmallestkey maximum aqueryonatotallyorderedsetsthatreturnsapointertotheelementofswiththelargestkey successor aquerythat givenanelementxwhosekeyisfromatotallyorderedsets returnsapointertothenextlargerelementins ornilifxisthemaximumelement predecessor aquerythat givenanelementxwhosekeyisfromatotallyorderedsets returnsapointertothenextsmallerelementins ornilifxistheminimumelement partiiidatastructures insomesituations wecanextendthequeriessuccessorandpredecessorsothattheyapplytosetswithnondistinctkeys forasetonnkeys thenormalpresumptionisthatacalltominimumfollowedbyn callstosuccessorenumeratestheelementsinthesetinsortedorder weusuallymeasurethetimetakentoexecuteasetoperationintermsofthesizeoftheset forexample chapter describesadatastructurethatcansupportany oftheoperationslistedaboveonasetofsizenintimeo lgn overviewofpartiiichapters describeseveraldatastructuresthatwecanusetoimplementdynamicsets weshallusemanyoftheselatertoconstructef cientalgorithms foravarietyofproblems wealreadysawanotherimportantdatastructure theheap inchapter chapter presentstheessentialsofworkingwithsimpledatastructuressuchasstacks queues linkedlists androotedtrees italsoshowshowtoimplement objectsandpointersinprogrammingenvironmentsthatdonotsupportthemas primitives ifyouhavetakenanintroductoryprogrammingcourse thenmuchof thismaterialshouldbefamiliartoyou chapter introduceshashtables whichsupportthedictionaryoperationsin sert delete andsearch intheworstcase hashingrequires timetoper formasearchoperation buttheexpectedtimeforhash tableoperationsiso theanalysisofhashingreliesonprobability butmostofthechapterrequiresno backgroundinthesubject binarysearchtrees whicharecoveredinchapter supportallthedynamic setoperationslistedabove intheworstcase eachoperationtakes timeonatreewithnelements butonarandomlybuiltbinarysearchtree theexpectedtimeforeachoperationiso lgn binarysearchtreesserveasthebasisformanyotherdatastructures chapter introducesred blacktrees whichareavariantofbinarysearchtrees unlikeordinarybinarysearchtrees blacktreesareguaranteedtoperformwell operationstakeo lgn timeintheworstcase ared blacktreeisabalancedsearchtree chapter inpartvpresentsanotherkindofbalancedsearchtree calleda althoughthemechanicsofred blacktreesaresomewhatintricate youcan gleanmostoftheirpropertiesfromthechapterwithoutstudyingthemechanicsin detail nevertheless youprobablywill ndwalkingthroughthecodetobequite instructive inchapter weshowhowtoaugmentred blacktreestosupportoperationsotherthanthebasiconeslistedabove weaugmentthemsothatwecan dynamicallymaintainorderstatisticsforasetofkeys weaugmentthemin adifferentwaytomaintainintervalsofrealnumbers elementarydatastructuresinthischapter weexaminetherepresentationofdynamicsetsbysimpledatastruc turesthatusepointers althoughwecanconstructmanycomplexdatastructures usingpointers wepresentonlytherudimentaryones stacks queues linkedlists androotedtrees wealsoshowwaystosynthesizeobjectsandpointersfromar rays stacksandqueuesstacksandqueuesaredynamicsetsinwhichtheelementremovedfromtheset bythedeleteoperationisprespeci inastack theelementdeletedfromthesetistheonemostrecentlyinserted thestackimplementsalast rst orlifo policy similarly inaqueue theelementdeletedisalwaystheonethathasbeeninthesetforthelongesttime thequeueimplementsa rst rst orfifo policy thereareseveralef cientwaystoimplementstacksandqueuesonacomputer inthissectionweshowhowtouseasimplearraytoimplement stackstheinsertoperationonastackisoftencalledpush andthedeleteopera tion whichdoesnottakeanelementargument isoftencalledpop thesenamesareallusionstophysicalstacks suchasthespring loadedstacksofplatesused incafeterias theorderinwhichplatesarepoppedfromthestackisthereverse oftheorderinwhichtheywerepushedontothestack sinceonlythetopplateis accessible asfigure shows wecanimplementastackofatmostnelementswithanarrays thearrayhasanattributes topthatindexesthemostrecently stacksandqueues topd topd topd anarrayimplementationofastacks stackelementsappearonlyinthelightlyshadedpositions stackshas elements thetopelementis stacksafterthecallspush andpush stacksafterthecallpop hasreturnedtheelement whichistheonemostrecentlypushed althoughelement stillappearsinthearray itisnolongerinthestack thetopiselement insertedelement thestackconsistsofelementss wheres istheelementatthebottomofthestackands topistheelementatthetop whens topd thestackcontainsnoelementsandisempty wecantesttoseewhetherthestackisemptybyqueryoperationstack empty ifweattempttopopanemptystack wesaythestackunder ows whichisnormallyanerror ifs topexceedsn thestackover ows inourpseudocodeimplementation wedon tworryaboutstackover wecanimplementeachofthestackoperationswithjustafewlinesofcode stack empty ifs returntrue elsereturnfalsepush topds topc topdxpop ifstack empty error elses topds returns topcfigure showstheeffectsofthemodifyingoperationspushandpop eachofthethreestackoperationstakeso chapter elementarydatastructures headd headd taild taild taild headd aqueueimplementedusinganarrayq queueelementsappearonlyinthelightlyshadedpositions thequeuehas elements inlocationsq thecon gurationofthequeueafterthecallsenqueue enqueue andenqueue thecon gurationofthequeueafterthecalldequeue returnsthekeyvalue formerlyattheheadofthequeue thenewheadhaskey queueswecalltheinsertoperationonaqueueenqueue andwecallthedeleteoperationdequeue likethestackoperationpop dequeuetakesnoelementar gument thefifopropertyofaqueuecausesittooperatelikealineofcustomers waitingtopayacashier thequeuehasaheadandatail whenanelementisen queued ittakesitsplaceatthetailofthequeue justasanewlyarrivingcustomer takesaplaceattheendoftheline theelementdequeuedisalwaystheoneat theheadofthequeue likethecustomerattheheadofthelinewhohaswaitedthe longest showsonewaytoimplementaqueueofatmostn elementsusinganarrayq thequeuehasanattributeq headthatindexes orpointsto itshead theattributeq tailindexesthenextlocationatwhichanewlyarriv ingelementwillbeinsertedintothequeue theelementsinthequeueresidein locationsq headc wherewe wraparound inthesensethatlocation immediatelyfollowslocationninacircularorder whenq headdq thequeueisempty initially wehaveq headdq taild ifweattempttodequeueanelementfromanemptyqueue thequeueunder ows stacksandqueues whenq headdq tailc thequeueisfull andifweattempttoenqueueanelement thenthequeueover ows inourproceduresenqueueanddequeue wehaveomittedtheerrorcheckingforunder owandover asksyoutosupplycodethatchecks forthesetwoerrorconditions thepseudocodeassumesthatndq enqueue taildx ifq taild elseq taildq tailc dequeue xdq ifq headd elseq headdq headc returnxfigure showstheeffectsoftheenqueueanddequeueoperations eachoperationtakeso exercises usingfigure asamodel illustratetheresultofeachoperationinthesequencepush pop andpop onaninitiallyemptystacksstoredinarrays explainhowtoimplementtwostacksinonearraya insuchawaythatneitherstackover owsunlessthetotalnumberofelementsinbothstackstogetherisn thepushandpopoperationsshouldrunino usingfigure asamodel illustratetheresultofeachoperationinthesequenceenqueue enqueue enqueue dequeue enqueue anddequeue onaninitiallyemptyqueueqstoredinarrayq rewriteenqueueanddequeuetodetectunder owandover owofaqueue chapter elementarydatastructures whereasastackallowsinsertionanddeletionofelementsatonlyoneend anda queueallowsinsertionatoneendanddeletionattheotherend adeque endedqueue allowsinsertionanddeletionatbothends writefouro timeprocedurestoinsertelementsintoanddeleteelementsfrombothendsofadeque implementedbyanarray showhowtoimplementaqueueusingtwostacks analyzetherunningtimeofthequeueoperations showhowtoimplementastackusingtwoqueues analyzetherunningtimeofthe stackoperations linkedlistsalinkedlistisadatastructureinwhichtheobjectsarearrangedinalinearorder unlikeanarray however inwhichthelinearorderisdeterminedbythearrayindices theorderinalinkedlistisdeterminedbyapointerineachobject linked listsprovideasimple exiblerepresentationfordynamicsets supporting notnecessarilyef ciently alltheoperationslistedonpage asshowninfigure eachelementofadoublylinkedlistlisanobjectwithanattributekeyandtwootherpointerattributes nextandpre theobjectmayalsocontainothersatellitedata givenanelementxinthelist nextpointstoitssuccessorinthelinkedlist andx prepointstoitspredecessor ifx prednil theelementxhasnopredecessorandisthereforethe rstelement orhead ofthelist ifx nextdnil theelementxhasnosuccessorandisthereforethelastelement ortail ofthelist anattributel headpointstothe rstelementofthelist ifl headdnil thelistisempty alistmayhaveoneofseveralforms itmaybeeithersinglylinkedordoublylinked itmaybesortedornot anditmaybecircularornot ifalistissinglylinked weomittheprepointerineachelement ifalistissorted thelinearorderofthelistcorrespondstothelinearorderofkeysstoredinelementsofthelist theminimumelementisthentheheadofthelist andthemaximumelementisthetail ifthelistisunsorted theelementscanappearinanyorder inacircularlist theprepointeroftheheadofthelistpointstothetail andthenextpointerofthetailofthelistpointstothehead wecanthinkofacircularlistasaringof linkedlists prevkeynext headl headl headfigure adoublylinkedlistlrepresentingthedynamicsetf eachelementinthelistisanobjectwithattributesforthekeyandpointers shownbyarrows tothenextandpreviousobjects thenextattributeofthetailandthepreattributeoftheheadarenil indicatedbyadiagonalslash theattributel headpointstothehead followingtheexecutionoflist insert wherex keyd thelinkedlisthasanewobjectwithkey asthenewhead thisnewobjectpointstotheoldheadwithkey theresultofthesubsequentcalllist delete wherexpointstotheobjectwithkey elements intheremainderofthissection weassumethatthelistswithwhichweareworkingareunsortedanddoublylinked searchingalinkedlisttheprocedurelist ndsthe rstelementwithkeykinlistlbyasimplelinearsearch returningapointertothiselement ifnoobjectwith keykappearsinthelist thentheprocedurereturnsnil forthelinkedlistinfigure thecalllist returnsapointertothethirdelement andthecalllist returnsnil xdl whilex nilandx xdx returnxtosearchalistofnobjects thelist searchproceduretakes timeintheworstcase sinceitmayhavetosearchtheentirelist insertingintoalinkedlistgivenanelementxwhosekeyattributehasalreadybeenset thelist insertprocedure splices xontothefrontofthelinkedlist asshowninfigure chapter elementarydatastructureslist insert nextdl ifl nil predx headdx prednil recallthatourattributenotationcancascade sothatl predenotesthepreattributeoftheobjectthatl headpointsto therunningtimeforlist insertonalistofnelementsiso deletingfromalinkedlisttheprocedurelist deleteremovesanelementxfromalinkedlistl itmustbegivenapointertox anditthen splices xoutofthelistbyupdatingpointers ifwewishtodeleteanelementwithagivenkey wemust rstcalllist searchtoretrieveapointertotheelement delete ifx pre nil prenextdx elsel headdx ifx nil predx prefigure showshowanelementisdeletedfromalinkedlist deleterunsino butifwewishtodeleteanelementwithagivenkey timeisrequiredintheworstcasebecausewemust rstcalllist searchto ndtheelement sentinelsthecodeforlist deletewouldbesimplerifwecouldignoretheboundaryconditionsattheheadandtailofthelist delete prenextdx predx preasentinelisadummyobjectthatallowsustosimplifyboundaryconditions forexample supposethatweprovidewithlistlanobjectl nilthatrepresentsnil linkedlists nill nill nill nilfigure acircular doublylinkedlistwithasentinel thesentinell nilappearsbetweentheheadandtail theattributel headisnolongerneeded sincewecanaccesstheheadofthelistbyl nil anemptylist thelinkedlistfromfigure withkey attheheadandkey atthetail thelistafterexecutinglist insert wherex keyd thenewobjectbecomestheheadofthelist thelistafterdeletingtheobjectwithkey thenewtailistheobjectwithkey buthasalltheattributesoftheotherobjectsinthelist whereverwehavearef erencetonilinlistcode wereplaceitbyareferencetothesentinell nil asshowninfigure thischangeturnsaregulardoublylinkedlistintoacircu lar doublylinkedlistwithasentinel inwhichthesentinell nilliesbetweentheheadandtail theattributel nil nextpointstotheheadofthelist andl nil prepointstothetail similarly boththenextattributeofthetailandthepreat tributeoftheheadpointtol nil sincel nil nextpointstothehead wecaneliminatetheattributel headaltogether replacingreferencestoitbyreferencestol nil showsthatanemptylistconsistsofjustthesentinel andbothl nil nextandl nil prepointtol nil thecodeforlist searchremainsthesameasbefore butwiththereferencestonilandl headchangedasspeci edabove xdl nil whilex nilandx xdx returnxweusethetwo lineprocedurelist delete frombeforetodeleteanelementfromthelist thefollowingprocedureinsertsanelementintothelist chapter elementarydatastructureslist insert nextdl nil nil predx nil nextdx predl nilfigure showstheeffectsoflist insert andlist delete onasamplelist sentinelsrarelyreducetheasymptotictimeboundsofdatastructureoperations buttheycanreduceconstantfactors thegainfromusingsentinelswithinloops isusuallyamatterofclarityofcoderatherthanspeed thelinkedlistcode becomessimplerwhenweusesentinels butwesaveonlyo timeinthelist insert andlist delete procedures inothersituations however theuseofsentinelshelpstotightenthecodeinaloop thusreducingthecoef cientof norn intherunningtime weshouldusesentinelsjudiciously whentherearemanysmalllists theextrastorageusedbytheirsentinelscanrepresentsigni cantwastedmemory inthis weusesentinelsonlywhentheytrulysimplifythecode exercises canyouimplementthedynamic setoperationinsertonasinglylinkedlistino howaboutdelete implementastackusingasinglylinkedlistl theoperationspushandpopshouldstilltakeo implementaqueuebyasinglylinkedlistl theoperationsenqueueandde queueshouldstilltakeo aswritten eachloopiterationinthelist procedurerequirestwotests oneforx nilandoneforx showhowtoeliminatethetestforx nilineachiteration implementthedictionaryoperationsinsert delete andsearchusingsinglylinked circularlists whataretherunningtimesofyourprocedures implementingpointersandobjects thedynamic setoperationuniontakestwodisjointsetss ands asinput anditreturnsasetsds consistingofalltheelementsofs ands thesetss ands areusuallydestroyedbytheoperation showhowtosupportunionino timeusingasuitablelistdatastructure givea timenonrecursiveprocedurethatreversesasinglylinkedlistofnelements theprocedureshouldusenomorethanconstantstoragebeyondthatneededforthelistitself explainhowtoimplementdoublylinkedlistsusingonlyonepointervaluex npperiteminsteadoftheusualtwo nextandpre assumethatallpointervaluescanbeinterpretedask bitintegers andde nex nptobex npdx nextxorx pre thek exclusive ofx nextandx pre thevaluenilisrepresentedby besuretodescribewhatinformationyouneedtoaccesstheheadofthelist howtoimplementthesearch insert anddeleteoperationsonsuchalist alsoshowhowtoreversesuchalistino implementingpointersandobjectshowdoweimplementpointersandobjectsinlanguagesthatdonotprovidethem inthissection weshallseetwowaysofimplementinglinkeddatastructureswith outanexplicitpointerdatatype weshallsynthesizeobjectsandpointersfrom arraysandarrayindices amultiple arrayrepresentationofobjectswecanrepresentacollectionofobjectsthathavethesameattributesbyusinganarrayforeachattribute asanexample showshowwecanimplement thelinkedlistoffigure withthreearrays thearraykeyholdsthevaluesofthekeyscurrentlyinthedynamicset andthepointersresideinthearraysnextandpre foragivenarrayindexx thearrayentrieskey andprexrepresentanobjectinthelinkedlist underthisinterpretation apointerxissimplyacommonindexintothekey andprearrays infigure theobjectwithkey followstheobjectwithkey inthelinkedlist infigure appearsinkey andkey appearsinkey andsonext andpre althoughtheconstantnilappearsinthenext chapter elementarydatastructures keynextprevl thelinkedlistoffigure representedbythearrayskey andpre eachverticalsliceofthearraysrepresentsasingleobject storedpointerscorrespondtothearrayindicesshownatthetop thearrowsshowhowtointerpretthem lightlyshadedobjectpositionscontainlistelements thevariablelkeepstheindexofthehead attributeofthetailandthepreattributeofthehead weusuallyuseaninteger suchas thatcannotpossiblyrepresentanactualindexintothearrays avariablelholdstheindexoftheheadofthelist asingle arrayrepresentationofobjectsthewordsinacomputermemoryaretypicallyaddressedbyintegersfrom tom wheremisasuitablylargeinteger inmanyprogramminglanguages anobjectoccupiesacontiguoussetoflocationsinthecomputermemory apointer issimplytheaddressofthe rstmemorylocationoftheobject andwecanaddress othermemorylocationswithintheobjectbyaddinganoffsettothepointer wecanusethesamestrategyforimplementingobjectsinprogrammingenvi ronmentsthatdonotprovideexplicitpointerdatatypes forexample showshowtouseasinglearrayatostorethelinkedlistfromfigures anobjectoccupiesacontiguoussubarraya eachattributeoftheobjectcorrespondstoanoffsetintherangefrom tokj andapointertotheobjectistheindexj infigure theoffsetscorrespondingtokey andpreare respectively toreadthevalueofi pre givenapointeri weaddthevalueiofthepointertotheoffset thusreadinga thesingle arrayrepresentationis exibleinthatitpermitsobjectsofdifferentlengthstobestoredinthesamearray theproblemofmanagingsuchaheteroge neouscollectionofobjectsismoredif cultthantheproblemofmanagingahomo geneouscollection whereallobjectshavethesameattributes sincemostofthedatastructuresweshallconsiderarecomposedofhomogeneouselements itwillbesuf cientforourpurposestousethemultiple arrayrepresentationofobjects implementingpointersandobjects prevnextkey thelinkedlistoffigures representedinasinglearraya eachlistelementisanobjectthatoccupiesacontiguoussubarrayoflength withinthearray thethree attributeskey andprecorrespondtotheoffsets respectively withineachobject apointertoanobjectistheindexofthe rstelementoftheobject objectscontaininglistelementsarelightlyshaded andarrowsshowthelistordering allocatingandfreeingobjectstoinsertakeyintoadynamicsetrepresentedbyadoublylinkedlist wemustal locateapointertoacurrentlyunusedobjectinthelinked listrepresentation itisusefultomanagethestorageofobjectsnotcurrentlyusedinthelinked representationsothatonecanbeallocated insomesystems agarbagecollec torisresponsiblefordeterminingwhichobjectsareunused manyapplications however aresimpleenoughthattheycanbearresponsibilityforreturninganun usedobjecttoastoragemanager weshallnowexploretheproblemofallocatingandfreeing ordeallocating homogeneousobjectsusingtheexampleofadoubly linkedlistrepresentedbymultiplearrays supposethatthearraysinthemultiple arrayrepresentationhavelengthmandthatatsomemomentthedynamicsetcontainsnmelements thennobjectsrepresentelementscurrentlyinthedynamicset andtheremainingmnobjectsarefree thefreeobjectsareavailabletorepresentelementsinsertedintothedynamicsetinthefuture wekeepthefreeobjectsinasinglylinkedlist whichwecallthefreelist thefreelistusesonlythenextarray whichstoresthenextpointerswithinthelist theheadofthefreelistisheldintheglobalvariablefree whenthedynamicsetrepresentedbylinkedlistlisnonempty thefreelistmaybeintertwinedwithlistl asshowninfigure notethateachobjectintherepresentationiseitherinlistlorinthefreelist butnotinboth thefreelistactslikeastack thenextobjectallocatedisthelastonefreed wecanusealistimplementationofthestackoperationspushandpoptoimplementtheproceduresforallocatingandfreeingobjects respectively weassumethatthe globalvariablefreeusedinthefollowingprocedurespointstothe rstelementofthefreelist chapter elementarydatastructures keynextprevl keynextprevl keynextprevl theeffectoftheallocate objectandfree objectprocedures thelistoffigure lightlyshaded andafreelist heavilyshaded arrowsshowthefree liststructure theresultofcallingallocate whichreturnsindex settingkeyto andcallinglist insert thenewfree listheadisobject whichhadbeennextonthefreelist afterexecutinglist delete wecallfree becomesthenewfree listhead withobject followingitonthefreelist allocate iffree nil error outofspace elsexdfree freedx returnxfree nextdfree freedxthefreelistinitiallycontainsallnunallocatedobjects oncethefreelisthasbeenexhausted runningtheallocate objectproceduresignalsanerror wecanevenserviceseverallinkedlistswithjustasinglefreelist showstwo linkedlistsandafreelistintertwinedthroughkey andprearrays thetwoproceduresrunino whichmakesthemquitepractical wecanmodifythemtoworkforanyhomogeneouscollectionofobjectsbylettingany oneoftheattributesintheobjectactlikeanextattributeinthefreelist implementingpointersandobjects nextkeyprevfree twolinkedlists lightlyshaded andl heavilyshaded andafreelist ened intertwined exercises drawapictureofthesequenceh istoredasadoublylinkedlistusingthemultiple arrayrepresentation dothesameforthesingle arrayrepresen tation writetheproceduresallocate objectandfree objectforahomogeneouscollectionofobjectsimplementedbythesingle arrayrepresentation whydon tweneedtosetorresetthepreattributesofobjectsintheimplementa tionoftheallocate objectandfree objectprocedures itisoftendesirabletokeepallelementsofadoublylinkedlistcompactinstorage using forexample rstmindexlocationsinthemultiple arrayrepresentation thisisthecaseinapaged virtual memorycomputingenvironment explain howtoimplementtheproceduresallocate objectandfree objectsothattherepresentationiscompact assumethattherearenopointerstoelementsofthe linkedlistoutsidethelistitself hint usethearrayimplementationofastack letlbeadoublylinkedlistoflengthnstoredinarrayskey pre andnextoflengthm supposethatthesearraysaremanagedbyallocate objectandfree objectproceduresthatkeepadoublylinkedfreelistf supposefurtherthatofthemitems exactlynareonlistlandmnareonthefreelist writeaprocedurecompactify giventhelistlandthefreelistf movestheitemsinlsothattheyoccupyarraypositions nandadjuststhefreelistfsothatitremainscorrect occupyingarraypositionsnc therunningtimeofyourprocedureshouldbe anditshoulduseonlyaconstantamountofextraspace arguethatyourprocedureiscorrect chapter elementarydatastructures representingrootedtreesthemethodsforrepresentinglistsgivenintheprevioussectionextendtoanyho mogeneousdatastructure inthissection welookspeci callyattheproblemof representingrootedtreesbylinkeddatastructures rstlookatbinarytrees andthenwepresentamethodforrootedtreesinwhichnodescanhaveanarbitrarynumberofchildren werepresenteachnodeofatreebyanobject aswithlinkedlists weassumethateachnodecontainsakeyattribute theremainingattributesofinterestarepointerstoothernodes andtheyvaryaccordingtothetypeoftree binarytreesfigure showshowweusetheattributesp andrighttostorepointerstotheparent leftchild andrightchildofeachnodeinabinarytreet ifx pdnil thenxistheroot ifnodexhasnoleftchild thenx leftdnil andsimilarlyfortherightchild therootoftheentiretreetispointedtobytheattributet ift rootdnil thenthetreeisempty rootedtreeswithunboundedbranchingwecanextendtheschemeforrepresentingabinarytreetoanyclassoftreesinwhichthenumberofchildrenofeachnodeisatmostsomeconstantk wereplacetheleftandrightattributesbychild childk thisschemenolongerworkswhenthenumberofchildrenofanodeisunbounded sincewedonotknow howmanyattributes arraysinthemultiple arrayrepresentation toallocateinad vance moreover evenifthenumberofchildrenkisboundedbyalargeconstantbutmostnodeshaveasmallnumberofchildren wemaywastealotofmemory fortunately thereisacleverschemetorepresenttreeswitharbitrarynumbersofchildren ithastheadvantageofusingonlyo spaceforanyn noderootedtree theleft siblingrepresentationappearsinfigure asbefore eachnodecontainsaparentpointerp andt rootpointstotherootoftreet insteadofhavingapointertoeachofitschildren however eachnodexhasonlytwopointers childpointstotheleftmostchildofnodex siblingpointstothesiblingofximmediatelytoitsright ifnodexhasnochildren thenx childdnil andifnodexistherightmostchildofitsparent thenx siblingdnil representingrootedtrees rootfigure therepresentationofabinarytreet eachnodexhastheattributesx lowerleft andx lowerright thekeyattributesarenotshown rootfigure theleft siblingrepresentationofatreet eachnodexhasattributesx lowerleft andx sibling lowerright thekeyattributesarenotshown chapter elementarydatastructuresothertreerepresentationswesometimesrepresentrootedtreesinotherways inchapter forexample werepresentedaheap whichisbasedonacompletebinarytree byasinglearray plustheindexofthelastnodeintheheap thetreesthatappearinchapter traversedonlytowardtheroot andsoonlytheparentpointersarepresent arenopointerstochildren manyotherschemesarepossible whichschemeis bestdependsontheapplication exercises drawthebinarytreerootedatindex thatisrepresentedbythefollowingat tributes indexkeyleftright nil nil nilnil nilnil nilnil nilnil writeano timerecursiveprocedurethat givenann nodebinarytree printsoutthekeyofeachnodeinthetree writeano timenonrecursiveprocedurethat givenann nodebinarytree printsoutthekeyofeachnodeinthetree useastackasanauxiliarydatastructure writeano timeprocedurethatprintsallthekeysofanarbitraryrootedtreewithnnodes wherethetreeisstoredusingtheleft siblingrepresenta tion writeano timenonrecursiveprocedurethat givenann nodebinarytree printsoutthekeyofeachnode usenomorethanconstantextraspaceoutside problemsforchapter ofthetreeitselfanddonotmodifythetree eventemporarily duringtheproce dure theleft siblingrepresentationofanarbitraryrootedtreeusesthree pointersineachnode sibling andparent fromanynode itsparentcanbereachedandidenti edinconstanttimeandallitschildrencanbe reachedandidenti edintimelinearinthenumberofchildren showhowtouse onlytwopointersandonebooleanvalueineachnodesothattheparentofanodeorallofitschildrencanbereachedandidenti edintimelinearinthenumberofchildren problems comparisonsamonglists foreachofthefourtypesoflistsinthefollowingtable whatistheasymptotic worst caserunningtimeforeachdynamic setoperationlisted unsorted sorted unsorted sorted singlysinglydoublydoublylinkedlinkedlinkedlinkedsearch insert delete successor predecessor minimum maximum chapter elementarydatastructures mergeableheapsusinglinkedlistsamergeableheapsupportsthefollowingoperations heap whichcreatesanemptymergeableheap insert minimum extract min andunion showhowtoimplementmergeableheapsusinglinkedlistsineachofthefollowing cases trytomakeeachoperationasef cientaspossible analyzetherunning timeofeachoperationintermsofthesizeofthedynamicset beingoperatedon listsaresorted listsareunsorted listsareunsorted anddynamicsetstobemergedaredisjoint searchingasortedcompactlistexercise askedhowwemightmaintainann elementlistcompactlyinthe rstnpositionsofanarray weshallassumethatallkeysaredistinctandthatthecompactlistisalsosorted thatis iforallid nsuchthatnext nil wewillalsoassumethatwehaveavariablelthatcontainstheindexofthe rstelementonthelist undertheseassumptions youwillshow thatwecanusethefollowingrandomizedalgorithmtosearchthelistino expectedtime compact idl whilei nilandkey jdrandom ifkey jandkey idj ifkey returni idnext ifi nilorkey returnnil elsereturniifweignorelines oftheprocedure wehaveanordinaryalgorithmforsearchingasortedlinkedlist inwhichindexipointstoeachpositionofthelistin becausewehavede nedamergeableheaptosupportminimumandextract min wecanalsorefertoitasamergeablemin heap alternatively ifitsupportedmaximumandextract max itwouldbeamergeablemax heap problemsforchapter thesearchterminatesoncetheindexi fallsoff theendofthelistoroncekey inthelattercase ifkey idk clearlywehavefoundakeywiththevaluek however thenwewillnever ndakeywiththevaluek andsoterminatingthesearchwastherightthingtodo lines attempttoskipaheadtoarandomlychosenpositionj suchaskipbene tsusifkey jislargerthankey iandnolargerthank insuchacase jmarksapositioninthelistthatiwouldhavetoreachduringanordinarylistsearch becausethelistiscompact weknowthatanychoiceofjbetween andnindexessomeobjectinthelistratherthanaslotonthefreelist insteadofanalyzingtheperformanceofcompact searchdirectly weshallanalyzearelatedalgorithm compact whichexecutestwoseparateloops thisalgorithmtakesanadditionalparametertwhichdeterminesanupperboundonthenumberofiterationsofthe rstloop compact idl forqd tot jdrandom ifkey jandkey idj ifkey returni whilei nilandkey idnext ifi nilorkey returnnil elsereturnitocomparetheexecutionofthealgorithmscompact andcompact assumethatthesequenceofintegersre turnedbythecallsofrandom isthesameforbothalgorithms supposethatcompact takestiterationsofthewhileloopoflines arguethatcompact returnsthesameanswerandthatthetotalnumberofiterationsofboththeforandwhileloopswithincompact isatleastt inthecallcompact letxtbetherandomvariablethatdescribesthedistanceinthelinkedlist thatis throughthechainofnextpointers frompositionitothedesiredkeykaftertiterationsoftheforloopoflines haveoccurred chapter elementarydatastructuresb arguethattheexpectedrunningtimeofcompact iso tce showthate xtpnrd hint useequation showthatpn rtntc provethate xtn showthatcompact runsino tcn expectedtime concludethatcompact searchrunsino expectedtime whydoweassumethatallkeysaredistinctincompact guethatrandomskipsdonotnecessarilyhelpasymptoticallywhenthelistcon tainsrepeatedkeyvalues chapternotesaho hopcroft andullman andknuth areexcellentreferencesforele mentarydatastructures manyothertextscoverbothbasicdatastructuresandtheir implementationinaparticularprogramminglanguage examplesofthesetypesoftextbooksincludegoodrichandtamassia shaffer andweiss gonnet providesexperimentaldataontheperfor manceofmanydata structureoperations theoriginofstacksandqueuesasdatastructuresincomputerscienceisun sincecorrespondingnotionsalreadyexistedinmathematicsandpaper based businesspracticesbeforetheintroductionofdigitalcomputers knuth cites turingforthedevelopmentofstacksforsubroutinelinkagein pointer baseddatastructuresalsoseemtobeafolkinvention accordingtoknuth pointerswereapparentlyusedinearlycomputerswithdrummemories languagedevelopedbyg hopperin representedalgebraicformulas asbinarytrees knuthcreditstheipl iilanguage developedin bya newell shaw andh simon forrecognizingtheimportanceandpromotingthe useofpointers theiripl iiilanguage developedin includedexplicitstack operations hashtablesmanyapplicationsrequireadynamicsetthatsupportsonlythedictionaryopera tionsinsert anddelete forexample acompilerthattranslatesaprogramminglanguagemaintainsasymboltable inwhichthekeysofelements arearbitrarycharacterstringscorrespondingtoidenti ersinthelanguage ahash tableisaneffectivedatastructureforimplementingdictionaries althoughsearch ingforanelementinahashtablecantakeaslongassearchingforanelementina linkedlist timeintheworstcase inpractice hashingperformsextremelywell underreasonableassumptions theaveragetimetosearchforanelementinahashtableiso ahashtablegeneralizesthesimplernotionofanordinaryarray directlyad dressingintoanordinaryarraymakeseffectiveuseofourabilitytoexamineanarbitrarypositioninanarrayino discussesdirectaddress inginmoredetail wecantakeadvantageofdirectaddressingwhenwecanafford toallocateanarraythathasonepositionforeverypossiblekey whenthenumberofkeysactuallystoredissmallrelativetothetotalnumberofpossiblekeys hashtablesbecomeaneffectivealternativetodirectlyaddressingan array sinceahashtabletypicallyusesanarrayofsizeproportionaltothenumber ofkeysactuallystored insteadofusingthekeyasanarrayindexdirectly thearray indexiscomputedfromthekey presentsthemainideas focusingon chaining asawaytohandle collisions inwhichmorethanonekeymapstothe samearrayindex describeshowwecancomputearrayindicesfrom keysusinghashfunctions wepresentandanalyzeseveralvariationsonthebasic theme looksat openaddressing whichisanotherwaytodealwith collisions thebottomlineisthathashingisanextremelyeffectiveandpractical technique thebasicdictionaryoperationsrequireonlyo timeontheaverage explainshow perfecthashing cansupportsearchesino worst casetime whenthesetofkeysbeingstoredisstatic thatis whenthesetofkeysneverchangesoncestored chapter hashtables addresstablesdirectaddressingisasimpletechniquethatworkswellwhentheuniverseuofkeysisreasonablysmall supposethatanapplicationneedsadynamicsetinwhich eachelementhasakeydrawnfromtheuniverseudf wheremisnottoolarge weshallassumethatnotwoelementshavethesamekey torepresentthedynamicset weuseanarray ordirect addresstable denotedbyt inwhicheachposition orslot correspondstoakeyintheuni verseu illustratestheapproach slotkpointstoanelementinthesetwithkeyk ifthesetcontainsnoelementwithkeyk thent kdnil thedictionaryoperationsaretrivialtoimplement address returnt kdirect address insert keydxdirect address delete keydnileachoftheseoperationstakesonlyo universe keys actualkeys keysatellite data howtoimplementadynamicsetbyadirect addresstablet eachkeyintheuniverseudf gcorrespondstoanindexinthetable thesetkdf gofactualkeysdeterminestheslotsinthetablethatcontainpointerstoelements theotherslots heavilyshaded containnil addresstables forsomeapplications thedirect addresstableitselfcanholdtheelementsinthedynamicset thatis ratherthanstoringanelement skeyandsatellitedatainan objectexternaltothedirect addresstable withapointerfromaslotinthetableto theobject wecanstoretheobjectintheslotitself thussavingspace wewould useaspecialkeywithinanobjecttoindicateanemptyslot moreover itisoften unnecessarytostorethekeyoftheobject sinceifwehavetheindexofanobject inthetable wehaveitskey ifkeysarenotstored however wemusthavesome waytotellwhethertheslotisempty exercises supposethatadynamicsetsisrepresentedbyadirect addresstabletoflengthm describeaprocedurethat ndsthemaximumelementofs whatistheworst caseperformanceofyourprocedure abitvectorissimplyanarrayofbits abitvectoroflengthmtakesmuchlessspacethananarrayofmpointers describehowtouseabitvectortorepresentadynamicsetofdistinctelementswithnosatellitedata dictionaryoperationsshouldrunino suggesthowtoimplementadirect addresstableinwhichthekeysofstoredel ementsdonotneedtobedistinctandtheelementscanhavesatellitedata threedictionaryoperations insert delete andsearch shouldrunino don tforgetthatdeletetakesasanargumentapointertoanobjecttobedeleted notakey wewishtoimplementadictionarybyusingdirectaddressingonahugearray atthestart thearrayentriesmaycontaingarbage andinitializingtheentirearray isimpracticalbecauseofitssize describeaschemeforimplementingadirect addressdictionaryonahugearray eachstoredobjectshoulduseo theoperationssearch insert anddeleteshouldtakeo timeeach andinitializingthedatastructureshouldtakeo hint useanadditionalarray treatedsomewhatlikeastackwhosesizeisthenumberofkeysactuallystoredinthedictionary tohelpdeterminewhetheragivenentryinthehugearrayisvalidor not chapter hashtables hashtablesthedownsideofdirectaddressingisobvious iftheuniverseuislarge storingatabletofsizejujmaybeimpractical orevenimpossible giventhememoryavailableonatypicalcomputer furthermore thesetkofkeysactuallystoredmaybesosmallrelativetouthatmostofthespaceallocatedfortwouldbewasted whenthesetkofkeysstoredinadictionaryismuchsmallerthantheuni verseuofallpossiblekeys ahashtablerequiresmuchlessstoragethanadirect addresstable speci cally wecanreducethestoragerequirementto jkj whilewemaintainthebene tthatsearchingforanelementinthehashtablestillrequires onlyo thecatchisthatthisboundisfortheaverage casetime whereasfordirectaddressingitholdsfortheworst casetime withdirectaddressing anelementwithkeykisstoredinslotk withhashing thiselementisstoredinsloth thatis weuseahashfunctionhtocomputetheslotfromthekeyk hmapstheuniverseuofkeysintotheslotsofahashtablet hwu wherethesizemofthehashtableistypicallymuchlessthanjuj wesaythatanelementwithkeykhashestosloth wealsosaythath isthehashvalueofkeyk illustratesthebasicidea thehashfunctionreducestherangeofarrayindicesandhencethesizeofthearray insteadofasizeofjuj thearraycanhavesizem universe keys actualkeys usingahashfunctionhtomapkeystohash tableslots becausekeysk andk maptothesameslot theycollide hashtables universe keys actualkeys collisionresolutionbychaining eachhash tableslott jcontainsalinkedlistofallthekeyswhosehashvalueisj forexample andh thelinkedlistcanbeeithersinglyordoublylinked weshowitasdoublylinkedbecausedeletionis fasterthatway thereisonehitch twokeysmayhashtothesameslot wecallthissituationacollision fortunately wehaveeffectivetechniquesforresolvingthecon ictcreatedbycollisions ofcourse theidealsolutionwouldbetoavoidcollisionsaltogether wemighttrytoachievethisgoalbychoosingasuitablehashfunctionh oneideaistomakehappeartobe random thusavoidingcollisionsoratleastminimizingtheirnumber theveryterm tohash evokingimagesofrandommixingand chopping capturesthespiritofthisapproach ofcourse ahashfunctionhmustbedeterministicinthatagiveninputkshouldalwaysproducethesameoutputh becausejuj however theremustbeatleasttwokeysthathavethesamehashvalue avoidingcollisionsaltogetheristhereforeimpossible whileawell designed random lookinghashfunctioncanminimizethenumberofcollisions westillneedamethodforresolvingthecollisionsthatdooccur theremainderofthissectionpresentsthesimplestcollisionresolutiontech nique calledchaining introducesanalternativemethodforresolving collisions calledopenaddressing collisionresolutionbychaininginchaining weplacealltheelementsthathashtothesameslotintothesamelinkedlist asfigure shows slotjcontainsapointertotheheadofthelistofallstoredelementsthathashtoj iftherearenosuchelements slotjcontainsnil chapter hashtablesthedictionaryoperationsonahashtabletareeasytoimplementwhencolli sionsareresolvedbychaining chained hash insert insertxattheheadoflistt keychained hash searchforanelementwithkeykinlistt chained hash delete deletexfromthelistt keytheworst caserunningtimeforinsertioniso theinsertionprocedureisfastinpartbecauseitassumesthattheelementxbeinginsertedisnotalreadypresentinthetable ifnecessary wecancheckthisassumption atadditionalcost bysearch ingforanelementwhosekeyisx keybeforeweinsert forsearching theworst caserunningtimeisproportionaltothelengthofthelist weshallanalyzethis operationmorecloselybelow wecandeleteanelementino timeifthelistsaredoublylinked asfigure depicts notethatchained hash deletetakesasinputanelementxandnotitskeyk sothatwedon thavetosearchforx rst ifthehashtablesupportsdeletion thenitslinkedlistsshouldbedoublylinked sothatwecandeleteanitemquickly ifthelistswereonlysinglylinked thentodeleteelementx wewould rsthaveto ndxinthelistt keysothatwecouldupdatethenextattributeofx spredecessor withsinglylinkedlists bothdeletionandsearchingwouldhavethesameasymptoticrunningtimes analysisofhashingwithchaininghowwelldoeshashingwithchainingperform inparticular howlongdoesittaketosearchforanelementwithagivenkey givenahashtabletwithmslotsthatstoresnelements wede netheloadfactor fortasn thatis theaveragenumberofelementsstoredinachain ouranalysiswillbeintermsof whichcanbelessthan equalto orgreaterthan theworst casebehaviorofhashingwithchainingisterrible allnkeyshashtothesameslot creatingalistoflengthn theworst casetimeforsearchingisthus plusthetimetocomputethehashfunction nobetterthanifweusedonelinkedlistforalltheelements clearly wedonotusehashtablesfortheir worst caseperformance perfecthashing describedinsection doesprovide goodworst caseperformancewhenthesetofkeysisstatic however theaverage caseperformanceofhashingdependsonhowwellthehashfunc tionhdistributesthesetofkeystobestoredamongthemslots ontheaverage hashtables discussestheseissues butfornowweshallassumethatanygivenelementisequallylikelytohashintoanyofthemslots independentlyofwhereanyotherelementhashashedto wecallthistheassumptionofsimpleuniformhashing forjd letusdenotethelengthofthelistt jbynj sothatndn ccnm andtheexpectedvalueofnjise njd weassumethato timesuf cestocomputethehashvalueh sothatthetimerequiredtosearchforanelementwithkeykdependslinearlyonthelengthnh ofthelistt settingasidetheo timerequiredtocomputethehashfunctionandtoaccesssloth letusconsidertheexpectednumberofelementsexaminedbythesearchalgorithm thatis thenumberofelementsinthe listt thatthealgorithmcheckstoseewhetheranyhaveakeyequaltok weshallconsidertwocases inthe rst thesearchisunsuccessful noelementinthe tablehaskeyk inthesecond thesearchsuccessfully ndsanelementwithkeyk theorem inahashtableinwhichcollisionsareresolvedbychaining anunsuccessfulsearch takesaverage casetime undertheassumptionofsimpleuniformhashing proofundertheassumptionofsimpleuniformhashing anykeyknotalreadystoredinthetableisequallylikelytohashtoanyofthemslots theexpectedtimetosearchunsuccessfullyforakeykistheexpectedtimetosearchtotheendoflistt whichhasexpectedlengthe theexpectednumberofelementsexaminedinanunsuccessfulsearchis andthetotaltimerequired includingthetimeforcomputingh thesituationforasuccessfulsearchisslightlydifferent sinceeachlistisnotequallylikelytobesearched instead theprobabilitythatalistissearchedispro portionaltothenumberofelementsitcontains nonetheless theexpectedsearch timestillturnsouttobe theorem inahashtableinwhichcollisionsareresolvedbychaining asuccessfulsearch takesaverage casetime undertheassumptionofsimpleuniformhashing proofweassumethattheelementbeingsearchedforisequallylikelytobeanyofthenelementsstoredinthetable thenumberofelementsexaminedduringasuccessfulsearchforanelementxisonemorethanthenumberofelementsthat chapter hashtablesappearbeforexinx slist becausenewelementsareplacedatthefrontofthelist elementsbeforexinthelistwereallinsertedafterxwasinserted ndtheexpectednumberofelementsexamined wetaketheaverage overthenele mentsxinthetable plustheexpectednumberofelementsaddedtox slistafterxwasaddedtothelist letxidenotetheithelementinsertedintotheta ble forid andletkidxi forkeyskiandkj wede netheindicatorrandomvariablexijdifh undertheassumptionofsim pleuniformhashing wehaveprfh andsobylemma xijd theexpectednumberofelementsexaminedinasuccessfulsearchise nnxid cnxjdic xij nnxid cnxjdic xij bylinearityofexpectation nnxid cnxjdic nmnxid nxid nnxid nmn byequation thetotaltimerequiredforasuccessfulsearch includingthetimeforcom putingthehashfunction whatdoesthisanalysismean ifthenumberofhash tableslotsisatleastpro portionaltothenumberofelementsinthetable wehavendo con sequently mdo mdo searchingtakesconstanttimeonaverage sinceinsertiontakeso worst casetimeanddeletiontakeso worst casetimewhenthelistsaredoublylinked wecansupportalldictionary operationsino timeonaverage hashtables exercises supposeweuseahashfunctionhtohashndistinctkeysintoanarraytoflengthm assumingsimpleuniformhashing whatistheexpectednumberofcollisions moreprecisely whatistheexpectedcardinalityofffk lgwk landh demonstratewhathappenswhenweinsertthekeys intoahashtablewithcollisionsresolvedbychaining letthetablehave slots andletthehashfunctionbeh dkmod professormarleyhypothesizesthathecanobtainsubstantialperformancegainsby modifyingthechainingschemetokeepeachlistinsortedorder howdoesthepro fessor smodi cationaffecttherunningtimeforsuccessfulsearches unsuccessful searches insertions anddeletions suggesthowtoallocateanddeallocatestorageforelementswithinthehashtable itselfbylinkingallunusedslotsintoafreelist assumethatoneslotcanstore agandeitheroneelementplusapointerortwopointers alldictionaryandfree listoperationsshouldrunino expectedtime doesthefreelistneedtobedoublylinked ordoesasinglylinkedfreelistsuf supposethatwearestoringasetofnkeysintoahashtableofsizem showthatifthekeysaredrawnfromauniverseuwithjuj thenuhasasubsetofsizenconsistingofkeysthatallhashtothesameslot sothattheworst casesearching timeforhashingwithchainingis supposewehavestorednkeysinahashtableofsizem withcollisionsresolvedbychaining andthatweknowthelengthofeachchain includingthelengthlofthelongestchain describeaprocedurethatselectsakeyuniformlyatrandomfrom amongthekeysinthehashtableandreturnsitinexpectedtimeo chapter hashtables hashfunctionsinthissection wediscusssomeissuesregardingthedesignofgoodhashfunctionsandthenpresentthreeschemesfortheircreation twooftheschemes hashingby divisionandhashingbymultiplication areheuristicinnature whereasthethird scheme universalhashing usesrandomizationtoprovideprovablygoodperfor mance whatmakesagoodhashfunction agoodhashfunctionsatis approximately theassumptionofsimpleuniformhashing eachkeyisequallylikelytohashtoanyofthemslots independentlyofwhereanyotherkeyhashashedto unfortunately wetypicallyhavenowayto checkthiscondition sincewerarelyknowtheprobabilitydistributionfromwhich thekeysaredrawn moreover thekeysmightnotbedrawnindependently occasionallywedoknowthedistribution forexample ifweknowthatthekeysarerandomrealnumberskindependentlyanduniformlydistributedintherange thenthehashfunctionh dbkmcsatis estheconditionofsimpleuniformhashing inpractice wecanoftenemployheuristictechniquestocreateahashfunctionthatperformswell qualitativeinformationaboutthedistributionofkeysmaybeusefulinthisdesignprocess forexample consideracompiler ssymboltable inwhichthekeysarecharacterstringsrepresentingidenti ersinaprogram closelyrelatedsymbols suchasptandpts oftenoccurinthesameprogram agoodhashfunctionwouldminimizethechancethatsuchvariantshashtothesameslot agoodapproachderivesthehashvalueinawaythatweexpecttobeindepen dentofanypatternsthatmightexistinthedata forexample divisionmethod discussedinsection computesthehashvalueastheremainderwhenthe keyisdividedbyaspeci edprimenumber thismethodfrequentlygivesgood results assumingthatwechooseaprimenumberthatisunrelatedtoanypatterns inthedistributionofkeys finally wenotethatsomeapplicationsofhashfunctionsmightrequirestrongerpropertiesthanareprovidedbysimpleuniformhashing forexample wemight wantkeysthatare insomesensetoyieldhashvaluesthatarefarapart thispropertyisespeciallydesirablewhenweareusinglinearprobing nedin universalhashing describedinsection oftenprovidesthedesiredproperties hashfunctions interpretingkeysasnaturalnumbersmosthashfunctionsassumethattheuniverseofkeysisthesetndf gofnaturalnumbers ifthekeysarenotnaturalnumbers ndawaytointerpretthemasnaturalnumbers forexample wecaninterpretacharacterstring asanintegerexpressedinsuitableradixnotation wemightinterpretthe identi erptasthepairofdecimalintegers sincepd andtd intheasciicharacterset expressedasaradix integer ptbecomes inthecontextofagivenapplication wecanusuallydevisesomesuchmethodforinterpretingeachkeyasa possiblylarge inwhatfollows weassumethatthekeysarenaturalnumbers thedivisionmethodinthedivisionmethodforcreatinghashfunctions wemapakeykintooneofmslotsbytakingtheremainderofkdividedbym thatis thehashfunctionish dkmodm forexample ifthehashtablehassizemd andthekeyiskd thenh sinceitrequiresonlyasingledivisionoperation hashingbydivisionisquitefast whenusingthedivisionmethod weusuallyavoidcertainvaluesofm forexample mshouldnotbeapowerof sinceifmd thenh isjusttheplowest orderbitsofk unlessweknowthatalllow orderp bitpatternsareequallylikely wearebetteroffdesigningthehashfunctiontodependonallthebitsofthe asexercise asksyoutoshow choosingmd whenkisacharacterstringinterpretedinradix pmaybeapoorchoice becausepermutingthecharactersofkdoesnotchangeitshashvalue aprimenottooclosetoanexactpowerof isoftenagoodchoiceform forexample supposewewishtoallocateahashtable withcollisionsresolvedby chaining toholdroughlynd characterstrings whereacharacterhas bits wedon tmindexamininganaverageof elementsinanunsuccessfulsearch andsoweallocateahashtableofsizemd wecouldchoosemd becauseitisaprimenear butnotnearanypowerof treatingeachkeykasaninteger ourhashfunctionwouldbeh dkmod themultiplicationmethodthemultiplicationmethodforcreatinghashfunctionsoperatesintwosteps wemultiplythekeykbyaconstantaintherange andextractthe chapter hashtables sda wwbitskr extractpbitsfigure themultiplicationmethodofhashing thew bitrepresentationofthekeykismulti pliedbythew bitvaluesda thephighest orderbitsofthelowerw bithalfoftheproductformthedesiredhashvalueh fractionalpartofka wemultiplythisvaluebymandtakethe ooroftheresult inshort thehashfunctionish dbm kamod kamod meansthefractionalpartofka thatis kabkac anadvantageofthemultiplicationmethodisthatthevalueofmisnotcritical wetypicallychooseittobeapowerof pforsomeintegerp sincewecantheneasilyimplementthefunctiononmostcomputersasfollows supposethatthewordsizeofthemachineiswbitsandthatk tsintoasingleword werestrictatobeafractionoftheforms wheresisanintegerintherange referringtofigure rstmultiplykbythew bitintegersda theresultisa bitvaluer wcr wherer isthehigh orderwordoftheproductandr isthelow orderwordoftheproduct thedesiredp bithashvalueconsistsofthepmostsigni cantbitsofr althoughthismethodworkswithanyvalueoftheconstanta itworksbetterwithsomevaluesthanwithothers theoptimalchoicedependsonthecharacter isticsofthedatabeinghashed knuth suggeststhata islikelytoworkreasonablywell asanexample supposewehavekd andwd adaptingknuth ssuggestion wechooseatobethefractionoftheforms thatisclosestto sothatad thenksd andsor andr mostsigni cantbitsofr yieldthevalueh hashfunctions universalhashingifamaliciousadversarychoosesthekeystobehashedbysome xedhashfunction thentheadversarycanchoosenkeysthatallhashtothesameslot yieldinganav erageretrievaltimeof xedhashfunctionisvulnerabletosuchterribleworst casebehavior theonlyeffectivewaytoimprovethesituationistochoose thehashfunctionrandomlyinawaythatisindependentofthekeysthatareactuallygoingtobestored thisapproach calleduniversalhashing canyieldprovablygoodperformanceonaverage nomatterwhichkeystheadversarychooses inuniversalhashing atthebeginningofexecutionweselectthehashfunctionatrandomfromacarefullydesignedclassoffunctions asinthecaseofquick sort randomizationguaranteesthatnosingleinputwillalwaysevokeworst behavior becausewerandomlyselectthehashfunction thealgorithmcanbe havedifferentlyoneachexecution evenforthesameinput guaranteeinggood average caseperformanceforanyinput returningtotheexampleofacompiler ssymboltable ndthattheprogrammer schoiceofidenti erscannotnowcauseconsistentlypoorhashingperformance poorperformanceoccursonlywhenthe compilerchoosesarandomhashfunctionthatcausesthesetofidenti erstohash poorly buttheprobabilityofthissituationoccurringissmallandisthesamefor anysetofidenti ersofthesamesize lethbea nitecollectionofhashfunctionsthatmapagivenuniverseuofkeysintotherangef suchacollectionissaidtobeuniversalifforeachpairofdistinctkeysk thenumberofhashfunctionsh hforwhichh isatmostjhj inotherwords withahashfunctionrandomlychosenfromh thechanceofacollisionbetweendistinctkeyskandlisnomorethanthechance mofacollisionifh andh wererandomlyandindependentlychosenfromthesetf thefollowingtheoremshowsthatauniversalclassofhashfunctionsgivesgoodaverage casebehavior recallthatnidenotesthelengthoflistt theorem supposethatahashfunctionhischosenrandomlyfromauniversalcollectionofhashfunctionsandhasbeenusedtohashnkeysintoatabletofsizem ingchainingtoresolvecollisions ifkeykisnotinthetable thentheexpectedlengthe ofthelistthatkeykhashestoisatmosttheloadfactor ifkeykisinthetable thentheexpectedlengthe ofthelistcontainingkeykisatmost proofwenotethattheexpectationshereareoverthechoiceofthehashfunc tionanddonotdependonanyassumptionsaboutthedistributionofthekeys foreachpairkandlofdistinctkeys netheindicatorrandomvariable chapter hashtablesxkldifh sincebythede nitionofauniversalcollectionofhashfunctions asinglepairofkeyscollideswithprobabilityatmost wehaveprfh bylemma therefore wehavee xkl nextwede foreachkeyk therandomvariableykthatequalsthenumberofkeysotherthankthathashtothesameslotask sothatykdxl kxkl thuswehavee ykde kxkl dxl xkl bylinearityofexpectation theremainderoftheproofdependsonwhetherkeykisintablet ifk thennh dykandjflwl tandl kgjdn thuse ykn ifk thenbecausekeykappearsinlistt andthecountykdoesnotincludekeyk wehavenh dykc andjflwl tandl kgjdn thuse ykc thefollowingcorollarysaysuniversalhashingprovidesthedesiredpayoff ithasnowbecomeimpossibleforanadversarytopickasequenceofoperationsthat forcestheworst caserunningtime bycleverlyrandomizingthechoiceofhash functionatruntime weguaranteethatwecanprocesseverysequenceofoperations withagoodaverage caserunningtime corollary usinguniversalhashingandcollisionresolutionbychaininginaninitiallyempty tablewithmslots ittakesexpectedtime tohandleanysequenceofninsert anddeleteoperationscontainingo insertoperations proofsincethenumberofinsertionsiso wehavendo andso theinsertanddeleteoperationstakeconstanttimeand bythe orem theexpectedtimeforeachsearchoperationiso bylinearityof hashfunctions expectation therefore theexpectedtimefortheentiresequenceofnoperationsiso sinceeachoperationtakes boundfollows designingauniversalclassofhashfunctionsitisquiteeasytodesignauniversalclassofhashfunctions asalittlenumbertheorywillhelpusprove youmaywishtoconsultchapter rstifyouare unfamiliarwithnumbertheory webeginbychoosingaprimenumberplargeenoughsothateverypossiblekeykisintherange inclusive letzpdenotethesetf andletzpdenotethesetf sincepisprime wecansolveequa tionsmodulopwiththemethodsgiveninchapter becauseweassumethatthesizeoftheuniverseofkeysisgreaterthanthenumberofslotsinthehashtable wehavep wenowde nethehashfunctionhabforanya zpandanyb zpusingalineartransformationfollowedbyreductionsmodulopandthenmodulom hab akcb modp modm forexample withpd andmd wehaveh thefamilyofallsuchhashfunctionsishpmd habwa zpandb eachhashfunctionhabmapszptozm thisclassofhashfunctionshasthenicepropertythatthesizemoftheoutputrangeisarbitrary notnecessarilyprime afeaturewhichweshalluseinsection sincewehavep choicesforaandpchoicesforb thecollectionhpmcontainsp hashfunctions theorem theclasshpmofhashfunctionsde nedbyequations isuniversal proofconsidertwodistinctkeyskandlfromzp sothatk foragivenhashfunctionhabweletrd akcb modp alcb modp rstnotethatr observethatrsa modp itfollowsthatr sbecausepisprimeandbothaand arenonzeromodulop andsotheirproductmustalsobenonzeromodulopbytheorem therefore whencomputinganyhab hpm distinctinputskandlmaptodistinct chapter hashtablesvaluesrandsmodulop therearenocollisionsyetatthe modplevel moreover eachofthepossiblep choicesforthepair witha yieldsadifferentresultingpair withr sincewecansolveforaandbgivenrands modp modp rak modp modp denotestheuniquemultiplicativeinverse modulop ofkl sincethereareonlyp possiblepairs withr thereisaone onecorrespondencebetweenpairs witha andpairs withr foranygivenpairofinputskandl ifwepick uniformlyatrandomfromzpzp theresultingpair isequallylikelytobeanypairofdistinctvaluesmodulop therefore theprobabilitythatdistinctkeyskandlcollideisequaltotheprob abilitythatrs modm whenrandsarerandomlychosenasdistinctvaluesmodulop foragivenvalueofr ofthep possibleremainingvaluesfors thenumberofvaluesssuchthats randsr modm isatmostdp pcm byinequality theprobabilitythatscollideswithrwhenreducedmodulomisatmost therefore foranypairofdistinctvaluesk prfhab dhab sothathpmisindeeduniversal exercises supposewewishtosearchalinkedlistoflengthn whereeachelementcontainsakeykalongwithahashvalueh eachkeyisalongcharacterstring howmightwetakeadvantageofthehashvalueswhensearchingthelistforanelement withagivenkey supposethatwehashastringofrcharactersintomslotsbytreatingitasaradix numberandthenusingthedivisionmethod wecaneasilyrepresent thenumbermasa bitcomputerword butthestringofrcharacters treatedasaradix takesmanywords howcanweapplythedivisionmethodto computethehashvalueofthecharacterstringwithoutusingmorethanaconstant numberofwordsofstorageoutsidethestringitself openaddressing consideraversionofthedivisionmethodinwhichh dkmodm wheremd andkisacharacterstringinterpretedinradix showthatifwecanderivestringxfromstringybypermutingitscharacters thenxandyhashtothesamevalue giveanexampleofanapplicationinwhichthispropertywouldbe undesirableinahashfunction considerahashtableofsizemd andacorrespondinghashfunctionh dbm kamod cforad computethelocationstowhichthekeys aremapped neafamilyhofhashfunctionsfroma nitesetutoa nitesetbtobe universalifforallpairsofdistinctelementskandlinu prfh gwheretheprobabilityisoverthechoiceofthehashfunctionhdrawnatrandomfromthefamilyh showthatan universalfamilyofhashfunctionsmusthave jbj juj letubethesetofn tuplesofvaluesdrawnfromzp andletbdzp wherepisprime nethehashfunctionhbwu bforb zponaninputn tupleha ifromuashb xjd ajbj modp andlethdfhbwb zpg arguethathis universalaccordingtothede nitionof universalinexercise hint seeexercise openaddressinginopenaddressing allelementsoccupythehashtableitself thatis eachtableentrycontainseitheranelementofthedynamicsetornil whensearchingforanelement wesystematicallyexaminetableslotsuntileitherwe ndthedesired elementorwehaveascertainedthattheelementisnotinthetable nolistsand chapter hashtablesnoelementsarestoredoutsidethetable unlikeinchaining inopenad dressing thehashtablecan llup sothatnofurtherinsertionscanbemade consequenceisthattheloadfactor canneverexceed ofcourse wecouldstorethelinkedlistsforchaininginsidethehashtable intheotherwiseunusedhash tableslots seeexercise buttheadvantageof openaddressingisthatitavoidspointersaltogether insteadoffollowingpointers wecomputethesequenceofslotstobeexamined theextramemoryfreedbynotstoringpointersprovidesthehashtablewithalargernumberofslotsforthesameamountofmemory potentiallyyieldingfewercollisionsandfasterretrieval toperforminsertionusingopenaddressing wesuccessivelyexamine orprobe thehashtableuntilwe ndanemptyslotinwhichtoputthekey insteadofbeing xedintheorder whichrequires searchtime thesequenceofpositionsprobeddependsuponthekeybeinginserted todeterminewhichslotstoprobe weextendthehashfunctiontoincludetheprobenumber startingfrom asasecondinput thehashfunctionbecomeshwuf withopenaddressing werequirethatforeverykeyk theprobesequencehh ibeapermutationofh sothateveryhash tablepositioniseventuallyconsideredasaslotforanewkeyasthetable llsup inthefollowingpseudocode weassumethattheelementsinthehashtabletarekeyswithnosatelliteinfor mation thekeykisidenticaltotheelementcontainingkeyk eachslotcontainseitherakeyornil iftheslotisempty thehash insertproceduretakesasinputahashtabletandakeyk iteitherreturnstheslotnumberwhereitstoreskeykor agsanerrorbecausethehashtableisalreadyfull hash insert jdh ift nil jdk returnj elseidic untili error hashtableover thealgorithmforsearchingforkeykprobesthesamesequenceofslotsthattheinsertionalgorithmexaminedwhenkeykwasinserted therefore thesearchcan openaddressing terminate unsuccessfully whenit ndsanemptyslot sincekwouldhavebeeninsertedthereandnotlaterinitsprobesequence thisargumentassumesthatkeys arenotdeletedfromthehashtable theprocedurehash searchtakesasinputahashtabletandakeyk returningjifit ndsthatslotjcontainskeyk ornilifkeykisnotpresentintablet hash jdh ift returnj idic untilt nilori returnnildeletionfromanopen addresshashtableisdif cult whenwedeleteakeyfromsloti wecannotsimplymarkthatslotasemptybystoringnilinit ifwedid wemightbeunabletoretrieveanykeykduringwhoseinsertionwehadprobedslotiandfounditoccupied wecansolvethisproblembymarkingtheslot storinginitthespecialvaluedeletedinsteadofnil wewouldthenmodifytheprocedurehash inserttotreatsuchaslotasifitwereemptysothatwecaninsertanewkeythere wedonotneedtomodifyhash sinceitwillpassoverdeletedvalueswhilesearching whenweusethespecialvaluedeleted however searchtimesnolongerdependontheloadfactor andforthisreasonchainingismorecommonlyselectedasacollisionresolutiontechniquewhenkeys mustbedeleted inouranalysis weassumeuniformhashing theprobesequenceofeachkeyisequallylikelytobeanyofthem permutationsofh uni formhashinggeneralizesthenotionofsimpleuniformhashingde nedearliertoahashfunctionthatproducesnotjustasinglenumber butawholeprobesequence trueuniformhashingisdif culttoimplement however andinpracticesuitableapproximations suchasdoublehashing nedbelow areused wewillexaminethreecommonlyusedtechniquestocomputetheprobese quencesrequiredforopenaddressing linearprobing quadraticprobing anddou blehashing thesetechniquesallguaranteethathh iisapermutationofh iforeachkeyk noneofthesetechniquesful llstheassumptionofuniformhashing however sincenoneofthemiscapableof generatingmorethanm differentprobesequences insteadofthem thatuniformhashingrequires doublehashinghasthegreatestnumberofprobesequencesand asonemightexpect seemstogivethebestresults chapter hashtableslinearprobinggivenanordinaryhashfunctionh whichwerefertoasanauxiliaryhashfunction themethodoflinearprobingusesthehashfunctionh modmforid givenkeyk rstprobet theslotgivenbytheauxiliaryhashfunction wenextprobeslott andsoonuptoslott thenwewraparoundtoslotst untilwe nallyprobeslott becausetheinitialprobedeterminestheentireprobesequence thereareonlymdistinctprobesequences linearprobingiseasytoimplement butitsuffersfromaproblemknownasprimaryclustering longrunsofoccupiedslotsbuildup increasingtheaveragesearchtime clustersarisebecauseanemptyslotprecededbyifullslotsgets llednextwithprobability longrunsofoccupiedslotstendtogetlonger andtheaveragesearchtimeincreases quadraticprobingquadraticprobingusesahashfunctionoftheformh icc modm whereh isanauxiliaryhashfunction andc arepositiveauxiliaryconstants andid theinitialpositionprobedist laterpositionsprobedareoffsetbyamountsthatdependinaquadraticmannerontheprobenum beri thismethodworksmuchbetterthanlinearprobing buttomakefulluseofthehashtable thevaluesofc andmareconstrained showsonewaytoselecttheseparameters iftwokeyshavethesameinitialprobe thentheirprobesequencesarethesame sinceh pliesh thispropertyleadstoamilderformofclustering calledsecondaryclustering asinlinearprobing theinitialprobedeterminestheentiresequence andsoonlymdistinctprobesequencesareused doublehashingdoublehashingoffersoneofthebestmethodsavailableforopenaddressingbe causethepermutationsproducedhavemanyofthecharacteristicsofrandomly chosenpermutations doublehashingusesahashfunctionoftheformh cih modm wherebothh andh areauxiliaryhashfunctions theinitialprobegoestoposi tiont successiveprobepositionsareoffsetfrompreviouspositionsbythe openaddressing insertionbydoublehashing herewehaveahashtableofsize withh dkmod andh kmod mod mod weinsertthekey intoemptyslot afterexaminingslots ndingthemtobeoccupied amounth modulom unlikethecaseoflinearorquadraticprobing theprobesequenceheredependsintwowaysuponthekeyk sincetheinitialprobeposition theoffset orboth mayvary givesanexampleofinsertion bydoublehashing thevalueh mustberelativelyprimetothehash tablesizemfortheentirehashtabletobesearched seeexercise aconvenientwaytoensurethis conditionistoletmbeapowerof andtodesignh sothatitalwaysproducesanoddnumber anotherwayistoletmbeprimeandtodesignh sothatitalwaysreturnsapositiveintegerlessthanm forexample wecouldchoosemprimeandleth dkmodm kmodm wherem ischosentobeslightlylessthanm forexample ifkd andm wehaveh andh sothatwe rstprobeposition andthenweexamineevery thslot modulom untilwe ndthekeyorhaveexaminedeveryslot whenmisprimeorapowerof doublehashingimprovesoverlinearorqua draticprobinginthat probesequencesareused ratherthan sinceeachpossible pairyieldsadistinctprobesequence asaresult chapter hashtablessuchvaluesofm theperformanceofdoublehashingappearstobeveryclosetotheperformanceofthe ideal schemeofuniformhashing althoughvaluesofmotherthanprimesorpowersof couldinprinciplebeusedwithdoublehashing inpracticeitbecomesmoredif culttoef cientlygen erateh inawaythatensuresthatitisrelativelyprimetom inpartbecausetherelativedensitym mofsuchnumbersmaybesmall seeequation analysisofopen addresshashingasinouranalysisofchaining weexpressouranalysisofopenaddressingintermsoftheloadfactor mofthehashtable ofcourse withopenaddressing atmostoneelementoccupieseachslot andthusnm whichimplies weassumethatweareusinguniformhashing inthisidealizedscheme theprobesequencehh iusedtoinsertorsearchforeachkeykisequallylikelytobeanypermutationofh ofcourse agivenkeyhasaunique xedprobesequenceassociatedwithit whatwemean hereisthat consideringtheprobabilitydistributiononthespaceofkeysandthe operationofthehashfunctiononthekeys eachpossibleprobesequenceisequally likely wenowanalyzetheexpectednumberofprobesforhashingwithopenaddress ingundertheassumptionofuniformhashing beginningwithananalysisofthenumberofprobesmadeinanunsuccessfulsearch theorem givenanopen addresshashtablewithloadfactor theexpectednumberofprobesinanunsuccessfulsearchisatmost assuminguniformhashing proofinanunsuccessfulsearch everyprobebutthelastaccessesanoccupiedslotthatdoesnotcontainthedesiredkey andthelastslotprobedisempty letus netherandomvariablextobethenumberofprobesmadeinanunsuccessfulsearch andletusalsode netheeventai forid tobetheeventthatanithprobeoccursanditistoanoccupiedslot thentheeventfxigistheintersectionofeventsa wewillboundprfxigbyboundingprfa byexercisec prfa gdprfa gprfa gprfa gprfai sincetherearenelementsandmslots prfa gdn forj theprobabilitythatthereisajthprobeanditistoanoccupiedslot giventhatthe rstj probesweretooccupiedslots njc mjc thisprobabilityfollows openaddressing becausewewouldbe ndingoneoftheremaining elementsinoneofthe unexaminedslots andbytheassumptionofuniformhashing theprobabilityistheratioofthesequantities observingthatn mimpliesthat mforalljsuchthat wehaveforallisuchthat prfxigdnmn nic mic nmi weuseequation toboundtheexpectednumberofprobes xid prfxig xid xid thisboundof chasanintuitiveinterpretation wealwaysmakethe rstprobe withprobabilityapproximately rstprobe ndsanoccupiedslot sothatweneedtoprobeasecondtime withprobability approximately rsttwoslotsareoccupiedsothatwemakeathirdprobe andsoon isaconstant theorem predictsthatanunsuccessfulsearchrunsino forexample ifthehashtableishalffull theaveragenumberofprobesinan unsuccessfulsearchisatmost ifitis percentfull theaveragenumberofprobesisatmost theorem givesustheperformanceofthehash insertprocedurealmostimmediately corollary insertinganelementintoanopen addresshashtablewithloadfactor requiresatmost probesonaverage assuminguniformhashing chapter hashtablesproofanelementisinsertedonlyifthereisroominthetable andthus insertingakeyrequiresanunsuccessfulsearchfollowedbyplacingthekeyintothe rstemptyslotfound theexpectednumberofprobesisatmost wehavetodoalittlemoreworktocomputetheexpectednumberofprobesforasuccessfulsearch theorem givenanopen addresshashtablewithloadfactor theexpectednumberofprobesinasuccessfulsearchisatmost assuminguniformhashingandassumingthateachkeyinthetableisequallylikelytobesearchedfor proofasearchforakeykreproducesthesameprobesequenceaswhentheelementwithkeykwasinserted bycorollary ifkwasthe stkeyinsertedintothehashtable theexpectednumberofprobesmadeinasearchforkisatmost averagingoverallnkeysinthehashtablegivesustheexpectednumberofprobesinasuccessfulsearch xid mmidmnn xid mid mxkdmnc zmmn byinequality lnmmnd ifthehashtableishalffull theexpectednumberofprobesinasuccessfulsearchislessthan ifthehashtableis percentfull theexpectednumberofprobesislessthan perfecthashing exercises considerinsertingthekeys intoahashtableoflengthmd usingopenaddressingwiththeauxiliaryhashfunctionh illustratetheresultofinsertingthesekeysusinglinearprobing usingquadraticprobingwithc andc andusingdoublehashingwithh dkandh kmod writepseudocodeforhash deleteasoutlinedinthetext andmodifyhash inserttohandlethespecialvaluedeleted consideranopen addresshashtablewithuniformhashing giveupperbounds ontheexpectednumberofprobesinanunsuccessfulsearchandontheexpected numberofprobesinasuccessfulsearchwhentheloadfactoris andwhenitis supposethatweusedoublehashingtoresolvecollisions thatis weusethehash functionh cih modm showthatifmandh havegreatestcommondivisord forsomekeyk thenanunsuccessfulsearchforkeykexamines thofthehashtablebeforereturningtosloth whendd sothatmandh arerelativelyprime thesearchmayexaminetheentirehashtable hint seechapter consideranopen addresshashtablewithaloadfactor findthenonzerovalue forwhichtheexpectednumberofprobesinanunsuccessfulsearchequalstwice theexpectednumberofprobesinasuccessfulsearch usetheupperboundsgiven bytheorems fortheseexpectednumbersofprobes perfecthashingalthoughhashingisoftenagoodchoiceforitsexcellentaverage caseperfor mance hashingcanalsoprovideexcellentworst caseperformancewhenthesetofkeysisstatic oncethekeysarestoredinthetable thesetofkeysneverchanges someapplicationsnaturallyhavestaticsetsofkeys considerthesetofreserved wordsinaprogramminglanguage orthesetof lenamesonacd rom chapter hashtables usingperfecthashingtostorethesetkdf theouterhashfunctionish akcb modp modm wheread andmd forexample andsokey hashestoslot oftablet asecondaryhashtablesjstoresallkeyshashingtoslotj thesizeofhashtablesjismjdn andtheassociatedhashfunctionishj ajkcbj modp modmj sinceh isstoredinslot ofsecondaryhashtables nocollisionsoccurinanyofthesecondaryhashtables andsosearchingtakesconstanttimeintheworstcase callahashingtechniqueperfecthashingifo memoryaccessesarerequiredtoperformasearchintheworstcase tocreateaperfecthashingscheme weusetwolevelsofhashing withuniversalhashingateachlevel illustratestheapproach rstlevelisessentiallythesameasforhashingwithchaining wehashthenkeysintomslotsusingahashfunctionhcarefullyselectedfromafamilyofuniversalhashfunctions insteadofmakingalinkedlistofthekeyshashingtoslotj however weuseasmallsecondaryhashtablesjwithanassociatedhashfunctionhj bychoosingthehashfunctionshjcarefully wecanguaranteethattherearenocollisionsatthesecondarylevel inordertoguaranteethattherearenocollisionsatthesecondarylevel however wewillneedtoletthesizemjofhashtablesjbethesquareofthenumbernjofkeyshashingtoslotj althoughyoumightthinkthatthequadraticdependenceofmjonnjmayseemlikelytocausetheoverallstoragerequirementtobeexces sive weshallshowthatbychoosingthe rst levelhashfunctionwell wecanlimit theexpectedtotalamountofspaceusedtoo weusehashfunctionschosenfromtheuniversalclassesofhashfunctionsofsection rst levelhashfunctioncomesfromtheclasshpm whereasinsection pisaprimenumbergreaterthananykeyvalue thosekeys perfecthashing hashingtoslotjarere hashedintoasecondaryhashtablesjofsizemjusingahashfunctionhjchosenfromtheclasshp weshallproceedintwosteps weshalldeterminehowtoensurethatthesecondarytableshavenocollisions weshallshowthattheexpected amountofmemoryusedoverall fortheprimaryhashtableandallthesecondary hashtables iso theorem supposethatwestorenkeysinahashtableofsizemdn usingahashfunctionhrandomlychosenfromauniversalclassofhashfunctions theprobabilityis lessthan thatthereareanycollisions prooftherearen pairsofkeysthatmaycollide eachpaircollideswithprob ability mifhischosenatrandomfromauniversalfamilyhofhashfunctions letxbearandomvariablethatcountsthenumberofcollisions whenmdn theexpectednumberofcollisionsise thisanalysisissimilartotheanalysisofthebirthdayparadoxinsection applyingmarkov sinequality prfxtge withtd com pletestheproof inthesituationdescribedintheorem wheremdn itfollowsthatahashfunctionhchosenatrandomfromhismorelikelythannottohavenocollisions giventhesetkofnkeystobehashed rememberthatkisstatic itisthuseasyto ndacollision freehashfunctionhwithafewrandomtrials whennislarge however ahashtableofsizemdn isexcessive therefore weadoptthetwo levelhashingapproach andweusetheapproachoftheorem onlytohashtheentrieswithineachslot weuseanouter rst hash functionhtohashthekeysintomdnslots ifnjkeyshashtoslotj weuseasecondaryhashtablesjofsizemjdn jtoprovidecollision freeconstant timelookup whennjdmjd wedon treallyneedahashfunctionforslotj whenwechooseahashfunctionhab akcb modp modmjforsuchaslot wejustuseadbd chapter hashtableswenowturntotheissueofensuringthattheoverallmemoryusediso sincethesizemjofthejthsecondaryhashtablegrowsquadraticallywiththenumbernjofkeysstored weruntheriskthattheoverallamountofstoragecouldbeexcessive ifthe rst leveltablesizeismdn thentheamountofmemoryusediso fortheprimaryhashtable forthestorageofthesizesmjofthesecondaryhashtables andforthestorageoftheparametersajandbjde ningthesecondaryhashfunctionshjdrawnfromtheclasshp mjofsection exceptwhennjd andweuseadbd thefollowingtheoremandacorollaryprovideaboundontheexpectedcombinedsizesofallthesecondaryhashtables asecondcorollary boundstheprobabilitythatthecombinedsizeofallthesecondaryhashtablesis superlinear actually thatitequalsorexceeds theorem supposethatwestorenkeysinahashtableofsizemdnusingahashfunctionhrandomlychosenfromauniversalclassofhashfunctions wehavee xjd wherenjisthenumberofkeyshashingtoslotj proofwestartwiththefollowingidentity whichholdsforanynonnegativeinte gera dac wehavee xjd xjd njc byequation xjd xjd bylinearityofexpectation dec xjd byequation perfecthashing dnc xjd sincenisnotarandomvariable toevaluatethesummationpm weobservethatitisjustthetotalnumberofpairsofkeysinthehashtablethatcollide bythepropertiesofuniversalhashing theexpectedvalueofthissummationisatmost mdn mdn sincemdn xjd corollary supposethatwestorenkeysinahashtableofsizemdnusingahashfunc tionhrandomlychosenfromauniversalclassofhashfunctions andwesetthesizeofeachsecondaryhashtabletomjdn jforjd theexpectedamountofstoragerequiredforallsecondaryhashtablesinaperfect hashingschemeislessthan proofsincemjdn jforjd theorem givese xjd xjd whichcompletestheproof corollary supposethatwestorenkeysinahashtableofsizemdnusingahashfunctionhrandomlychosenfromauniversalclassofhashfunctions andwesetthesizeofeachsecondaryhashtabletomjdn jforjd theprobabilityislessthan thatthetotalstorageusedforsecondaryhashtablesequalsorexceeds chapter hashtablesproofagainweapplymarkov sinequality prfxtge thistimetoinequality withxdpm mjandtd xjd epm fromcorollary weseethatifwetestafewrandomlychosenhashfunc tionsfromtheuniversalfamily wewillquickly ndonethatusesareasonable amountofstorage exercises supposethatweinsertnkeysintoahashtableofsizemusingopenaddressinganduniformhashing letp betheprobabilitythatnocollisionsoccur showthatp hint seeequation arguethatwhennex ceedspm theprobabilityofavoidingcollisionsgoesrapidlytozero problems longest probeboundforhashingsupposethatweuseanopen addressedhashtableofsizemtostorenm items assuminguniformhashing showthatforid theprobabilityisatmost kthattheithinsertionrequiresstrictlymorethankprobes showthatforid theprobabilityiso thattheithinsertionrequiresmorethan lgnprobes lettherandomvariablexidenotethenumberofprobesrequiredbytheithinser tion youhaveshowninpart thatprfxi lgngdo lettherandomvariablexdmax inxidenotethemaximumnumberofprobesrequiredbyanyoftheninsertions showthatprfx lgngdo showthattheexpectedlengthe xofthelongestprobesequenceiso lgn problemsforchapter slot sizeboundforchainingsupposethatwehaveahashtablewithnslots withcollisionsresolvedbychain ing andsupposethatnkeysareinsertedintothetable eachkeyisequallylikelytobehashedtoeachslot letmbethemaximumnumberofkeysinanyslotafterallthekeyshavebeeninserted yourmissionistoproveano lgn lglgn upperboundone theexpectedvalueofm arguethattheprobabilityqkthatexactlykkeyshashtoaparticularslotisgivenbyqkd nnk letpkbetheprobabilitythatmdk thatis theprobabilitythattheslotcontainingthemostkeyscontainskkeys showthatpknqk usestirling sapproximation equation toshowthatqk showthatthereexistsaconstantc suchthatqk fork dclgn lglgn concludethatpk forkk dclgn lglgn arguethate mprm clgnlglgnncprmclgnlglgnclgnlglgn concludethate mdo lgn lglgn quadraticprobingsupposethatwearegivenakeyktosearchforinahashtablewithpositions andsupposethatwehaveahashfunctionhmappingthekeyspaceintothesetf thesearchschemeisasfollows computethevaluejdh andsetid probeinpositionjforthedesiredkeyk ifyou ndit orifthispositionisempty terminatethesearch setidic ifinowequalsm thetableisfull soterminatethesearch otherwise setjd icj modm andreturntostep assumethatmisapowerof showthatthisschemeisaninstanceofthegeneral quadraticprobing schemebyexhibitingtheappropriateconstantsc andc forequation provethatthisalgorithmexamineseverytablepositionintheworstcase chapter hashtables hashingandauthenticationlethbeaclassofhashfunctionsinwhicheachhashfunctionh hmapstheuniverseuofkeystof wesaythathisk universalif forevery xedsequenceofkdistinctkeyshx iandforanyhchosenatrandomfromh thesequencehh iisequallylikelytobeanyofthemksequencesoflengthkwithelementsdrawnfromf showthatifthefamilyhofhashfunctionsis universal thenitisuniversal supposethattheuniverseuisthesetofn tuplesofvaluesdrawnfromzpdf wherepisprime consideranelementxdhx foranyn tupleadha nethehashfunctionhabyha xjd ajxj modp lethdfhag showthathisuniversal butnot universal hint findakeyforwhichallhashfunctionsinhproducethesamevalue supposethatwemodifyhslightlyfrompart foranya uandforanyb neh xjd ajxjcb modpandh dfh abg arguethath universal hint xedn tuplesx uandy withxi yiforsomei whathappenstoh andh asaiandbrangeoverzp supposethataliceandbobsecretlyagreeonahashfunctionhfroma universalfamilyhofhashfunctions eachh hmapsfromauniverseofkeysutozp wherepisprime later alicesendsamessagemtobobovertheinternet wherem sheauthenticatesthismessagetobobbyalsosendinganauthenticationtagtdh andbobchecksthatthepair hereceivesindeedsatis estdh supposethatanadversaryintercepts enrouteandtriestofoolbobbyreplacingthepair withadifferentpair arguethattheprobabilitythattheadversarysucceedsinfoolingbobintoac cepting isatmost nomatterhowmuchcomputingpowerthead versaryhas andeveniftheadversaryknowsthefamilyhofhashfunctionsused notesforchapter chapternotesknuth andgonnet areexcellentreferencesfortheanalysisofhash ingalgorithms knuthcreditsh luhn forinventinghashtables along withthechainingmethodforresolvingcollisions ataboutthesametime amdahloriginatedtheideaofopenaddressing carterandwegmanintroducedthenotionofuniversalclassesofhashfunctionsin fredman koml andszemer edi developedtheperfecthashingschemeforstaticsetspresentedinsection anextensionoftheirmethodtodynamic sets handlinginsertionsanddeletionsinamortizedexpectedtimeo hasbeengivenbydietzfelbingeretal binarysearchtreesthesearchtreedatastructuresupportsmanydynamic setoperations includingsearch minimum maximum predecessor successor insert anddelete wecanuseasearchtreebothasadictionaryandasapriorityqueue basicoperationsonabinarysearchtreetaketimeproportionaltotheheightofthetree foracompletebinarytreewithnnodes suchoperationsrunin lgn worst casetime ifthetreeisalinearchainofnnodes however thesameoper ationstake worst casetime weshallseeinsection thattheexpectedheightofarandomlybuiltbinarysearchtreeiso lgn sothatbasicdynamic setoperationsonsuchatreetake lgn timeonaverage inpractice wecan talwaysguaranteethatbinarysearchtreesarebuiltran domly butwecandesignvariationsofbinarysearchtreeswithgoodguaranteed worst caseperformanceonbasicoperations chapter presentsonesuchvari ation blacktrees whichhaveheighto lgn chapter introducesb trees whichareparticularlygoodformaintainingdatabasesonsecondary disk storage afterpresentingthebasicpropertiesofbinarysearchtrees thefollowingsec tionsshowhowtowalkabinarysearchtreetoprintitsvaluesinsortedorder tosearchforavalueinabinarysearchtree howto ndtheminimumormaximum howto ndthepredecessororsuccessorofanelement andhowtoinsert intoordeletefromabinarysearchtree thebasicmathematicalpropertiesoftrees appearinappendixb whatisabinarysearchtree abinarysearchtreeisorganized asthenamesuggests inabinarytree asshown infigure wecanrepresentsuchatreebyalinkeddatastructureinwhich eachnodeisanobject inadditiontoakeyandsatellitedata eachnodecontainsattributesleft andpthatpointtothenodescorrespondingtoitsleftchild whatisabinarysearchtree binarysearchtrees foranynodex thekeysintheleftsubtreeofxareatmostx andthekeysintherightsubtreeofxareatleastx differentbinarysearchtreescanrepresentthesamesetofvalues theworst caserunningtimeformostsearch treeoperationsisproportionaltotheheightofthetree abinarysearchtreeon nodeswithheight alessef cientbinarysearchtreewithheight thatcontainsthesamekeys itsrightchild anditsparent respectively ifachildortheparentismissing theappropriateattributecontainsthevaluenil therootnodeistheonlynodeinthetreewhoseparentisnil thekeysinabinarysearchtreearealwaysstoredinsuchawayastosatisfythebinary treeproperty letxbeanodeinabinarysearchtree ifyisanodeintheleftsubtreeofx theny keyx ifyisanodeintherightsubtreeofx theny keyx infigure thekeyoftherootis thekeys initsleftsubtreearenolargerthan andthekeys initsrightsubtreearenosmallerthan thesamepropertyholdsforeverynodeinthetree forexample thekey intheroot sleftchildisnosmallerthanthekey inthatnode sleftsubtreeandnolargerthanthekey intherightsubtree thebinary treepropertyallowsustoprintoutallthekeysinabinarysearchtreeinsortedorderbyasimplerecursivealgorithm calledaninordertreewalk thisalgorithmissonamedbecauseitprintsthekeyoftherootofasubtreebetweenprintingthevaluesinitsleftsubtreeandprintingthoseinitsrightsubtree similarly apreordertreewalkprintstherootbeforethevaluesineithersubtree andapostordertreewalkprintstherootafterthevaluesinitssubtrees tousethefollowingproceduretoprintalltheelementsinabinarysearchtreet wecallinorder chapter binarysearchtreesinorder ifx nil inorder printx inorder asanexample theinordertreewalkprintsthekeysineachofthetwobinarysearchtreesfromfigure intheorder thecorrectnessofthealgorithmfollowsbyinductiondirectlyfromthebinary treeproperty ittakes timetowalkann nodebinarysearchtree sinceaftertheini tialcall theprocedurecallsitselfrecursivelyexactlytwiceforeachnodeinthe onceforitsleftchildandonceforitsrightchild thefollowingtheorem givesaformalproofthatittakeslineartimetoperformaninordertreewalk theorem ifxistherootofann nodesubtree thenthecallinorder takes prooflett denotethetimetakenbyinorder walkwhenitiscalledontherootofann nodesubtree sinceinorder walkvisitsallnnodesofthesubtree wehavet itremainstoshowthatt sinceinorder walktakesasmall constantamountoftimeonanemptysubtree forthetestx nil wehavet dcforsomeconstantc forn supposethatinorder walkiscalledonanodexwhoseleftsubtreehasknodesandwhoserightsubtreehasnk nodes thetimetoperforminorder isboundedbyt cdforsomeconstantd thatre ectsanupperboundonthetimetoexecutethebodyofinorder exclusiveofthetimespentinrecursivecalls weusethesubstitutionmethodtoshowthatt byprovingthatt ccd ncc fornd wehave ccd ccdcdt forn wehavet cdd ccd kcc ccd cdd ccd ncc ccd cccdd ccd ncc whichcompletestheproof queryingabinarysearchtree exercises forthesetoff gofkeys drawbinarysearchtreesofheights whatisthedifferencebetweenthebinary treepropertyandthemin heap seepage canthemin heappropertybeusedtoprintoutthekeys ofann nodetreeinsortedorderino showhow orexplainwhynot giveanonrecursivealgorithmthatperformsaninordertreewalk hint aneasysolutionusesastackasanauxiliarydatastructure amorecomplicated butele gant solutionusesnostackbutassumesthatwecantesttwopointersforequality giverecursivealgorithmsthatperformpreorderandpostordertreewalksin timeonatreeofnnodes arguethatsincesortingnelementstakesnlgn timeintheworstcaseinthecomparisonmodel anycomparison basedalgorithmforconstructingabinary searchtreefromanarbitrarylistofnelementstakesnlgn timeintheworstcase queryingabinarysearchtreeweoftenneedtosearchforakeystoredinabinarysearchtree besidesthesearchoperation binarysearchtreescansupportsuchqueriesasminimum maximum successor andpredecessor inthissection weshallexaminetheseoperationsandshowhowtosupporteachoneintimeo onanybinarysearchtreeofheighth searchingweusethefollowingproceduretosearchforanodewithagivenkeyinabinarysearchtree givenapointertotherootofthetreeandakeyk searchreturnsapointertoanodewithkeykifoneexists otherwise itreturnsnil chapter binarysearchtrees queriesonabinarysearchtree tosearchforthekey inthetree wefollowthepath fromtheroot theminimumkeyinthetreeis whichisfoundbyfollowingleftpointersfromtheroot themaximumkey isfoundbyfollowingrightpointersfromtheroot thesuccessorofthenodewithkey isthenodewithkey sinceitistheminimumkeyintherightsubtreeof thenodewithkey hasnorightsubtree andthusitssuccessorisitslowestancestorwhoseleftchildisalsoanancestor inthiscase thenodewithkey isitssuccessor ifx nilork returnx ifk returntree elsereturntree theprocedurebeginsitssearchattherootandtracesasimplepathdownwardinthetree asshowninfigure foreachnodexitencounters itcomparesthekeykwithx ifthetwokeysareequal thesearchterminates ifkissmallerthanx thesearchcontinuesintheleftsubtreeofx sincethebinary treepropertyimpliesthatkcouldnotbestoredintherightsubtree symmetrically ifkislargerthanx thesearchcontinuesintherightsubtree thenodesencounteredduringtherecursionformasimplepathdownwardfromtherootofthetree andthustherunningtimeoftree searchiso wherehistheheightofthetree wecanrewritethisprocedureinaniterativefashionby unrolling therecursionintoawhileloop onmostcomputers theiterativeversionismoreef cient queryingabinarysearchtree iterative whilex nilandk ifk xdx elsexdx returnxminimumandmaximumwecanalways ndanelementinabinarysearchtreewhosekeyisaminimumbyfollowingleftchildpointersfromtherootuntilweencounteranil asshowninfigure thefollowingprocedurereturnsapointertotheminimumelementinthesubtreerootedatagivennodex whichweassumetobenon nil minimum whilex nil xdx returnxthebinary treepropertyguaranteesthattree minimumiscorrect ifanodexhasnoleftsubtree thensinceeverykeyintherightsubtreeofxisatleastaslargeasx theminimumkeyinthesubtreerootedatxisx ifnodexhasaleftsubtree thensincenokeyintherightsubtreeissmallerthanx keyandeverykeyintheleftsubtreeisnotlargerthanx theminimumkeyinthesubtreerootedatxresidesinthesubtreerootedatx thepseudocodefortree maximumissymmetric maximum whilex nil xdx returnxbothoftheseproceduresrunino timeonatreeofheighthsince asintree thesequenceofnodesencounteredformsasimplepathdownwardfromtheroot successorandpredecessorgivenanodeinabinarysearchtree sometimesweneedto nditssuccessorinthesortedorderdeterminedbyaninordertreewalk ifallkeysaredistinct chapter binarysearchtreessuccessorofanodexisthenodewiththesmallestkeygreaterthanx thestructureofabinarysearchtreeallowsustodeterminethesuccessorofanode withoutevercomparingkeys thefollowingprocedurereturnsthesuccessorofa nodexinabinarysearchtreeifitexists andnilifxhasthelargestkeyinthetree successor ifx nil returntree minimum ydx whiley nilandx xdy ydy returnywebreakthecodefortree successorintotwocases iftherightsubtreeofnodexisnonempty thenthesuccessorofxisjusttheleftmostnodeinx srightsubtree whichwe ndinline bycallingtree minimum forexample thesuccessorofthenodewithkey infigure isthenodewithkey ontheotherhand asexercise asksyoutoshow iftherightsubtreeofnodexisemptyandxhasasuccessory thenyisthelowestancestorofxwhoseleftchildisalsoanancestorofx infigure thesuccessorofthenodewithkey isthenodewithkey ndy wesimplygoupthetreefromxuntilweencounteranodethatistheleftchildofitsparent lines oftree successorhandlethiscase therunningtimeoftree successoronatreeofheighthiso sinceweeitherfollowasimplepathupthetreeorfollowasimplepathdownthetree proceduretree predecessor whichissymmetrictotree successor alsorunsintimeo evenifkeysarenotdistinct wede nethesuccessorandpredecessorofanynodexasthenodereturnedbycallsmadetotree successor andtree predecessor respectively insummary wehaveprovedthefollowingtheorem theorem wecanimplementthedynamic setoperationssearch minimum maximum successor andpredecessorsothateachonerunsino timeonabinarysearchtreeofheighth queryingabinarysearchtree exercises supposethatwehavenumbersbetween inabinarysearchtree andwe wanttosearchforthenumber whichofthefollowingsequencescouldnotbethesequenceofnodesexamined writerecursiveversionsoftree minimumandtree maximum writethetree predecessorprocedure professorbunyanthinkshehasdiscoveredaremarkablepropertyofbinarysearch trees supposethatthesearchforkeykinabinarysearchtreeendsupinaleaf considerthreesets thekeystotheleftofthesearchpath thekeysonthesearchpath andc thekeystotherightofthesearchpath professorbunyanclaimsthatanythreekeysa andc cmustsatisfyabc giveasmallestpossiblecounterexampletotheprofessor sclaim showthatifanodeinabinarysearchtreehastwochildren thenitssuccessorhas noleftchildanditspredecessorhasnorightchild considerabinarysearchtreetwhosekeysaredistinct showthatiftherightsubtreeofanodexintisemptyandxhasasuccessory thenyisthelowestancestorofxwhoseleftchildisalsoanancestorofx recallthateverynodeisitsownancestor analternativemethodofperforminganinordertreewalkofann nodebinarysearchtree ndstheminimumelementinthetreebycallingtree minimumandthenmakingn callstotree successor provethatthisalgorithmrunsin chapter binarysearchtrees provethatnomatterwhatnodewestartatinaheight hbinarysearchtree ksuccessivecallstotree successortakeo kch lettbeabinarysearchtreewhosekeysaredistinct letxbealeafnode andletybeitsparent showthaty keyiseitherthesmallestkeyintlargerthanx keyorthelargestkeyintsmallerthanx insertionanddeletiontheoperationsofinsertionanddeletioncausethedynamicsetrepresentedbyabinarysearchtreetochange thedatastructuremustbemodi edtore ectthis butinsuchawaythatthebinary treepropertycontinuestohold asweshallsee modifyingthetreetoinsertanewelementisrelativelystraight buthandlingdeletionissomewhatmoreintricate insertiontoinsertanewvalueintoabinarysearchtreet weusetheproceduretree insert theproceduretakesanode forwhich keyd leftdnil rightdnil itmodi estandsomeoftheattributesof insuchawaythatitinserts intoanappropriatepositioninthetree insert ydnil xdt whilex nil ydx xdx elsexdx pdy ify nil rootd treetwasempty elseif leftd elsey rightd insertionanddeletion insertinganitemwithkey intoabinarysearchtree lightlyshadednodesindicatethesimplepathfromtherootdowntothepositionwheretheitemisinserted thedashedline indicatesthelinkinthetreethatisaddedtoinserttheitem showshowtree insertworks justliketheprocedurestree searchanditerative insertbeginsattherootofthetreeandthepointerxtracesasimplepathdownwardlookingforaniltoreplacewiththeinputitem theproceduremaintainsthetrailingpointeryastheparentofx afterinitialization thewhileloopinlines causesthesetwopointerstomovedownthetree goingleftorrightdependingonthecomparisonof keywithx untilxbecomesnil thisniloccupiesthepositionwherewewishtoplacetheinputitem weneedthetrailingpointery becausebythetimewe ndthenilwhere belongs thesearchhasproceededonestepbeyondthenodethatneedstobechanged lines setthepointersthatcause tobeinserted liketheotherprimitiveoperationsonsearchtrees theproceduretree insertrunsino timeonatreeofheighth deletiontheoverallstrategyfordeletinganode fromabinarysearchtreethasthreebasiccasesbut asweshallsee oneofthecasesisabittricky hasnochildren thenwesimplyremoveitbymodifyingitsparenttore withnilasitschild hasjustonechild thenweelevatethatchildtotake spositioninthetreebymodifying sparenttoreplace schild hastwochildren thenwe ssuccessory whichmustbein srightsubtree andhaveytake spositioninthetree therestof soriginalrightsubtreebecomesy snewrightsubtree sleftsubtreebecomesy snewleftsubtree thiscaseisthetrickyonebecause asweshallsee itmatters whetheryis srightchild chapter binarysearchtreestheprocedurefordeletingagivennode fromabinarysearchtreettakesasargumentspointerstotand itorganizesitscasesabitdifferentlyfromthethreecasesoutlinedpreviouslybyconsideringthefourcasesshowninfigure hasnoleftchild ofthe gure thenwereplace byitsrightchild whichmayormaynotbenil srightchildisnil thiscasedealswiththesituationinwhich hasnochildren srightchildisnon nil thiscasehandlesthesituationinwhich hasjustonechild whichisitsrightchild hasjustonechild whichisitsleftchild ofthe gure thenwereplace byitsleftchild otherwise hasbothaleftandarightchild ssuccessory whichliesin srightsubtreeandhasnoleftchild seeexercise wewanttospliceyoutofitscurrentlocationandhaveitreplace inthetree ifyis srightchild thenwereplace byy leavingy srightchildalone otherwise ylieswithin srightsubtreebutisnot srightchild inthiscase rstreplaceybyitsownrightchild andthenwereplace byy inordertomovesubtreesaroundwithinthebinarysearchtree wede neasubroutinetransplant whichreplacesonesubtreeasachildofitsparentwithanothersubtree whentransplantreplacesthesubtreerootedatnodeuwiththesubtreerootedatnode nodeu sparentbecomesnode sparent andu sparentendsuphavingasitsappropriatechild transplant ifu nil rootd elseifu leftd elseu rightd nil pdu plines handlethecaseinwhichuistherootoft otherwise uiseitheraleftchildorarightchildofitsparent lines takecareofupdatingu leftifuisaleftchild andline updatesu rightifuisarightchild weallowtobenil andlines updatepifisnon nil notethattransplantdoesnotattempttoupdateleftandright doingso ornotdoingso istheresponsibilityoftransplant scaller insertionanddeletion qqz rqqzl qzl qylyqzl rqzlryqlryrlxxxyxxnilnilnilnilnilfigure deletinganode fromabinarysearchtree node maybetheroot aleftchildofnodeq orarightchildofq node hasnoleftchild wereplace byitsrightchildr whichmayormaynotbenil node hasaleftchildlbutnorightchild wereplace byl node hastwochildren itsleftchildisnodel itsrightchildisitssuccessory andy srightchildisnodex wereplace byy updatingy sleftchildtobecomel butleavingxasy srightchild node hastwochildren leftchildlandrightchildr anditssuccessory rlieswithinthesubtreerootedatr wereplaceybyitsownrightchildx andwesetytober sparent wesetytobeq schildandtheparentofl chapter binarysearchtreeswiththetransplantprocedureinhand hereistheprocedurethatdeletesnode frombinarysearchtreet delete nil transplant elseif nil transplant elseydtree minimum ify transplant rightd pdy transplant leftd pdythetree deleteprocedureexecutesthefourcasesasfollows lines handlethecaseinwhichnode hasnoleftchild andlines handlethecaseinwhich hasaleftchildbutnorightchild lines dealwiththeremainingtwocases inwhich hastwochildren ndsnodey whichisthesuccessorof because hasanonemptyrightsubtree itssuccessormustbethenodeinthatsubtreewiththesmallestkey hencethecalltotree minimum aswenotedbefore yhasnoleftchild wewanttospliceyoutofitscurrentlocation anditshouldreplace inthetree ifyis srightchild thenlines replace asachildofitsparentbyyandreplacey sleftchildby sleftchild ifyisnot sleftchild lines replaceyasachildofitsparentbyy srightchildandturn srightchildintoy srightchild andthenlines replace asachildofitsparentbyyandreplacey sleftchildby sleftchild eachlineoftree delete includingthecallstotransplant takesconstanttime exceptforthecalltotree minimuminline deleterunsino timeonatreeofheighth insummary wehaveprovedthefollowingtheorem theorem wecanimplementthedynamic setoperationsinsertanddeletesothateachonerunsino timeonabinarysearchtreeofheighth randomlybuiltbinarysearchtrees exercises givearecursiveversionofthetree insertprocedure supposethatweconstructabinarysearchtreebyrepeatedlyinsertingdistinctval uesintothetree arguethatthenumberofnodesexaminedinsearchingfora valueinthetreeisoneplusthenumberofnodesexaminedwhenthevaluewas rstinsertedintothetree wecansortagivensetofnnumbersby rstbuildingabinarysearchtreecontain ingthesenumbers usingtree insertrepeatedlytoinsertthenumbersonebyone andthenprintingthenumbersbyaninordertreewalk whataretheworst caseandbest caserunningtimesforthissortingalgorithm istheoperationofdeletion commutative inthesensethatdeletingxandthenyfromabinarysearchtreeleavesthesametreeasdeletingyandthenx arguewhyitisorgiveacounterexample supposethatinsteadofeachnodexkeepingtheattributex pointingtox sparent itkeepsx succ pointingtox ssuccessor givepseudocodeforsearch insert anddeleteonabinarysearchtreetusingthisrepresentation theseproceduresshouldoperateintimeo wherehistheheightofthetreet hint youmaywishtoimplementasubroutinethatreturnstheparentofanode whennode intree deletehastwochildren wecouldchoosenodeyasitspredecessorratherthanitssuccessor whatotherchangestotree deletewouldbenecessaryifwedidso somehavearguedthatafairstrategy giving equalprioritytopredecessorandsuccessor yieldsbetterempiricalperformance howmighttree deletebechangedtoimplementsuchafairstrategy randomlybuiltbinarysearchtreeswehaveshownthateachofthebasicoperationsonabinarysearchtreeruns ino wherehistheheightofthetree theheightofabinarysearch chapter binarysearchtreestreevaries however asitemsareinsertedanddeleted forexample thenitemsareinsertedinstrictlyincreasingorder thetreewillbeachainwithheightn ontheotherhand exerciseb showsthathblgnc aswithquicksort wecanshowthatthebehavioroftheaveragecaseismuchclosertothebestcasethan totheworstcase unfortunately littleisknownabouttheaverageheightofabinarysearchtreewhenbothinsertionanddeletionareusedtocreateit whenthetreeiscreated byinsertionalone theanalysisbecomesmoretractable letusthereforede nearandomlybuiltbinarysearchtreeonnkeysasonethatarisesfrominsertingthekeysinrandomorderintoaninitiallyemptytree whereeachofthen permutationsoftheinputkeysisequallylikely asksyoutoshowthatthisnotion isdifferentfromassumingthateverybinarysearchtreeonnkeysisequallylikely inthissection weshallprovethefollowingtheorem theorem theexpectedheightofarandomlybuiltbinarysearchtreeonndistinctkeysiso lgn proofwestartbyde ningthreerandomvariablesthathelpmeasuretheheightofarandomlybuiltbinarysearchtree wedenotetheheightofarandomlybuiltbinarysearchonnkeysbyxn andwede netheexponentialheightynd whenwebuildabinarysearchtreeonnkeys wechooseonekeyasthatoftheroot andweletrndenotetherandomvariablethatholdsthiskey srankwithinthesetofnkeys thatis rnholdsthepositionthatthiskeywouldoccupyifthesetofkeysweresorted thevalueofrnisequallylikelytobeanyelementofthesetf ifrndi thentheleftsubtreeoftherootisarandomlybuiltbinarysearchtreeoni keys andtherightsubtreeisarandomlybuiltbinarysearchtreeonnikeys becausetheheightofabinarytreeis morethanthelargeroftheheightsofthetwosubtreesoftheroot theexponentialheightofa binarytreeistwicethelargeroftheexponentialheightsofthetwosubtreesofthe ifweknowthatrndi itfollowsthatynd max yni asbasecases wehavethaty becausetheexponentialheightofatreewith nodeis forconvenience wede ney neindicatorrandomvariableszn wherezn idifrndig becausernisequallylikelytobeanyelementoff itfollowsthatprfrndigd nforid andhence bylemma wehavee randomlybuiltbinarysearchtrees forid becauseexactlyonevalueofzn iis andallothersare wealsohaveyndnxid max yni weshallshowthate ynispolynomialinn whichwillultimatelyimplythate xndo lgn weclaimthattheindicatorrandomvariablezn idifrndigisindependentofthevaluesofyi andyni havingchosenrndi theleftsubtree whoseexponentialheightisyi israndomlybuiltonthei keyswhoseranksarelessthani thissubtreeisjustlikeanyotherrandomlybuiltbinarysearchtreeoni keys otherthanthenumberofkeysitcontains thissubtree sstructureisnotaffectedatallbythechoiceofrndi andhencetherandomvariablesyi andzn iareindependent likewise therightsubtree whoseexponentialheightisyni israndomlybuiltonthenikeyswhoseranksaregreaterthani itsstructureisindependentofthevalueofrn andsotherandomvariablesyniandzn iareindependent hence wehavee ynde nxid max yni dnxid max yni bylinearityofexpectation dnxid max yni byindependence dnxid max yni byequation nnxid max yni byequation nnxid yni byexercisec sinceeachterme appearstwiceinthelastsummation oncease andoncease yni wehavetherecurrencee xid chapter binarysearchtreesusingthesubstitutionmethod weshallshowthatforallpositiveintegersn therecurrence hasthesolutione indoingso weshallusetheidentityn xid asksyoutoprovethisidentity forthebasecases wenotethatthebounds fortheinductivecase wehavethate xid xid bytheinductivehypothesis xid byequation wehaveboundede butourultimategoalistobounde asexer cise asksyoutoshow thefunctionf xisconvex seepage therefore wecanemployjensen sinequality whichsaysthat xne xnde ynasfollows problemsforchapter takinglogarithmsofbothsidesgivese xndo lgn exercises proveequation describeabinarysearchtreeonnnodessuchthattheaveragedepthofanodeinthetreeis lgn buttheheightofthetreeis lgn giveanasymptoticupperboundontheheightofann nodebinarysearchtreeinwhichtheaveragedepthofanodeis lgn showthatthenotionofarandomlychosenbinarysearchtreeonnkeys whereeachbinarysearchtreeofnkeysisequallylikelytobechosen isdifferentfromthenotionofarandomlybuiltbinarysearchtreegiveninthissection hint listthepossibilitieswhennd showthatthefunctionf xisconvex considerrandomized quicksortoperatingonasequenceofndistinctinputnumbers provethatforanyconstantk allbuto ofthen inputpermutationsyieldano nlgn runningtime problems binarysearchtreeswithequalkeysequalkeysposeaproblemfortheimplementationofbinarysearchtrees whatistheasymptoticperformanceoftree insertwhenusedtoinsertnitemswithidenticalkeysintoaninitiallyemptybinarysearchtree weproposetoimprovetree insertbytestingbeforeline todeterminewhether keydx keyandbytestingbeforeline todeterminewhether keydy chapter binarysearchtreesifequalityholds weimplementoneofthefollowingstrategies foreachstrategy ndtheasymptoticperformanceofinsertingnitemswithidenticalkeysintoaninitiallyemptybinarysearchtree thestrategiesaredescribedforline inwhich wecomparethekeysof andx substituteyforxtoarriveatthestrategiesforline keepaboolean agx batnodex andsetxtoeitherx leftorx rightbasedonthevalueofx whichalternatesbetweenfalseandtrueeachtimewevisitxwhileinsertinganodewiththesamekeyasx keepalistofnodeswithequalkeysatx andinsert intothelist randomlysetxtoeitherx leftorx givetheworst caseperformanceandinformallyderivetheexpectedrunningtime radixtreesgiventwostringsada apandbdb whereeachaiandeachbjisinsomeorderedsetofcharacters wesaythatstringaislexicographicallylessthanstringbifeither thereexistsanintegerj jmin suchthataidbiforallid andaj qandaidbiforallid forexample ifaandbarebitstrings byrule lettingjd byrule thisorderingissimilartothatusedinenglish languagedictionaries theradixtreedatastructureshowninfigure storesthebitstrings whensearchingforakeyada wegoleftatanodeofdepthiifaid andrightifaid letsbeasetofdistinctbitstringswhoselengthssumton showhowtousearadixtreetosortslexicographicallyin fortheexampleinfigure theoutputofthesortshouldbethesequence averagenodedepthinarandomlybuiltbinarysearchtreeinthisproblem weprovethattheaveragedepthofanodeinarandomlybuiltbinarysearchtreewithnnodesiso lgn althoughthisresultisweakerthanthatoftheorem thetechniqueweshalluserevealsasurprisingsimilaritybetweenthebuildingofabinarysearchtreeandtheexecutionofrandomized quicksortfromsection wede nethetotalpathlengthp ofabinarytreetasthesum overallnodesxint ofthedepthofnodex whichwedenotebyd problemsforchapter aradixtreestoringthebitstrings wecandetermineeachnode skeybytraversingthesimplepathfromtheroottothatnode thereisnoneed therefore tostorethekeysinthenodes thekeysappearhereforillustrativepurposesonly nodesareheavilyshadedifthekeyscorrespondingtothemarenotinthetree suchnodesarepresentonlytoestablish apathtoothernodes arguethattheaveragedepthofanodeintis nxx wewishtoshowthattheexpectedvalueofp iso nlgn lettlandtrdenotetheleftandrightsubtreesoftreet respectively arguethatifthasnnodes thenp letp denotetheaveragetotalpathlengthofarandomlybuiltbinarysearchtreewithnnodes showthatp xid showhowtorewritep asp xkd recallingthealternativeanalysisoftherandomizedversionofquicksortgiveninproblem concludethatp nlgn chapter binarysearchtreesateachrecursiveinvocationofquicksort wechoosearandompivotelementtopartitionthesetofelementsbeingsorted eachnodeofabinarysearchtreeparti tionsthesetofelementsthatfallintothesubtreerootedatthatnode describeanimplementationofquicksortinwhichthecomparisonstosortasetofelementsareexactlythesameasthecomparisonstoinserttheelementsinto abinarysearchtree theorderinwhichcomparisonsaremademaydiffer thesamecomparisonsmustoccur numberofdifferentbinarytreesletbndenotethenumberofdifferentbinarytreeswithnnodes inthisproblem youwill ndaformulaforbn aswellasanasymptoticestimate showthatb andthat forn bndn xkd bkbn referringtoproblem forthede nitionofageneratingfunction letb bethegeneratingfunctionb xnd bnxn showthatb dxb andhenceonewaytoexpressb inclosedformisb thetaylorexpansionoff aroundthepointxdaisgivenbyf xkd wheref isthekthderivativeoffevaluatedatx showthatbnd notesforchapter thenthcatalannumber byusingthetaylorexpansionofp xaroundxd ifyouwish insteadofusingthetaylorexpansion youmayusethegeneralizationofthebinomialexpansion tononintegralexponentsn whereforanyrealnumbernandforanyintegerk weinterpretnktoben nkc ifk otherwise showthatbnd chapternotesknuth containsagooddiscussionofsimplebinarysearchtreesaswellasmanyvariations binarysearchtreesseemtohavebeenindependentlydiscovered byanumberofpeopleinthelate radixtreesareoftencalled tries comesfromthemiddlelettersinthewordretrieval knuth alsodiscussesthem manytexts includingthe rsttwoeditionsofthisbook haveasomewhatsim plermethodofdeletinganodefromabinarysearchtreewhenbothofitschildrenarepresent insteadofreplacingnode byitssuccessory wedeletenodeybutcopyitskeyandsatellitedataintonode thedownsideofthisapproachisthatthenodeactuallydeletedmightnotbethenodepassedtothedeleteprocedure othercomponentsofaprogrammaintainpointerstonodesinthetree theycould mistakenlyendupwith stale pointerstonodesthathavebeendeleted although thedeletionmethodpresentedinthiseditionofthisbookisabitmorecomplicated itguaranteesthatacalltodeletenode deletesnode andonlynode willshowhowtoconstructanoptimalbinarysearchtreewhenweknowthesearchfrequenciesbeforeconstructingthetree thatis giventhefrequenciesofsearchingforeachkeyandthefrequenciesofsearchingforvaluesthatfallbetweenkeysinthetree weconstructabinarysearchtreeforwhichasetofsearchesthatfollowsthesefrequenciesexaminestheminimumnumberofnodes theproofinsection thatboundstheexpectedheightofarandomlybuiltbinarysearchtreeisduetoaslam mart nezandroura giverandomizedalgorithmsforinsertionintoanddeletionfrombinarysearchtreesinwhichthe resultofeitheroperationisarandombinarysearchtree theirde nitionofa randombinarysearchtreediffers onlyslightly fromthatofarandomlybuilt binarysearchtreeinthischapter however blacktreeschapter showedthatabinarysearchtreeofheighthcansupportanyofthebasicdynamic setoperations suchassearch predecessor successor mini mum maximum insert anddelete ino thesetoperationsarefastiftheheightofthesearchtreeissmall ifitsheightislarge however setoperationsmayrunnofasterthanwithalinkedlist blacktreesareone ofmanysearch treeschemesthatare balanced inordertoguaranteethatbasic dynamic setoperationstakeo lgn timeintheworstcase propertiesofred blacktreesared blacktreeisabinarysearchtreewithoneextrabitofstoragepernode itscolor whichcanbeeitherredorblack byconstrainingthenodecolorsonanysimplepathfromtheroottoaleaf blacktreesensurethatnosuchpathismore thantwiceaslongasanyother sothatthetreeisapproximatelybalanced eachnodeofthetreenowcontainstheattributescolor andp ifachildortheparentofanodedoesnotexist thecorrespondingpointerattribute ofthenodecontainsthevaluenil weshallregardthesenilsasbeingpointerstoleaves externalnodes ofthebinarysearchtreeandthenormal bearingnodes asbeinginternalnodesofthetree ared blacktreeisabinarytreethatsatis esthefollowingred blackproperties everynodeiseitherredorblack therootisblack everyleaf nil isblack ifanodeisred thenbothitschildrenareblack foreachnode allsimplepathsfromthenodetodescendantleavescontainthesamenumberofblacknodes propertiesofred blacktrees showsanexampleofared blacktree asamatterofconvenienceindealingwithboundaryconditionsinred blacktreecode weuseasinglesentineltorepresentnil seepage forared blacktreet thesentinelt nilisanobjectwiththesameattributesasanordinarynodeinthetree itscolorattributeisblack anditsotherattributes andkey cantakeonarbitraryvalues asfigure shows allpointerstonilarereplacedbypointerstothesentinelt nil weusethesentinelsothatwecantreatanilchildofanodexasanordinarynodewhoseparentisx althoughweinsteadcouldaddadistinctsentinelnodeforeachnilinthetree sothattheparentofeachniliswellde ned thatap proachwouldwastespace instead weusetheonesentinelt niltorepresentallthenils allleavesandtheroot sparent thevaluesoftheattributesp andkeyofthesentinelareimmaterial althoughwemaysetthemduringthecourseofaprocedureforourconvenience wegenerallycon neourinteresttotheinternalnodesofared blacktree sincetheyholdthekeyvalues intheremainderofthischapter weomittheleaveswhenwedrawred blacktrees asshowninfigure wecallthenumberofblacknodesonanysimplepathfrom butnotincluding anodexdowntoaleaftheblack heightofthenode denotedbh byproperty thenotionofblack heightiswellde ned sincealldescendingsimplepathsfrom thenodehavethesamenumberofblacknodes wede netheblack heightofa blacktreetobetheblack heightofitsroot thefollowinglemmashowswhyred blacktreesmakegoodsearchtrees lemma ared blacktreewithninternalnodeshasheightatmost proofwestartbyshowingthatthesubtreerootedatanynodexcontainsatleast internalnodes weprovethisclaimbyinductionontheheightofx iftheheightofxis thenxmustbealeaf nil andthesubtreerootedatxindeedcontainsatleast internalnodes fortheinductivestep consideranodexthathaspositiveheightandisaninternalnodewithtwochildren eachchildhasablack heightofeitherbh orbh dependingonwhetheritscolorisredorblack respectively sincetheheightofachildofxislessthantheheightofxitself wecanapplytheinductivehypothesistoconcludethateachchildhasatleast internalnodes thesubtreerootedatxcontainsatleast internalnodes whichprovestheclaim tocompletetheproofofthelemma lethbetheheightofthetree accordingtoproperty atleasthalfthenodesonanysimplepathfromtheroottoaleaf not chapter blacktreesnilnilnilnilnilnilnilnilnilnilnilnilnilnilnilnilnilnilnilnilnil nilfigure ared blacktreewithblacknodesdarkenedandrednodesshaded everynodeinared blacktreeiseitherredorblack thechildrenofarednodearebothblack andeverysimplepath fromanodetoadescendantleafcontainsthesamenumberofblacknodes everyleaf shownasanil isblack eachnon nilnodeismarkedwithitsblack height nilshaveblack height thesamered blacktreebutwitheachnilreplacedbythesinglesentinelt nil whichisalwaysblack andwithblack heightsomitted theroot sparentisalsothesentinel thesamered blacktreebutwithleavesandtheroot sparentomittedentirely weshallusethisdrawingstyleintheremainderofthischapter propertiesofred blacktrees includingtheroot mustbeblack consequently theblack heightoftherootmustbeatleasth movingthe totheleft handsideandtakinglogarithmsonbothsidesyieldslg orh asanimmediateconsequenceofthislemma wecanimplementthedynamic setoperationssearch minimum maximum successor andpredecessorino lgn timeonred blacktrees sinceeachcanrunino timeonabinarysearchtreeofheighth asshowninchapter andanyred blacktreeonnnodesisabinarysearchtreewithheighto lgn ofcourse referencestonilinthealgorithmsofchapter wouldhavetobereplacedbyt nil althoughtheal gorithmstree insertandtree deletefromchapter runino lgn timewhengivenared blacktreeasinput theydonotdirectlysupportthedynamic operationsinsertanddelete sincetheydonotguaranteethatthemodi edbi narysearchtreewillbeared blacktree weshallseeinsections however howtosupportthesetwooperationsino lgn exercises inthestyleoffigure drawthecompletebinarysearchtreeofheight onthekeysf addthenilleavesandcolorthenodesinthreedifferentwayssuchthattheblack heightsoftheresultingred blacktreesare drawthered blacktreethatresultsaftertree insertiscalledonthetreeinfigure withkey iftheinsertednodeiscoloredred istheresultingtreeared blacktree whatifitiscoloredblack letusde nearelaxedred blacktreeasabinarysearchtreethatsatis esred blackproperties inotherwords therootmaybeeitherredorblack considerarelaxedred blacktreetwhoserootisred ifwecolortherootoftblackbutmakenootherchangestot istheresultingtreeared blacktree supposethatwe absorb everyrednodeinared blacktreeintoitsblackparent sothatthechildrenoftherednodebecomechildrenoftheblackparent ignorewhathappenstothekeys whatarethepossibledegreesofablacknodeafterall chapter blacktreesitsredchildrenareabsorbed whatcanyousayaboutthedepthsoftheleavesoftheresultingtree showthatthelongestsimplepathfromanodexinared blacktreetoadescendantleafhaslengthatmosttwicethatoftheshortestsimplepathfromnodextoadescendantleaf whatisthelargestpossiblenumberofinternalnodesinared blacktreewithblack heightk whatisthesmallestpossiblenumber describeared blacktreeonnkeysthatrealizesthelargestpossibleratioofredin ternalnodestoblackinternalnodes whatisthisratio whattreehasthesmallest possibleratio andwhatistheratio rotationsthesearch treeoperationstree insertandtree delete whenrunonared blacktreewithnkeys takeo lgn becausetheymodifythetree theresultmayviolatethered blackpropertiesenumeratedinsection torestorethese properties wemustchangethecolorsofsomeofthenodesinthetreeandalso changethepointerstructure wechangethepointerstructurethroughrotation whichisalocaloperationinasearchtreethatpreservesthebinary treeproperty showsthe twokindsofrotations leftrotationsandrightrotations whenwedoaleftrotation onanodex weassumethatitsrightchildyisnott nil xmaybeanynodeinthetreewhoserightchildisnott nil theleftrotation pivots aroundthelinkfromxtoy itmakesythenewrootofthesubtree withxasy sleftchildandy sleftchildasx srightchild thepseudocodeforleft rotateassumesthatx nilandthattheroot sparentist nil rotations yxxyleft rotate rotate therotationoperationsonabinarysearchtree theoperationleft rotate transformsthecon gurationofthetwonodesontherightintothecon gurationontheleftbychang ingaconstantnumberofpointers theinverseoperationright rotate transformsthecon gurationontheleftintothecon gurationontheright theletters andrepresentarbitrarysubtrees arotationoperationpreservesthebinary treeproperty thekeysin precedex whichprecedesthekeysin whichprecedey whichprecedesthekeysin rotate ydx sety rightdy turny sleftsubtreeintox srightsubtree ify nil pdx pdx linkx sparenttoy ifx nil rootdy elseifx leftdy elsex rightdy leftdx putxony sleft pdyfigure showsanexampleofhowleft rotatemodi esabinarysearchtree thecodeforright rotateissymmetric bothleft rotateandright rotaterunino onlypointersarechangedbyarotation allotherattributesinanoderemainthesame exercises writepseudocodeforright rotate arguethatineveryn nodebinarysearchtree thereareexactlyn possiblerotations chapter blacktrees rotate anexampleofhowtheprocedureleft rotate modi esabinarysearchtree inordertreewalksoftheinputtreeandthemodi edtreeproducethesamelistingofkeyvalues leta andcbearbitrarynodesinsubtrees respectively inthelefttreeoffigure howdothedepthsofa andcchangewhenaleftrotationisperformedonnodexinthe gure showthatanyarbitraryn nodebinarysearchtreecanbetransformedintoanyotherarbitraryn nodebinarysearchtreeusingo rotations hint firstshowthatatmostn rightrotationssuf cetotransformthetreeintoaright goingchain wesaythatabinarysearchtreet canberight convertedtobinarysearchtreet ifitispossibletoobtaint fromt viaaseriesofcallstoright rotate giveanexampleoftwotreest andt suchthatt cannotberight convertedtot showthatifatreet canberight convertedtot itcanberight convertedusingo callstoright rotate insertion insertionwecaninsertanodeintoann nodered blacktreeino lgn todoso weuseaslightlymodi edversionofthetree insertprocedure toinsertnode intothetreetasifitwereanordinarybinarysearchtree andthenwecolor asksyoutoexplainwhywechoosetomakenode redratherthanblack toguaranteethatthered blackpropertiesarepreserved wethencallanauxiliaryprocedurerb insert fixuptorecolornodesandperformrotations thecallrb insert insertsnode whosekeyisassumedtohavealreadybeen lledin intothered blacktreet insert ydt nil xdt whilex nil ydx xdx elsexdx pdy ify nil rootd elseif leftd elsey rightd leftdt nil rightdt nil colordred insert fixup theprocedurestree insertandrb insertdifferinfourways allinstancesofnilintree insertarereplacedbyt nil weset leftand righttot nilinlines ofrb insert inordertomaintainthepropertreestructure wecolor redinline fourth becausecol oring redmaycauseaviolationofoneofthered blackproperties wecallrb insert fixup inline ofrb inserttorestorethered blackprop erties chapter blacktreesrb insert fixup ify colordblack colordblack colordred elseif rotate colordblack colordred rotate sameasthenclausewith exchanged colordblacktounderstandhowrb insert fixupworks weshallbreakourexaminationofthecodeintothreemajorsteps weshalldeterminewhatviolationsof thered blackpropertiesareintroducedinrb insertwhennode isinsertedandcoloredred weshallexaminetheoverallgoalofthewhileloopinlines finally weshallexploreeachofthethreecases withinthewhileloop sbodyandseehowtheyaccomplishthegoal showshowrb insert fixupoperatesonasamplered blacktree whichofthered blackpropertiesmightbeviolateduponthecalltorb insert fixup certainlycontinuestohold asdoesproperty sincebothchildrenofthenewlyinsertedrednodearethesentinelt nil whichsaysthatthenumberofblacknodesisthesameoneverysimplepathfrom agivennode issatis edaswell becausenode replacesthe sentinel andnode isredwithsentinelchildren theonlypropertiesthatmightbevi olatedareproperty whichrequirestheroottobeblack andproperty saysthatarednodecannothavearedchild bothpossibleviolationsaredueto beingcoloredred isviolatedif istheroot andproperty isviolatedif sparentisred showsaviolationofproperty afterthenode hasbeeninserted fallsthroughintocase andsothesetwocasesarenotmutuallyexclusive insertion theoperationofrb insert fixup anode afterinsertion becauseboth anditsparent parered aviolationofproperty occurs suncleyisred inthecodeapplies werecolornodesandmovethepointer upthetree resultinginthetreeshownin onceagain anditsparentarebothred suncleyisblack istherightchildof applies weperformaleftrotation andthetreethatresultsisshownin istheleftchildofitsparent andcase applies recoloringandrightrotationyieldthetreein whichisalegalred blacktree chapter blacktreesthewhileloopinlines maintainsthefollowingthree partinvariantatthestartofeachiterationoftheloop node isred pistheroot pisblack ifthetreeviolatesanyofthered blackproperties thenitviolatesatmostoneofthem andtheviolationisofeitherproperty orproperty ifthe treeviolatesproperty itisbecause istherootandisred ifthetreeviolatesproperty itisbecauseboth parered whichdealswithviolationsofred blackproperties ismorecentraltoshowingthatrb insert fixuprestoresthered blackpropertiesthanparts whichweusealongthewaytounderstandsituationsinthecode because llbefocusingonnode andnodesnearitinthetree ithelpstoknowfrompart isred weshallusepart toshowthatthenode pexistswhenwereferenceitinlines recallthatweneedtoshowthataloopinvariantistruepriortothe rstitera tionoftheloop thateachiterationmaintainstheloopinvariant andthattheloopinvariantgivesusausefulpropertyatlooptermination westartwiththeinitializationandterminationarguments asweexam inehowthebodyoftheloopworksinmoredetail weshallarguethattheloopmaintainstheinvariantuponeachiteration alongtheway weshallalsodemon stratethateachiterationoftheloophastwopossibleoutcomes eitherthepointer movesupthetree orweperformsomerotationsandthentheloopterminates initialization priortothe rstiterationoftheloop westartedwithared blacktreewithnoviolations andweaddedarednode weshowthateachpartoftheinvariantholdsatthetimerb insert fixupiscalled whenrb insert fixupiscalled istherednodethatwasadded pistheroot pstartedoutblackanddidnotchangepriortothecallofrb insert fixup wehavealreadyseenthatproperties holdwhenrb insert fixupiscalled ifthetreeviolatesproperty thentheredrootmustbethenewlyaddednode whichistheonlyinternalnodeinthetree becausetheparentandbothchildrenof arethesentinel whichisblack thetreedoesnotalsoviolateproperty thisviolationofproperty istheonlyviolationof blackpropertiesintheentiretree ifthetreeviolatesproperty becausethechildrenofnode areblacksentinelsandthetreehadnootherviolationspriorto beingadded insertion violationmustbebecauseboth parered moreover thetreeviolatesnootherred blackproperties termination whentheloopterminates itdoessobecause pisblack istheroot pisthesentinelt nil whichisblack thetreedoesnotviolateproperty atlooptermination bytheloopinvariant theonlyproperty thatmightfailtoholdisproperty restoresthisproperty sothat whenrb insert fixupterminates allthered blackpropertieshold maintenance weactuallyneedtoconsidersixcasesinthewhileloop butthreeofthemaresymmetrictotheotherthree dependingonwhetherline deter mines sparent ptobealeftchildorarightchildof sgrandparent wehavegiventhecodeonlyforthesituationinwhich pisaleftchild thenode pexists sincebypart oftheloopinvariant pistheroot pisblack sinceweenteraloopiterationonlyif pisred weknowthat pcannotbetheroot hence pexists wedistinguishcase fromcases bythecolorof sparent ssibling uncle makesypointto suncle andline testsy scolor ifyisred thenweexecutecase otherwise controlpassestocases inallthreecases sgrandparent pisblack sinceitsparent pisred andproperty isviolatedonlybetween suncleyisredfigure showsthesituationforcase lines whichoccurswhenboth pandyarered because pisblack wecancolorboth pandyblack thereby xingtheproblemof pbothbeingred andwecancolor pred therebymaintainingproperty wethenrepeatthewhileloopwith pasthenewnode thepointer movesuptwolevelsinthetree weshowthatcase maintainstheloopinvariantatthestartofthenextiteration weuse todenotenode inthecurrentiteration ptodenotethenodethatwillbecallednode atthetestinline uponthenextiteration becausethisiterationcolors pred node isredatthestartofthenextiteration thenode pis pinthisiteration andthecolorofthisnodedoesnotchange ifthisnodeistheroot itwasblackpriortothisiteration andit remainsblackatthestartofthenextiteration wehavealreadyarguedthatcase maintainsproperty anditdoesnotintroduceaviolationofproperties chapter blacktreeszycdab cdabnewzycdbcdbanewz azfigure oftheprocedurerb insert fixup isviolated anditsparent parebothred wetakethesameactionwhether isarightchildor isaleftchild eachofthesubtrees hasablackroot andeachhasthesameblack height thecodeforcase changesthecolorsofsomenodes preservingproperty alldownwardsimplepathsfromanodetoaleafhavethesamenumberofblacks thewhileloopcontinueswithnode sgrandparent pasthenew anyviolationofproperty cannowoccuronlybetweenthenew whichisred anditsparent ifitisredaswell ifnode istherootatthestartofthenextiteration thencase correctedtheloneviolationofproperty inthisiteration isredanditistheroot becomestheonlyonethatisviolated andthisviolationis dueto ifnode isnottherootatthestartofthenextiteration thencase hasnotcreatedaviolationofproperty correctedtheloneviolation ofproperty thatexistedatthestartofthisiteration itthenmade redandleft palone pwasblack thereisnoviolationofproperty pwasred coloring redcreatedoneviolationofproperty suncleyisblackand isarightchildcase suncleyisblackand isaleftchildincases thecolorof suncleyisblack wedistinguishthetwocasesaccordingtowhether isarightorleftchildof lines constitutecase whichisshowninfigure togetherwithcase incase node isarightchildofitsparent weimmediatelyusealeftrotationtotransform thesituationintocase lines inwhichnode isaleftchild because insertion cabcase zybacase zyzabccfigure cases oftheprocedurerb insert fixup asincase isviolatedineithercase orcase because anditsparent parebothred eachofthesubtrees hasablackroot andfromproperty becauseotherwisewewouldbeincase andeachhasthesameblack height wetransformcase intocase byaleftrotation whichpreservesproperty alldownwardsimplepathsfromanodetoaleafhavethesamenumberofblacks causessomecolorchangesandarightrotation whichalsopreserveproperty thewhileloopthenterminates becauseproperty issatis therearenolongertworednodesinarow parered therotationaffectsneithertheblack heightofnodesnorproperty whetherweentercase directlyorthroughcase suncleyisblack sinceotherwisewewouldhaveexecutedcase additionally node pexists sincewehavearguedthatthisnodeexistedatthetimethatlines wereexecuted andaftermoving uponelevelinline andthendownonelevelinline theidentityof premainsunchanged incase weexecutesomecolorchangesandarightrotation whichpreserveproperty andthen sincewenolongerhavetworednodesinarow wearedone whileloopdoesnotiterateanothertime pisnowblack wenowshowthatcases maintaintheloopinvariant aswehavejustargued pwillbeblackuponthenexttestinline andtheloopbodywillnotexecuteagain makes pointto whichisred nofurtherchangeto oritscoloroccursincases makes pblack sothatif pistherootatthestartofthenextiteration itisblack asincase properties aremaintainedincases sincenode isnottherootincases weknowthatthereisnoviola tionofproperty cases donotintroduceaviolationofproperty sincetheonlynodethatismaderedbecomesachildofablacknodebytherotationincase cases correcttheloneviolationofproperty andtheydonotintro duceanotherviolation chapter blacktreeshavingshownthateachiterationoftheloopmaintainstheinvariant wehaveshownthatrb insert fixupcorrectlyrestoresthered blackproperties analysiswhatistherunningtimeofrb insert sincetheheightofared blacktreeonnnodesiso lgn lines ofrb inserttakeo lgn inrb insert fixup thewhilelooprepeatsonlyifcase occurs andthenthepointer movestwolevelsupthetree thetotalnumberoftimesthewhileloopcanbeexecutedisthereforeo lgn inserttakesatotalofo lgn moreover itneverperformsmorethantworotations sincethewhileloopterminatesifcase orcase isexecuted exercises inline ofrb insert wesetthecolorofthenewlyinsertednode tored observethatifwehadchosentoset scolortoblack thenproperty ofared blacktreewouldnotbeviolated whydidn twechoosetoset scolortoblack showthered blacktreesthatresultaftersuccessivelyinsertingthekeys intoaninitiallyemptyred blacktree supposethattheblack heightofeachofthesubtrees infigures isk labeleachnodeineach gurewithitsblack heighttoverifythattheindicatedtransformationpreservesproperty professorteachisconcernedthatrb insert fixupmightsett nil colortored inwhichcasethetestinline wouldnotcausethelooptoterminatewhen istheroot showthattheprofessor sconcernisunfoundedbyarguingthatrb insert fixupneversetst nil colortored considerared blacktreeformedbyinsertingnnodeswithrb insert arguethatifn thetreehasatleastonerednode suggesthowtoimplementrb insertef cientlyiftherepresentationforred blacktreesincludesnostorageforparentpointers deletion deletionliketheotherbasicoperationsonann nodered blacktree deletionofanodetakestimeo lgn deletinganodefromared blacktreeisabitmorecomplicatedthaninsertinganode theprocedurefordeletinganodefromared blacktreeisbasedonthetree deleteprocedure weneedtocustomizethetransplantsubroutinethattree deletecallssothatitappliestoared blacktree transplant ifu nil rootd elseifu leftd elseu rightd pdu ptheprocedurerb transplantdiffersfromtransplantintwoways referencesthesentinelt nilinsteadofnil theassignmenttopinline occursunconditionally wecanassigntopevenifpointstothesentinel infact weshallexploittheabilitytoassigntopwhendt nil theprocedurerb deleteislikethetree deleteprocedure butwithad ditionallinesofpseudocode someoftheadditionallineskeeptrackofanodeythatmightcauseviolationsofthered blackproperties whenwewanttodelete node hasfewerthantwochildren isremovedfromthetree andwewantytobe hastwochildren thenyshouldbe ssuccessor andymovesinto spositioninthetree wealsoremembery scolorbeforeitisre movedfromormovedwithinthetree andwekeeptrackofthenodexthatmovesintoy soriginalpositioninthetree becausenodexmightalsocauseviolationsofthered blackproperties afterdeletingnode deletecallsanauxiliaryprocedurerb delete fixup whichchangescolorsandperformsrotationstorestorethered blackproperties chapter blacktreesrb delete colordy nil transplant elseif nil transplant elseydtree minimum colordy xdy ify pdy elserb transplant rightd pdy transplant leftd pdy colord ify delete fixup althoughrb deletecontainsalmosttwiceasmanylinesofpseudocodeastree delete thetwoprocedureshavethesamebasicstructure youcan ndeachlineoftree deletewithinrb delete withthechangesofreplacingnilbyt nilandreplacingcallstotransplantbycallstorb transplant executedunderthesameconditions herearetheotherdifferencesbetweenthetwoprocedures wemaintainnodeyasthenodeeitherremovedfromthetreeormovedwithinthetree setsytopointtonode hasfewerthantwochildrenandisthereforeremoved hastwochildren setsytopointto ssuccessor justasintree delete andywillmoveinto spositioninthetree becausenodey scolormightchange thevariabley colorstoresy scolorbeforeanychangesoccur lines setthisvariableimmediatelyafterassignmentstoy hastwochildren theny andnodeymovesintonode soriginalpositioninthered blacktree givesythesamecoloras weneedtosavey soriginalcolorinordertotestitatthe deletion endofrb delete ifitwasblack thenremovingormovingycouldcauseviolationsofthered blackproperties asdiscussed wekeeptrackofthenodexthatmovesintonodey soriginalposition theassignmentsinlines setxtopointtoeithery sonlychildor ifyhasnochildren thesentinelt nil recallfromsection thatyhasnoleftchild sincenodexmovesintonodey soriginalposition theattributex pisalwayssettopointtotheoriginalpositioninthetreeofy sparent evenifxis infact thesentinelt nil unless isy soriginalparent whichoccursonlywhen hastwochildrenanditssuccessoryis srightchild theassignmenttox ptakesplaceinline ofrb transplant observethatwhenrb transplantiscalledinlines thesecondparameterpassedisthesameasx wheny soriginalparentis however wedonotwantx ptopointtoy sorig inalparent sinceweareremovingthatnodefromthetree becausenodeywillmoveuptotake spositioninthetree settingx ptoyinline causesx ptopointtotheoriginalpositionofy sparent evenifxdt nil finally ifnodeywasblack wemighthaveintroducedoneormoreviolationsofthered blackproperties andsowecallrb delete fixupinline torestorethered blackproperties ifywasred thered blackpropertiesstillholdwhenyisremovedormoved forthefollowingreasons noblack heightsinthetreehavechanged norednodeshavebeenmadeadjacent becauseytakes splaceinthetree alongwith scolor wecannothavetwoadjacentrednodesaty snewpositioninthetree inaddition ifywasnot srightchild theny soriginalrightchildxreplacesyinthetree ifyisred thenxmustbeblack andsoreplacingybyxcannotcausetworednodestobecomeadjacent sinceycouldnothavebeentherootifitwasred therootremainsblack ifnodeywasblack threeproblemsmayarise whichthecallofrb delete fixupwillremedy ifyhadbeentherootandaredchildofybecomesthenewroot wehaveviolatedproperty ifbothxandx parered thenwehaveviolatedproperty movingywithinthetreecausesanysimplepaththatpreviouslycontainedytohaveonefewerblacknode isnowviolatedbyanyancestorofyinthetree wecancorrecttheviolationofproperty bysayingthatnodex nowoccupyingy soriginalposition hasan extra thatis ifweadd tothecountofblacknodesonanysimplepaththatcontainsx thenunderthisinterpretation holds whenweremoveormovetheblacknodey itsblacknessontonodex theproblemisthatnownodexisneitherrednorblack therebyviolatingproperty instead chapter blacktreesnodexiseither doublyblack anditcontributeseither respectively tothecountofblacknodesonsimplepathscontainingx thecolorattributeofxwillstillbeeitherred ifxisred orblack ifxisdoublyblack inotherwords theextrablackonanodeisre ectedinx spointingtothenoderatherthaninthecolorattribute wecannowseetheprocedurerb delete fixupandexaminehowitrestoresthered blackpropertiestothesearchtree delete fixup whilex rootandx ifx wdx ifw colordblack colordred rotate wdx ifw blackandw colordred xdx elseifw colordblack colordred rotate wdx colordx colordblack colordblack rotate xdt sameasthenclausewith exchanged colordblacktheprocedurerb delete fixuprestoresproperties exercises askyoutoshowthattheprocedurerestoresproperties andsointheremainderofthissection weshallfocusonproperty thegoalofthewhileloopinlines istomovetheextrablackupthetreeuntil xpointstoared blacknode inwhichcasewecolorx singly blackinline xpointstotheroot inwhichcasewesimply remove theextrablack havingperformedsuitablerotationsandrecolorings weexittheloop deletion withinthewhileloop xalwayspointstoanonrootdoublyblacknode wedetermineinline whetherxisaleftchildorarightchildofitsparentx wehavegiventhecodeforthesituationinwhichxisaleftchild thesituationinwhichxisarightchild issymmetric wemaintainapointerwtothesiblingofx sincenodexisdoublyblack nodewcannotbet nil becauseotherwise thenumberofblacksonthesimplepathfromx ptothe singlyblack leafwwouldbesmallerthanthenumberonthesimplepathfromx ptox thefourcases inthecodeappearinfigure beforeexaminingeachcaseindetail slookmoregenerallyathowwecanverifythatthetransformationineachofthecasespreservesproperty thekeyideaisthatineachcase transformationappliedpreservesthenumberofblacknodes includingx sextrablack andincluding therootofthesubtreeshowntoeachofthesubtrees ifproperty holdspriortothetransformation itcontinuestoholdafterward forexample infigure whichillustratescase thenum berofblacknodesfromtheroottoeithersubtree bothbeforeandafterthetransformation rememberthatnodexaddsanextrablack similarly thenumberofblacknodesfromtheroottoanyof andis bothbe foreandafterthetransformation infigure thecountingmustinvolvethevaluecofthecolorattributeoftherootofthesubtreeshown whichcanbeeitherredorblack ifwede necount andcount thenthenumberofblacknodesfromtherootto ccount bothbeforeandafterthetransformation inthiscase afterthetransformation thenewnodexhascolorattributec butthisnodeisreallyeitherred ifcdred ordoublyblack ifcdblack youcanverifytheothercasessimilarly seeexercise ssiblingwisredcase lines ofrb delete fixupandfigure occurswhennodew thesiblingofnodex isred sincewmusthaveblackchildren wecanswitchthecolorsofwandx pandthenperformaleft rotationonx pwithoutviolatinganyofthered blackproperties thenewsiblingofx whichisoneofw schildrenpriortotherotation isnowblack andthuswehaveconvertedcase intocase cases occurwhennodewisblack theyaredistinguishedbythecolorsofw schildren asinrb insert fixup thecasesinrb delete fixuparenotmutuallyexclusive chapter blacktreescase ssiblingwisblack andbothofw schildrenareblackincase lines ofrb delete fixupandfigure bothofw schildrenareblack sincewisalsoblack wetakeoneblackoffbothxandw leavingxwithonlyoneblackandleavingwred tocompensateforremovingoneblackfromxandw wewouldliketoaddanextrablacktox whichwasoriginallyeitherredorblack wedosobyrepeatingthewhileloopwithx pasthenewnodex observethatifweentercase throughcase thenewnodexisred sincetheoriginalx pwasred hence thevaluecofthecolorattributeofthenewnodexisred andtheloopterminateswhenitteststheloopcondition wethencolorthenewnodex singly blackinline ssiblingwisblack sleftchildisred andw srightchildisblackcase lines andfigure occurswhenwisblack itsleftchildisred anditsrightchildisblack wecanswitchthecolorsofwanditsleftchildw leftandthenperformarightrotationonwwithoutviolatinganyofthered blackproperties thenewsiblingwofxisnowablacknodewitharedrightchild andthuswehavetransformedcase intocase ssiblingwisblack andw srightchildisredcase lines andfigure occurswhennodex ssiblingwisblackandw srightchildisred bymakingsomecolorchangesandperformingaleftro tationonx wecanremovetheextrablackonx makingitsinglyblack withoutviolatinganyofthered blackproperties settingxtobetherootcausesthewhilelooptoterminatewhenitteststheloopcondition analysiswhatistherunningtimeofrb delete sincetheheightofared blacktreeofnnodesiso lgn thetotalcostoftheprocedurewithoutthecalltorb delete fixuptakeso lgn withinrb delete fixup eachofcases leadtoterminationafterperformingaconstantnumberofcolorchangesandat mostthreerotations istheonlycaseinwhichthewhileloopcanbere peated andthenthepointerxmovesupthetreeatmosto lgn times performingnorotations theprocedurerb delete fixuptakeso lgn timeandper formsatmostthreerotations andtheoveralltimeforrb deleteisthereforealsoo lgn deletion abdcexwabcdexnewwabdcexwcabdcecnewxabdcexwcabcdxcnewwabdcexwccabcde eccnewxdt rootfigure thecasesinthewhileloopoftheprocedurerb delete fixup darkenednodeshavecolorattributesblack heavilyshadednodeshavecolorattributesred andlightlyshadednodeshavecolorattributesrepresentedbycandc whichmaybeeitherredorblack theletters representarbitrarysubtrees eachcasetransformsthecon gurationontheleftintothecon gurationontherightbychangingsomecolorsand orperformingarotation anynodepointedtobyxhasanextrablackandiseitherdoublyblackorred onlycase causesthelooptorepeat istransformedtocase byexchangingthecolorsofnodesbanddandperformingaleftrotation incase theextrablackrepresentedbythepointerxmovesupthetreebycoloringnodedredandsettingxtopointtonodeb ifweentercase throughcase thewhileloopterminatesbecausethenewnodexisred andthereforethevaluecofitscolorattributeisred istransformedtocase byexchangingthecolorsofnodescanddandperformingarightrotation removestheextrablackrepresentedbyxbychangingsomecolorsandperformingaleftrotation withoutviolatingthered blackproperties andthentheloopterminates chapter blacktreesexercises arguethatafterexecutingrb delete fixup therootofthetreemustbeblack arguethatifinrb deletebothxandx parered thenproperty isrestoredbythecalltorb delete fixup inexercise youfoundthered blacktreethatresultsfromsuccessively insertingthekeys intoaninitiallyemptytree nowshowthered blacktreesthatresultfromthesuccessivedeletionofthekeysintheorder inwhichlinesofthecodeforrb delete fixupmightweexamineormodifythesentinelt nil ineachofthecasesoffigure givethecountofblacknodesfromtherootof thesubtreeshowntoeachofthesubtrees andverifythateachcountremainsthesameafterthetransformation whenanodehasacolorattributecorc usethenotationcount orcount symbolicallyinyourcount professorsskeltonandbaronareconcernedthatatthestartofcase ofrb delete fixup thenodex pmightnotbeblack iftheprofessorsarecorrect thenlines arewrong showthatx pmustbeblackatthestartofcase sothattheprofessorshavenothingtoworryabout supposethatanodexisinsertedintoared blacktreewithrb insertandthenisimmediatelydeletedwithrb delete istheresultingred blacktreethesameastheinitialred blacktree justifyyouranswer problemsforchapter problems persistentdynamicsetsduringthecourseofanalgorithm wesometimes ndthatweneedtomaintainpast versionsofadynamicsetasitisupdated wecallsuchasetpersistent onewaytoimplementapersistentsetistocopytheentiresetwheneveritismodi butthisapproachcanslowdownaprogramandalsoconsumemuchspace sometimes wecandomuchbetter considerapersistentsetswiththeoperationsinsert delete andsearch whichweimplementusingbinarysearchtreesasshowninfigure maintainaseparaterootforeveryversionoftheset inordertoinsertthekey intotheset wecreateanewnodewithkey thisnodebecomestheleftchildofanewnodewithkey sincewecannotmodifytheexistingnodewithkey similarly thenewnodewithkey becomestheleftchildofanewnodewithkey whoserightchildistheexistingnodewithkey thenewnodewithkey becomes inturn therightchildofanewrootr withkey whoseleftchildistheexistingnodewithkey wethuscopyonlypartofthetreeandsharesomeofthenodeswiththeoriginaltree asshowninfigure assumethateachtreenodehastheattributeskey andrightbutnoparent seealsoexercise rrrfigure abinarysearchtreewithkeys thepersistentbinarysearchtreethatresultsfromtheinsertionofkey themostrecentversionofthesetconsistsofthenodesreachablefromtherootr andthepreviousversionconsistsofthenodesreachablefromr heavilyshadednodesareaddedwhenkey isinserted chapter blacktreesa forageneralpersistentbinarysearchtree identifythenodesthatweneedtochangetoinsertakeykordeleteanodey writeaprocedurepersistent insertthat givenapersistenttreetandakeyktoinsert returnsanewpersistenttreet thatistheresultofinsert ingkintot iftheheightofthepersistentbinarysearchtreetish whatarethetimeandspacerequirementsofyourimplementationofpersistent insert thespacerequirementisproportionaltothenumberofnewnodesallocated supposethatwehadincludedtheparentattributeineachnode inthiscase persistent insertwouldneedtoperformadditionalcopying provethatpersistent insertwouldthenrequire timeandspace wherenisthenumberofnodesinthetree showhowtousered blacktreestoguaranteethattheworst caserunningtimeandspaceareo lgn perinsertionordeletion joinoperationonred blacktreesthejoinoperationtakestwodynamicsetss ands andanelementxsuchthatforanyx andx wehavex keyx keyx itreturnsasetsds fxg inthisproblem weinvestigatehowtoimplementthejoinoperationonred blacktrees givenared blacktreet letusstoreitsblack heightasthenewattributet arguethatrb insertandrb deletecanmaintainthebhattributewith outrequiringextrastorageinthenodesofthetreeandwithoutincreasingthe asymptoticrunningtimes showthatwhiledescendingthrought wecande terminetheblack heightofeachnodewevisitino timepernodevisited wewishtoimplementtheoperationrb whichdestroyst andt andreturnsared blacktreetdt fxg letnbethetotalnumberofnodesint andt assumethatt bht describeano lgn timealgorithmthat ndsablacknodeyint withthelargestkeyfromamongthosenodeswhoseblack heightist lettybethesubtreerootedaty describehowty fxg canreplacetyino timewithoutdestroyingthebinary treeproperty whatcolorshouldwemakexsothatred blackproperties aremain tained describehowtoenforceproperties ino lgn problemsforchapter arguethatnogeneralityislostbymakingtheassumptioninpart describethesymmetricsituationthatariseswhent bht arguethattherunningtimeofrb joiniso lgn avltreesanavltreeisabinarysearchtreethatisheightbalanced foreachnodex theheightsoftheleftandrightsubtreesofxdifferbyatmost toimplementanavltree wemaintainanextraattributeineachnode histheheightofnodex asforanyotherbinarysearchtreet weassumethatt rootpointstotherootnode provethatanavltreewithnnodeshasheighto lgn hint provethatanavltreeofheighthhasatleastfhnodes wherefhisthehthfibonaccinumber toinsertintoanavltree rstplaceanodeintotheappropriateplaceinbi narysearchtreeorder afterward thetreemightnolongerbeheightbalanced speci cally theheightsoftheleftandrightchildrenofsomenodemightdifferby describeaprocedurebalance whichtakesasubtreerootedatxwhoseleftandrightchildrenareheightbalancedandhaveheightsthatdiffer byatmost andaltersthesubtreerootedatxtobeheightbalanced hint userotations usingpart describearecursiveprocedureavl insert thattakesanodexwithinanavltreeandanewlycreatednode whosekeyhasal readybeen lledin andadds tothesubtreerootedatx maintainingthepropertythatxistherootofanavltree asintree insertfromsec tion assumethat keyhasalreadybeen lledinandthat leftdniland rightdnil alsoassumethat toinsertthenode intotheavltreet wecallavl insert showthatavl insert runonann nodeavltree takeso lgn timeandperformso rotations treapsifweinsertasetofnitemsintoabinarysearchtree theresultingtreemaybehorriblyunbalanced leadingtolongsearchtimes aswesawinsection however randomlybuiltbinarysearchtreestendtobebalanced therefore strategythat onaverage buildsabalancedtreefora xedsetofitemswouldbeto randomlypermutetheitemsandtheninserttheminthatorderintothetree whatifwedonothavealltheitemsatonce ifwereceivetheitemsoneatatime canwestillrandomlybuildabinarysearchtreeoutofthem chapter blacktreesg atreap eachnodexislabeledwithx priority forexample theroothaskeygandpriority wewillexamineadatastructurethatanswersthisquestionintheaf rmative atreapisabinarysearchtreewithamodi edwayoforderingthenodes showsanexample asusual eachnodexinthetreehasakeyvaluex inaddition weassignx priority whichisarandomnumberchosenindependentlyforeachnode weassumethatallprioritiesaredistinctandalsothatallkeysare distinct thenodesofthetreapareorderedsothatthekeysobeythebinary treepropertyandtheprioritiesobeythemin heaporderproperty ifisaleftchildofu thenkey ifisarightchildofu thenkey ifisachildofu thenpriority priority thiscombinationofpropertiesiswhythetreeiscalleda treap ithasfeaturesofbothabinarysearchtreeandaheap ithelpstothinkoftreapsinthefollowingway supposethatweinsertnodesx withassociatedkeys intoatreap thentheresultingtreapisthetreethatwouldhavebeenformedifthenodeshadbeeninsertedintoanormalbinarysearchtreeintheordergivenbytheir randomlychosen priorities priority prioritymeansthatwehadinsertedxibeforexj showthatgivenasetofnodesx withassociatedkeysandpriori ties alldistinct thetreapassociatedwiththesenodesisunique showthattheexpectedheightofatreapis lgn andhencetheexpectedtimetosearchforavalueinthetreapis lgn letusseehowtoinsertanewnodeintoanexistingtreap rstthingwedoisassigntothenewnodearandompriority thenwecalltheinsertionalgorithm whichwecalltreap insert whoseoperationisillustratedinfigure problemsforchapter theoperationoftreap insert theoriginaltreap priortoinsertion thetreapafterinsertinganodewithkeycandpriority intermediatestageswheninsertinganodewithkeydandpriority thetreapaftertheinsertionofparts isdone thetreapafterinsertinganodewithkeyfandpriority chapter blacktrees spinesofabinarysearchtree theleftspineisshadedin andtherightspineisshadedin explainhowtreap insertworks explaintheideainenglishandgivepseu docode hint executetheusualbinary treeinsertionprocedureandthenperformrotationstorestorethemin heaporderproperty showthattheexpectedrunningtimeoftreap insertis lgn treap insertperformsasearchandthenasequenceofrotations althoughthesetwooperationshavethesameexpectedrunningtime theyhavedifferent costsinpractice asearchreadsinformationfromthetreapwithoutmodifyingit incontrast arotationchangesparentandchildpointerswithinthetreap onmost computers readoperationsaremuchfasterthanwriteoperations thuswewould liketreap inserttoperformfewrotations wewillshowthattheexpectednumberofrotationsperformedisboundedbyaconstant inordertodoso wewillneedsomede nitions whichfigure depicts theleftspineofabinarysearchtreetisthesimplepathfromtheroottothenodewiththesmallestkey inotherwords theleftspineisthesimplepathfromtherootthatconsistsofonlyleftedges symmetrically therightspineoftisthesimplepathfromtherootconsistingofonlyrightedges thelengthofaspineisthenumberofnodesitcontains considerthetreaptimmediatelyaftertreap inserthasinsertednodex letcbethelengthoftherightspineoftheleftsubtreeofx letdbethelengthoftheleftspineoftherightsubtreeofx provethatthetotalnumberofrotationsthatwereperformedduringtheinsertionofxisequaltoccd wewillnowcalculatetheexpectedvaluesofcandd withoutlossofgenerality weassumethatthekeysare sincewearecomparingthemonlytooneanother notesforchapter fornodesxandyintreapt wherey letkdx keyandidy wede neindicatorrandomvariablesxikdifyisintherightspineoftheleftsubtreeofxg showthatxikd ifandonlyify priority priority forevery suchthaty wehavey priority priority showthatprfxikd kic kic showthate cdk xjd useasymmetryargumenttoshowthate nkc concludethattheexpectednumberofrotationsperformedwheninsertinganodeintoatreapislessthan chapternotestheideaofbalancingasearchtreeisduetoadel vel ski andlandis whointroducedaclassofbalancedsearchtreescalled avltrees describedin anotherclassofsearchtrees called trees wasintroducedby hopcroft unpublished treemaintainsbalancebymanipulating thedegreesofnodesinthetree chapter coversageneralizationof trees introducedbybayerandmccreight called trees blacktreeswereinventedbybayer underthename symmetricbinaryb trees guibasandsedgewick studiedtheirpropertiesatlengthandin troducedthered blackcolorconvention andersson givesasimpler code chapter blacktreesvariantofred blacktrees weiss callsthisvariantaa trees anaa treeissimilartoared blacktreeexceptthatleftchildrenmayneverbered treaps thesubjectofproblem wereproposedbyseidelandaragon theyarethedefaultimplementationofadictionaryinleda whichisa implementedcollectionofdatastructuresandalgorithms therearemanyothervariationsonbalancedbinarytrees includingweight balancedtrees neighbortrees andscapegoattrees perhapsthemostintriguingarethe splaytrees introducedbysleatorandtarjan whichare adjusting seetarjan foragooddescriptionofsplaytrees splaytreesmaintainbalancewithoutanyexplicitbalanceconditionsuchascolor instead splayoperations whichinvolverotations areperformedwithinthetree everytimeanaccessismade theamortizedcost seechapter ofeachopera tiononann nodetreeiso lgn skiplists provideanalternativetobalancedbinarytrees askiplistisalinkedlistthatisaugmentedwithanumberofadditionalpointers eachdictionaryoperationrunsinexpectedtimeo lgn onaskiplistofnitems augmentingdatastructuressomeengineeringsituationsrequirenomorethana textbook datastruc ture suchasadoublylinkedlist ahashtable orabinarysearchtree butmany othersrequireadashofcreativity onlyinraresituationswillyouneedtocre ateanentirelynewtypeofdatastructure moreoften itwillsuf ceto augmentatextbookdatastructurebystoringadditionalinformationinit youcan thenprogramnewoperationsforthedatastructuretosupportthedesiredapplica tion augmentingadatastructureisnotalwaysstraightforward however sincethe addedinformationmustbeupdatedandmaintainedbytheordinaryoperationson thedatastructure thischapterdiscussestwodatastructuresthatweconstructbyaugmentingred blacktrees describesadatastructurethatsupportsgeneralorder statisticoperationsonadynamicset wecanthenquickly ndtheithsmallestnumberinasetortherankofagivenelementinthetotalorderingoftheset abstractstheprocessofaugmentingadatastructureandprovidesatheoremthatcansimplifytheprocessofaugmentingred blacktrees usesthistheoremtohelpdesignadatastructureformaintainingadynamicsetof intervals suchastimeintervals givenaqueryinterval wecanthenquickly anintervalinthesetthatoverlapsit dynamicorderstatisticschapter introducedthenotionofanorderstatistic speci cally theithorderstatisticofasetofnelements wherei issimplytheelementinthesetwiththeithsmallestkey wesawhowtodetermineanyorderstatisticino timefromanunorderedset inthissection weshallseehowtomodifyred blacktreessothatwecandetermineanyorderstatisticforadynamicsetino lgn weshallalsoseehowtocomputetherankofanelement itspositioninthelinearorderoftheset ino lgn chapter augmentingdatastructures keysizefigure anorder statistictree whichisanaugmentedred blacktree shadednodesarered anddarkenednodesareblack inadditiontoitsusualattributes eachnodexhasanattributex whichisthenumberofnodes otherthanthesentinel inthesubtreerootedatx showsadatastructurethatcansupportfastorder statisticoperations anorder statistictreetissimplyared blacktreewithadditionalinformationstoredineachnode besidestheusualred blacktreeattributesx andx rightinanodex wehaveanotherattribute thisattributecontainsthenumberof internal nodesinthesubtreerootedatx includingxitself thatis thesizeofthesubtree ifwede nethesentinel ssizetobe thatis wesett nil sizetobe thenwehavetheidentityx sizedx sizecx sizec wedonotrequirekeystobedistinctinanorder statistictree forexample thetreeinfigure hastwokeyswithvalue andtwokeyswithvalue inthe presenceofequalkeys theabovenotionofrankisnotwellde ned weremove thisambiguityforanorder statistictreebyde ningtherankofanelementasthe positionatwhichitwouldbeprintedinaninorderwalkofthetree infigure forexample thekey storedinablacknodehasrank andthekey storedin arednodehasrank retrievinganelementwithagivenrankbeforeweshowhowtomaintainthissizeinformationduringinsertionanddele tion letusexaminetheimplementationoftwoorder statisticqueriesthatusethis additionalinformation webeginwithanoperationthatretrievesanelementwith agivenrank theprocedureos returnsapointertothenodecon tainingtheithsmallestkeyinthesubtreerootedatx ndthenodewiththeithsmallestkeyinanorder statistictreet wecallos dynamicorderstatistics rdx sizec ifi returnx elseifi returnos elsereturnos inline ofos wecomputer therankofnodexwithinthesubtreerootedatx thevalueofx sizeisthenumberofnodesthatcomebeforexinaninordertreewalkofthesubtreerootedatx sizec istherankofxwithinthesubtreerootedatx ifidr thennodexistheithsmallestelement andsowereturnxinline ifi thentheithsmallestelementresidesinx sleftsubtree andsowerecurseonx leftinline ifi thentheithsmallestelementresidesinx srightsubtree sincethesubtreerootedatxcontainsrelementsthatcomebeforex srightsubtreeinaninordertreewalk theithsmallestelementinthesubtreerootedatxisthe thsmallestelementinthesubtreerootedatx determinesthiselementrecursively toseehowos selectoperates considerasearchforthe thsmallestele mentintheorder statistictreeoffigure webeginwithxastheroot whosekeyis andwithid sincethesizeof sleftsubtreeis itsrankis weknowthatthenodewithrank isthe thsmallestelementin srightsubtree aftertherecursivecall xisthenodewithkey andid sincethesizeof sleftsubtreeis itsrankwithinitssubtreeis knowthatthenodewithrank isthe thsmallestelementin sleftsubtree tertherecursivecall xisthenodewithkey anditsrankwithinitssubtreeis werecurseonceagainto ndthe ndsmallestelementinthesubtreerootedatthenodewithkey wenow ndthatitsleftsubtreehassize whichmeansitisthesecondsmallestelement theprocedurereturnsapointerto thenodewithkey becauseeachrecursivecallgoesdownonelevelintheorder statistictree thetotaltimeforos selectisatworstproportionaltotheheightofthetree sincethetreeisared blacktree itsheightiso lgn wherenisthenumberofnodes therunningtimeofos selectiso lgn foradynamicsetofnelements determiningtherankofanelementgivenapointertoanodexinanorder statistictreet theprocedureos rankreturnsthepositionofxinthelinearorderdeterminedbyaninordertreewalkoft chapter augmentingdatastructuresos rank rdx sizec ydx whiley ify rdrcy sizec ydy returnrtheprocedureworksasfollows wecanthinkofnodex srankasthenumberofnodesprecedingxinaninordertreewalk plus forxitself rankmaintainsthefollowingloopinvariant atthestartofeachiterationofthewhileloopoflines ristherankofx keyinthesubtreerootedatnodey weusethisloopinvarianttoshowthatos rankworkscorrectlyasfollows initialization priortothe rstiteration setsrtobetherankofx keywithinthesubtreerootedatx settingydxinline makestheinvarianttruethe rsttimethetestinline executes maintenance attheendofeachiterationofthewhileloop wesetydy thuswemustshowthatifristherankofx keyinthesubtreerootedatyatthestartoftheloopbody thenristherankofx keyinthesubtreerootedaty pattheendoftheloopbody ineachiterationofthewhileloop weconsiderthesubtreerootedaty wehavealreadycountedthenumberofnodesinthesubtreerootedatnodeythatprecedexinaninorderwalk andsowemustaddthenodesinthesubtreerootedaty ssiblingthatprecedexinaninorderwalk plus fory pifit precedesx ifyisaleftchild thenneithery pnoranynodeiny srightsubtreeprecedesx andsoweleaveralone otherwise yisarightchildandallthenodesiny sleftsubtreeprecedex asdoesy pitself inline weaddy sizec tothecurrentvalueofr termination theloopterminateswhenydt sothatthesubtreerootedatyistheentiretree thevalueofristherankofx keyintheentiretree asanexample whenwerunos rankontheorder statistictreeoffigure ndtherankofthenodewithkey wegetthefollowingsequenceofvalues ofy keyandratthetopofthewhileloop iterationy keyr dynamicorderstatistics theprocedurereturnstherank sinceeachiterationofthewhilelooptakeso andygoesuponelevelinthetreewitheachiteration therunningtimeofos rankisatworstproportionaltotheheightofthetree lgn onann nodeorder statistictree maintainingsubtreesizesgiventhesizeattributeineachnode selectandos rankcanquicklycomputeorder statisticinformation butunlesswecanef cientlymaintainthese attributeswithinthebasicmodifyingoperationsonred blacktrees ourworkwill havebeenfornaught weshallnowshowhowtomaintainsubtreesizesforboth insertionanddeletionwithoutaffectingtheasymptoticrunningtimeofeitherop eration wenotedinsection thatinsertionintoared blacktreeconsistsoftwophases rstphasegoesdownthetreefromtheroot insertingthenewnode asachildofanexistingnode thesecondphasegoesupthetree changingcolors andperformingrotationstomaintainthered blackproperties tomaintainthesubtreesizesinthe rstphase wesimplyincrementx sizeforeachnodexonthesimplepathtraversedfromtherootdowntowardtheleaves thenewnodeaddedgetsasizeof sincethereareo lgn nodesonthetraversedpath theadditionalcostofmaintainingthesizeattributesiso lgn inthesecondphase theonlystructuralchangestotheunderlyingred blacktreearecausedbyrotations ofwhichthereareatmosttwo moreover arotationis alocaloperation onlytwonodeshavetheirsizeattributesinvalidated thelinkaroundwhichtherotationisperformedisincidentonthesetwonodes referring tothecodeforleft rotate insection weaddthefollowinglines sizedx sizedx sizecx sizec illustrateshowtheattributesareupdated thechangetoright rotateissymmetric sinceatmosttworotationsareperformedduringinsertionintoared blacktree wespendonlyo additionaltimeupdatingsizeattributesinthesecondphase thetotaltimeforinsertionintoann nodeorder statistictreeiso lgn whichisasymptoticallythesameasforanordinaryred blacktree deletionfromared blacktreealsoconsistsoftwophases rstoperatesontheunderlyingsearchtree andthesecondcausesatmostthreerotationsand otherwiseperformsnostructuralchanges seesection rstphase eitherremovesonenodeyfromthetreeormovesupwarditwithinthetree toupdatethesubtreesizes wesimplytraverseasimplepathfromnodey startingfromitsoriginalpositionwithinthetree uptotheroot decrementingthesize chapter augmentingdatastructuresleft rotate rotate xyfigure updatingsubtreesizesduringrotations thelinkaroundwhichwerotateisincidentonthetwonodeswhosesizeattributesneedtobeupdated theupdatesarelocal requiringonlythesizeinformationstoredinx andtherootsofthesubtreesshownastriangles attributeofeachnodeonthepath sincethispathhaslengtho lgn inann nodered blacktree theadditionaltimespentmaintainingsizeattributesinthe rstphaseiso lgn wehandletheo rotationsinthesecondphaseofdeletioninthesamemannerasforinsertion bothinsertionanddeletion including maintainingthesizeattributes takeo lgn timeforann nodeorder statistictree exercises showhowos operatesonthered blacktreetoffig ure showhowos rank operatesonthered blacktreetoffigure andthenodexwithx keyd writeanonrecursiveversionofos writearecursiveprocedureos rank thattakesasinputanorder statistictreetandakeykandreturnstherankofkinthedynamicsetrepresentedbyt assumethatthekeysoftaredistinct givenanelementxinann nodeorder statistictreeandanaturalnumberi howcanwedeterminetheithsuccessorofxinthelinearorderofthetreeino lgn howtoaugmentadatastructure observethatwheneverwereferencethesizeattributeofanodeineitheros selectoros rank weuseitonlytocomputearank accordingly supposewestoreineachnodeitsrankinthesubtreeofwhichitistheroot showhowto maintainthisinformationduringinsertionanddeletion rememberthatthesetwo operationscancauserotations showhowtouseanorder statistictreetocountthenumberofinversions seeproblem inanarrayofsizenintimeo nlgn considernchordsonacircle eachde nedbyitsendpoints describeano nlgn timealgorithmtodeterminethenumberofpairsofchordsthatintersectinsidethe forexample ifthenchordsarealldiametersthatmeetatthecenter thenthecorrectanswerisn assumethatnotwochordsshareanendpoint howtoaugmentadatastructuretheprocessofaugmentingabasicdatastructuretosupportadditionalfunctionalityoccursquitefrequentlyinalgorithmdesign weshalluseitagaininthenextsection todesignadatastructurethatsupportsoperationsonintervals inthissection examinethestepsinvolvedinsuchaugmentation weshallalsoproveatheorem thatallowsustoaugmentred blacktreeseasilyinmanycases wecanbreaktheprocessofaugmentingadatastructureintofoursteps chooseanunderlyingdatastructure determineadditionalinformationtomaintainintheunderlyingdatastructure verifythatwecanmaintaintheadditionalinformationforthebasicmodifyingoperationsontheunderlyingdatastructure developnewoperations aswithanyprescriptivedesignmethod youshouldnotblindlyfollowthestepsintheordergiven mostdesignworkcontainsanelementoftrialanderror andprogressonallstepsusuallyproceedsinparallel thereisnopoint forexample indeterminingadditionalinformationanddevelopingnewoperations steps ifwewillnotbeabletomaintaintheadditionalinformationef ciently neverthe thisfour stepmethodprovidesagoodfocusforyoureffortsinaugmenting adatastructure anditisalsoagoodwaytoorganizethedocumentationofan augmenteddatastructure chapter augmentingdatastructureswefollowedthesestepsinsection todesignourorder statistictrees forstep wechosered blacktreesastheunderlyingdatastructure acluetothe suitabilityofred blacktreescomesfromtheiref cientsupportofotherdynamic setoperationsonatotalorder suchasminimum maximum successor andpredecessor forstep weaddedthesizeattribute inwhicheachnodexstoresthesizeofthesubtreerootedatx generally theadditionalinformationmakesoperationsmoreef cient forexample wecouldhaveimplementedos selectandos rankusingjustthekeysstoredinthetree buttheywouldnothaverunino lgn sometimes theadditionalinformationispointerinformationratherthandata inexercise forstep weensuredthatinsertionanddeletioncouldmaintainthesizeat tributeswhilestillrunningino lgn ideally weshouldneedtoupdateonlyafewelementsofthedatastructureinordertomaintaintheadditionalinformation forexample ifwesimplystoredineachnodeitsrankinthetree theos selectandos rankprocedureswouldrunquickly butinsertinganewminimumele mentwouldcauseachangetothisinformationineverynodeofthetree whenwestoresubtreesizesinstead insertinganewelementcausesinformationtochangeinonlyo lgn nodes forstep wedevelopedtheoperationsos selectandos rank afterall theneedfornewoperationsiswhywebothertoaugmentadatastructureinthe rst occasionally ratherthandevelopingnewoperations weusetheadditionalinformationtoexpediteexistingones asinexercise augmentingred blacktreeswhenred blacktreesunderlieanaugmenteddatastructure wecanprovethatin sertionanddeletioncanalwaysef cientlymaintaincertainkindsofadditionalin formation therebymakingstep veryeasy theproofofthefollowingtheoremis similartotheargumentfromsection thatwecanmaintainthesizeattributefororder statistictrees theorem augmentingared blacktree letfbeanattributethataugmentsared blacktreetofnnodes andsupposethatthevalueoffforeachnodexdependsononlytheinformationinnodesx andx possiblyincludingx fandx wecanmaintainthevaluesoffinallnodesoftduringinsertionanddeletionwithoutasymptoticallyaffectingtheo lgn performanceoftheseoperations proofthemainideaoftheproofisthatachangetoanfattributeinanodexpropagatesonlytoancestorsofxinthetree thatis changingx fmayre howtoaugmentadatastructure quirex ftobeupdated butnothingelse updatingx fmayrequirex ftobeupdated butnothingelse andsoonupthetree oncewehaveupdated noothernodewilldependonthenewvalue andsotheprocesstermi nates sincetheheightofared blacktreeiso lgn changinganfattributeinanodecostso lgn timeinupdatingallnodesthatdependonthechange insertionofanodexintotconsistsoftwophases seesection rstphaseinsertsxasachildofanexistingnodex wecancomputethevalueofx fino timesince bysupposition itdependsonlyoninformationintheotherattributesofxitselfandtheinformationinx schildren butx schildrenareboththesentinelt nil oncewehavecomputedx thechangepropagatesupthetree thetotaltimeforthe rstphaseofinsertioniso lgn duringthesecondphase theonlystructuralchangestothetreecomefromrotations onlytwonodeschangeinarotation thetotaltimeforupdatingthefattributesiso lgn perrotation sincethenumberofrotationsduringinsertionisatmosttwo thetotaltimeforinsertioniso lgn likeinsertion deletionhastwophases seesection inthe rstphase changestothetreeoccurwhenthedeletednodeisremovedfromthetree ifthedeletednodehadtwochildrenatthetime thenitssuccessormovesintothepositionofthedeletednode propagatingtheupdatestofcausedbythesechangescostsatmosto lgn sincethechangesmodifythetreelocally fixingupthered blacktreeduringthesecondphaserequiresatmostthreerotations andeachrotation requiresatmosto lgn timetopropagatetheupdatestof likeinsertion thetotaltimefordeletioniso lgn inmanycases suchasmaintainingthesizeattributesinorder statistictrees thecostofupdatingafterarotationiso ratherthantheo lgn derivedintheproofoftheorem givesanexample exercises byaddingpointerstothenodes howtosupporteachofthedynamic queriesminimum maximum successor andpredecessorino worst casetimeonanaugmentedorder statistictree theasymptoticperformanceof otheroperationsonorder statistictreesshouldnotbeaffected canwemaintaintheblack heightsofnodesinared blacktreeasattributesinthenodesofthetreewithoutaffectingtheasymptoticperformanceofanyofthered blacktreeoperations showhow orarguewhynot howaboutmaintainingthe depthsofnodes chapter augmentingdatastructures beanassociativebinaryoperator andletabeanattributemaintainedineachnodeofared blacktree supposethatwewanttoincludeineachnodexanaddi tionalattributefsuchthatx fdx wherex xmistheinorderlistingofnodesinthesubtreerootedatx showhowtoupdatethefattributesino timeafterarotation modifyyourargumentslightlytoapplyittothesizeattributesinorder statistictrees wewishtoaugmentred blacktreeswithanoperationrb enumerate thatoutputsallthekeysksuchthatakbinared blacktreerootedatx describehowtoimplementrb enumeratein mclgn wheremisthenumberofkeysthatareoutputandnisthenumberofinternalnodesinthetree hint youdonotneedtoaddnewattributestothered blacktree intervaltreesinthissection weshallaugmentred blacktreestosupportoperationsondynamicsetsofintervals aclosedintervalisanorderedpairofrealnumbers witht theinterval representsthesetft rwt openandhalf openintervalsomitbothoroneoftheendpointsfromtheset respectively inthissection weshallassumethatintervalsareclosed extendingtheresultstoopen andhalf openintervalsisconceptuallystraightforward intervalsareconvenientforrepresentingeventsthateachoccupyacontinuousperiodoftime wemight forexample wishtoqueryadatabaseoftimeintervals ndoutwhateventsoccurredduringagiveninterval thedatastructureinthis sectionprovidesanef cientmeansformaintainingsuchanintervaldatabase wecanrepresentaninterval asanobjecti withattributesi lowdt thelowendpoint andi highdt thehighendpoint wesaythatintervalsiandi overlapifi thatis ifi lowi highandi lowi asfigure shows anytwointervalsiandi satisfytheintervaltrichotomy thatis exactlyoneofthefollowingthreepropertiesholds iandi overlap iistotheleftofi iistotherightofi anintervaltreeisared blacktreethatmaintainsadynamicsetofelements witheachelementxcontaininganintervalx int intervaltreessupportthefollowingoperations intervaltrees iiii iiiiiifigure theintervaltrichotomyfortwoclosedintervalsiandi ifiandi overlap therearefoursituations ineach lowi highandi lowi theintervalsdonotoverlap andi theintervalsdonotoverlap andi interval insert addstheelementx whoseintattributeisassumedtocontainaninterval totheintervaltreet interval delete removestheelementxfromtheintervaltreet interval returnsapointertoanelementxintheintervaltreetsuchthatx intoverlapsintervali orapointertothesentinelt nilifnosuchelementisintheset showshowanintervaltreerepresentsasetofintervals weshalltrackthefour stepmethodfromsection aswereviewthedesignofanintervaltree andtheoperationsthatrunonit underlyingdatastructurewechooseared blacktreeinwhicheachnodexcontainsanintervalx intandthekeyofxisthelowendpoint int oftheinterval aninordertreewalkofthedatastructureliststheintervalsinsortedorderbylowendpoint additionalinformationinadditiontotheintervalsthemselves eachnodexcontainsavaluex max whichisthemaximumvalueofanyintervalendpointstoredinthesubtreerootedatx maintainingtheinformationwemustverifythatinsertionanddeletiontakeo lgn timeonanintervaltreeofnnodes wecandeterminex maxgivenintervalx intandthemaxvaluesofnodex schildren chapter augmentingdatastructures intmaxfigure anintervaltree asetof intervals shownsortedbottomtotopbyleftendpoint theintervaltreethatrepresentsthem eachnodexcontainsaninterval shownabovethedashedline andthemaximumvalueofanyintervalendpointinthesubtreerootedatx shownbelowthedashedline aninordertreewalkofthetreeliststhenodesinsortedorderbyleftendpoint maxdmax int max max bytheorem insertionanddeletionrunino lgn infact wecanupdatethemaxattributesafterarotationino asexercises developingnewoperationstheonlynewoperationweneedisinterval ndsanodeintreetwhoseintervaloverlapsintervali ifthereisnointervalthatoverlapsiinthetree theprocedurereturnsapointertothesentinelt nil intervaltrees interval xdt whilex nilandidoesnotoverlapx int ifx nilandx maxi xdx elsexdx returnxthesearchforanintervalthatoverlapsistartswithxattherootofthetreeandproceedsdownward itterminateswheneitherit ndsanoverlappingintervalorxpointstothesentinelt nil sinceeachiterationofthebasiclooptakeso andsincetheheightofann nodered blacktreeiso lgn theinterval searchproceduretakeso lgn beforeweseewhyinterval searchiscorrect sexaminehowitworksontheintervaltreeinfigure supposewewishto ndanintervalthatoverlaps theintervalid webeginwithxastheroot whichcontains anddoesnotoverlapi sincex maxd isgreaterthani lowd theloopcontinueswithxastheleftchildoftheroot thenodecontaining whichalsodoesnotoverlapi thistime maxd islessthani lowd andsotheloopcontinueswiththerightchildofxasthenewx becausetheinterval storedinthisnodeoverlapsi theprocedurereturnsthisnode asanexampleofanunsuccessfulsearch supposewewishto ndanintervalthatoverlapsid intheintervaltreeoffigure weonceagainbe ginwithxastheroot sincetheroot sinterval doesnotoverlapi andsincex maxd isgreaterthani lowd wegolefttothenodecon taining interval doesnotoverlapi andx maxd islessthani lowd andsowegoright notethatnointervalintheleftsubtreeover lapsi interval doesnotoverlapi anditsleftchildist nil soagainwegoright theloopterminates andwereturnthesentinelt nil toseewhyinterval searchiscorrect wemustunderstandwhyitsuf cestoexamineasinglepathfromtheroot thebasicideaisthatatanynodex ifx intdoesnotoverlapi thesearchalwaysproceedsinasafedirection thesearchwillde nitely ndanoverlappingintervalifthetreecontainsone followingtheoremstatesthispropertymoreprecisely theorem anyexecutionofinterval eitherreturnsanodewhoseintervaloverlapsi oritreturnst nilandthetreetcontainsnonodewhoseintervalover lapsi chapter augmentingdatastructuresi iiiiiiifigure intervalsintheproofoftheorem thevalueofx maxisshownineachcaseasadashedline thesearchgoesright nointervali inx sleftsubtreecanoverlapi thesearchgoesleft theleftsubtreeofxcontainsanintervalthatoverlapsi situationnotshown orx sleftsubtreecontainsanintervali suchthati highdx max sinceidoesnotoverlapi neitherdoesitoverlapanyintervali inx srightsubtree sincei lowi proofthewhileloopoflines terminateseitherwhenxdt niloriover lapsx int inthelattercase itiscertainlycorrecttoreturnx therefore wefocusontheformercase inwhichthewhileloopterminatesbecausexdt nil weusethefollowinginvariantforthewhileloopoflines iftreetcontainsanintervalthatoverlapsi thenthesubtreerootedatxcontainssuchaninterval weusethisloopinvariantasfollows initialization priortothe rstiteration setsxtobetherootoft sothattheinvariantholds maintenance eachiterationofthewhileloopexecuteseitherline orline weshallshowthatbothcasesmaintaintheloopinvariant ifline isexecuted thenbecauseofthebranchconditioninline wehavex leftdt nil orx max ifx leftdt nil thesubtreerootedatx leftclearlycontainsnointervalthatoverlapsi andsosettingxtox rightmaintainstheinvariant suppose therefore thatx nilandx max asfigure shows foreachintervali inx sleftsubtree wehavei highx max bytheintervaltrichotomy therefore andidonotoverlap theleftsubtreeofxcontainsnointervalsthatoverlapi sothatsettingxtox rightmaintainstheinvariant intervaltrees ontheotherhand isexecuted thenwewillshowthatthecontrapos itiveoftheloopinvariantholds thatis ifthesubtreerootedatx leftcon tainsnointervaloverlappingi thennointervalanywhereinthetreeoverlapsi sinceline isexecuted thenbecauseofthebranchconditioninline havex maxi moreover byde nitionofthemaxattribute sleftsubtreemustcontainsomeintervali suchthati highdx maxi illustratesthesituation sinceiandi donotoverlap andsinceitisnottruethati itfollowsbytheintervaltrichotomythati intervaltreesarekeyedonthelowendpointsofintervals andthusthesearch treepropertyimpliesthatforanyintervali inx srightsubtree lowi bytheintervaltrichotomy iandi donotoverlap weconcludethatwhetherornotanyintervalinx sleftsubtreeoverlapsi settingxtox leftmaintainstheinvariant termination iftheloopterminateswhenxdt nil thenthesubtreerootedatxcontainsnointervaloverlappingi thecontrapositiveoftheloopinvariantimpliesthattcontainsnointervalthatoverlapsi henceitiscorrecttoreturnxdt nil theinterval searchprocedureworkscorrectly exercises writepseudocodeforleft rotatethatoperatesonnodesinanintervaltreeandupdatesthemaxattributesino rewritethecodeforinterval searchsothatitworksproperlywhenallinter valsareopen describeanef cientalgorithmthat givenanintervali returnsanintervalover lappingithathastheminimumlowendpoint ort nilifnosuchintervalexists chapter augmentingdatastructures givenanintervaltreetandanintervali describehowtolistallintervalsintthatoverlapiino min klgn wherekisthenumberofintervalsintheoutputlist hint onesimplemethodmakesseveralqueries modifyingthetreebetweenqueries aslightlymorecomplicatedmethoddoesnotmodifythetree suggestmodi cationstotheinterval treeprocedurestosupportthenewopera tioninterval exactly wheretisanintervaltreeandiisaninterval theoperationshouldreturnapointertoanodexintsuchthatx int lowdi lowandx int highdi ort niliftcontainsnosuchnode alloperations includinginterval exactly shouldrunino lgn timeonann nodeintervaltree showhowtomaintainadynamicsetqofnumbersthatsupportstheoperationmin gap whichgivesthemagnitudeofthedifferenceofthetwoclosestnum bersinq forexample ifqdf thenmin gap returns arethetwoclosestnumbersinq maketheop erationsinsert delete andmin gapasef cientaspossible andanalyzetheirrunningtimes vlsidatabasescommonlyrepresentanintegratedcircuitasalistofrectan gles assumethateachrectangleisrectilinearlyoriented sidesparalleltothe andy axes sothatwerepresentarectanglebyitsminimumandmaximumx andy coordinates giveano nlgn timealgorithmtodecidewhetherornotasetofnrectanglessorepresentedcontainstworectanglesthatoverlap youralgorithmneednotreportallintersectingpairs butitmustreportthatanoverlapexistsifone rectangleentirelycoversanother eveniftheboundarylinesdonotintersect hint movea sweep lineacrossthesetofrectangles problems pointofmaximumoverlap supposethatwewishtokeeptrackofapointofmaximumoverlapinasetofintervals apointwiththelargestnumberofintervalsinthesetthatoverlapit showthattherewillalwaysbeapointofmaximumoverlapthatisanendpointofoneofthesegments notesforchapter designadatastructurethatef cientlysupportstheoperationsinterval insert interval delete andfind pom whichreturnsapointofmax imumoverlap hint keepared blacktreeofalltheendpoints associateavalueofc witheachleftendpoint andassociateavalueof witheachrightendpoint augmenteachnodeofthetreewithsomeextrainformationto maintainthepointofmaximumoverlap josephuspermutationwede nethejosephusproblemasfollows supposethatnpeopleformacircleandthatwearegivenapositiveintegermn beginningwithadesignated rstperson weproceedaroundthecircle removingeverymthperson aftereachpersonisremoved countingcontinuesaroundthecirclethatremains thisprocess continuesuntilwehaveremovedallnpeople theorderinwhichthepeopleareremovedfromthecirclede nesthe josephuspermutationoftheintegers forexample josephuspermutationish supposethatmisaconstant describeano timealgorithmthat givenanintegern outputsthe josephuspermutation supposethatmisnotaconstant describeano nlgn timealgorithmthat givenintegersnandm outputsthe josephuspermutation chapternotesintheirbook preparataandshamos describeseveraloftheintervaltreesthatappearintheliterature citingworkbyh edelsbrunner ande mccreight thebookdetailsanintervaltreethat givenastaticdatabase ofnintervals allowsustoenumerateallkintervalsthatoverlapagivenqueryintervalino kclgn ivadvanceddesignandanalysistechniques introductionthispartcoversthreeimportanttechniquesusedindesigningandanalyzingef cientalgorithms dynamicprogramming chapter greedyalgorithms chap ter andamortizedanalysis chapter earlierpartshavepresentedother widelyapplicabletechniques suchasdivide conquer randomization andhow tosolverecurrences thetechniquesinthispartaresomewhatmoresophisticated buttheyhelpustoattackmanycomputationalproblems thethemesintroducedin thispartwillrecurlaterinthisbook dynamicprogrammingtypicallyappliestooptimizationproblemsinwhichwemakeasetofchoicesinordertoarriveatanoptimalsolution aswemakeeachchoice subproblemsofthesameformoftenarise dynamicprogrammingiseffectivewhenagivensubproblemmayarisefrommorethanonepartialsetofchoices thekeytechniqueistostorethesolutiontoeachsuchsubproblemincaseit shouldreappear chapter showshowthissimpleideacansometimestransform exponential timealgorithmsintopolynomial timealgorithms likedynamic programmingalgorithms greedyalgorithmstypicallyapplytooptimizationproblemsinwhichwemakeasetofchoicesinordertoarriveatanoptimalsolution theideaofagreedyalgorithmistomakeeachchoiceinalocally optimalmanner asimpleexampleiscoin changing tominimizethenumberof coinsneededtomakechangeforagivenamount wecanrepeatedlyselect thelargest denominationcointhatisnotlargerthantheamountthatremains greedyapproachprovidesanoptimalsolutionformanysuchproblemsmuchmore quicklythanwouldadynamic programmingapproach wecannotalwayseasily tellwhetheragreedyapproachwillbeeffective however chapter introduces partivadvanceddesignandanalysistechniquesmatroidtheory whichprovidesamathematicalbasisthatcanhelpustoshowthatagreedyalgorithmyieldsanoptimalsolution weuseamortizedanalysistoanalyzecertainalgorithmsthatperformasequenceofsimilaroperations insteadofboundingthecostofthesequenceofoperations byboundingtheactualcostofeachoperationseparately anamortizedanalysis providesaboundontheactualcostoftheentiresequence oneadvantageofthis approachisthatalthoughsomeoperationsmightbeexpensive manyothersmight becheap inotherwords manyoftheoperationsmightruninwellundertheworst casetime amortizedanalysisisnotjustananalysistool however itisalsoawayofthinkingaboutthedesignofalgorithms sincethedesignofanalgorithmandthe analysisofitsrunningtimeareoftencloselyintertwined chapter introduces threewaystoperformanamortizedanalysisofanalgorithm dynamicprogrammingdynamicprogramming likethedivide conquermethod solvesproblemsbycombiningthesolutionstosubproblems programming inthiscontextrefers toatabularmethod nottowritingcomputercode aswesawinchapters conqueralgorithmspartitiontheproblemintodisjointsubprob lems solvethesubproblemsrecursively andthencombinetheirsolutionstosolve theoriginalproblem incontrast dynamicprogrammingapplieswhenthesubprob lemsoverlap thatis whensubproblemssharesubsubproblems inthiscontext adivide conqueralgorithmdoesmoreworkthannecessary repeatedlysolv ingthecommonsubsubproblems adynamic programmingalgorithmsolveseach subsubproblemjustonceandthensavesitsanswerinatable therebyavoidingthe workofrecomputingtheanswereverytimeitsolveseachsubsubproblem wetypicallyapplydynamicprogrammingtooptimizationproblems suchprob lemscanhavemanypossiblesolutions eachsolutionhasavalue andwewishto ndasolutionwiththeoptimal minimumormaximum wecallsuchasolutionanoptimalsolutiontotheproblem asopposedtotheoptimalsolution sincetheremaybeseveralsolutionsthatachievetheoptimalvalue whendevelopingadynamic programmingalgorithm wefollowasequenceoffoursteps characterizethestructureofanoptimalsolution recursivelyde nethevalueofanoptimalsolution computethevalueofanoptimalsolution typicallyinabottom upfashion constructanoptimalsolutionfromcomputedinformation steps formthebasisofadynamic programmingsolutiontoaproblem ifweneedonlythevalueofanoptimalsolution andnotthesolutionitself thenwe canomitstep whenwedoperformstep wesometimesmaintainadditional informationduringstep sothatwecaneasilyconstructanoptimalsolution thesectionsthatfollowusethedynamic programmingmethodtosolvesomeoptimizationproblems examinestheproblemofcuttingarodinto chapter dynamicprogrammingrodsofsmallerlengthinwaythatmaximizestheirtotalvalue askshowwecanmultiplyachainofmatriceswhileperformingthefewesttotalscalar multiplications giventheseexamplesofdynamicprogramming dis cussestwokeycharacteristicsthataproblemmusthavefordynamicprogramming tobeaviablesolutiontechnique thenshowshowto ndthelongest commonsubsequenceoftwosequencesviadynamicprogramming finally sec tion usesdynamicprogrammingtoconstructbinarysearchtreesthatareopti mal givenaknowndistributionofkeystobelookedup rodcuttingour rstexampleusesdynamicprogrammingtosolveasimpleproblemindecid ingwheretocutsteelrods serlingenterprisesbuyslongsteelrodsandcutsthem intoshorterrods whichitthensells eachcutisfree themanagementofserling enterpriseswantstoknowthebestwaytocutuptherods weassumethatweknow forid thepricepiindollarsthatserlingenterpriseschargesforarodoflengthiinches rodlengthsarealwaysanintegralnumberofinches givesasamplepricetable therod cuttingproblemisthefollowing givenarodoflengthninchesandatableofpricespiforid determinethemaximumrevenuernobtain ablebycuttinguptherodandsellingthepieces notethatifthepricepnforarodoflengthnislargeenough anoptimalsolutionmayrequirenocuttingatall considerthecasewhennd showsallthewaystocutuparodof inchesinlength includingthewaywithnocutsatall weseethatcuttinga inchrodintotwo inchpiecesproducesrevenuep whichisoptimal wecancutuparodoflengthnin differentways sincewehaveanin dependentoptionofcutting ornotcutting atdistanceiinchesfromtheleftend lengthi pricepi asamplepricetableforrods eachrodoflengthiinchesearnsthecompanypidollarsofrevenue rodcutting possiblewaysofcuttinguparodoflength aboveeachpieceisthevalueofthatpiece accordingtothesamplepricechartoffigure theoptimalstrategyis cuttingtherodintotwopiecesoflength whichhastotalvalue forid wedenoteadecompositionintopiecesusingordinaryadditivenotation sothat indicatesthatarodoflength iscutintothreepieces twooflength andoneoflength ifanoptimalsolutioncutstherodintokpieces forsome thenanoptimaldecompositionndi ccikoftherodintopiecesoflengthsi ikprovidesmaximumcorrespondingrevenuerndpi cpi ccpik foroursampleproblem wecandeterminetheoptimalrevenue guresri forid byinspection withthecorrespondingoptimaldecompositions ifwerequiredthepiecestobecutinorderofnondecreasingsize therewouldbefewerwaystoconsider fornd wewouldconsideronly suchways parts infigure thenumberofwaysiscalledthepartitionfunction itisapproximatelyequaltoep thisquantityislessthan butstillmuchgreaterthananypolynomialinn weshallnotpursuethislineofinquiryfurther however chapter dynamicprogrammingr fromsolution nocuts fromsolution nocuts fromsolution nocuts fromsolution fromsolution fromsolution nocuts fromsolution fromsolution fromsolution fromsolution nocuts moregenerally wecanframethevaluesrnforn intermsofoptimalrev enuesfromshorterrods rndmax crn crn rstargument correspondstomakingnocutsatallandsellingtherodoflengthnasis theothern argumentstomaxcorrespondtothemaximumrev enueobtainedbymakinganinitialcutoftherodintotwopiecesofsizeiandni foreachid andthenoptimallycuttingupthosepiecesfurther obtainingrevenuesriandrnifromthosetwopieces sincewedon tknowaheadoftimewhichvalueofioptimizesrevenue wehavetoconsiderallpossiblevaluesforiandpicktheonethatmaximizesrevenue wealsohavetheoptionofpickingnoiatallifwecanobtainmorerevenuebysellingtheroduncut notethattosolvetheoriginalproblemofsizen wesolvesmallerproblemsofthesametype butofsmallersizes oncewemakethe rstcut wemayconsider thetwopiecesasindependentinstancesoftherod cuttingproblem theoverall optimalsolutionincorporatesoptimalsolutionstothetworelatedsubproblems maximizingrevenuefromeachofthosetwopieces wesaythattherod cutting problemexhibitsoptimalsubstructure optimalsolutionstoaproblemincorporateoptimalsolutionstorelatedsubproblems whichwemaysolveindependently inarelated butslightlysimpler waytoarrangearecursivestructurefortherod cuttingproblem weviewadecompositionasconsistingofa rstpieceoflengthicutofftheleft handend andthenaright handremainderoflengthni onlytheremainder andnotthe rstpiece maybefurtherdivided wemayviewevery decompositionofalength nrodinthisway asa rstpiecefollowedbysomedecompositionoftheremainder whendoingso wecancouchthesolutionwith nocutsatallassayingthatthe rstpiecehassizeidnandrevenuepnandthattheremainderhassize withcorrespondingrevenuer wethusobtainthefollowingsimplerversionofequation rndmax picrni rodcutting inthisformulation anoptimalsolutionembodiesthesolutiontoonlyonerelatedsubproblem theremainder ratherthantwo recursivetop downimplementationthefollowingprocedureimplementsthecomputationimplicitinequation inastraightforward recursivemanner rod ifn return forid ton qdmax iccut rod returnqprocedurecut rodtakesasinputanarrayp nofpricesandanintegern anditreturnsthemaximumrevenuepossibleforarodoflengthn ifnd norevenueispossible andsocut rodreturns inline initializesthemaximumrevenueqto sothattheforloopinlines correctlycomputesqdmax piccut rod thenreturnsthisvalue asimpleinductiononnprovesthatthisanswerisequaltothedesiredanswerrn usingequation ifyouweretocodeupcut rodinyourfavoriteprogramminglanguageandrunitonyourcomputer youwould ndthatoncetheinputsizebecomesmoderately yourprogramwouldtakealongtimetorun fornd youwould ndthatyourprogramtakesatleastseveralminutes andmostlikelymorethananhour youwould ndthateachtimeyouincreasenby yourprogram srunningtimewouldapproximatelydouble whyiscut rodsoinef cient theproblemisthatcut rodcallsitselfrecursivelyoverandoveragainwiththesameparametervalues itsolvesthe samesubproblemsrepeatedly illustrateswhathappensfornd rod callscut rod forid equivalently rod callscut rod foreachjd whenthisprocessunfoldsrecursively theamountofworkdone asafunctionofn growsexplosively toanalyzetherunningtimeofcut rod lett denotethetotalnumberofcallsmadetocut rodwhencalledwithitssecondparameterequalton thisexpressionequalsthenumberofnodesinasubtreewhoserootislabelednintherecursiontree thecountincludestheinitialcallatitsroot chapter dynamicprogramming therecursiontreeshowingrecursivecallsresultingfromacallcut rod fornd eachnodelabelgivesthesizenofthecorrespondingsubproblem sothatanedgefromaparentwithlabelstoachildwithlabeltcorrespondstocuttingoffaninitialpieceofsizestandleavingaremainingsubproblemofsizet apathfromtheroottoaleafcorrespondstooneofthe waysofcuttinguparodoflengthn ingeneral thisrecursiontreehas nnodesand leaves xjd theinitial isforthecallattheroot andthetermt countsthenumberofcalls includingrecursivecalls duetothecallcut rod wherejdni asexercise asksyoutoshow andsotherunningtimeofcut rodisexponentialinn inretrospect thisexponentialrunningtimeisnotsosurprising rodex plicitlyconsidersallthe possiblewaysofcuttinguparodoflengthn thetreeofrecursivecallshas leaves oneforeachpossiblewayofcuttinguptherod thelabelsonthesimplepathfromtheroottoaleafgivethesizesofeach remainingright handpiecebeforemakingeachcut thatis thelabelsgivethe correspondingcutpoints measuredfromtheright handendoftherod usingdynamicprogrammingforoptimalrodcuttingwenowshowhowtoconvertcut rodintoanef cientalgorithm usingdynamicprogramming thedynamic programmingmethodworksasfollows havingobservedthatanaiverecursivesolutionisinef cientbecauseitsolvesthesamesubproblemsre peatedly wearrangeforeachsubproblemtobesolvedonlyonce savingitssolu tion ifweneedtorefertothissubproblem ssolutionagainlater wecanjustlookit rodcutting ratherthanrecomputeit dynamicprogrammingthususesadditionalmemorytosavecomputationtime itservesanexampleofatime memorytrade thesavingsmaybedramatic anexponential timesolutionmaybetransformedintoa polynomial timesolution adynamic programmingapproachrunsinpolynomial timewhenthenumberofdistinctsubproblemsinvolvedispolynomialintheinputsizeandwecansolveeachsuchsubprobleminpolynomialtime thereareusuallytwoequivalentwaystoimplementadynamic programmingapproach weshallillustratebothofthemwithourrod cuttingexample rstapproachistop downwithmemoization inthisapproach wewritetheprocedurerecursivelyinanaturalmanner butmodi edtosavetheresultof eachsubproblem usuallyinanarrayorhashtable theprocedurenow rstchecks toseewhetherithaspreviouslysolvedthissubproblem ifso itreturnsthesaved savingfurthercomputationatthislevel ifnot theprocedurecomputesthe valueintheusualmanner wesaythattherecursiveprocedurehasbeenmemoized remembers whatresultsithascomputedpreviously thesecondapproachisthebottom upmethod thisapproachtypicallydependsonsomenaturalnotionofthe ofasubproblem suchthatsolvinganypar ticularsubproblemdependsonlyonsolving smaller subproblems wesortthesubproblemsbysizeandsolvetheminsizeorder smallest rst whensolvinga particularsubproblem wehavealreadysolvedallofthesmallersubproblemsits solutiondependsupon andwehavesavedtheirsolutions wesolveeachsub problemonlyonce andwhenwe rstseeit wehavealreadysolvedallofitsprerequisitesubproblems thesetwoapproachesyieldalgorithmswiththesameasymptoticrunningtime exceptinunusualcircumstanceswherethetop downapproachdoesnotactually recursetoexamineallpossiblesubproblems thebottom upapproachoftenhas muchbetterconstantfactors sinceithaslessoverheadforprocedurecalls hereisthethepseudocodeforthetop downcut rodprocedure withmemo izationadded memoized rod letr nbeanewarray forid ton returnmemoized rod aux thisisnotamisspelling thewordreallyismemoization notmemorization memoizationcomesfrommemo sincethetechniqueconsistsofrecordingavaluesothatwecanlookituplater chapter dynamicprogrammingmemoized rod aux ifr returnr ifn elseq forid ton qdmax icmemoized rod aux ndq returnqhere themainprocedurememoized rodinitializesanewauxiliaryar rayr nwiththevalue aconvenientchoicewithwhichtodenote known knownrevenuevaluesarealwaysnonnegative itthencallsitshelperroutine memoized rod aux theprocedurememoized rod auxisjustthememoizedversionofourpreviousprocedure rod rstchecksinline toseewhetherthedesiredvalueisalreadyknownand ifitis thenline returnsit otherwise lines computethedesiredvalueqintheusualmanner savesitinr andline returnsit thebottom upversionisevensimpler rod letr nbeanewarray forjd ton forid toj qdmax icr jdq returnr nforthebottom updynamic programmingapproach rodusesthenaturalorderingofthesubproblems aproblemofsizeiis smaller thanasubproblemofsizejifi theproceduresolvessubproblemsofsizesjd inthatorder ofprocedurebottom rodcreatesanewarrayr ninwhichtosavetheresultsofthesubproblems andline initializesr sincearodoflength earnsnorevenue lines solveeachsubproblemofsizej forjd inorderofincreasingsize theapproachusedtosolveaproblemofaparticularsizejisthesameasthatusedbycut rod exceptthatline rodcutting thesubproblemgraphfortherod cuttingproblemwithnd thevertexlabelsgivethesizesofthecorrespondingsubproblems adirectededge indicatesthatweneedasolutiontosubproblemywhensolvingsubproblemx thisgraphisareducedversionofthetreeoffigure inwhichallnodeswiththesamelabelarecollapsedintoasinglevertexandalledgesgofromparenttochild directlyreferencesarrayentryr jinsteadofmakingarecursivecalltosolvethesubproblemofsizeji savesinr jthesolutiontothesubproblemofsizej finally returnsr whichequalstheoptimalvaluern thebottom upandtop downversionshavethesameasymptoticrunningtime therunningtimeofprocedurebottom rodis duetoitsdoubly nestedloopstructure thenumberofiterationsofitsinnerforloop inlines formsanarithmeticseries therunningtimeofitstop downcounterpart memoized rod isalso althoughthisrunningtimemaybealittlehardertosee becausearecursivecalltosolveapreviouslysolvedsubproblem returnsimmediately memoized rodsolveseachsubproblemjustonce itsolvessubproblemsforsizes tosolveasubproblemofsizen theforloopoflines iteratesntimes thetotalnumberofiterationsofthisforloop overallrecursivecallsofmemoized rod formsanarithmeticseries givingatotalof iterations justliketheinnerforloopofbottom rod weactuallyareusingaformofaggregateanalysishere weshallseeaggregateanalysisindetailinsection subproblemgraphswhenwethinkaboutadynamic programmingproblem weshouldunderstandthesetofsubproblemsinvolvedandhowsubproblemsdependononeanother thesubproblemgraphfortheproblemembodiesexactlythisinformation ure showsthesubproblemgraphfortherod cuttingproblemwithnd itisadirectedgraph containingonevertexforeachdistinctsubproblem thesub chapter dynamicprogrammingproblemgraphhasadirectededgefromthevertexforsubproblemxtothevertexforsubproblemyifdetermininganoptimalsolutionforsubproblemxinvolvesdirectlyconsideringanoptimalsolutionforsubproblemy forexample thesub problemgraphcontainsanedgefromxtoyifatop downrecursiveprocedureforsolvingxdirectlycallsitselftosolvey wecanthinkofthesubproblemgraphasa reduced collapsed versionoftherecursiontreeforthetop downrecur sivemethod inwhichwecoalesceallnodesforthesamesubproblemintoasingle vertexanddirectalledgesfromparenttochild thebottom upmethodfordynamicprogrammingconsiderstheverticesofthesubproblemgraphinsuchanorderthatwesolvethesubproblemsyadjacenttoagivensubproblemxbeforewesolvesubproblemx recallfromsectionb thattheadjacencyrelationisnotnecessarilysymmetric usingtheterminology fromchapter inabottom updynamic programmingalgorithm weconsiderthe verticesofthesubproblemgraphinanorderthatisa reversetopologicalsort topologicalsortofthetranspose seesection ofthesubproblemgraph otherwords nosubproblemisconsidereduntilallofthesubproblemsitdepends uponhavebeensolved similarly usingnotionsfromthesamechapter wecan viewthetop downmethod withmemoization fordynamicprogrammingasa depth rstsearch ofthesubproblemgraph seesection thesizeofthesubproblemgraphgd canhelpusdeterminetherunningtimeofthedynamicprogrammingalgorithm sincewesolveeachsubproblemjust therunningtimeisthesumofthetimesneededtosolveeachsubproblem typically thetimetocomputethesolutiontoasubproblemisproportionaltothedegree numberofoutgoingedges ofthecorrespondingvertexinthesubproblem graph andthenumberofsubproblemsisequaltothenumberofverticesinthesub problemgraph inthiscommoncase therunningtimeofdynamicprogramming islinearinthenumberofverticesandedges reconstructingasolutionourdynamic programmingsolutionstotherod cuttingproblemreturnthevalueofanoptimalsolution buttheydonotreturnanactualsolution alistofpiecesizes wecanextendthedynamic programmingapproachtorecordnotonlytheoptimal valuecomputedforeachsubproblem butalsoachoicethatledtotheoptimalvalue withthisinformation wecanreadilyprintanoptimalsolution hereisanextendedversionofbottom rodthatcomputes foreachrodsizej notonlythemaximumrevenuerj butalsosj theoptimalsizeofthe rstpiecetocutoff rodcutting extended rod letr nands nbenewarrays forjd ton forid toj ifq icr qdp icr jdi jdq returnrandsthisprocedureissimilartobottom rod exceptthatitcreatesthear raysinline anditupdatess jinline toholdtheoptimalsizeiofthe rstpiecetocutoffwhensolvingasubproblemofsizej thefollowingproceduretakesapricetablepandarodsizen anditcallsextended rodtocomputethearrays nofoptimal rst piecesizesandthenprintsoutthecompletelistofpiecesizesinanoptimal decompositionofarodoflengthn rod dextended rod whilen prints ndns ninourrod cuttingexample thecallextended rod wouldreturnthefollowingarrays acalltoprint rod wouldprintjust butacallwithnd wouldprintthecuts correspondingtothe rstoptimaldecomposi tionforr givenearlier exercises showthatequation followsfromequation andtheinitialcondition chapter dynamicprogramming bymeansofacounterexample thatthefollowing greedy strategydoes notalwaysdetermineanoptimalwaytocutrods nethedensityofarodoflengthitobepi thatis itsvalueperinch thegreedystrategyforarodoflengthncutsoffa rstpieceoflengthi havingmaximumdensity itthencontinuesbyapplyingthegreedystrategytotheremainingpieceof lengthni consideramodi cationoftherod cuttingprobleminwhich inadditiontoapricepiforeachrod eachcutincursa xedcostofc therevenueassociatedwithasolutionisnowthesumofthepricesofthepiecesminusthecostsofmakingthe cuts giveadynamic programmingalgorithmtosolvethismodi edproblem modifymemoized rodtoreturnnotonlythevaluebuttheactualsolution thefibonaccinumbersarede nedbyrecurrence giveano timedynamic programmingalgorithmtocomputethenthfibonaccinumber drawthesubproblemgraph howmanyverticesandedgesareinthegraph matrix chainmultiplicationournextexampleofdynamicprogrammingisanalgorithmthatsolvestheproblem ofmatrix chainmultiplication wearegivenasequence chain aniofnmatricestobemultiplied andwewishtocomputetheproducta wecanevaluatetheexpression usingthestandardalgorithmformultiply ingpairsofmatricesasasubroutineoncewehaveparenthesizedittoresolveallambiguitiesinhowthematricesaremultipliedtogether matrixmultiplicationisassociative andsoallparenthesizationsyieldthesameproduct aproductofma tricesisfullyparenthesizedifitiseitherasinglematrixortheproductoftwofullyparenthesizedmatrixproducts surroundedbyparentheses forexample ifthe chainofmatricesisha thenwecanfullyparenthesizetheproducta vedistinctways matrix chainmultiplication howweparenthesizeachainofmatricescanhaveadramaticimpactonthecostofevaluatingtheproduct rstthecostofmultiplyingtwomatrices standardalgorithmisgivenbythefollowingpseudocode whichgeneralizesthesquare matrix multiplyprocedurefromsection theattributesrowsandcolumnsarethenumbersofrowsandcolumnsinamatrix matrix ifa columns rows error incompatibledimensions elseletcbeanewa rowsb columnsmatrix forid toa rows forjd tob columns cijd forkd toa columns cijdcijcaikbkj returncwecanmultiplytwomatricesaandbonlyiftheyarecompatible thenumberofcolumnsofamustequalthenumberofrowsofb ifaisapqmatrixandbisaqrmatrix theresultingmatrixcisaprmatrix thetimetocomputecisdominatedbythenumberofscalarmultiplicationsinline whichispqr inwhatfollows weshallexpresscostsintermsofthenumberofscalarmultiplications toillustratethedifferentcostsincurredbydifferentparenthesizationsofamatrixproduct considertheproblemofachainha iofthreematrices supposethatthedimensionsofthematricesare respec tively ifwemultiplyaccordingtotheparenthesization weperform scalarmultiplicationstocomputethe matrixprod ucta plusanother scalarmultiplicationstomultiplythismatrixbya foratotalof scalarmultiplications ifinsteadwemultiplyaccordingtotheparenthesization weperform scalarmultiplicationstocomputethe matrixproducta plusanother scalarmultiplicationstomultiplya bythismatrix foratotalof scalarmultiplications computingtheproductaccordingto rstparenthesizationis timesfaster westatethematrix chainmultiplicationproblemasfollows givenachainha aniofnmatrices whereforid matrixaihasdimension chapter dynamicprogrammingpi fullyparenthesizetheproducta aninawaythatminimizesthenumberofscalarmultiplications notethatinthematrix chainmultiplicationproblem wearenotactuallymulti plyingmatrices ourgoalisonlytodetermineanorderformultiplyingmatrices thathasthelowestcost typically thetimeinvestedindeterminingthisoptimal orderismorethanpaidforbythetimesavedlateronwhenactuallyperformingthe matrixmultiplications suchasperformingonly scalarmultiplicationsinstead countingthenumberofparenthesizationsbeforesolvingthematrix chainmultiplicationproblembydynamicprogramming letusconvinceourselvesthatexhaustivelycheckingallpossibleparenthesizationsdoesnotyieldanef cientalgorithm denotethenumberofalternativeparenthe sizationsofasequenceofnmatricesbyp whennd wehavejustonematrixandthereforeonlyonewaytofullyparenthesizethematrixproduct afullyparenthesizedmatrixproductistheproductoftwofullyparenthe sizedmatrixsubproducts andthesplitbetweenthetwosubproductsmayoccur betweenthekthand stmatricesforanykd weobtaintherecurrencep ifnd xkd ifn askedyoutoshowthatthesolutiontoasimilarrecurrenceisthesequenceofcatalannumbers whichgrowsas asimplerexercise seeexercise istoshowthatthesolutiontotherecurrence thenumberofsolutionsisthusexponentialinn andthebrute forcemethodofexhaustivesearchmakesforapoorstrategywhendetermininghowtooptimallyparenthesizeamatrixchain applyingdynamicprogrammingweshallusethedynamic programmingmethodtodeterminehowtooptimallyparenthesizeamatrixchain insodoing weshallfollowthefour stepsequencethatwestatedatthebeginningofthischapter characterizethestructureofanoptimalsolution recursivelyde nethevalueofanoptimalsolution computethevalueofanoptimalsolution matrix chainmultiplication constructanoptimalsolutionfromcomputedinformation weshallgothroughthesestepsinorder demonstratingclearlyhowweapplyeachsteptotheproblem thestructureofanoptimalparenthesizationforour rststepinthedynamic programmingparadigm ndtheoptimalsub structureandthenuseittoconstructanoptimalsolutiontotheproblemfromopti malsolutionstosubproblems inthematrix chainmultiplicationproblem wecan performthisstepasfollows forconvenience letusadoptthenotationai whereij forthematrixthatresultsfromevaluatingtheproductaiaic servethatiftheproblemisnontrivial thentoparenthesizetheproductaiaic wemustsplittheproductbetweenakandakc forsomeintegerkintherangeik thatis forsomevalueofk rstcomputethematricesai kandakc jandthenmultiplythemtogethertoproducethe nalproductai thecostofparenthesizingthiswayisthecostofcomputingthematrixai plusthecostofcomputingakc plusthecostofmultiplyingthemtogether theoptimalsubstructureofthisproblemisasfollows supposethattoop timallyparenthesizeaiaic wesplittheproductbetweenakandakc thenthewayweparenthesizethe pre subchainaiaic akwithinthisoptimalparenthesizationofaiaic ajmustbeanoptimalparenthesizationofaiaic iftherewerealesscostlywaytoparenthesizeaiaic thenwecouldsubstitutethatparenthesizationintheoptimalparenthesization ofaiaic ajtoproduceanotherwaytoparenthesizeaiaic ajwhosecostwaslowerthantheoptimum acontradiction asimilarobservationholdsforhow weparenthesizethesubchainakc akc ajintheoptimalparenthesizationofaiaic itmustbeanoptimalparenthesizationofakc akc nowweuseouroptimalsubstructuretoshowthatwecanconstructanoptimalsolutiontotheproblemfromoptimalsolutionstosubproblems wehaveseenthat anysolutiontoanontrivialinstanceofthematrix chainmultiplicationproblem requiresustosplittheproduct andthatanyoptimalsolutioncontainswithinitop timalsolutionstosubprobleminstances wecanbuildanoptimalsolutionto aninstanceofthematrix chainmultiplicationproblembysplittingtheproblemintotwosubproblems optimallyparenthesizingaiaic akandakc akc ndingoptimalsolutionstosubprobleminstances andthencombiningtheseop timalsubproblemsolutions wemustensurethatwhenwesearchforthecorrect placetosplittheproduct wehaveconsideredallpossibleplaces sothatweare sureofhavingexaminedtheoptimalone chapter dynamicprogrammingstep arecursivesolutionnext wede nethecostofanoptimalsolutionrecursivelyintermsoftheoptimalsolutionstosubproblems forthematrix chainmultiplicationproblem wepickas oursubproblemstheproblemsofdeterminingtheminimumcostofparenthesizing aiaic ajfor ijn letm jbetheminimumnumberofscalarmultiplicationsneededtocomputethematrixai forthefullproblem thelowest costwaytocomputea nwouldthusbem wecande nem jrecursivelyasfollows ifidj theproblemistrivial thechainconsistsofjustonematrixai idai sothatnoscalarmultiplicationsarenecessarytocomputetheproduct forid tocomputem jwheni wetakeadvantageofthestructureofanoptimalsolutionfromstep letusassumethattooptimallyparenthesize wesplitthe productaiaic ajbetweenakandakc whereik jequalstheminimumcostforcomputingthesubproductsai kandakc plusthecostofmultiplyingthesetwomatricestogether recallingthateachmatrixaiispi weseethatcomputingthematrixproductai kakc jtakespi pkpjscalarmultiplications weobtainm jdm kcm jcpi pkpj thisrecursiveequationassumesthatweknowthevalueofk whichwedonot thereareonlyjipossiblevaluesfork however namelykdi sincetheoptimalparenthesizationmustuseoneofthesevaluesfork weneedonlycheckthemallto ndthebest ourrecursivede nitionfortheminimumcost ofparenthesizingtheproductaiaic ajbecomesm ifidj minik jfm kcm jcpi pkpjgifi jvaluesgivethecostsofoptimalsolutionstosubproblems buttheydonotprovidealltheinformationweneedtoconstructanoptimalsolution helpusdoso wede nes jtobeavalueofkatwhichwesplittheproductaiaic ajinanoptimalparenthesization thatis jequalsavalueksuchthatm jdm kcm jcpi pkpj computingtheoptimalcostsatthispoint wecouldeasilywritearecursivealgorithmbasedonrecurrence tocomputetheminimumcostm nformultiplyinga aswesawfortherod cuttingproblem andasweshallseeinsection thisrecursivealgo rithmtakesexponentialtime whichisnobetterthanthebrute forcemethodof checkingeachwayofparenthesizingtheproduct matrix chainmultiplication observethatwehaverelativelyfewdistinctsubproblems onesubproblemforeachchoiceofiandjsatisfying ijn orn cnd inall arecursivealgorithmmayencountereachsubproblemmanytimesindifferent branchesofitsrecursiontree thispropertyofoverlappingsubproblemsisthe secondhallmarkofwhendynamicprogrammingapplies rsthallmarkbeing optimalsubstructure insteadofcomputingthesolutiontorecurrence recursively wecomputetheoptimalcostbyusingatabular upapproach wepresentthecorre spondingtop downapproachusingmemoizationinsection weshallimplementthetabular upmethodintheprocedurematrix chain whichappearsbelow thisprocedureassumesthatmatrixaihasdimensionspi piforid itsinputisasequencepdhp pni wherep lengthdnc theprocedureusesanauxiliarytablem nforstoringthem jcostsandanotherauxiliarytables nthatrecordswhichindexofkachievedtheoptimalcostincom putingm weshallusethetablestoconstructanoptimalsolution inordertoimplementthebottom upapproach wemustdeterminewhichentriesofthetablewerefertowhencomputingm equation showsthatthecostm jofcomputingamatrix chainproductofjic matricesdependsonlyonthecostsofcomputingmatrix chainproductsoffewerthanjic matrices thatis forkdi thematrixai kisaproductofkic jic matricesandthematrixakc jisaproductofjk jic matrices thealgorithmshould llinthetableminamannerthatcorrespondstosolvingtheparenthesizationproblemonmatrixchainsofincreasinglength thesubproblemofoptimallyparenthesizingthechainaiaic weconsiderthesubproblemsizetobethelengthjic ofthechain matrix chain ndp letm nands nbenewtables forid ton forld ton listhechainlength forid tonlc jdicl forkditoj qdm kcm jcpi pkpj ifq jdq jdk returnmands chapter dynamicprogramminga jim jisfigure themandstablescomputedbymatrix chain orderfornd andthefollow ingmatrixdimensions matrixa dimension thetablesarerotatedsothatthemaindiagonalrunshorizontally themtableusesonlythemaindiagonalanduppertriangle andthestableusesonlytheuppertriangle theminimumnumberofscalarmultiplicationstomultiplythe matricesism ofthedarkerentries thepairsthathavethesameshadingaretakentogetherinline whencomputingm dmin thealgorithm rstcomputesm forid theminimumcostsforchainsoflength inlines itthenusesrecurrence tocomputem icforid theminimumcostsforchainsoflengthld duringthe rstexecutionoftheforloopinlines thesecondtimethroughtheloop itcomputesm icforid theminimumcostsforchainsoflengthld andsoforth ateachstep jcostcomputedinlines dependsonlyontableentriesm kandm jalreadycomputed illustratesthisprocedureonachainofnd matrices sincewehavede nedm jonlyforij onlytheportionofthetablemstrictlyabovethemaindiagonalisused gureshowsthetablerotatedtomakethe maindiagonalrunhorizontally thematrixchainislistedalongthebottom ingthislayout wecan ndtheminimumcostm jformultiplyingasubchainaiaic ajofmatricesattheintersectionoflinesrunningnortheastfromaiand matrix chainmultiplication northwestfromaj eachhorizontalrowinthetablecontainstheentriesformatrixchainsofthesamelength matrix chain ordercomputestherowsfrombot tomtotopandfromlefttorightwithineachrow itcomputeseachentrym jusingtheproductspi pkpjforkdi andallentriessouthwestandsoutheastfromm asimpleinspectionofthenestedloopstructureofmatrix chain orderyieldsarunningtimeofo forthealgorithm theloopsarenestedthreedeep andeachloopindex andk takesonatmostn values asksyoutoshowthattherunningtimeofthisalgorithmisinfactalson theal gorithmrequires spacetostorethemandstables matrix chain orderismuchmoreef cientthantheexponential timemethodofenumeratingallpossibleparenthesizationsandcheckingeachone constructinganoptimalsolutionalthoughmatrix chain orderdeterminestheoptimalnumberofscalarmul tiplicationsneededtocomputeamatrix chainproduct itdoesnotdirectlyshow howtomultiplythematrices thetables ngivesustheinforma tionweneedtodoso eachentrys jrecordsavalueofksuchthatanop timalparenthesizationofaiaic ajsplitstheproductbetweenakandakc weknowthatthe nalmatrixmultiplicationincomputinga noptimallyisa sas wecandeterminetheearliermatrixmultiplicationsrecur sively sinces ndeterminesthelastmatrixmultiplicationwhencomputinga ands ndeterminesthelastmatrixmultiplicationwhencom putingas thefollowingrecursiveprocedureprintsanoptimalparenthe sizationofhai aic aji giventhestablecomputedbymatrix chain orderandtheindicesiandj theinitialcallprint optimal parens printsanoptimalparenthesizationofha ani optimal parens ifi elseprint optimal parens optimal parens intheexampleoffigure thecallprint optimal parens printstheparenthesization chapter dynamicprogrammingexercises findanoptimalparenthesizationofamatrix chainproductwhosesequenceof dimensionsish givearecursivealgorithmmatrix chain thatactuallyperformstheoptimalmatrix chainmultiplication giventhesequenceofmatrices ani thestablecomputedbymatrix chain andthein dicesiandj theinitialcallwouldbematrix chain usethesubstitutionmethodtoshowthatthesolutiontotherecurrence describethesubproblemgraphformatrix chainmultiplicationwithaninputchain oflengthn howmanyverticesdoesithave howmanyedgesdoesithave andwhichedgesarethey letr bethenumberoftimesthattableentrym jisreferencedwhilecomputingothertableentriesinacallofmatrix chain showthatthetotalnumberofreferencesfortheentiretableisnxid nxjdir hint youmay ndequation useful showthatafullparenthesizationofann elementexpressionhasexactlyn pairsofparentheses elementsofdynamicprogrammingalthoughwehavejustworkedthroughtwoexamplesofthedynamic programmingmethod youmightstillbewonderingjustwhenthemethodapplies fromanen gineeringperspective whenshouldwelookforadynamic programmingsolution toaproblem inthissection weexaminethetwokeyingredientsthatanopti elementsofdynamicprogramming mizationproblemmusthaveinorderfordynamicprogrammingtoapply optimalsubstructureandoverlappingsubproblems wealsorevisitanddiscussmorefully howmemoizationmighthelpustakeadvantageoftheoverlapping subproblems propertyinatop downrecursiveapproach optimalsubstructurethe rststepinsolvinganoptimizationproblembydynamicprogrammingistocharacterizethestructureofanoptimalsolution recallthataproblemexhibits optimalsubstructureifanoptimalsolutiontotheproblemcontainswithinitopti malsolutionstosubproblems wheneveraproblemexhibitsoptimalsubstructure wehaveagoodcluethatdynamicprogrammingmightapply aschapter dis cusses italsomightmeanthatagreedystrategyapplies however indynamicprogramming webuildanoptimalsolutiontotheproblemfromoptimalsolutionstosubproblems consequently wemusttakecaretoensurethattherangeofsub problemsweconsiderincludesthoseusedinanoptimalsolution wediscoveredoptimalsubstructureinbothoftheproblemswehaveexaminedinthischaptersofar insection weobservedthattheoptimalwayofcut tinguparodoflengthn ifwemakeanycutsatall involvesoptimallycuttingupthetwopiecesresultingfromthe rstcut insection weobservedthatanoptimalparenthesizationofaiaic ajthatsplitstheproductbetweenakandakc containswithinitoptimalsolutionstotheproblemsofparenthesizingaiaic akandakc akc youwill ndyourselffollowingacommonpatternindiscoveringoptimalsub structure youshowthatasolutiontotheproblemconsistsofmakingachoice suchaschoosinganinitialcutinarodorchoosinganindexatwhichtosplitthematrix chain makingthischoiceleavesoneormoresubproblemstobesolved yousupposethatforagivenproblem youaregiventhechoicethatleadstoanoptimalsolution youdonotconcernyourselfyetwithhowtodeterminethis choice youjustassumethatithasbeengiventoyou giventhischoice youdeterminewhichsubproblemsensueandhowtobestcharacterizetheresultingspaceofsubproblems youshowthatthesolutionstothesubproblemsusedwithinanoptimalsolutiontotheproblemmustthemselvesbeoptimalbyusinga paste tech nique youdosobysupposingthateachofthesubproblemsolutionsisnot optimalandthenderivingacontradiction inparticular cuttingout nonoptimalsolutiontoeachsubproblemand pastingin theoptimalone showthatyoucangetabettersolutiontotheoriginalproblem thuscontradict ingyoursuppositionthatyoualreadyhadanoptimalsolution ifanoptimal chapter dynamicprogrammingsolutiongivesrisetomorethanonesubproblem theyaretypicallysosimilarthatyoucanmodifythecut pasteargumentforonetoapplytotheothers withlittleeffort tocharacterizethespaceofsubproblems agoodruleofthumbsaystotrytokeepthespaceassimpleaspossibleandthenexpanditasnecessary forexample thespaceofsubproblemsthatweconsideredfortherod cuttingproblemcontained theproblemsofoptimallycuttinguparodoflengthiforeachsizei thissub problemspaceworkedwell andwehadnoneedtotryamoregeneralspaceof subproblems conversely supposethatwehadtriedtoconstrainoursubproblemspaceformatrix chainmultiplicationtomatrixproductsoftheforma asbefore anoptimalparenthesizationmustsplitthisproductbetweenakandakc forsome unlesswecouldguaranteethatkalwaysequalsj wewould ndthatwehadsubproblemsoftheforma akandakc akc andthatthelattersubproblemisnotoftheforma forthisproblem weneededtoallowoursubproblemstovaryat bothends thatis toallowbothiandjtovaryinthesubproblemaiaic optimalsubstructurevariesacrossproblemdomainsintwoways howmanysubproblemsanoptimalsolutiontotheoriginalproblemuses howmanychoiceswehaveindeterminingwhichsubproblem touseinanoptimalsolution intherod cuttingproblem anoptimalsolutionforcuttinguparodofsizenusesjustonesubproblem ofsizeni butwemustconsidernchoicesforiinordertodeterminewhichoneyieldsanoptimalsolution matrix chainmul tiplicationforthesubchainaiaic ajservesasanexamplewithtwosub problemsandjichoices foragivenmatrixakatwhichwesplittheprod uct wehavetwosubproblems parenthesizingaiaic akandparenthesizingakc akc andwemustsolvebothofthemoptimally oncewedeterminetheoptimalsolutionstosubproblems wechoosefromamongjicandidatesfortheindexk informally therunningtimeofadynamic programmingalgorithmdependsontheproductoftwofactors thenumberofsubproblemsoverallandhowmany choiceswelookatforeachsubproblem inrodcutting wehad subproblemsoverall andatmostnchoicestoexamineforeach yieldingano runningtime matrix chainmultiplicationhad subproblemsoverall andineachwehadatmostn choices givingano runningtime actually runningtime byexercise usually thesubproblemgraphgivesanalternativewaytoperformthesameanalysis eachvertexcorrespondstoasubproblem andthechoicesforasub elementsofdynamicprogramming problemaretheedgesincidenttothatsubproblem recallthatinrodcutting thesubproblemgraphhadnverticesandatmostnedgespervertex yieldingano runningtime formatrix chainmultiplication ifweweretodrawthesub problemgraph itwouldhave verticesandeachvertexwouldhavedegreeatmostn givingatotalofo verticesandedges dynamicprogrammingoftenusesoptimalsubstructureinabottom upfashion thatis rst ndoptimalsolutionstosubproblemsand havingsolvedthesub problems ndanoptimalsolutiontotheproblem findinganoptimalsolu tiontotheproblementailsmakingachoiceamongsubproblemsastowhichwewilluseinsolvingtheproblem thecostoftheproblemsolutionisusuallythe subproblemcostsplusacostthatisdirectlyattributabletothechoiceitself rodcutting forexample rstwesolvedthesubproblemsofdeterminingoptimal waystocutuprodsoflengthiforid andthenwedeterminedwhichsuchsubproblemyieldedanoptimalsolutionforarodoflengthn usingequation thecostattributabletothechoiceitselfisthetermpiinequa tion inmatrix chainmultiplication wedeterminedoptimalparenthesiza tionsofsubchainsofaiaic andthenwechosethematrixakatwhichtosplittheproduct thecostattributabletothechoiceitselfisthetermpi pkpj inchapter weshallexamine greedyalgorithms whichhavemanysimilar itiestodynamicprogramming inparticular problemstowhichgreedyalgorithms applyhaveoptimalsubstructure onemajordifferencebetweengreedyalgorithms anddynamicprogrammingisthatinsteadof rst ndingoptimalsolutionstosub problemsandthenmakinganinformedchoice greedyalgorithms rstmakea greedy choice thechoicethatlooksbestatthetime andthensolvearesulting subproblem withoutbotheringtosolveallpossiblerelatedsmallersubproblems surprisingly insomecasesthisstrategyworks subtletiesyoushouldbecarefulnottoassumethatoptimalsubstructureapplieswhenitdoes not considerthefollowingtwoproblemsinwhichwearegivenadirectedgraph andverticesu unweightedshortestpath findapathfromutoconsistingofthefewestedges suchapathmustbesimple sinceremovingacyclefromapathpro ducesapathwithfeweredges weusetheterm unweighted todistinguishthisproblemfromthatof ndingshortestpathswithweightededges whichweshallseeinchapters wecanusethebreadth rstsearch techniqueofchapter tosolvetheunweightedproblem chapter dynamicprogrammingqrstfigure adirectedgraphshowingthattheproblemof ndingalongestsimplepathinanunweighteddirectedgraphdoesnothaveoptimalsubstructure thepathq tisalongestsimplepathfromqtot butthesubpathq risnotalongestsimplepathfromqtor noristhesubpathr talongestsimplepathfromrtot unweightedlongestsimplepath findasimplepathfromutoconsistingofthemostedges weneedtoincludetherequirementofsimplicitybecauseother wisewecantraverseacycleasmanytimesasweliketocreatepathswithan arbitrarilylargenumberofedges theunweightedshortest pathproblemexhibitsoptimalsubstructure asfollows supposethatu sothattheproblemisnontrivial anypathpfromutomustcontainanintermediatevertex sayw notethatwmaybeuor wecandecomposethepathupintosubpathsup clearly thenumberofedgesinpequalsthenumberofedgesinp plusthenumberofedgesinp weclaimthatifpisanoptimal shortest pathfromuto thenp mustbeashortestpathfromutow weusea paste argument iftherewereanotherpath sayp fromutowwithfeweredgesthanp thenwecouldcutoutp andpasteinp toproduceapathup withfeweredgesthanp thuscontradictingp soptimality symmetrically mustbeashortestpathfromwto wecan ndashortestpathfromutobyconsideringallintermediateverticesw ndingashortestpathfromutowandashortestpathfromwto andchoosinganintermediatevertexwthatyieldstheoverallshortestpath insection weuseavariantofthisobservationofoptimalsubstructure ndashortestpathbetweeneverypairofverticesonaweighted directedgraph youmightbetemptedtoassumethattheproblemof ndinganunweightedlongestsimplepathexhibitsoptimalsubstructureaswell afterall ifwedecom posealongestsimplepathupintosubpathsup thenmustn bealongestsimplepathfromutow andmustn bealongestsimplepathfromwto theanswerisno suppliesanexample considerthepathq whichisalongestsimplepathfromqtot isq ralongestsimplepathfromqtor forthepathq risasimplepaththatislonger isr talongestsimplepathfromrtot noagain forthepathr tisasimplepaththatislonger elementsofdynamicprogramming thisexampleshowsthatforlongestsimplepaths notonlydoestheproblemlackoptimalsubstructure butwecannotnecessarilyassemblea legal totheproblemfromsolutionstosubproblems ifwecombinethelongestsimple pathsq randr wegetthepathq whichisnotsimple indeed theproblemof ndinganunweightedlongestsimplepathdoesnotappeartohaveanysortofoptimalsubstructure cientdynamic programmingalgorithmforthisproblemhaseverbeenfound thisproblemisnp asweshallseeinchapter meansthatweareunlikelyto ndawaytosolveitinpolynomialtime whyisthesubstructureofalongestsimplepathsodifferentfromthatofashort estpath althoughasolutiontoaproblemforbothlongestandshortestpathsuses twosubproblems thesubproblemsin ndingthelongestsimplepatharenotinde pendent whereasforshortestpathstheyare whatdowemeanbysubproblemsbeingindependent wemeanthatthesolutiontoonesubproblemdoesnotaffect thesolutiontoanothersubproblemofthesameproblem fortheexampleoffig ure wehavetheproblemof ndingalongestsimplepathfromqtotwithtwosubproblems ndinglongestsimplepathsfromqtorandfromrtot forthe rstofthesesubproblems wechoosethepathq andsowehavealsousedtheverticessandt wecannolongerusetheseverticesinthesecondsub sincethecombinationofthetwosolutionstosubproblemswouldyielda paththatisnotsimple ifwecannotusevertextinthesecondproblem thenwecannotsolveitatall sincetisrequiredtobeonthepaththatwe anditisnotthevertexatwhichweare splicing togetherthesubproblemsolutions thatvertexbeingr becauseweuseverticessandtinonesubproblemsolution wecannotusethemintheothersubproblemsolution wemustuseatleastoneofthem tosolvetheothersubproblem however andwemustusebothofthemtosolveit optimally wesaythatthesesubproblemsarenotindependent lookedat anotherway usingresourcesinsolvingonesubproblem thoseresourcesbeing vertices rendersthemunavailablefortheothersubproblem arethesubproblemsindependentfor ndingashortestpath theansweristhatbynature thesubproblemsdonotshareresources weclaimthat ifavertexwisonashortestpathpfromuto thenwecansplicetogetheranyshortestpathup wandanyshortestpathwp toproduceashortestpathfromuto weareassuredthat otherthanw novertexcanappearinbothpathsp andp supposethatsomevertexx wappearsinbothp andp sothatwecandecomposep asupuxxwandp aswxp bytheoptimalsubstructureofthisproblem pathphasasmanyedgesasp andp ssaythatphaseedges nowletusconstructapathp dupuxxpfromuto becausewehaveexcisedthepathsfromxtowandfromwtox eachofwhichcontainsatleastoneedge pathp containsatmoste edges whichcontradicts chapter dynamicprogrammingtheassumptionthatpisashortestpath weareassuredthatthesubproblemsfortheshortest pathproblemareindependent bothproblemsexaminedinsections haveindependentsubprob lems inmatrix chainmultiplication thesubproblemsaremultiplyingsubchains aiaic akandakc akc thesesubchainsaredisjoint sothatnoma trixcouldpossiblybeincludedinbothofthem inrodcutting todeterminethe bestwaytocutuparodoflengthn welookatthebestwaysofcuttinguprodsoflengthiforid becauseanoptimalsolutiontothelength nproblemincludesjustoneofthesesubproblemsolutions afterwehavecutoffthe rstpiece independenceofsubproblemsisnotanissue overlappingsubproblemsthesecondingredientthatanoptimizationproblemmusthavefordynamicpro grammingtoapplyisthatthespaceofsubproblemsmustbe inthesense thatarecursivealgorithmfortheproblemsolvesthesamesubproblemsoverand ratherthanalwaysgeneratingnewsubproblems typically thetotalnumber ofdistinctsubproblemsisapolynomialintheinputsize whenarecursivealgo rithmrevisitsthesameproblemrepeatedly wesaythattheoptimizationproblem hasoverlappingsubproblems incontrast aproblemforwhichadivide conquerapproachissuitableusuallygeneratesbrand newproblemsateachstepoftherecursion dynamic programmingalgorithmstypicallytakeadvantageofoverlappingsubproblemsbysolvingeachsubproblemonceandthenstoringthe solutioninatablewhereitcanbelookedupwhenneeded usingconstanttimeper lookup insection webrie yexaminedhowarecursivesolutiontorodcut tingmakesexponentiallymanycallsto ndsolutionsofsmallersubproblems ourdynamic programmingsolutiontakesanexponential timerecursivealgorithmdowntoquadratictime toillustratetheoverlapping subproblemspropertyingreaterdetail letusre examinethematrix chainmultiplicationproblem referringbacktofigure observethatmatrix chain orderrepeatedlylooksupthesolutiontosubprob lemsinlowerrowswhensolvingsubproblemsinhigherrows forexample referencesentrym fourtimes duringthecomputationsofm itmayseemstrangethatdynamicprogrammingreliesonsubproblemsbeingbothindependentandoverlapping althoughtheserequirementsmaysoundcontradictory theydescribetwodifferent notions ratherthantwopointsonthesameaxis twosubproblemsofthesameproblemareinde pendentiftheydonotshareresources twosubproblemsareoverlappingiftheyarereallythesamesubproblemthatoccursasasubproblemofdifferentproblems elementsofdynamicprogramming therecursiontreeforthecomputationofrecursive matrix chain eachnodecontainstheparametersiandj thecomputationsperformedinashadedsubtreearereplacedbyasingletablelookupinmemoized matrix chain andm ifweweretorecomputem eachtime ratherthanjustlookingitup therunningtimewouldincreasedramatically toseehow thefollowing inef cient recursiveprocedurethatdeterminesm themini mumnumberofscalarmultiplicationsneededtocomputethematrix chainproduct jdaiaic theprocedureisbaseddirectlyontherecurrence recursive matrix chain ifi return forkditoj qdrecursive matrix chain crecursive matrix chain cpi pkpj ifq jdq returnm jfigure showstherecursiontreeproducedbythecallrecursive matrix chain eachnodeislabeledbythevaluesoftheparametersiandj observethatsomepairsofvaluesoccurmanytimes infact wecanshowthatthetimetocomputem nbythisrecursiveproce dureisatleastexponentialinn lett denotethetimetakenbyrecursive matrix chaintocomputeanoptimalparenthesizationofachainofnmatrices becausetheexecutionoflines andoflines eachtakeatleastunittime chapter dynamicprogrammingdoesthemultiplicationinline inspectionoftheprocedureyieldstherecurrencet xkd forn notingthatforid eachtermt appearsonceast andonceast andcollectingthen sinthesummationtogetherwiththe outfront wecanrewritetherecurrenceast xid weshallprovethatt usingthesubstitutionmethod speci cally weshallshowthatt foralln thebasisiseasy sincet inductively forn wehavet xid cnd xid icnd byequation whichcompletestheproof thetotalamountofworkperformedbythecallrecursive matrix chain isatleastexponentialinn comparethistop recursivealgorithm withoutmemoization withthebottom updynamic programmingalgorithm thelatterismoreef cientbecauseittakesadvantageoftheoverlapping subproblemsproperty matrix chainmul tiplicationhasonly distinctsubproblems andthedynamic programmingalgorithmsolveseachexactlyonce therecursivealgorithm ontheotherhand mustagainsolveeachsubproblemeverytimeitreappearsintherecursiontree wheneverarecursiontreeforthenaturalrecursivesolutiontoaproblemcontainsthesamesubproblemrepeatedly andthetotalnumberofdistinctsubproblemsissmall dynamicprogrammingcanimproveef ciency sometimesdramatically elementsofdynamicprogramming reconstructinganoptimalsolutionasapracticalmatter weoftenstorewhichchoicewemadeineachsubprobleminatablesothatwedonothavetoreconstructthisinformationfromthecoststhatwe stored formatrix chainmultiplication thetables jsavesusasigni cantamountofworkwhenreconstructinganoptimalsolution supposethatwedidnotmaintain thes jtable having lledinonlythetablem jcontainingoptimalsubprob lemcosts wechoosefromamongjipossibilitieswhenwedeterminewhichsubproblemstouseinanoptimalsolutiontoparenthesizingaiaic andjiisnotaconstant therefore itwouldtake timetorecon structwhichsubproblemswechoseforasolutiontoagivenproblem bystoring ins jtheindexofthematrixatwhichwesplittheproductaiaic wecanreconstructeachchoiceino memoizationaswesawfortherod cuttingproblem thereisanalternativeapproachtody namicprogrammingthatoftenofferstheef ciencyofthebottom updynamic programmingapproachwhilemaintainingatop downstrategy theideaistomemoizethenatural butinef cient recursivealgorithm asinthebottom upap proach wemaintainatablewithsubproblemsolutions butthecontrolstructure llinginthetableismoreliketherecursivealgorithm amemoizedrecursivealgorithmmaintainsanentryinatableforthesolutiontoeachsubproblem eachtableentryinitiallycontainsaspecialvaluetoindicatethat theentryhasyettobe lledin whenthesubproblemis rstencounteredasthe recursivealgorithmunfolds itssolutioniscomputedandthenstoredinthetable eachsubsequenttimethatweencounterthissubproblem wesimplylookupthe valuestoredinthetableandreturnit hereisamemoizedversionofrecursive matrix chain notewhereitresemblesthememoizedtop downmethodfortherod cuttingproblem thisapproachpresupposesthatweknowthesetofallpossiblesubproblemparametersandthatwehaveestablishedtherelationshipbetweentablepositionsandsubproblems another moregeneral approachistomemoizebyusinghashingwiththesubproblemparametersaskeys chapter dynamicprogrammingmemoized matrix chain ndp letm nbeanewtable forid ton forjditon returnlookup chain lookup chain ifm returnm ifi elseforkditoj qdlookup chain clookup chain cpi pkpj ifq jdq returnm jthememoized matrix chainprocedure likematrix chain maintainsatablem nofcomputedvaluesofm theminimumnum berofscalarmultiplicationsneededtocomputethematrixai eachtableentryinitiallycontainsthevalue toindicatethattheentryhasyettobe lledin uponcallinglookup chain ifline ndsthatm thenthepro ceduresimplyreturnsthepreviouslycomputedcostm jinline otherwise thecostiscomputedasinrecursive matrix chain storedinm andreturned lookup chain alwaysreturnsthevalueofm butitcomputesitonlyuponthe rstcalloflookup chainwiththesespeci cvaluesofiandj illustrateshowmemoized matrix chainsavestimecomparedwithrecursive matrix chain shadedsubtreesrepresentvaluesthatitlooksupratherthanrecomputes likethebottom updynamic programmingalgorithmmatrix chain theprocedurememoized matrix chainrunsino ofmemoized matrix chainexecutes times wecancategorizethecallsoflookup chainintotwotypes callsinwhichm sothatlines execute callsinwhichm sothatlookup chainsimplyreturnsinline elementsofdynamicprogramming thereare callsofthe rsttype onepertableentry allcallsofthesec ondtypearemadeasrecursivecallsbycallsofthe rsttype wheneveragiven calloflookup chainmakesrecursivecalls itmakeso ofthem fore thereareo callsofthesecondtypeinall eachcallofthesecondtypetakeso andeachcallofthe rsttypetakeso timeplusthetimespentinitsrecursivecalls thetotaltime therefore iso memoizationthusturnsan timealgorithmintoano timealgorithm insummary wecansolvethematrix chainmultiplicationproblembyeitheratop memoizeddynamic programmingalgorithmorabottom updynamic programmingalgorithmino bothmethodstakeadvantageoftheoverlapping subproblemsproperty thereareonly distinctsubproblemsintotal andeitherofthesemethodscomputesthesolutiontoeachsubproblemonly withoutmemoization thenaturalrecursivealgorithmrunsinexponential sincesolvedsubproblemsarerepeatedlysolved ingeneralpractice ifallsubproblemsmustbesolvedatleastonce abottom updynamic programmingalgorithmusuallyoutperformsthecorrespondingtop downmemoizedalgorithmbyaconstantfactor becausethebottom upalgorithmhasnooverheadforrecursionandlessoverheadformaintainingthetable moreover forsomeproblemswecanexploittheregularpatternoftableaccessesinthedynamic programmingalgorithmtoreducetimeorspacerequirementsevenfurther alter natively ifsomesubproblemsinthesubproblemspaceneednotbesolvedatall thememoizedsolutionhastheadvantageofsolvingonlythosesubproblemsthatarede nitelyrequired exercises whichisamoreef cientwaytodeterminetheoptimalnumberofmultiplications inamatrix chainmultiplicationproblem enumeratingallthewaysofparenthesiz ingtheproductandcomputingthenumberofmultiplicationsforeach orrunningrecursive matrix chain justifyyouranswer drawtherecursiontreeforthemerge sortprocedurefromsection onanarrayof elements explainwhymemoizationfailstospeedupagooddivide conqueralgorithmsuchasmerge sort consideravariantofthematrix chainmultiplicationprobleminwhichthegoalis toparenthesizethesequenceofmatricessoastomaximize ratherthanminimize chapter dynamicprogrammingthenumberofscalarmultiplications doesthisproblemexhibitoptimalsubstruc ture asstated indynamicprogrammingwe rstsolvethesubproblemsandthenchoose whichofthemtouseinanoptimalsolutiontotheproblem professorcapulet claimsthatwedonotalwaysneedtosolveallthesubproblemsinorderto ndan optimalsolution shesuggeststhatwecan ndanoptimalsolutiontothematrix chainmultiplicationproblembyalwayschoosingthematrixakatwhichtosplitthesubproductaiaic byselectingktominimizethequantitypi pkpj beforesolvingthesubproblems findaninstanceofthematrix chainmultiplica tionproblemforwhichthisgreedyapproachyieldsasuboptimalsolution supposethatintherod cuttingproblemofsection wealsohadlimitlionthenumberofpiecesoflengthithatweareallowedtoproduce forid showthattheoptimal substructurepropertydescribedinsection nolonger holds imaginethatyouwishtoexchangeonecurrencyforanother yourealizethat insteadofdirectlyexchangingonecurrencyforanother youmightbebetteroff makingaseriesoftradesthroughothercurrencies windingupwiththecurrency youwant supposethatyoucantradendifferentcurrencies numbered whereyoustartwithcurrency andwishtowindupwithcurrencyn youaregiven foreachpairofcurrenciesiandj anexchangeraterij meaningthatifyoustartwithdunitsofcurrencyi youcantradefordrijunitsofcurrencyj asequenceoftradesmayentailacommission whichdependsonthenumberof tradesyoumake letckbethecommissionthatyouarechargedwhenyoumakektrades showthat ifckd forallkd thentheproblemof ndingthebestsequenceofexchangesfromcurrency tocurrencynexhibitsoptimalsub structure thenshowthatifcommissionsckarearbitraryvalues thentheproblemof ndingthebestsequenceofexchangesfromcurrency tocurrencyndoesnotnecessarilyexhibitoptimalsubstructure longestcommonsubsequencebiologicalapplicationsoftenneedtocomparethednaoftwo ormore dif ferentorganisms astrandofdnaconsistsofastringofmoleculescalled longestcommonsubsequence bases wherethepossiblebasesareadenine guanine cytosine andthymine representingeachofthesebasesbyitsinitialletter wecanexpressastrand ofdnaasastringoverthe nitesetfa seeappendixcforthede nitionofastring forexample thednaofoneorganismmaybe daccggtcgagtgcgcggaagccggccgaa andthednaofanotherorgan ismmaybes dgtcgttcggaatgccgttgctctgtaaa onereasontocom paretwostrandsofdnaistodeterminehow thetwostrandsare assome measureofhowcloselyrelatedthetwoorganismsare wecan anddo nesim ilarityinmanydifferentways forexample wecansaythattwodnastrandsaresimilarifoneisasubstringoftheother chapter exploresalgorithmstosolve thisproblem inourexample neithers nors isasubstringoftheother alter natively wecouldsaythattwostrandsaresimilarifthenumberofchangesneeded toturnoneintotheotherissmall looksatthisnotion yetanother waytomeasurethesimilarityofstrandss ands isby ndingathirdstrands inwhichthebasesins appearineachofs ands thesebasesmustappearinthesameorder butnotnecessarilyconsecutively thelongerthestrands wecan themoresimilars ands inourexample thelongeststrands isgtcgtcggaagccggccgaa weformalizethislastnotionofsimilarityasthelongest subsequenceproblem asubsequenceofagivensequenceisjustthegivensequencewithzeroormoreelementsleftout formally givenasequencexdhx xmi anothersequencezdh kiisasubsequenceofxifthereexistsastrictlyincreasingsequencehi ikiofindicesofxsuchthatforalljd wehavexijd forexample zdhb biisasubsequenceofxdha biwithcorrespondingindexsequenceh giventwosequencesxandy wesaythatasequencezisacommonsub sequenceofxandyifzisasubsequenceofbothxandy forexample ifxdha biandydhb thesequencehb aiisacommonsubsequenceofbothxandy thesequencehb aiisnotalongestcommonsubsequence lcs ofxandy however sinceithaslength andthesequencehb whichisalsocommontobothxandy haslength thesequencehb aiisanlcsofxandy asisthesequencehb sincexandyhavenocommonsubsequenceoflength orgreater inthelongest subsequenceproblem wearegiventwosequencesxdhx xmiandydhy yniandwishto ndamaximum lengthcommonsubsequenceofxandy thissectionshowshowtoef cientlysolvethelcsproblemusingdynamicprogramming chapter dynamicprogrammingstep characterizingalongestcommonsubsequenceinabrute forceapproachtosolvingthelcsproblem wewouldenumerateallsubsequencesofxandcheckeachsubsequencetoseewhetheritisalsoasubse quenceofy keepingtrackofthelongestsubsequencewe eachsubsequenceofxcorrespondstoasubsetoftheindicesf mgofx becausexhas msubsequences thisapproachrequiresexponentialtime makingitimpracticalforlongsequences thelcsproblemhasanoptimal substructureproperty however asthefollow ingtheoremshows asweshallsee thenaturalclassesofsubproblemscorre spondtopairsof pre xes ofthetwoinputsequences tobeprecise givena sequencexdhx xmi wede netheithpre xofx forid asxidhx xii forexample ifxdha thenx dha biandx istheemptysequence theorem optimalsubstructureofanlcs letxdhx xmiandydhy ynibesequences andletzdh kibeanylcsofxandy ifxmdyn kdxmdynandzk isanlcsofxm andyn ifxm xmimpliesthatzisanlcsofxm andy ifxm ynimpliesthatzisanlcsofxandyn proof thenwecouldappendxmdyntoztoobtainacommonsubsequenceofxandyoflengthkc contradictingthesuppositionthatzisalongestcommonsubsequenceofxandy wemusthave kdxmdyn thepre xzk isalength commonsubsequenceofxm andyn wewishtoshowthatitisanlcs supposeforthepurposeofcontradiction thatthereexistsacommonsubsequencewofxm andyn withlengthgreaterthank appendingxmdyntowproducesacommonsubsequenceofxandywhoselengthisgreaterthank whichisacontradiction thenzisacommonsubsequenceofxm andy iftherewereacommonsubsequencewofxm andywithlengthgreaterthank thenwwouldalsobeacommonsubsequenceofxmandy contradictingtheassumptionthatzisanlcsofxandy theproofissymmetricto thewaythattheorem characterizeslongestcommonsubsequencestellsusthatanlcsoftwosequencescontainswithinitanlcsofpre xesofthetwosequences thelcsproblemhasanoptimal substructureproperty arecur longestcommonsubsequence sivesolutionalsohastheoverlapping subproblemsproperty asweshallseeinamoment arecursivesolutiontheorem impliesthatweshouldexamineeitheroneortwosubproblemswhen ndinganlcsofxdhx xmiandydhy yni ifxmdyn wemust ndanlcsofxm andyn appendingxmdyntothislcsyieldsanlcsofxandy ifxm thenwemustsolvetwosubproblems ndinganlcsofxm andyand ndinganlcsofxandyn whicheverofthesetwolcssislongerisanlcsofxandy becausethesecasesexhaustallpossibilities weknowthatoneoftheoptimalsubproblemsolutionsmustappearwithinanlcs ofxandy wecanreadilyseetheoverlapping subproblemspropertyinthelcsproblem ndanlcsofxandy wemayneedto ndthelcssofxandyn andofxm andy buteachofthesesubproblemshasthesubsubproblemof ndinganlcsofxm andyn manyothersubproblemssharesubsubproblems asinthematrix chainmultiplicationproblem ourrecursivesolutiontothelcsprobleminvolvesestablishingarecurrenceforthevalueofanoptimalsolution letusde nec jtobethelengthofanlcsofthesequencesxiandyj ifeitherid orjd oneofthesequenceshaslength andsothelcshaslength theoptimalsubstructureofthelcsproblemgivestherecursiveformulac ifid orjd ifi andxidyj max ifi andxi observethatinthisrecursiveformulation aconditionintheproblemrestrictswhichsubproblemswemayconsider whenxidyj wecanandshouldconsiderthesubproblemof ndinganlcsofxi andyj otherwise weinsteadcon siderthetwosubproblemsof ndinganlcsofxiandyj andofxi andyj inthepreviousdynamic programmingalgorithmswehaveexamined forrodcutting andmatrix chainmultiplication weruledoutnosubproblemsduetoconditions intheproblem findinganlcsisnottheonlydynamic programmingalgorithm thatrulesoutsubproblemsbasedonconditionsintheproblem forexample edit distanceproblem seeproblem hasthischaracteristic computingthelengthofanlcsbasedonequation wecouldeasilywriteanexponential timerecursiveal gorithmtocomputethelengthofanlcsoftwosequences sincethelcsproblem chapter dynamicprogramminghasonly distinctsubproblems however wecanusedynamicprogrammingtocomputethesolutionsbottomup procedurelcs lengthtakestwosequencesxdhx xmiandydhy yniasinputs itstoresthec jvaluesinatablec anditcomputestheentriesinrow majororder thatis theprocedure llsinthe rstrowofcfromlefttoright thenthesecondrow andsoon theprocedurealsomaintainsthetableb ntohelpusconstructanoptimalsolution intu itively jpointstothetableentrycorrespondingtotheoptimalsubproblemsolutionchosenwhencomputingc theprocedurereturnsthebandctables ncontainsthelengthofanlcsofxandy lcs mdx ndy letb nandc nbenewtables forid tom forjd ton forid tom forjd ton ifxi jdc elseifc jdc elsec jdc returncandbfigure showsthetablesproducedbylcs lengthonthesequencesxdha biandydhb therunningtimeoftheprocedureis sinceeachtableentrytakes timetocompute constructinganlcsthebtablereturnedbylcs lengthenablesustoquicklyconstructanlcsofxdhx xmiandydhy yni wesimplybeginatb nandtracethroughthetablebyfollowingthearrows wheneverweencountera inentryb itimpliesthatxidyjisanelementofthelcsthatlcs longestcommonsubsequence bdcaba abcbda jixiyjfigure thecandbtablescomputedbylcs lengthonthesequencesxdha biandydhb thesquareinrowiandcolumnjcontainsthevalueofc jandtheappropriatearrowforthevalueofb theentry inc thelowerright handcornerofthetable isthelengthofanlcshb aiofxandy fori entryc jdependsonlyonwhetherxidyjandthevaluesinentriesc andc whicharecomputedbeforec toreconstructtheelementsofanlcs followtheb jarrowsfromthelowerright handcorner thesequenceisshaded ontheshadedsequencecorrespondstoanentry highlighted forwhichxidyjisamemberofanlcs withthismethod weencountertheelementsofthislcsinreverseorder thefollowingrecursiveprocedureprintsoutanlcsofxandyintheproper forwardorder theinitialcallisprint lcs lcs ifi orj return ifb lcs printxi elseifb lcs elseprint lcs forthebtableinfigure thisprocedureprintsbcba theproceduretakestimeo mcn sinceitdecrementsatleastoneofiandjineachrecursivecall chapter dynamicprogrammingimprovingthecodeonceyouhavedevelopedanalgorithm youwilloften ndthatyoucanimproveonthetimeorspaceituses somechangescansimplifythecodeandimprove constantfactorsbutotherwiseyieldnoasymptoticimprovementinperformance otherscanyieldsubstantialasymptoticsavingsintimeandspace inthelcsalgorithm forexample wecaneliminatethebtablealtogether eachc jentrydependsononlythreeotherctableentries andc giventhevalueofc wecandetermineino timewhichofthesethreevalueswasusedtocomputec withoutinspectingtableb wecanreconstructanlcsino mcn timeusingaproceduresimilartoprint lcs asksyoutogivethepseudocode althoughwesave spacebythismethod theauxiliaryspacerequirementforcomputinganlcsdoesnot asymptoticallydecrease sinceweneed spaceforthectableanyway wecan however reducetheasymptoticspacerequirementsforlcs sinceitneedsonlytworowsoftablecatatime therowbeingcomputedandthepreviousrow infact asexercise asksyoutoshow wecanuseonlyslightly morethanthespaceforonerowofctocomputethelengthofanlcs thisimprovementworksifweneedonlythelengthofanlcs ifweneedtoreconstructtheelementsofanlcs thesmallertabledoesnotkeepenoughinformationtoretraceourstepsino mcn exercises determineanlcsofh iandh givepseudocodetoreconstructanlcsfromthecompletedctableandtheoriginalsequencesxdhx xmiandydhy yniino mcn withoutusingthebtable giveamemoizedversionoflcs lengththatrunsino showhowtocomputethelengthofanlcsusingonly min entriesinthectablepluso additionalspace thenshowhowtodothesamething butusingmin entriespluso additionalspace optimalbinarysearchtrees giveano timealgorithmto ndthelongestmonotonicallyincreasingsubse quenceofasequenceofnnumbers giveano nlgn timealgorithmto ndthelongestmonotonicallyincreasingsub sequenceofasequenceofnnumbers hint observethatthelastelementofacandidatesubsequenceoflengthiisatleastaslargeasthelastelementofacan didatesubsequenceoflengthi maintaincandidatesubsequencesbylinkingthemthroughtheinputsequence optimalbinarysearchtreessupposethatwearedesigningaprogramtotranslatetextfromenglishtofrench foreachoccurrenceofeachenglishwordinthetext weneedtolookupitsfrench equivalent wecouldperformtheselookupoperationsbybuildingabinarysearch treewithnenglishwordsaskeysandtheirfrenchequivalentsassatellitedata becausewewillsearchthetreeforeachindividualwordinthetext wewantthetotaltimespentsearchingtobeaslowaspossible wecouldensureano lgn searchtimeperoccurrencebyusingared blacktreeoranyotherbalancedbinary searchtree wordsappearwithdifferentfrequencies however andafrequently usedwordsuchasthemayappearfarfromtherootwhileararelyusedwordsuchasmachicolationappearsneartheroot suchanorganizationwouldslowdownthetranslation sincethenumberofnodesvisitedwhensearchingforakeyinabinary searchtreeequalsoneplusthedepthofthenodecontainingthekey wewant wordsthatoccurfrequentlyinthetexttobeplacednearertheroot moreover somewordsinthetextmighthavenofrenchtranslation andsuchwordswouldnotappearinthebinarysearchtreeatall howdoweorganizeabinarysearchtree soastominimizethenumberofnodesvisitedinallsearches giventhatweknow howofteneachwordoccurs whatweneedisknownasanoptimalbinarysearchtree formally wearegivenasequencekdhk kniofndistinctkeysinsortedorder sothatk andwewishtobuildabinarysearchtreefromthesekeys foreachkeyki wehaveaprobabilitypithatasearchwillbeforki somesearchesmaybeforvaluesnotink andsowealsohavenc dummykeys ifthesubjectofthetextiscastlearchitecture wemightwantmachicolationtoappearneartheroot machicolationhasafrenchcounterpart achicoulis chapter dynamicprogrammingk twobinarysearchtreesforasetofnd keyswiththefollowingprobabilities abinarysearchtreewithexpectedsearchcost abinarysearchtreewithexpectedsearchcost thistreeisoptimal dnrepresentingvaluesnotink inparticular representsallval ueslessthank dnrepresentsallvaluesgreaterthankn andforid thedummykeydirepresentsallvaluesbetweenkiandkic foreachdummykeydi wehaveaprobabilityqithatasearchwillcorrespondtodi showstwobinarysearchtreesforasetofnd keys eachkeykiisaninternalnode andeachdummykeydiisaleaf everysearchiseithersuccessful ndingsomekeyki orunsuccessful ndingsomedummykeydi andsowehavenxid picnxid qid becausewehaveprobabilitiesofsearchesforeachkeyandeachdummykey wecandeterminetheexpectedcostofasearchinagivenbinarysearchtreet letusassumethattheactualcostofasearchequalsthenumberofnodesexamined thedepthofthenodefoundbythesearchint plus thentheexpectedcostofasearchintise searchcostindnxid deptht picnxid deptht qid cnxid deptht picnxid deptht optimalbinarysearchtrees wheredepthtdenotesanode sdepthinthetreet thelastequalityfollowsfromequation infigure wecancalculatetheexpectedsearchcostnode bynode nodedepthprobabilitycontributionk total foragivensetofprobabilities wewishtoconstructabinarysearchtreewhoseexpectedsearchcostissmallest wecallsuchatreeanoptimalbinarysearchtree showsanoptimalbinarysearchtreefortheprobabilitiesgivenin gurecaption itsexpectedcostis thisexampleshowsthatanoptimal binarysearchtreeisnotnecessarilyatreewhoseoverallheightissmallest canwenecessarilyconstructanoptimalbinarysearchtreebyalwaysputtingthekeywiththegreatestprobabilityattheroot keyk hasthegreatestsearchprobabilityofanykey yettherootoftheoptimalbinarysearchtreeshownisk thelowestexpectedcostofanybinarysearchtreewithk attherootis aswithmatrix chainmultiplication exhaustivecheckingofallpossibilitiesfailstoyieldanef cientalgorithm wecanlabelthenodesofanyn nodebinarytreewiththekeysk kntoconstructabinarysearchtree andthenaddinthedummykeysasleaves inproblem wesawthatthenumberofbinarytrees withnnodesis andsowewouldhavetoexamineanexponentialnumberofbinarysearchtreesinanexhaustivesearch notsurprisingly weshall solvethisproblemwithdynamicprogramming thestructureofanoptimalbinarysearchtreetocharacterizetheoptimalsubstructureofoptimalbinarysearchtrees westartwithanobservationaboutsubtrees consideranysubtreeofabinarysearchtree itmustcontainkeysinacontiguousrangeki forsome ijn inaddition asubtreethatcontainskeyski kjmustalsohaveasitsleavesthedummykeysdi nowwecanstatetheoptimalsubstructure ifanoptimalbinarysearchtreethasasubtreet containingkeyski thenthissubtreet mustbeoptimalas chapter dynamicprogrammingwellforthesubproblemwithkeyski kjanddummykeysdi theusualcut pasteargumentapplies iftherewereasubtreet whoseexpectedcostislowerthanthatoft thenwecouldcutt outoftandpasteint resultinginabinarysearchtreeoflowerexpectedcostthant thuscontradictingtheoptimalityoft weneedtousetheoptimalsubstructuretoshowthatwecanconstructanopti malsolutiontotheproblemfromoptimalsolutionstosubproblems givenkeys oneofthesekeys saykr irj istherootofanoptimalsubtreecontainingthesekeys theleftsubtreeoftherootkrcontainsthekeyski anddummykeysdi andtherightsubtreecontainsthekeyskrc anddummykeysdr aslongasweexamineallcandi daterootskr whereirj andwedeterminealloptimalbinarysearchtreescontainingki andthosecontainingkrc weareguaranteedthatwewill ndanoptimalbinarysearchtree thereisonedetailworthnotingabout empty subtrees supposethatinasubtreewithkeyski weselectkiastheroot bytheaboveargument sleftsubtreecontainsthekeyski weinterpretthissequenceascontainingnokeys bearinmind however thatsubtreesalsocontaindummykeys weadopttheconventionthatasubtreecontainingkeyski hasnoactualkeysbutdoescontainthesingledummykeydi symmetrically ifweselectkjastheroot thenkj srightsubtreecontainsthekeyskjc thisrightsubtreecontainsnoactualkeys butitdoescontainthedummykeydj arecursivesolutionwearereadytode nethevalueofanoptimalsolutionrecursively wepickoursubproblemdomainas ndinganoptimalbinarysearchtreecontainingthekeyski wherei andji whenjdi therearenoactualkeys wehavejustthedummykeydi letusde nee jastheexpectedcostofsearchinganoptimalbinarysearchtreecontainingthekeys ultimately wewishtocomputee theeasycaseoccurswhenjdi thenwehavejustthedummykeydi theexpectedsearchcostise idqi whenji weneedtoselectarootkrfromamongki kjandthenmakeanoptimalbinarysearchtreewithkeyski asitsleftsubtreeandanoptimalbinarysearchtreewithkeyskrc kjasitsrightsubtree whathappenstotheexpectedsearchcostofasubtreewhenitbecomesasubtreeofanode thedepth ofeachnodeinthesubtreeincreasesby byequation theexpectedsearch costofthissubtreeincreasesbythesumofalltheprobabilitiesinthesubtree asubtreewithkeyski letusdenotethissumofprobabilitiesas optimalbinarysearchtrees djxldiplcjxldi ifkristherootofanoptimalsubtreecontainingkeyski wehavee jdprc rcw jcw notingthatw cprcw werewritee jase jde rce jcw therecursiveequation assumesthatweknowwhichnodekrtouseastheroot wechoosetherootthatgivesthelowestexpectedsearchcost givingus nalrecursiveformulation ifjdi minirjfe rce jcw gifij thee jvaluesgivetheexpectedsearchcostsinoptimalbinarysearchtrees tohelpuskeeptrackofthestructureofoptimalbinarysearchtrees wede ijn tobetheindexrforwhichkristherootofanoptimalbinarysearchtreecontainingkeyski althoughwewillseehowtocomputethevaluesofroot weleavetheconstructionofanoptimalbinarysearchtreefromthesevaluesasexercise computingtheexpectedsearchcostofanoptimalbinarysearchtreeatthispoint youmayhavenoticedsomesimilaritiesbetweenourcharacterizationsofoptimalbinarysearchtreesandmatrix chainmultiplication forbothproblem domains oursubproblemsconsistofcontiguousindexsubranges adirect recur siveimplementationofequation wouldbeasinef cientasadirect recur sivematrix chainmultiplicationalgorithm instead westorethee jvaluesinatablee rstindexneedstoruntonc ratherthannbecauseinordertohaveasubtreecontainingonlythedummykeydn weneedtocomputeandstoree thesecondindexneedstostartfrom becauseinordertohaveasubtreecontainingonlythedummykeyd weneedtocomputeandstoree weuseonlytheentriese jforwhichji wealsouseatableroot forrecordingtherootofthesubtreecontainingkeyski thistableusesonlytheentriesforwhich ijn wewillneedoneothertableforef ciency ratherthancomputethevalueofw fromscratcheverytimewearecomputinge whichwouldtake chapter dynamicprogramming additions westorethesevaluesinatablew forthebasecase wecomputew idqi inc forji wecomputew jdw jcpjcqj wecancomputethe valuesofw jin timeeach thepseudocodethatfollowstakesasinputstheprobabilitiesp pnandq qnandthesizen anditreturnsthetableseandroot optimal bst lete androot nbenewtables forid tonc idqi idqi forld ton forid tonlc jdicl jdw jcpjcqj forrditoj tde rce jcw ift jdt jdr returneandrootfromthedescriptionaboveandthesimilaritytothematrix chain orderpro cedureinsection youshould ndtheoperationofthisproceduretobefairly straightforward theforloopoflines initializesthevaluesofe iandw theforloopoflines thenusestherecurrences tocomputee jandw jforall ijn inthe rstitera tion whenld theloopcomputese iandw iforid thesec onditeration withld computese icandw icforid andsoforth theinnermostforloop inlines trieseachcandidateindexrtodeterminewhichkeykrtouseastherootofanoptimalbinarysearchtreecon tainingkeyski thisforloopsavesthecurrentvalueoftheindexrinroot jwheneverit ndsabetterkeytouseastheroot showsthetablese androot jcomputedbytheprocedureoptimal bstonthekeydistributionshowninfigure asinthematrix chainmultiplicationexampleoffigure thetablesarerotatedtomake optimalbinarysearchtrees jifigure thetablese androot jcomputedbyoptimal bstonthekeydistributionshowninfigure thetablesarerotatedsothatthediagonalsrunhorizontally thediagonalsrunhorizontally optimal bstcomputestherowsfrombottomtotopandfromlefttorightwithineachrow theoptimal bstproceduretakes justlikematrix chain wecaneasilyseethatitsrunningtimeiso sinceitsforloopsarenestedthreedeepandeachloopindextakesonatmostnvalues theloopindicesinoptimal bstdonothaveexactlythesameboundsasthoseinmatrix chain buttheyarewithinatmost inalldirections likematrix chain theoptimal bstproceduretakesn exercises writepseudocodefortheprocedureconstruct optimal bst giventhetableroot outputsthestructureofanoptimalbinarysearchtree fortheexampleinfigure yourprocedureshouldprintoutthestructure chapter dynamicprogrammingk istherootk istheleftchildofk istheleftchildofk istherightchildofk istherightchildofk istheleftchildofk istheleftchildofk istheleftchildofk istherightchildofk istherightchildofk istherightchildofk correspondingtotheoptimalbinarysearchtreeshowninfigure determinethecostandstructureofanoptimalbinarysearchtreeforasetofnd keyswiththefollowingprobabilities supposethatinsteadofmaintainingthetablew wecomputedthevalueofw directlyfromequation inline ofoptimal bstandusedthiscomputedvalueinline howwouldthischangeaffecttheasymptoticrunning timeofoptimal bst knuth hasshownthattherearealwaysrootsofoptimalsubtreessuchthat jroot jroot jforall usethisfacttomodifytheoptimal bstproceduretorunin problems longestsimplepathinadirectedacyclicgraphsupposethatwearegivenadirectedacyclicgraphgd withreal valuededgeweightsandtwodistinguishedverticessandt describeadynamic programmingapproachfor ndingalongestweightedsimplepathfromstot whatdoesthesubproblemgraphlooklike whatistheef ciencyofyouralgo rithm problemsforchapter sevenpointsintheplane shownonaunitgrid theshortestclosedtour withlengthapproximately thistourisnotbitonic theshortestbitonictourforthesamesetofpoints itslengthisapproximately longestpalindromesubsequenceapalindromeisanonemptystringoversomealphabetthatreadsthesamefor wardandbackward examplesofpalindromesareallstringsoflength civic racecar andaibohphobia fearofpalindromes giveanef cientalgorithmto ndthelongestpalindromethatisasubsequenceofagiveninputstring forexample giventheinputcharacter youralgorithmshouldreturncarac whatistherunningtimeofyouralgorithm bitoniceuclideantraveling salesmanproblemintheeuclideantraveling salesmanproblem wearegivenasetofnpointsintheplane andwewishto ndtheshortestclosedtourthatconnectsallnpoints showsthesolutiontoa pointproblem thegeneralproblemisnp anditssolutionisthereforebelievedtorequiremorethanpolynomial seechapter bentleyhassuggestedthatwesimplifytheproblembyrestrictingourat tentiontobitonictours thatis toursthatstartattheleftmostpoint gostrictlyrightwardtotherightmostpoint andthengostrictlyleftwardbacktothestarting showstheshortestbitonictourofthesame points inthiscase apolynomial timealgorithmispossible describeano timealgorithmfordetermininganoptimalbitonictour youmayassumethatnotwopointshavethesamex coordinateandthatalloperationsonrealnumberstakeunittime hint scanlefttoright maintainingoptimalpos sibilitiesforthetwopartsofthetour printingneatlyconsidertheproblemofneatlyprintingaparagraphwithamonospacedfont charactershavingthesamewidth onaprinter theinputtextisasequenceofn chapter dynamicprogrammingwordsoflengthsl measuredincharacters wewanttoprintthispara graphneatlyonanumberoflinesthatholdamaximumofmcharacterseach ourcriterionof neatness isasfollows ifagivenlinecontainswordsithroughj whereij andweleaveexactlyonespacebetweenwords thenumberofextraspacecharactersattheendofthelineismjcipjkdilk whichmustbenonnegativesothatthewords tontheline wewishtominimizethesum alllinesexceptthelast ofthecubesofthenumbersofextraspacecharactersatthe endsoflines giveadynamic programmingalgorithmtoprintaparagraphofnwordsneatlyonaprinter analyzetherunningtimeandspacerequirementsofyouralgorithm editdistanceinordertotransformonesourcestringoftextx mtoatargetstringy wecanperformvarioustransformationoperations ourgoalis givenxandy toproduceaseriesoftransformationsthatchangextoy weuseanar ray assumedtobelargeenoughtoholdallthecharactersitwillneed toholdtheintermediateresults initially isempty andattermination weshouldhave jdy jforjd wemaintaincurrentindicesiintoxandjinto andtheoperationsareallowedtoalter andtheseindices initially idjd wearerequiredtoexamineeverycharacterinxduringthetransformation whichmeansthatattheendofthesequenceoftransformationoperations wemusthaveidmc wemaychoosefromamongsixtransformationoperations copyacharacterfromxto bysetting jdx iandthenincrementingbothiandj thisoperationexaminesx replaceacharacterfromxbyanothercharacterc bysetting jdc andthenincrementingbothiandj thisoperationexaminesx deleteacharacterfromxbyincrementingibutleavingjalone thisoperationexaminesx insertthecharactercinto bysetting jdcandthenincrementingj butleavingialone thisoperationexaminesnocharactersofx twiddle exchange thenexttwocharactersbycopyingthemfromxto butintheoppositeorder wedosobysetting jdx icand jcdx iandthensettingidic andjdjc thisoperationexaminesx iandx killtheremainderofxbysettingidmc thisoperationexaminesallchar actersinxthathavenotyetbeenexamined thisoperation ifperformed mustbethe naloperation problemsforchapter asanexample onewaytotransformthesourcestringalgorithmtothetargetstringaltruisticistousethefollowingsequenceofoperations wheretheunderlinedcharactersarex iand jaftertheoperation operationx initialstringsalgorithmcopyalgorithmacopyalgorithmalreplacebytalgorithmaltdeletealgorithmaltcopyalgorithmaltrinsertualgorithmaltruinsertialgorithmaltruiinsertsalgorithmaltruistwiddlealgorithmaltruistiinsertcalgorithmaltruistickillalgorithmaltruisticnotethatthereareseveralothersequencesoftransformationoperationsthattrans formalgorithmtoaltruistic eachofthetransformationoperationshasanassociatedcost thecostofanoperationdependsonthespeci capplication butweassumethateachoperation costisaconstantthatisknowntous wealsoassumethattheindividualcostsof thecopyandreplaceoperationsarelessthanthecombinedcostsofthedeleteand insertoperations otherwise thecopyandreplaceoperationswouldnotbeused thecostofagivensequenceoftransformationoperationsisthesumofthecostsoftheindividualoperationsinthesequence forthesequenceabove thecostof transformingalgorithmtoaltruisticis ccost replace ccost delete insert ccost twiddle ccost giventwosequencesx mandy nandsetoftransformation operationcosts theeditdistancefromxtoyisthecostoftheleastexpensiveoperationsequencethattransformsxtoy describeadynamic programmingalgorithmthat ndstheeditdistancefromx mtoy nandprintsanoptimalop erationsequence analyzetherunningtimeandspacerequirementsofyouralgorithm theedit distanceproblemgeneralizestheproblemofaligningtwodnasequences forexample setubalandmeidanis thereareseveral methodsformeasuringthesimilarityoftwodnasequencesbyaligningthem onesuchmethodtoaligntwosequencesxandyconsistsofinsertingspacesat chapter dynamicprogrammingarbitrarylocationsinthetwosequences includingateitherend sothattheresult ingsequencesx andy havethesamelengthbutdonothaveaspaceinthesameposition fornopositionjarebothx jandy jaspace thenweassigna toeachposition positionjreceivesascoreasfollows ifx jdy jandneitherisaspace ifx jandneitherisaspace ifeitherx jory jisaspace thescoreforthealignmentisthesumofthescoresoftheindividualpositions forexample giventhesequencesxdgatcggcatandydcaatgtgaatc onealignmentisgatcggcatcaatgtgaatc underapositionindicatesascoreofc forthatposition indicatesascoreof anda indicatesascoreof sothatthisalignmenthasatotalscoreof explainhowtocasttheproblemof ndinganoptimalalignmentasaneditdistanceproblemusingasubsetofthetransformationoperationscopy replace delete insert twiddle andkill planningacompanypartyprofessorstewartisconsultingforthepresidentofacorporationthatisplanning acompanyparty thecompanyhasahierarchicalstructure thatis thesupervisor relationformsatreerootedatthepresident thepersonnelof cehasrankedeach employeewithaconvivialityrating whichisarealnumber inordertomakethepartyfunforallattendees thepresidentdoesnotwantbothanemployeeandhisorherimmediatesupervisortoattend professorstewartisgiventhetreethatdescribesthestructureofthecorporation usingtheleft siblingrepresentationdescribedinsection nodeofthetreeholds inadditiontothepointers thenameofanemployeeand thatemployee sconvivialityranking describeanalgorithmtomakeupaguest listthatmaximizesthesumoftheconvivialityratingsoftheguests analyzethe runningtimeofyouralgorithm viterbialgorithmwecanusedynamicprogrammingonadirectedgraphgd forspeechrecognition eachedge eislabeledwithasoundu froma niteset ofsounds thelabeledgraphisaformalmodelofapersonspeaking problemsforchapter arestrictedlanguage eachpathinthegraphstartingfromadistinguishedver tex vcorrespondstoapossiblesequenceofsoundsproducedbythemodel wede nethelabelofadirectedpathtobetheconcatenationofthelabelsofthe edgesonthatpath describeanef cientalgorithmthat givenanedge labeledgraphgwithdis tinguishedvertex andasequencesdh kiofsoundsfrom returnsapathingthatbeginsat andhassasitslabel ifanysuchpathexists otherwise thealgorithmshouldreturnno analyzetherunningtimeofyouralgorithm hint youmay ndconceptsfromchapter useful supposethateveryedge ehasanassociatednonnegativeproba bilityp oftraversingtheedge fromvertexuandthusproducingthecorrespondingsound thesumoftheprobabilitiesoftheedgesleavinganyvertex equals theprobabilityofapathisde nedtobetheproductoftheprobabil itiesofitsedges wecanviewtheprobabilityofapathbeginningat astheprobabilitythata randomwalk beginningat willfollowthespeci edpath wherewerandomlychoosewhichedgetotakeleavingavertexuaccordingtotheprobabilitiesoftheavailableedgesleavingu extendyouranswertopart sothatifapathisreturned itisamostprob ablepathstartingat andhavinglabels analyzetherunningtimeofyouralgorithm imagecompressionbyseamcarvingwearegivenacolorpictureconsistingofanmnarraya nofpixels whereeachpixelspeci esatripleofred andblue rgb intensities sup posethatwewishtocompressthispictureslightly speci cally wewishtoremoveonepixelfromeachofthemrows sothatthewholepicturebecomesonepixelnarrower toavoiddisturbingvisualeffects however werequirethatthepixels removedintwoadjacentrowsbeinthesameoradjacentcolumns thepixelsre movedforma seam fromthetoprowtothebottomrowwheresuccessivepixels intheseamareadjacentverticallyordiagonally showthatthenumberofsuchpossibleseamsgrowsatleastexponentiallyinm assumingthatn supposenowthatalongwitheachpixela wehavecalculatedareal valueddisruptionmeasured indicatinghowdisruptiveitwouldbetoremovepixela intuitively thelowerapixel sdisruptionmeasure themoresimilarthepixelistoitsneighbors supposefurtherthatwede nethe disruptionmeasureofaseamtobethesumofthedisruptionmeasuresofits pixels chapter dynamicprogramminggiveanalgorithmto ndaseamwiththelowestdisruptionmeasure howef cientisyouralgorithm breakingastringacertainstring processinglanguageallowsaprogrammertobreakastringinto twopieces becausethisoperationcopiesthestring itcostsntimeunitstobreakastringofncharactersintotwopieces supposeaprogrammerwantstobreakastringintomanypieces theorderinwhichthebreaksoccurcanaffectthe totalamountoftimeused forexample supposethattheprogrammerwantsto breaka characterstringaftercharacters numberingthecharactersinascendingorderfromtheleft handend startingfrom ifsheprogramsthebreakstooccurinleft rightorder thenthe rstbreakcosts timeunits thesecondbreakcosts timeunits breakingthestringfromcharacters atcharacter andthethirdbreakcosts timeunits totaling timeunits ifsheprogramsthebreakstooccurinright leftorder however thenthe rstbreak costs timeunits thesecondbreakcosts timeunits andthethirdbreakcosts timeunits totaling timeunits inyetanotherorder shecouldbreak rstat costing thenbreaktheleftpieceat costing nallytherightpieceat costing foratotalcostof designanalgorithmthat giventhenumbersofcharactersafterwhichtobreak determinesaleast costwaytosequencethosebreaks moreformally givena stringswithncharactersandanarrayl mcontainingthebreakpoints com putethelowestcostforasequenceofbreaks alongwithasequenceofbreaksthat achievesthiscost planninganinvestmentstrategyyourknowledgeofalgorithmshelpsyouobtainanexcitingjobwiththeacme computercompany alongwitha signingbonus youdecidetoinvest thismoneywiththegoalofmaximizingyourreturnattheendof years youdecidetousetheamalgamatedinvestmentcompanytomanageyourinvestments amalgamatedinvestmentsrequiresyoutoobservethefollowingrules itoffersndifferentinvestments numbered throughn ineachyearj investmentiprovidesareturnrateofrij inotherwords ifyouinvestddollarsininvestmentiinyearj thenattheendofyearj youhavedrijdollars thereturnratesareguaranteed thatis youaregivenallthereturnratesforthenext yearsforeachinvestment youmakeinvestmentdecisionsonlyonceperyear attheendofeachyear canleavethemoneymadeinthepreviousyearinthesameinvestments oryou canshiftmoneytootherinvestments byeithershiftingmoneybetweenexisting investmentsormovingmoneytoanewinvestement ifyoudonotmoveyour moneybetweentwoconsecutiveyears youpayafeeoff dollars whereasifyouswitchyourmoney youpayafeeoff dollars wheref problemsforchapter theproblem asstated allowsyoutoinvestyourmoneyinmultipleinvestmentsineachyear provethatthereexistsanoptimalinvestmentstrategythat eachyear putsallthemoneyintoasingleinvestment recallthatanoptimal investmentstrategymaximizestheamountofmoneyafter yearsandisnotconcernedwithanyotherobjectives suchasminimizingrisk provethattheproblemofplanningyouroptimalinvestmentstrategyexhibitsoptimalsubstructure designanalgorithmthatplansyouroptimalinvestmentstrategy whatistherunningtimeofyouralgorithm supposethatamalgamatedinvestmentsimposedtheadditionalrestrictionthat atanypoint youcanhavenomorethan inanyoneinvestment thattheproblemofmaximizingyourincomeattheendof yearsnolongerexhibitsoptimalsubstructure inventoryplanningtherinkydinkcompanymakesmachinesthatresurfaceicerinks thedemand forsuchproductsvariesfrommonthtomonth andsothecompanyneedstode velopastrategytoplanitsmanufacturinggiventhe uctuating butpredictable demand thecompanywishestodesignaplanforthenextnmonths foreachmonthi thecompanyknowsthedemanddi thatis thenumberofmachinesthatitwillsell letddpnid dibethetotaldemandoverthenextnmonths thecompanykeepsafull timestaffwhoprovidelabortomanufactureuptomma chinespermonth ifthecompanyneedstomakemorethanmmachinesinagivenmonth itcanhireadditional timelabor atacostthatworksouttocdollarspermachine furthermore attheendofamonth thecompanyisholdingany unsoldmachines itmustpayinventorycosts thecostforholdingjmachinesisgivenasafunctionh forjd whereh jdandh giveanalgorithmthatcalculatesaplanforthecompanythatminimizesitscostswhileful llingallthedemand therunningtimeshouldbepolyomialinnandd signingfree agentbaseballplayerssupposethatyouarethegeneralmanagerforamajor leaguebaseballteam duringtheoff youneedtosignsomefree agentplayersforyourteam theteamownerhasgivenyouabudgetof xtospendonfreeagents youareallowedtospendlessthan xaltogether buttheownerwill reyouifyouspendanymorethan chapter dynamicprogrammingyouareconsideringndifferentpositions andforeachposition pfree agentplayerswhoplaythatpositionareavailable becauseyoudonotwanttooverloadyourrosterwithtoomanyplayersatanyposition foreachpositionyoumaysign atmostonefreeagentwhoplaysthatposition ifyoudonotsignanyplayersata particularposition thenyouplantostickwiththeplayersyoualreadyhaveatthat todeterminehowvaluableaplayerisgoingtobe youdecidetouseasabermet ricstatistic knownas vorp valueoverreplacementplayer aplayerwithahighervorpismorevaluablethanaplayerwithalowervorp aplayerwithahighervorpisnotnecessarilymoreexpensivetosignthanaplayerwithalower vorp becausefactorsotherthanaplayer svaluedeterminehowmuchitcoststo signhim foreachavailablefree agentplayer youhavethreepiecesofinformation theplayer sposition theamountofmoneyitwillcosttosigntheplayer andtheplayer svorp deviseanalgorithmthatmaximizesthetotalvorpoftheplayersyousignwhilespendingnomorethan xaltogether youmayassumethateachplayersignsforamultipleof youralgorithmshouldoutputthetotalvorpoftheplayersyousign thetotalamountofmoneyyouspend andalistofwhichplayersyousign analyzetherunningtimeandspacerequirementofyouralgorithm chapternotesr bellmanbeganthesystematicstudyofdynamicprogrammingin theword programming bothhereandinlinearprogramming referstousingatab ularsolutionmethod althoughoptimizationtechniquesincorporatingelementsof dynamicprogrammingwereknownearlier bellmanprovidedtheareawithasolid mathematicalbasis althoughthereareninepositionsonabaseballteam nisnotnecesarilyequalto becausesomegeneralmanagershaveparticularwaysofthinkingaboutpositions forexample ageneralmanager mightconsiderright handedpitchersandleft handedpitcherstobeseparate positions aswellasstartingpitchers longreliefpitchers reliefpitcherswhocanpitchseveralinnings andshortreliefpitchers reliefpitcherswhonormallypitchatmostonlyoneinning sabermetricsistheapplicationofstatisticalanalysistobaseballrecords itprovidesseveralwaystocomparetherelativevaluesofindividualplayers notesforchapter galilandpark classifydynamic programmingalgorithmsaccordingtothesizeofthetableandthenumberofothertableentrieseachentrydependson calladynamic programmingalgorithmtd edifitstablesizeiso andeachentrydependsono otherentries forexample thematrix chainmultiplicationalgorithminsection wouldbe andthelongest subsequencealgorithminsection wouldbe huandshing giveano nlgn timealgorithmforthematrix chainmultiplicationproblem theo timealgorithmforthelongest subsequenceproblemap pearstobeafolkalgorithm knuth posedthequestionofwhethersubquadratic algorithmsforthelcsproblemexist masekandpaterson answeredthis questionintheaf rmativebygivinganalgorithmthatrunsino lgn wherenmandthesequencesaredrawnfromasetofboundedsize forthespecialcaseinwhichnoelementappearsmorethanonceinaninputsequence szymanski showshowtosolvetheproblemino ncm ncm manyoftheseresultsextendtotheproblemofcomputingstringeditdistances anearlypaperonvariable lengthbinaryencodingsbygilbertandmoore hadapplicationstoconstructingoptimalbinarysearchtreesforthecaseinwhichall probabilitiespiare thispapercontainsano timealgorithm aho hopcroft andullman presentthealgorithmfromsection isdueto knuth huandtucker devisedanalgorithmforthecaseinwhichallprobabilitiespiare thatuseso timeando subsequently knuth reducedthetimetoo nlgn isduetoavidanandshamir whohavepostedonthewebawonderfulvideoillustratingthisimage compressiontechnique greedyalgorithmsalgorithmsforoptimizationproblemstypicallygothroughasequenceofsteps withasetofchoicesateachstep formanyoptimizationproblems usingdynamic programmingtodeterminethebestchoicesisoverkill simpler moreef ciental gorithmswilldo agreedyalgorithmalwaysmakesthechoicethatlooksbestatthemoment thatis itmakesalocallyoptimalchoiceinthehopethatthischoice willleadtoagloballyoptimalsolution thischapterexploresoptimizationprob lemsforwhichgreedyalgorithmsprovideoptimalsolutions beforereadingthis chapter youshouldreadaboutdynamicprogramminginchapter particularly greedyalgorithmsdonotalwaysyieldoptimalsolutions butformanyproblemstheydo weshall rstexamine insection asimplebutnontrivialproblem theactivity selectionproblem forwhichagreedyalgorithmef cientlycomputes anoptimalsolution weshallarriveatthegreedyalgorithmby rstconsider ingadynamic programmingapproachandthenshowingthatwecanalwaysmakegreedychoicestoarriveatanoptimalsolution reviewsthebasicelementsofthegreedyapproach givingadirectapproachforprovinggreedyal gorithmscorrect presentsanimportantapplicationofgreedytech niques designingdata compression huffman codes insection weinves tigatesomeofthetheoryunderlyingcombinatorialstructurescalled matroids forwhichagreedyalgorithmalwaysproducesanoptimalsolution finally sec tion appliesmatroidstosolveaproblemofschedulingunit timetaskswith deadlinesandpenalties thegreedymethodisquitepowerfulandworkswellforawiderangeofprob lems laterchapterswillpresentmanyalgorithmsthatwecanviewasapplica tionsofthegreedymethod includingminimum spanning treealgorithms chap ter dijkstra salgorithmforshortestpathsfromasinglesource chapter andchv atal sgreedyset coveringheuristic chapter minimum spanning treealgorithmsfurnishaclassicexampleofthegreedymethod althoughyoucanread anactivity selectionproblem thischapterandchapter independentlyofeachother youmight nditusefultoreadthemtogether anactivity selectionproblemour rstexampleistheproblemofschedulingseveralcompetingactivitiesthatre quireexclusiveuseofacommonresource withagoalofselectingamaximum setofmutuallycompatibleactivities supposewehaveasetsdfa angofnproposedactivitiesthatwishtousearesource suchasalecturehall whichcanserveonlyoneactivityatatime eachactivityaihasastarttimesianda nishtimefi ifselected activityaitakesplaceduringthehalf opentimeinterval activitiesaiandajarecompatibleiftheintervals donotoverlap thatis aiandajarecompatibleifsifjorsjfi intheactivity selectionproblem wewishtoselectamaximum sizesubsetofmutuallycompatibleactivities weassumethattheactivitiesaresorted inmonotonicallyincreasingorderof nishtime weshallseelatertheadvantagethatthisassumptionprovides forexample considerthefollowingsetsofactivities forthisexample thesubsetfa gconsistsofmutuallycompatibleactivities itisnotamaximumsubset however sincethesubsetfa gislarger infact gisalargestsubsetofmutuallycompatibleactivities anotherlargestsubsetisfa weshallsolvethisprobleminseveralsteps westartbythinkingaboutadynamic programmingsolution inwhichweconsiderseveralchoiceswhendeter miningwhichsubproblemstouseinanoptimalsolution weshallthenobservethat weneedtoconsideronlyonechoice thegreedychoice andthatwhenwemake thegreedychoice onlyonesubproblemremains basedontheseobservations shalldeveloparecursivegreedyalgorithmtosolvetheactivity schedulingprob lem weshallcompletetheprocessofdevelopingagreedysolutionbyconverting therecursivealgorithmtoaniterativeone althoughthestepsweshallgothrough inthissectionareslightlymoreinvolvedthanistypicalwhendevelopingagreedy algorithm theyillustratetherelationshipbetweengreedyalgorithmsanddynamicprogramming chapter greedyalgorithmstheoptimalsubstructureoftheactivity selectionproblemwecaneasilyverifythattheactivity selectionproblemexhibitsoptimalsubstruc ture letusdenotebysijthesetofactivitiesthatstartafteractivityai nishesandthat nishbeforeactivityajstarts supposethatwewishto ndamaximumsetofmutuallycompatibleactivitiesinsij andsupposefurtherthatsuchamaximumsetisaij whichincludessomeactivityak byincludingakinanoptimalsolution weareleftwithtwosubproblems ndingmutuallycompatibleactivitiesinthesetsik activitiesthatstartafteractivityai nishesandthat nishbeforeactivityakstarts ndingmutuallycompatibleactivitiesinthesetskj activitiesthatstartafteractivityak nishesandthat nishbeforeactivityajstarts letaikdaij sikandakjdaij skj sothataikcontainstheactivitiesinaijthat nishbeforeakstartsandakjcontainstheactivitiesinaijthatstartafterak nishes wehaveaijdaik fakg akj andsothemaximum sizesetaijofmutuallycom patibleactivitiesinsijconsistsofjaijjdjaikjcjakjjc activities theusualcut pasteargumentshowsthattheoptimalsolutionaijmustalsoincludeoptimalsolutionstothetwosubproblemsforsikandskj ifwecould ndaseta kjofmutuallycompatibleactivitiesinskjwhereja kjj jakjj thenwecouldusea ratherthanakj inasolutiontothesubproblemforsij wewouldhaveconstructedasetofjaikjcja kjjc jaikjcjakjjc djaijjmutuallycompatibleactivities whichcontradictstheassumptionthataijisanoptimalsolution asymmetricargumentappliestotheactivitiesinsik thiswayofcharacterizingoptimalsubstructuresuggeststhatwemightsolvetheactivity selectionproblembydynamicprogramming ifwedenotethesizeof anoptimalsolutionforthesetsijbyc thenwewouldhavetherecurrencec jdc kcc ofcourse ifwedidnotknowthatanoptimalsolutionforthesetsijincludesactivityak wewouldhavetoexamineallactivitiesinsijto ndwhichonetochoose sothatc ifsijd maxak sijfc kcc gifsij wecouldthendeveloparecursivealgorithmandmemoizeit orwecouldworkbottom upand llintableentriesaswegoalong butwewouldbeoverlooking anotherimportantcharacteristicoftheactivity selectionproblemthatwecanusetogreatadvantage anactivity selectionproblem makingthegreedychoicewhatifwecouldchooseanactivitytoaddtoouroptimalsolutionwithouthavingto rstsolveallthesubproblems thatcouldsaveusfromhavingtoconsiderall thechoicesinherentinrecurrence infact fortheactivity selectionproblem weneedconsideronlyonechoice thegreedychoice whatdowemeanbythegreedychoicefortheactivity selectionproblem intu itionsuggeststhatweshouldchooseanactivitythatleavestheresourceavailable forasmanyotheractivitiesaspossible oftheactivitiesweendupchoos ing oneofthemmustbethe rstoneto nish ourintuitiontellsus therefore tochoosetheactivityinswiththeearliest nishtime sincethatwouldleavetheresourceavailableforasmanyoftheactivitiesthatfollowitaspossible ifmore thanoneactivityinshastheearliest nishtime thenwecanchooseanysuchactivity inotherwords sincetheactivitiesaresortedinmonotonicallyincreasing orderby nishtime thegreedychoiceisactivitya choosingthe rstactivityto nishisnottheonlywaytothinkofmakingagreedychoiceforthisproblem asksyoutoexploreotherpossibilities ifwemakethegreedychoice wehaveonlyoneremainingsubproblemtosolve ndingactivitiesthatstartaftera nishes whydon twehavetoconsiderac tivitiesthat nishbeforea starts wehavethats andf istheearliest nishtimeofanyactivity andthereforenoactivitycanhavea nishtimelessthanorequaltos allactivitiesthatarecompatiblewithactivitya muststartaftera nishes furthermore wehavealreadyestablishedthattheactivity selectionproblemex hibitsoptimalsubstructure letskdfai swsifkgbethesetofactivitiesthatstartafteractivityak nishes ifwemakethegreedychoiceofactivitya thens remainsastheonlysubproblemtosolve optimalsubstructuretellsusthatifa isintheoptimalsolution thenanoptimalsolutiontotheoriginalproblemconsistsofactivitya andalltheactivitiesinanoptimalsolutiontothesubproblems onebigquestionremains isourintuitioncorrect isthegreedychoice inwhichwechoosethe rstactivityto nish alwayspartofsomeoptimalsolution thefollowingtheoremshowsthatitis wesometimesrefertothesetsskassubproblemsratherthanasjustsetsofactivities itwillalwaysbeclearfromthecontextwhetherwearereferringtoskasasetofactivitiesorasasubproblemwhoseinputisthatset chapter greedyalgorithmstheorem consideranynonemptysubproblemsk andletambeanactivityinskwiththeearliest nishtime thenamisincludedinsomemaximum sizesubsetofmutuallycompatibleactivitiesofsk proofletakbeamaximum sizesubsetofmutuallycompatibleactivitiesinsk andletajbetheactivityinakwiththeearliest nishtime ifajdam wearedone sincewehaveshownthatamisinsomemaximum sizesubsetofmutuallycompatibleactivitiesofsk ifaj lettheseta kdakfajg famgbeakbutsubstitutingamforaj theactivitiesina karedisjoint whichfollowsbecausetheactivitiesinakaredisjoint ajisthe rstactivityinakto nish andfmfj sinceja kjdjakj weconcludethata kisamaximum sizesubsetofmutuallycompatibleactivitiesofsk anditincludesam weseethatalthoughwemightbeabletosolvetheactivity selectionprob lemwithdynamicprogramming wedon tneedto besides wehavenotyet examinedwhethertheactivity selectionproblemevenhasoverlappingsubprob lems instead wecanrepeatedlychoosetheactivitythat nishes rst keeponly theactivitiescompatiblewiththisactivity andrepeatuntilnoactivitiesremain moreover becausewealwayschoosetheactivitywiththeearliest nishtime nishtimesoftheactivitieswechoosemuststrictlyincrease wecanconsider eachactivityjustonceoverall inmonotonicallyincreasingorderof nishtimes analgorithmtosolvetheactivity selectionproblemdoesnotneedtoworkbottom likeatable baseddynamic programmingalgorithm instead itcanworktop choosinganactivitytoputintotheoptimalsolutionandthensolv ingthesubproblemofchoosingactivitiesfromthosethatarecompatiblewiththose alreadychosen greedyalgorithmstypicallyhavethistop downdesign makea choiceandthensolveasubproblem ratherthanthebottom uptechniqueofsolving subproblemsbeforemakingachoice arecursivegreedyalgorithmnowthatwehaveseenhowtobypassthedynamic programmingapproachandin steaduseatop greedyalgorithm wecanwriteastraightforward recursive proceduretosolvetheactivity selectionproblem theprocedurerecursive activity selectortakesthestartand nishtimesoftheactivities representedasarrayssandf theindexkthatde nesthesubproblemskitistosolve becausethepseudocodetakessandfasarrays itindexesintothemwithsquarebracketsratherthansubscripts anactivity selectionproblem thesizenoftheoriginalproblem itreturnsamaximum sizesetofmutuallycom patibleactivitiesinsk weassumethattheninputactivitiesarealreadyorderedbymonotonicallyincreasing nishtime accordingtoequation ifnot cansortthemintothisorderino nlgn breakingtiesarbitrarily inordertostart weaddthe ctitiousactivitya withf sothatsubproblems istheentiresetofactivitiess theinitialcall whichsolvestheentireproblem isrecursive activity selector recursive activity selector mdkc whilemnands ndthe rstactivityinskto nish mdmc ifmn returnfamg recursive activity selector elsereturn showstheoperationofthealgorithm inagivenrecursivecallrecursive activity selector thewhileloopoflines looksforthe rstactivityinskto nish theloopexaminesakc akc tilit ndsthe rstactivityamthatiscompatiblewithak suchanactivityhassmfk iftheloopterminatesbecauseit ndssuchanactivity returnstheunionoffamgandthemaximum sizesubsetofsmreturnedbytherecursivecallrecursive activity selector alternatively theloopmayterminatebecausem inwhichcasewehaveexaminedallactivitiesinskwithout ndingonethatiscompatiblewithak inthiscase skd andsotheprocedurereturns inline assumingthattheactivitieshavealreadybeensortedby nishtimes therunningtimeofthecallrecursive activity selector whichwecanseeasfollows overallrecursivecalls eachactivityisexaminedexactlyonce inthewhilelooptestofline inparticular activityaiisexaminedinthelastcallmadeinwhichk aniterativegreedyalgorithmweeasilycanconvertourrecursiveproceduretoaniterativeone theprocedurerecursive activity selectorisalmost tailrecursive seeproblem itendswitharecursivecalltoitselffollowedbyaunionoperation itisusuallya straightforwardtasktotransformatail recursiveproceduretoaniterativeform somecompilersforcertainprogramminglanguagesperformthistaskautomat ically aswritten recursive activity selectorworksforsubproblemssk subproblemsthatconsistofthelastactivitiesto nish chapter greedyalgorithms kskfka recursive activity selector recursive activity selector recursive activity selector recursive activity selector recursive activity selector theoperationofrecursive activity selectoronthe activitiesgivenear lier activitiesconsideredineachrecursivecallappearbetweenhorizontallines ctitiousactivitya nishesattime andtheinitialcallrecursive activity selector lectsactivitya ineachrecursivecall theactivitiesthathavealreadybeenselectedareshaded andtheactivityshowninwhiteisbeingconsidered ifthestartingtimeofanactivityoccursbeforethe nishtimeofthemostrecentlyaddedactivity thearrowbetweenthempointsleft itisre jected otherwise thearrowpointsdirectlyuportotheright itisselected thelastrecursivecall recursive activity selector returns theresultingsetofselectedactivitiesisfa anactivity selectionproblem theproceduregreedy activity selectorisaniterativeversionofthepro cedurerecursive activity selector italsoassumesthattheinputactivi tiesareorderedbymonotonicallyincreasing nishtime itcollectsselectedactiv itiesintoasetaandreturnsthissetwhenitisdone greedy activity selector nds adfa formd ton ifs ada famg kdm returnatheprocedureworksasfollows thevariablekindexesthemostrecentadditiontoa correspondingtotheactivityakintherecursiveversion sinceweconsidertheactivitiesinorderofmonotonicallyincreasing nishtime fkisalwaysthemaximum nishtimeofanyactivityina thatis fkdmaxffiwai lines selectactivitya initializeatocontainjustthisactivity andinitializektoindexthisactivity theforloopoflines ndstheearliestactivityinskto nish theloopconsiderseachactivityaminturnandaddsamtoaifitiscompat iblewithallpreviouslyselectedactivities suchanactivityistheearliestinskto nish toseewhetheractivityamiscompatiblewitheveryactivitycurrentlyina itsuf cesbyequation tocheck inline thatitsstarttimesmisnotearlierthanthe nishtimefkoftheactivitymostrecentlyaddedtoa ifactivityamiscompatible thenlines addactivityamtoaandsetktom thesetareturnedbythecallgreedy activity selector ispreciselythesetreturnedbythecallrecursive activity selector liketherecursiveversion greedy activity selectorschedulesasetofnactivitiesin assumingthattheactivitieswerealreadysortedinitiallybytheir nishtimes exercises giveadynamic programmingalgorithmfortheactivity selectionproblem based onrecurrence haveyouralgorithmcomputethesizesc jasde nedaboveandalsoproducethemaximum sizesubsetofmutuallycompatibleactivities chapter greedyalgorithmsassumethattheinputshavebeensortedasinequation comparetherunningtimeofyoursolutiontotherunningtimeofgreedy activity selector supposethatinsteadofalwaysselectingthe rstactivityto nish weinsteadselect thelastactivitytostartthatiscompatiblewithallpreviouslyselectedactivities scribehowthisapproachisagreedyalgorithm andprovethatityieldsanoptimal notjustanygreedyapproachtotheactivity selectionproblemproducesamax imum sizesetofmutuallycompatibleactivities giveanexampletoshowthat theapproachofselectingtheactivityofleastdurationfromamongthosethatare compatiblewithpreviouslyselectedactivitiesdoesnotwork dothesamefor theapproachesofalwaysselectingthecompatibleactivitythatoverlapsthefewest otherremainingactivitiesandalwaysselectingthecompatibleremainingactivity withtheearlieststarttime supposethatwehaveasetofactivitiestoscheduleamongalargenumberoflecture halls whereanyactivitycantakeplaceinanylecturehall wewishtoschedule alltheactivitiesusingasfewlecturehallsaspossible giveanef cientgreedy algorithmtodeterminewhichactivityshouldusewhichlecturehall thisproblemisalsoknownastheinterval graphcoloringproblem wecancreateanintervalgraphwhoseverticesarethegivenactivitiesandwhoseedges connectincompatibleactivities thesmallestnumberofcolorsrequiredtocoloreveryvertexsothatnotwoadjacentverticeshavethesamecolorcorrespondsto ndingthefewestlecturehallsneededtoscheduleallofthegivenactivities consideramodi cationtotheactivity selectionprobleminwhicheachactivityaihas inadditiontoastartand nishtime avaluei theobjectiveisnolongertomaximizethenumberofactivitiesscheduled butinsteadtomaximizethetotal valueoftheactivitiesscheduled thatis wewishtochooseasetaofcompatibleactivitiessuchthatpak akismaximized giveapolynomial timealgorithmforthisproblem elementsofthegreedystrategy elementsofthegreedystrategyagreedyalgorithmobtainsanoptimalsolutiontoaproblembymakingasequenceofchoices ateachdecisionpoint thealgorithmmakeschoicethatseemsbestat themoment thisheuristicstrategydoesnotalwaysproduceanoptimalsolution butaswesawintheactivity selectionproblem sometimesitdoes thissectiondiscussessomeofthegeneralpropertiesofgreedymethods theprocessthatwefollowedinsection todevelopagreedyalgorithmwasabitmoreinvolvedthanistypical wewentthroughthefollowingsteps determinetheoptimalsubstructureoftheproblem developarecursivesolution fortheactivity selectionproblem weformu latedrecurrence butwebypasseddevelopingarecursivealgorithmbased onthisrecurrence showthatifwemakethegreedychoice thenonlyonesubproblemremains provethatitisalwayssafetomakethegreedychoice steps canoccurineitherorder developarecursivealgorithmthatimplementsthegreedystrategy converttherecursivealgorithmtoaniterativealgorithm ingoingthroughthesesteps wesawingreatdetailthedynamic programmingun derpinningsofagreedyalgorithm forexample intheactivity selectionproblem rstde nedthesubproblemssij wherebothiandjvaried wethenfoundthatifwealwaysmadethegreedychoice wecouldrestrictthesubproblemstobe oftheformsk alternatively wecouldhavefashionedouroptimalsubstructurewithagreedychoiceinmind sothatthechoiceleavesjustonesubproblemtosolve intheactivity selectionproblem wecouldhavestartedbydroppingthesecondsubscriptandde ningsubproblemsoftheformsk wecouldhaveproventhatagreedychoice rstactivityamto nishinsk combinedwithanoptimalsolutiontotheremainingsetsmofcompatibleactivities yieldsanoptimalsolutiontosk moregenerally wedesigngreedyalgorithmsaccordingtothefollowingsequence ofsteps casttheoptimizationproblemasoneinwhichwemakeachoiceandareleftwithonesubproblemtosolve provethatthereisalwaysanoptimalsolutiontotheoriginalproblemthatmakesthegreedychoice sothatthegreedychoiceisalwayssafe chapter greedyalgorithms demonstrateoptimalsubstructurebyshowingthat havingmadethegreedychoice whatremainsisasubproblemwiththepropertythatifwecombinean optimalsolutiontothesubproblemwiththegreedychoicewehavemade arriveatanoptimalsolutiontotheoriginalproblem weshallusethismoredirectprocessinlatersectionsofthischapter neverthe beneatheverygreedyalgorithm thereisalmostalwaysamorecumbersome dynamic programmingsolution howcanwetellwhetheragreedyalgorithmwillsolveaparticularoptimizationproblem nowayworksallthetime butthegreedy choicepropertyandoptimal substructurearethetwokeyingredients ifwecandemonstratethattheproblem hastheseproperties thenwearewellonthewaytodevelopingagreedyalgorithm forit greedy choicepropertythe rstkeyingredientisthegreedy choiceproperty wecanassembleagloballyoptimalsolutionbymakinglocallyoptimal greedy choices inotherwords weareconsideringwhichchoicetomake wemakethechoicethatlooksbestin thecurrentproblem withoutconsideringresultsfromsubproblems hereiswheregreedyalgorithmsdifferfromdynamicprogramming indynamicprogramming wemakeachoiceateachstep butthechoiceusuallydependsonthe solutionstosubproblems consequently wetypicallysolvedynamic programming problemsinabottom upmanner progressingfromsmallersubproblemstolarger subproblems alternatively wecansolvethemtopdown butmemoizing eventhoughthecodeworkstopdown westillmustsolvethesubprob lemsbeforemakingachoice inagreedyalgorithm wemakewhateverchoice seemsbestatthemomentandthensolvethesubproblemthatremains thechoicemadebyagreedyalgorithmmaydependonchoicessofar butitcannotdependonanyfuturechoicesoronthesolutionstosubproblems unlikedynamicpro gramming whichsolvesthesubproblemsbeforemakingthe rstchoice agreedy algorithmmakesits rstchoicebeforesolvinganysubproblems adynamic programmingalgorithmproceedsbottomup whereasagreedystrategyusually progressesinatop downfashion makingonegreedychoiceafteranother reduc ingeachgivenprobleminstancetoasmallerone ofcourse wemustprovethatagreedychoiceateachstepyieldsagloballyoptimalsolution typically asinthecaseoftheorem theproofexamines agloballyoptimalsolutiontosomesubproblem itthenshowshowtomodify thesolutiontosubstitutethegreedychoiceforsomeotherchoice resultinginone butsmaller subproblem wecanusuallymakethegreedychoicemoreef cientlythanwhenwehavetoconsiderawidersetofchoices forexample intheactivity selectionproblem elementsofthegreedystrategy sumingthatwehadalreadysortedtheactivitiesinmonotonicallyincreasingorderof nishtimes weneededtoexamineeachactivityjustonce bypreprocessingthe inputorbyusinganappropriatedatastructure oftenapriorityqueue weoften canmakegreedychoicesquickly thusyieldinganef cientalgorithm optimalsubstructureaproblemexhibitsoptimalsubstructureifanoptimalsolutiontotheproblemcontainswithinitoptimalsolutionstosubproblems thispropertyisakeyin gredientofassessingtheapplicabilityofdynamicprogrammingaswellasgreedy algorithms asanexampleofoptimalsubstructure recallhowwedemonstratedin thatifanoptimalsolutiontosubproblemsijincludesanactivityak thenitmustalsocontainoptimalsolutionstothesubproblemssikandskj giventhisoptimalsubstructure wearguedthatifweknewwhichactivitytouseasak wecouldconstructanoptimalsolutiontosijbyselectingakalongwithallactivitiesinoptimalsolutionstothesubproblemssikandskj basedonthisobservationofoptimalsubstructure wewereabletodevisetherecurrence thatdescribed thevalueofanoptimalsolution weusuallyuseamoredirectapproachregardingoptimalsubstructurewhenapplyingittogreedyalgorithms asmentionedabove wehavetheluxuryofassumingthatwearrivedatasubproblembyhavingmadethegreedychoiceintheoriginalproblem allwereallyneedtodoisarguethatanoptimalsolutiontothesubproblem combinedwiththegreedychoicealreadymade yieldsanoptimal solutiontotheoriginalproblem thisschemeimplicitlyusesinductiononthe subproblemstoprovethatmakingthegreedychoiceateverystepproducesan optimalsolution greedyversusdynamicprogrammingbecauseboththegreedyanddynamic programmingstrategiesexploitoptimalsub structure youmightbetemptedtogenerateadynamic programmingsolutiontoa problemwhenagreedysolutionsuf cesor conversely youmightmistakenlythinkthatagreedysolutionworkswheninfactadynamic programmingsolutionisre quired toillustratethesubtletiesbetweenthetwotechniques letusinvestigatetwovariantsofaclassicaloptimizationproblem knapsackproblemisthefollowing athiefrobbingastore ndsnitems theithitemisworthidollarsandweighswipounds whereiandwiareintegers thethiefwantstotakeasvaluablealoadaspossible buthecancarryat mostwpoundsinhisknapsack forsomeintegerw whichitemsshouldhetake wecallthisthe knapsackproblembecauseforeachitem thethiefmusteither chapter greedyalgorithmstakeitorleaveitbehind hecannottakeafractionalamountofanitemortakeanitemmorethanonce inthefractionalknapsackproblem thesetupisthesame butthethiefcantakefractionsofitems ratherthanhavingtomakeabinary choiceforeachitem youcanthinkofaniteminthe knapsackproblemasbeinglikeagoldingot andaniteminthefractionalknapsackproblemasmorelikegolddust bothknapsackproblemsexhibittheoptimal substructureproperty forthe considerthemostvaluableloadthatweighsatmostwpounds ifweremoveitemjfromthisload theremainingloadmustbethemostvaluableloadweighingatmostwwjthatthethiefcantakefromthen originalitemsexcludingj forthecomparablefractionalproblem considerthatifweremoveaweightwofoneitemjfromtheoptimalload theremainingloadmustbethemostvaluableloadweighingatmostwwthatthethiefcantakefromthen originalitemspluswjwpoundsofitemj althoughtheproblemsaresimilar wecansolvethefractionalknapsackproblembyagreedystrategy butwecannotsolvethe problembysuchastrategy tosolvethefractionalproblem rstcomputethevalueperpoundi wiforeachitem obeyingagreedystrategy thethiefbeginsbytakingasmuchaspossibleoftheitemwiththegreatestvalueperpound ifthesupplyofthatitemisexhausted andhecanstillcarrymore hetakesasmuchaspossibleoftheitemwiththenext greatestvalueperpound andsoforth untilhereacheshisweightlimitw bysortingtheitemsbyvalueperpound thegreedyalgorithmrunsino nlgn weleavetheproofthatthefractionalknapsackproblemhasthegreedy choicepropertyasexercise toseethatthisgreedystrategydoesnotworkforthe knapsackproblem considertheprobleminstanceillustratedinfigure thisexamplehas itemsandaknapsackthatcanhold pounds item weighs poundsandisworth dollars item weighs poundsandisworth dollars item weighs poundsandisworth dollars thevalueperpoundofitem dollarsperpound whichisgreaterthanthevalueperpoundofeitheritem dollarsperpound oritem dollarsperpound thegreedystrategy therefore wouldtakeitem rst asyoucanseefromthecaseanalysisinfigure however theoptimalsolutiontakesitems leavingitem thetwopossiblesolutionsthattakeitem arebothsuboptimal forthecomparablefractionalproblem however thegreedystrategy whichtakesitem rst doesyieldanoptimalsolution asshowninfigure tak ingitem doesn tworkinthe problembecausethethiefisunableto llhisknapsacktocapacity andtheemptyspacelowerstheeffectivevalueperpoundof hisload inthe whenweconsiderwhethertoincludeaniteminthe knapsack wemustcomparethesolutiontothesubproblemthatincludestheitem withthesolutiontothesubproblemthatexcludestheitembeforewecanmakethe elementsofthegreedystrategy item item item knapsack anexampleshowingthatthegreedystrategydoesnotworkforthe knapsackproblem thethiefmustselectasubsetofthethreeitemsshownwhoseweightmustnotexceed pounds theoptimalsubsetincludesitems anysolutionwithitem issuboptimal eventhoughitem hasthegreatestvalueperpound forthefractionalknapsackproblem takingtheitemsinorderofgreatestvalueperpoundyieldsanoptimalsolution choice theproblemformulatedinthiswaygivesrisetomanyoverlappingsub problems ahallmarkofdynamicprogramming andindeed asexercise asksyoutoshow wecanusedynamicprogrammingtosolvethe exercises provethatthefractionalknapsackproblemhasthegreedy choiceproperty giveadynamic programmingsolutiontothe knapsackproblemthatrunsin wherenisthenumberofitemsandwisthemaximumweightofitemsthatthethiefcanputinhisknapsack supposethatina knapsackproblem theorderoftheitemswhensortedby increasingweightisthesameastheirorderwhensortedbydecreasingvalue anef cientalgorithmto ndanoptimalsolutiontothisvariantoftheknapsack andarguethatyouralgorithmiscorrect professorgekkohasalwaysdreamedofinlineskatingacrossnorthdakota planstocrossthestateonhighwayu whichrunsfromgrandforks onthe easternborderwithminnesota towilliston nearthewesternborderwithmontana chapter greedyalgorithmstheprofessorcancarrytwolitersofwater andhecanskatemmilesbeforerunningoutofwater becausenorthdakotaisrelatively theprofessordoesnothave toworryaboutdrinkingwateratagreaterrateonuphillsectionsthanon ator downhillsections theprofessorwillstartingrandforkswithtwofulllitersof hisof cialnorthdakotastatemapshowsalltheplacesalongu whichhecanre llhiswaterandthedistancesbetweentheselocations theprofessor sgoalistominimizethenumberofwaterstopsalonghisrouteacrossthestate giveanef cientmethodbywhichhecandeterminewhichwaterstopsheshouldmake provethatyourstrategyyieldsanoptimalsolution andgiveitsrunningtime describeanef cientalgorithmthat givenasetfx xngofpointsontherealline determinesthesmallestsetofunit lengthclosedintervalsthatcontains allofthegivenpoints arguethatyouralgorithmiscorrect showhowtosolvethefractionalknapsackproblemino supposeyouaregiventwosetsaandb eachcontainingnpositiveintegers youcanchoosetoreordereachsethoweveryoulike afterreordering letaibetheithelementofseta andletbibetheithelementofsetb youthenreceiveapayoffofqnid aibi giveanalgorithmthatwillmaximizeyourpayoff provethatyouralgorithmmaximizesthepayoff andstateitsrunningtime huffmancodeshuffmancodescompressdataveryeffectively savingsof aretypical dependingonthecharacteristicsofthedatabeingcompressed weconsiderthe datatobeasequenceofcharacters huffman sgreedyalgorithmusesatablegiving howofteneachcharacteroccurs itsfrequency tobuildupanoptimalwayof representingeachcharacterasabinarystring supposewehavea characterdata lethatwewishtostorecompactly weobservethatthecharactersinthe leoccurwiththefrequenciesgivenbyfig ure thatis differentcharactersappear andthecharacteraoccurs times wehavemanyoptionsforhowtorepresentsucha leofinformation weconsidertheproblemofdesigningabinarycharactercode orcodeforshort huffmancodes abcdeffrequency inthousands fixed lengthcodeword variable lengthcodeword acharacter codingproblem adata leof characterscontainsonlythechar actersa withthefrequenciesindicated ifweassigneachcharactera bitcodeword wecanencodethe lein bits usingthevariable lengthcodeshown wecanencodethe leinonly bits inwhicheachcharacterisrepresentedbyauniquebinarystring whichwecallacodeword ifweusea xed lengthcode weneed bitstorepresent characters thismethodrequires bitstocodetheentire canwedobetter avariable lengthcodecandoconsiderablybetterthana xed lengthcode bygivingfrequentcharactersshortcodewordsandinfrequentcharacterslongcode words showssuchacode herethe bitstring representsa andthe bitstring representsf thiscoderequires bitstorepresentthe asavingsofapproximately infact thisisanoptimalcharactercodeforthis asweshallsee pre xcodesweconsiderhereonlycodesinwhichnocodewordisalsoapre xofsomeothercodeword suchcodesarecalledpre xcodes althoughwewon tproveithere apre xcodecanalwaysachievetheoptimaldatacompressionamonganycharacter code andsowesuffernolossofgeneralitybyrestrictingourattentiontopre codes encodingisalwayssimpleforanybinarycharactercode wejustconcatenatethecodewordsrepresentingeachcharacterofthe forexample withthevariable lengthpre xcodeoffigure wecodethe leabcas denotesconcatenation pre xcodesaredesirablebecausetheysimplifydecoding sincenocodewordisapre xofanyother thecodewordthatbeginsanencoded leisunambiguous wecansimplyidentifytheinitialcodeword translateitbacktotheoriginalchar pre freecodes wouldbeabettername buttheterm pre xcodes isstandardintheliterature chapter greedyalgorithmsa treescorrespondingtothecodingschemesinfigure eachleafislabeledwithacharacteranditsfrequencyofoccurrence eachinternalnodeislabeledwiththesumofthefre quenciesoftheleavesinitssubtree thetreecorrespondingtothe xed lengthcodea thetreecorrespondingtotheoptimalpre xcodea acter andrepeatthedecodingprocessontheremainderoftheencoded inourexample thestring parsesuniquelyas whichdecodestoaabe thedecodingprocessneedsaconvenientrepresentationforthepre xcodesothatwecaneasilypickofftheinitialcodeword abinarytreewhoseleavesare thegivencharactersprovidesonesuchrepresentation weinterpretthebinarycodewordforacharacterasthesimplepathfromtheroottothatcharacter means gototheleftchild means gototherightchild showsthetreesforthetwocodesofourexample notethatthesearenotbinarysearchtrees sincetheleavesneednotappearinsortedorderandinternalnodesdonotcontaincharacterkeys anoptimalcodefora leisalwaysrepresentedbyafullbinarytree inwhicheverynonleafnodehastwochildren seeexercise xed lengthcode inourexampleisnotoptimalsinceitstree showninfigure isnotafullbi narytree itcontainscodewordsbeginning butnonebeginning sincewecannowrestrictourattentiontofullbinarytrees wecansaythatifcisthealphabetfromwhichthecharactersaredrawnandallcharacterfrequenciesarepos itive thenthetreeforanoptimalpre xcodehasexactlyjcjleaves oneforeachletterofthealphabet andexactlyjcj internalnodes seeexerciseb givenatreetcorrespondingtoapre xcode wecaneasilycomputethenumberofbitsrequiredtoencodea foreachcharactercinthealphabetc lettheattributec freqdenotethefrequencyofcinthe leandletdt denotethedepth huffmancodes ofc sleafinthetree notethatdt isalsothelengthofthecodewordforcharacterc thenumberofbitsrequiredtoencodea leisthusb dxc freqdt whichwede neasthecostofthetreet constructingahuffmancodehuffmaninventedagreedyalgorithmthatconstructsanoptimalpre xcodecalledahuffmancode inlinewithourobservationsinsection itsproofofcor rectnessreliesonthegreedy choicepropertyandoptimalsubstructure thandemonstratingthatthesepropertiesholdandthendevelopingpseudocode presentthepseudocode rst doingsowillhelpclarifyhowthealgorithmmakesgreedychoices inthepseudocodethatfollows weassumethatcisasetofncharactersandthateachcharacterc cisanobjectwithanattributec freqgivingitsfrequency thealgorithmbuildsthetreetcorrespondingtotheoptimalcodeinabottom upmanner itbeginswithasetofjcjleavesandperformsasequenceofjcj merging operationstocreatethe naltree thealgorithmusesamin priority queueq keyedonthefreqattribute toidentifythetwoleast frequentobjectstomergetogether whenwemergetwoobjects theresultisanewobjectwhose frequencyisthesumofthefrequenciesofthetwoobjectsthatweremerged huffman ndjcj qdc forid ton allocateanewnode leftdxdextract min rightdydextract min freqdx freqcy freq insert returnextract min returntherootofthetreeforourexample huffman salgorithmproceedsasshowninfigure sincethealphabetcontains letters theinitialqueuesizeisnd mergestepsbuildthetree naltreerepresentstheoptimalpre xcode thecodewordfor aletteristhesequenceofedgelabelsonthesimplepathfromtheroottotheletter initializesthemin priorityqueueqwiththecharactersinc theforloopinlines repeatedlyextractsthetwonodesxandyoflowestfrequency chapter greedyalgorithmse thestepsofhuffman salgorithmforthefrequenciesgiveninfigure eachpartshowsthecontentsofthequeuesortedintoincreasingorderbyfrequency ateachstep thetwotreeswithlowestfrequenciesaremerged leavesareshownasrectanglescontainingacharacteranditsfrequency internalnodesareshownascirclescontainingthesumofthefrequenciesoftheirchildren anedgeconnectinganinternalnodewithitschildrenislabeled ifitisanedgetoaleftchildand ifitisanedgetoarightchild thecodewordforaletteristhesequenceoflabelsontheedgesconnectingtheroottotheleafforthatletter theinitialsetofnd nodes oneforeachletter intermediatestages naltree fromthequeue replacingtheminthequeuewithanewnode representingtheirmerger thefrequencyof iscomputedasthesumofthefrequenciesofxandyinline thenode hasxasitsleftchildandyasitsrightchild thisorderisarbitrary switchingtheleftandrightchildofanynodeyieldsadifferentcodeof thesamecost aftern mergers returnstheonenodeleftinthequeue whichistherootofthecodetree althoughthealgorithmwouldproducethesameresultifweweretoexcisethevariablesxandy assigningdirectlyto leftand rightinlines andchangingline freqd freqc freq weshallusethenode huffmancodes namesxandyintheproofofcorrectness therefore nditconvenienttoleavethemin toanalyzetherunningtimeofhuffman salgorithm weassumethatqisim plementedasabinarymin heap seechapter forasetcofncharacters wecaninitializeqinline ino timeusingthebuild min heapproceduredis cussedinsection theforloopinlines executesexactlyn times andsinceeachheapoperationrequirestimeo lgn theloopcontributeso nlgn totherunningtime thetotalrunningtimeofhuffmanonasetofncharac tersiso nlgn wecanreducetherunningtimetoo nlglgn byreplacingthebinarymin heapwithavanemdeboastree seechapter correctnessofhuffman salgorithmtoprovethatthegreedyalgorithmhuffmaniscorrect weshowthattheprob lemofdetermininganoptimalpre xcodeexhibitsthegreedy choiceandoptimal substructureproperties thenextlemmashowsthatthegreedy choiceproperty holds lemma letcbeanalphabetinwhicheachcharacterc chasfrequencyc freq letxandybetwocharactersinchavingthelowestfrequencies thenthereexistsanoptimalpre xcodeforcinwhichthecodewordsforxandyhavethesamelengthanddifferonlyinthelastbit prooftheideaoftheproofistotakethetreetrepresentinganarbitraryoptimalpre xcodeandmodifyittomakeatreerepresentinganotheroptimalpre xcode suchthatthecharactersxandyappearassiblingleavesofmaximumdepthinthenewtree ifwecanconstructsuchatree thenthecodewordsforxandywillhavethesamelengthanddifferonlyinthelastbit letaandbbetwocharactersthataresiblingleavesofmaximumdepthint withoutlossofgenerality weassumethata freqb freqandx freqy freq sincex freqandy freqarethetwolowestleaffrequencies inorder anda freqandb freqaretwoarbitraryfrequencies inorder wehavex freqa freqandy freqb freq intheremainderoftheproof itispossiblethatwecouldhavex freqda freqory freqdb freq however ifwehadx freqdb freq thenwewouldalsohavea freqdb freqdx freqdy freq seeexercise andthelemmawouldbetriviallytrue wewillassumethatx freq freq whichmeansthatx asfigure shows weexchangethepositionsintofaandxtoproduceatreet andthenweexchangethepositionsint ofbandytoproduceatreet chapter greedyalgorithmsxyabxyabxyabtttfigure anillustrationofthekeystepintheproofoflemma intheoptimaltreet leavesaandbaretwosiblingsofmaximumdepth leavesxandyarethetwocharacterswiththelowestfrequencies theyappearinarbitrarypositionsint assumingthatx swappingleavesaandxproducestreet andthenswappingleavesbandyproducestreet sinceeachswapdoesnotincreasethecost theresultingtreet isalsoanoptimaltree inwhichxandyaresiblingleavesofmaximumdepth notethatifxdbbuty thentreet doesnothavexandyassiblingleavesofmaximumdepth becauseweassumethatx thissituationcannotoccur byequation thedifferenceincostbetweentandt isb dxc freqdt freqdt freqdt freqdt freqdt freqdt freqdt freqdt freqdt freqdt freqx freq becausebotha freqx freqanddt arenonnegative morespeci cally freqx freqisnonnegativebecausexisaminimum frequencyleaf anddt isnonnegativebecauseaisaleafofmaximumdepthint similarly exchangingyandbdoesnotincreasethecost andsob isnonnega tive therefore andsincetisoptimal wehaveb whichimpliesb isanoptimaltreeinwhichxandyappearassiblingleavesofmaximumdepth fromwhichthelemmafollows lemma impliesthattheprocessofbuildingupanoptimaltreebymergerscan withoutlossofgenerality beginwiththegreedychoiceofmergingtogether thosetwocharactersoflowestfrequency whyisthisagreedychoice wecan viewthecostofasinglemergerasbeingthesumofthefrequenciesofthetwoitemsbeingmerged showsthatthetotalcostofthetreeconstructedequalsthesumofthecostsofitsmergers ofallpossiblemergersateachstep huffmanchoosestheonethatincurstheleastcost huffmancodes thenextlemmashowsthattheproblemofconstructingoptimalpre xcodeshastheoptimal substructureproperty lemma letcbeagivenalphabetwithfrequencyc freqde nedforeachcharacterc letxandybetwocharactersincwithminimumfrequency letc bethealphabetcwiththecharactersxandyremovedandanewcharacter added sothatc dcfx nefforc asforc exceptthat freqdx freqcy freq lett beanytreerepresentinganoptimalpre xcodeforthealphabetc thenthetreet obtainedfromt byreplacingtheleafnodefor withaninternalnodehavingxandyaschildren representsanoptimalpre xcodeforthealphabetc proofwe rstshowhowtoexpressthecostb oftreetintermsofthecostb oftreet byconsideringthecomponentcostsinequation foreachcharacterc cfx wehavethatdt ddt andhencec freqdt freqdt sincedt ddt ddt wehavex freqdt freqdt freqcy freq freqdt freqcy freq fromwhichweconcludethatb freqcy freqor equivalently freqy freq wenowprovethelemmabycontradiction supposethattdoesnotrepre sentanoptimalpre xcodeforc thenthereexistsanoptimaltreet suchthatb withoutlossofgenerality bylemma hasxandyassiblings lett bethetreet withthecommonparentofxandyreplacedbyaleaf withfrequency freqdx freqcy freq thenb freqy freq freqy freqdb yieldingacontradictiontotheassumptionthatt representsanoptimalpre xcodeforc tmustrepresentanoptimalpre xcodeforthealphabetc theorem procedurehuffmanproducesanoptimalpre xcode proofimmediatefromlemmas chapter greedyalgorithmsexercises explainwhy intheproofoflemma ifx freqdb freq thenwemusthavea freqdb freqdx freqdy freq provethatabinarytreethatisnotfullcannotcorrespondtoanoptimalpre xcode whatisanoptimalhuffmancodeforthefollowingsetoffrequencies basedon rst fibonaccinumbers canyougeneralizeyouranswerto ndtheoptimalcodewhenthefrequenciesarethe rstnfibonaccinumbers provethatwecanalsoexpressthetotalcostofatreeforacodeasthesum allinternalnodes ofthecombinedfrequenciesofthetwochildrenofthenode provethatifweorderthecharactersinanalphabetsothattheirfrequenciesaremonotonicallydecreasing thenthereexistsanoptimalcodewhosecodewordlengthsaremonotonicallyincreasing supposewehaveanoptimalpre xcodeonasetcdf gofcharac tersandwewishtotransmitthiscodeusingasfewbitsaspossible showhowto representanyoptimalpre xcodeoncusingonly cndlgnebits hint bitstospecifythestructureofthetree asdiscoveredbyawalkofthetree generalizehuffman salgorithmtoternarycodewords codewordsusingthe symbols andprovethatityieldsoptimalternarycodes supposethatadata lecontainsasequenceof bitcharacterssuchthatall charactersareaboutequallycommon themaximumcharacterfrequencyisless thantwicetheminimumcharacterfrequency provethathuffmancodinginthiscaseisnomoreef cientthanusinganordinary xed lengthcode matroidsandgreedymethods showthatnocompressionschemecanexpecttocompressa leofrandomlycho sen bitcharactersbyevenasinglebit hint comparethenumberofpossible leswiththenumberofpossibleencoded les matroidsandgreedymethodsinthissection wesketchabeautifultheoryaboutgreedyalgorithms thistheory describesmanysituationsinwhichthegreedymethodyieldsoptimalsolutions involvescombinatorialstructuresknownas matroids althoughthistheorydoes notcoverallcasesforwhichagreedymethodapplies forexample itdoesnot covertheactivity selectionproblemofsection orthehuffman codingprob lemofsection itdoescovermanycasesofpracticalinterest furthermore thistheoryhasbeenextendedtocovermanyapplications seethenotesattheend ofthischapterforreferences matroidsamatroidisanorderedpairmd satisfyingthefollowingconditions sisa niteset isanonemptyfamilyofsubsetsofs calledtheindependentsubsetsofs suchthatifb andab thena wesaythatishereditaryifitsatis esthisproperty notethattheemptyset isnecessarilyamemberof ifa andjaj jbj thenthereexistssomeelementx basuchthata fxg wesaythatmsatis estheexchangeproperty theword matroid isduetohasslerwhitney hewasstudyingmatricma troids inwhichtheelementsofsaretherowsofagivenmatrixandasetofrowsisindependentiftheyarelinearlyindependentintheusualsense asexercise asksyoutoshow thisstructurede nesamatroid asanotherexampleofmatroids considerthegraphicmatroidmgd nedintermsofagivenundirectedgraphgd asfollows thesetsgisde nedtobee thesetofedgesofg ifaisasubsetofe thena gifandonlyifaisacyclic thatis asetofedgesaisindependentifandonlyifthesubgraphgad formsaforest thegraphicmatroidmgiscloselyrelatedtotheminimum spanning treeproblem whichchapter coversindetail chapter greedyalgorithmstheorem ifgd isanundirectedgraph thenmgd isamatroid proofclearly sgdeisa niteset furthermore gishereditary sinceasubsetofaforestisaforest puttingitanotherway removingedgesfromanacyclicsetofedgescannotcreatecycles itremainstoshowthatmgsatis estheexchangeproperty supposethatgad andgbd areforestsofgandthatjbj jaj thatis aandbareacyclicsetsofedges andbcontainsmoreedgesthanadoes weclaimthataforestfd containsexactlyjvfjjefjtrees toseewhy supposethatfconsistsofttrees wheretheithtreecontainsiverticesandeiedges wehavejefjdtxid eidtxid bytheoremb dtxid itdjvfjt whichimpliesthattdjvfjjefj forestgacontainsjvjjajtrees andforestgbcontainsjvjjbjtrees sinceforestgbhasfewertreesthanforestgadoes forestgbmustcontainsometreetwhoseverticesareintwodifferenttreesinforestga moreover sincetisconnected itmustcontainanedge suchthatverticesuandareindifferenttreesinforestga sincetheedge connectsverticesintwodifferenttreesinforestga wecanaddtheedge toforestgawithoutcreatingacycle therefore mgsatis estheexchangeproperty completingtheproofthatmgisamatroid givenamatroidmd wecallanelementx aanextensionofa ifwecanaddxtoawhilepreservingindependence thatis xisanextensionofaifa fxg asanexample consideragraphicmatroidmg ifaisanindependentsetofedges thenedgeeisanextensionofaifandonlyifeisnotinaandtheadditionofetoadoesnotcreateacycle ifaisanindependentsubsetinamatroidm wesaythataismaximalifithasnoextensions thatis aismaximalifitisnotcontainedinanylargerindependentsubsetofm thefollowingpropertyisoftenuseful matroidsandgreedymethods theorem allmaximalindependentsubsetsinamatroidhavethesamesize proofsupposetothecontrarythataisamaximalindependentsubsetofmandthereexistsanotherlargermaximalindependentsubsetbofm theexchangepropertyimpliesthatforsomex wecanextendatoalargerindependentseta fxg contradictingtheassumptionthataismaximal asanillustrationofthistheorem consideragraphicmatroidmgforacon nected undirectedgraphg everymaximalindependentsubsetofmgmustbeafreetreewithexactlyjvj edgesthatconnectsalltheverticesofg suchatreeiscalledaspanningtreeofg wesaythatamatroidmd isweightedifitisassociatedwithaweightfunctionwthatassignsastrictlypositiveweightw toeachelementx theweightfunctionwextendstosubsetsofsbysummation dxx foranyas forexample ifweletw denotetheweightofanedgeeinagraphicmatroidmg thenw isthetotalweightoftheedgesinedgeseta greedyalgorithmsonaweightedmatroidmanyproblemsforwhichagreedyapproachprovidesoptimalsolutionscanbefor mulatedintermsof ndingamaximum weightindependentsubsetinaweighted matroid thatis wearegivenaweightedmatroidmd andwewishto ndanindependentseta suchthatw ismaximized wecallsuchasub setthatisindependentandhasmaximumpossibleweightanoptimalsubsetofthematroid becausetheweightw ofanyelementx sispositive anoptimalsubsetisalwaysamaximalindependentsubset italwayshelpstomakeaaslargeaspossible forexample intheminimum spanning treeproblem wearegivenaconnectedundirectedgraphgd andalengthfunctionwsuchthatw isthe posi tive lengthofedgee weusetheterm heretorefertotheoriginaledgeweightsforthegraph reservingtheterm torefertotheweightsinthe associatedmatroid wewishto ndasubsetoftheedgesthatconnectsallof theverticestogetherandhasminimumtotallength toviewthisasaproblemof ndinganoptimalsubsetofamatroid considertheweightedmatroidmgwithweightfunctionw wherew andw islargerthanthemaximumlengthofanyedge inthisweightedmatroid allweightsarepositiveandanopti malsubsetisaspanningtreeofminimumtotallengthintheoriginalgraph speci cally eachmaximalindependentsubsetacorrespondstoaspanningtree chapter greedyalgorithmswithjvj edges andsincew dxe dxe jvj jvj foranymaximalindependentsubseta anindependentsubsetthatmaximizesthequantityw mustminimizew anyalgorithmthatcan ndanoptimalsubsetainanarbitrarymatroidcansolvetheminimum spanning treeproblem chapter givesalgorithmsfortheminimum spanning treeproblem butherewegiveagreedyalgorithmthatworksforanyweightedmatroid thealgorithm takesasinputaweightedmatroidmd withanassociatedpositiveweightfunctionw anditreturnsanoptimalsubseta inourpseudocode wedenotethecomponentsofmbym sandm andtheweightfunctionbyw thealgorithmisgreedybecauseitconsidersinturneachelementx inorderofmonotoni callydecreasingweight andimmediatelyaddsittothesetabeingaccumulatedifa fxgisindependent greedy sortm sintomonotonicallydecreasingorderbyweightw foreachx takeninmonotonicallydecreasingorderbyweightw ifa fxg ada fxg returnaline checkswhetheraddingeachelementxtoawouldmaintainaasaninde pendentset ifawouldremainindependent thenline addsxtoa otherwise xisdiscarded sincetheemptysetisindependent andsinceeachiterationoftheforloopmaintainsa sindependence thesubsetaisalwaysindependent byinduc tion therefore greedyalwaysreturnsanindependentsubseta weshallseeinamomentthataisasubsetofmaximumpossibleweight sothataisanoptimalsubset therunningtimeofgreedyiseasytoanalyze letndenotejsj thesortingphaseofgreedytakestimeo nlgn executesexactlyntimes onceforeachelementofs eachexecutionofline requiresacheckonwhetherornottheseta fxgisindependent ifeachsuchchecktakestimeo theentirealgorithmrunsintimeo nlgncnf matroidsandgreedymethods wenowprovethatgreedyreturnsanoptimalsubset lemma matroidsexhibitthegreedy choiceproperty supposethatmd isaweightedmatroidwithweightfunctionwandthatsissortedintomonotonicallydecreasingorderbyweight letxbethe rstelementofssuchthatfxgisindependent ifanysuchxexists ifxexists thenthereexistsanoptimalsubsetaofsthatcontainsx proofifnosuchxexists thentheonlyindependentsubsetistheemptysetandthelemmaisvacuouslytrue otherwise letbbeanynonemptyoptimalsubset assumethatx otherwise lettingadbgivesanoptimalsubsetofsthatcontainsx noelementofbhasweightgreaterthanw toseewhy observethaty bimpliesthatfygisindependent sinceb andishereditary ourchoiceofxthereforeensuresthatw foranyy constructthesetaasfollows beginwithadfxg bythechoiceofx setaisindependent usingtheexchangeproperty repeatedly ndanewelementofbthatwecanaddtoauntiljajdjbj whilepreservingtheindependenceofa atthatpoint aandbarethesameexceptthatahasxandbhassomeotherelementy thatis adbfyg fxgforsomey andsow becausesetbisoptimal seta whichcontainsx mustalsobeoptimal wenextshowthatifanelementisnotanoptioninitially thenitcannotbeanoptionlater lemma letmd beanymatroid ifxisanelementofsthatisanextensionofsomeindependentsubsetaofs thenxisalsoanextensionof proofsincexisanextensionofa wehavethata fxgisindependent sinceishereditary fxgmustbeindependent xisanextensionof corollary letmd beanymatroid ifxisanelementofssuchthatxisnotanextensionof thenxisnotanextensionofanyindependentsubsetaofs proofthiscorollaryissimplythecontrapositiveoflemma chapter greedyalgorithmscorollary saysthatanyelementthatcannotbeusedimmediatelycanneverbeused therefore greedycannotmakeanerrorbypassingoveranyinitialelementsinsthatarenotanextensionof sincetheycanneverbeused lemma matroidsexhibittheoptimal substructureproperty letxbethe rstelementofschosenbygreedyfortheweightedmatroidmd theremainingproblemof ndingamaximum weightindepen dentsubsetcontainingxreducesto ndingamaximum weightindependentsubsetoftheweightedmatroidm wheres dfy swfx dfbsfxgwb fxg andtheweightfunctionform istheweightfunctionform restrictedtos wecallm thecontractionofmbytheelementx proofifaisanymaximum weightindependentsubsetofmcontainingx thena dafxgisanindependentsubsetofm conversely anyindependentsub seta ofm yieldsanindependentsubsetada fxgofm sincewehaveinbothcasesthatw amaximum weightsolutioninmcontain ingxyieldsamaximum weightsolutioninm andviceversa theorem correctnessofthegreedyalgorithmonmatroids ifmd isaweightedmatroidwithweightfunctionw thengreedy returnsanoptimalsubset proofbycorollary anyelementsthatgreedypassesoverinitiallybe causetheyarenotextensionsof canbeforgottenabout sincetheycanneverbeuseful oncegreedyselectsthe rstelementx lemma impliesthatthealgorithmdoesnoterrbyaddingxtoa sincethereexistsanoptimalsubsetcontainingx finally lemma impliesthattheremainingproblemisoneof ndinganoptimalsubsetinthematroidm thatisthecontractionofmbyx aftertheproceduregreedysetsatofxg wecaninterpretallofitsremainingstepsasactinginthematroidm becausebisindependentinm ifandonlyifb fxgisindependentinm forallsetsb thesubsequentoperationofgreedywill ndamaximum weightindependentsubsetform andtheoveralloperationofgreedywill ndamaximum weightindependentsubsetform atask schedulingproblemasamatroid exercises showthat isamatroid wheresisany nitesetandkisthesetofallsubsetsofsofsizeatmostk wherekjsj givenanmnmatrixtoversome eld suchasthereals showthat isamatroid wheresisthesetofcolumnsoftanda ifandonlyifthecolumnsinaarelinearlyindependent showthatif isamatroid isamatroid dfa wsa containssomemaximala thatis themaximalindependentsetsof arejustthecomplementsofthemaximalindependentsetsof letsbea nitesetandlets skbeapartitionofsintononemptydisjointsubsets nethestructure bytheconditionthatdfawja sij forid showthat isamatroid thatis thesetofallsetsathatcontainatmostonememberofeachsubsetinthepartitiondeterminestheindependentsetsofamatroid showhowtotransformtheweightfunctionofaweightedmatroidproblem wherethedesiredoptimalsolutionisaminimum weightmaximalindependentsubset tomakeitastandardweighted matroidproblem arguecarefullythatyourtransfor mationiscorrect atask schedulingproblemasamatroidaninterestingproblemthatwecansolveusingmatroidsistheproblemofop timallyschedulingunit timetasksonasingleprocessor whereeachtaskhasa deadline alongwithapenaltypaidifthetaskmissesitsdeadline theproblem lookscomplicated butwecansolveitinasurprisinglysimplemannerbycasting itasamatroidandusingagreedyalgorithm aunit timetaskisajob suchasaprogramtoberunonacomputer thatrequiresexactlyoneunitoftimetocomplete givena nitesetsofunit timetasks chapter greedyalgorithmsscheduleforsisapermutationofsspecifyingtheorderinwhichtoperformthesetasks rsttaskintheschedulebeginsattime nishesattime thesecondtaskbeginsattime nishesattime andsoon theproblemofschedulingunit timetaskswithdeadlinesandpenaltiesforasingleprocessorhasthefollowinginputs asetsdfa angofnunit timetasks asetofnintegerdeadlinesd suchthateachdisatis dinandtaskaiissupposedto nishbytimedi andasetofnnonnegativeweightsorpenaltiesw suchthatweincurapenaltyofwiiftaskaiisnot nishedbytimedi andweincurnopenaltyifatask nishesbyitsdeadline wewishto ndascheduleforsthatminimizesthetotalpenaltyincurredformisseddeadlines consideragivenschedule wesaythatataskislateinthisscheduleifit nishesafteritsdeadline otherwise thetaskisearlyintheschedule wecanalwaystrans formanarbitraryscheduleintoearly rstform inwhichtheearlytasksprecedethelatetasks toseewhy notethatifsomeearlytaskaifollowssomelatetaskaj thenwecanswitchthepositionsofaiandaj andaiwillstillbeearlyandajwillstillbelate furthermore weclaimthatwecanalwaystransformanarbitraryscheduleintocanonicalform inwhichtheearlytasksprecedethelatetasksandwescheduletheearlytasksinorderofmonotonicallyincreasingdeadlines todoso weput thescheduleintoearly rstform aslongasthereexisttwoearlytasksaiandaj nishingatrespectivetimeskandkc intheschedulesuchthatdj weswapthepositionsofaiandaj sinceajisearlybeforetheswap therefore andsoaiisstillearlyaftertheswap becausetaskajismovedearlierintheschedule itremainsearlyaftertheswap thesearchforanoptimalschedulethusreducesto ndingasetaoftasksthatweassigntobeearlyintheoptimalschedule havingdetermineda wecancreatetheactualschedulebylistingtheelementsofainorderofmonotonicallyincreas ingdeadlines thenlistingthelatetasks inanyorder producingacanonicalorderingoftheoptimalschedule wesaythatasetaoftasksisindependentifthereexistsascheduleforthesetaskssuchthatnotasksarelate clearly thesetofearlytasksforascheduleformsanindependentsetoftasks letdenotethesetofallindependentsetsoftasks considertheproblemofdeterminingwhetheragivensetaoftasksisindepen dent fortd letnt denotethenumberoftasksinawhosedeadlineistorearlier notethatn foranyseta atask schedulingproblemasamatroid lemma foranysetoftasksa thefollowingstatementsareequivalent thesetaisindependent fortd wehavent ifthetasksinaarescheduledinorderofmonotonicallyincreasingdeadlines thennotaskislate prooftoshowthat implies weprovethecontrapositive ifnt tforsomet thenthereisnowaytomakeaschedulewithnolatetasksforseta becausemorethanttasksmust nishbeforetimet therefore implies holds mustfollow thereisnowayto getstuck whenschedulingthetasksin orderofmonotonicallyincreasingdeadlines impliesthattheithlargestdeadlineisatleasti finally triviallyimplies usingproperty oflemma wecaneasilycomputewhetherornotagivensetoftasksisindependent seeexercise theproblemofminimizingthesumofthepenaltiesofthelatetasksisthesameastheproblemofmaximizingthesumofthepenaltiesoftheearlytasks followingtheoremthusensuresthatwecanusethegreedyalgorithmto ndan independentsetaoftaskswiththemaximumtotalpenalty theorem ifsisasetofunit timetaskswithdeadlines andisthesetofallindependentsetsoftasks thenthecorrespondingsystem isamatroid proofeverysubsetofanindependentsetoftasksiscertainlyindependent toprovetheexchangeproperty supposethatbandaareindependentsetsoftasksandthatjbj jaj letkbethelargesttsuchthatnt suchavalueoftexists sincen sincenn djbjandnn djaj butjbj jaj wemusthavethatk nandthatnj foralljintherangekc therefore bcontainsmoretaskswithdeadlinekc thanadoes letaibeataskinbawithdeadlinekc leta faig wenowshowthata mustbeindependentbyusingproperty oflemma wehavent dnt sinceaisindependent fork wehavent sincebisindependent therefore isindependent completingourproofthat isamatroid bytheorem wecanuseagreedyalgorithmto ndamaximum weightindependentsetoftasksa wecanthencreateanoptimalschedulehavingthetasksinaasitsearlytasks thismethodisanef cientalgorithmforscheduling chapter greedyalgorithmstaskai aninstanceoftheproblemofschedulingunit timetaskswithdeadlinesandpenaltiesforasingleprocessor timetaskswithdeadlinesandpenaltiesforasingleprocessor therunningtimeiso usinggreedy sinceeachoftheo independencechecksmadebythatalgorithmtakestimeo seeexercise givesafasterimplementation demonstratesanexampleoftheproblemofschedulingunit timetaskswithdeadlinesandpenaltiesforasingleprocessor inthisexample greedyalgorithmselects inorder tasksa anda thenrejectsa becausen anda becausen nallyacceptsa naloptimalscheduleisha whichhasatotalpenaltyincurredofw exercises solvetheinstanceoftheschedulingproblemgiveninfigure butwitheachpenaltywireplacedby showhowtouseproperty oflemma todetermineintimeo jaj whetherornotagivensetaoftasksisindependent problems coinchangingconsidertheproblemofmakingchangeforncentsusingthefewestnumberofcoins assumethateachcoin svalueisaninteger describeagreedyalgorithmtomakechangeconsistingofquarters dimes nickels andpennies provethatyouralgorithmyieldsanoptimalsolution problemsforchapter supposethattheavailablecoinsareinthedenominationsthatarepowersofc thedenominationsarec ckforsomeintegersc andk showthatthegreedyalgorithmalwaysyieldsanoptimalsolution giveasetofcoindenominationsforwhichthegreedyalgorithmdoesnotyieldanoptimalsolution yoursetshouldincludeapennysothatthereisasolution foreveryvalueofn giveano timealgorithmthatmakeschangeforanysetofkdifferentcoindenominations assumingthatoneofthecoinsisapenny schedulingtominimizeaveragecompletiontimesupposeyouaregivenasetsdfa angoftasks wheretaskaire quirespiunitsofprocessingtimetocomplete onceithasstarted youhaveonecomputeronwhichtorunthesetasks andthecomputercanrunonlyonetaskata letcibethecompletiontimeoftaskai thatis thetimeatwhichtaskaicom pletesprocessing yourgoalistominimizetheaveragecompletiontime thatis tominimize pnid forexample supposetherearetwotasks anda withp andp andconsiderthescheduleinwhicha runs rst followedbya thenc andtheaveragecompletiontimeis iftaska runs rst however thenc andtheaveragecompletiontimeis giveanalgorithmthatschedulesthetaskssoastominimizetheaveragecom pletiontime eachtaskmustrunnon preemptively thatis oncetaskaistarts itmustruncontinuouslyforpiunitsoftime provethatyouralgorithmminimizestheaveragecompletiontime andstatetherunningtimeofyouralgorithm supposenowthatthetasksarenotallavailableatonce thatis eachtaskcannotstartuntilitsreleasetimeri supposealsothatweallowpreemption sothatataskcanbesuspendedandrestartedatalatertime forexample ataskaiwithprocessingtimepid andreleasetimerid mightstartrunningattime andbepreemptedattime itmightthenresumeattime butbe preemptedattime anditmight nallyresumeattime andcompleteat taskaihasrunforatotalof timeunits butitsrunningtimehasbeendividedintothreepieces inthisscenario scompletiontimeis giveanalgorithmthatschedulesthetaskssoastominimizetheaveragecompletion timeinthisnewscenario provethatyouralgorithmminimizestheaveragecompletiontime andstatetherunningtimeofyouralgorithm chapter greedyalgorithms acyclicsubgraphsa theincidencematrixforanundirectedgraphgd isajvjjejma trixmsuchthatmd ifedgeeisincidentonvertex andmd wise arguethatasetofcolumnsofmislinearlyindependentoverthe eldofintegersmodulo ifandonlyifthecorrespondingsetofedgesisacyclic usetheresultofexercise toprovideanalternateproofthat ofpart isamatroid supposethatweassociateanonnegativeweightw witheachedgeinanundirectedgraphgd giveanef cientalgorithmto ndanacyclicsubsetofeofmaximumtotalweight letg beanarbitrarydirectedgraph andlet bede nedsothata ifandonlyifadoesnotcontainanydirectedcycles giveanexampleofadirectedgraphgsuchthattheassociatedsystem isnotamatroid specifywhichde ningconditionforamatroidfailstohold theincidencematrixforadirectedgraphgd withnoself loopsisajvjjejmatrixmsuchthatm ifedgeeleavesvertex ifedgeeentersvertex andmd otherwise arguethatifasetofcolumnsofmislinearlyindependent thenthecorrespondingsetofedgesdoesnotcontainadirectedcycle tellsusthatthesetoflinearlyindependentsetsofcolumnsofanymatrixmformsamatroid explaincarefullywhytheresultsofparts arenotcontradictory howcantherefailtobeaperfectcorrespon dencebetweenthenotionofasetofedgesbeingacyclicandthenotionofthe associatedsetofcolumnsoftheincidencematrixbeinglinearlyindependent schedulingvariationsconsiderthefollowingalgorithmfortheproblemfromsection ofscheduling timetaskswithdeadlinesandpenalties letallntimeslotsbeinitiallyempty wheretimeslotiistheunit lengthslotoftimethat nishesattimei weconsiderthetasksinorderofmonotonicallydecreasingpenalty whenconsideringtaskaj ifthereexistsatimeslotatorbeforeaj sdeadlinedjthatisstillempty assignajtothelatestsuchslot llingit ifthereisnosuchslot assigntaskajtothelatestoftheasyetun lledslots arguethatthisalgorithmalwaysgivesanoptimalanswer usethefastdisjoint setforestpresentedinsection toimplementthealgo rithmef ciently assumethatthesetofinputtaskshasalreadybeensortedinto problemsforchapter monotonicallydecreasingorderbypenalty analyzetherunningtimeofyourimplementation linecachingmoderncomputersuseacachetostoreasmallamountofdatainafastmemory eventhoughaprogrammayaccesslargeamountsofdata bystoringasmallsubset ofthemainmemoryinthecache asmallbutfastermemory overallaccesstimecangreatlydecrease whenacomputerprogramexecutes itmakesasequencehr rniofnmemoryrequests whereeachrequestisforaparticulardataelement forexample aprogramthataccesses distinctelementsfa dgmightmakethesequenceofrequestshd letkbethesizeofthecache whenthecachecontainskelementsandtheprogramrequeststhe stelement thesystemmustdecide forthisandeachsubsequentrequest whichkelementstokeepinthecache moreprecisely foreachrequestri thecache managementalgorithmcheckswhetherelementriisalreadyinthecache ifitis thenwehaveacachehit otherwise wehaveacachemiss uponacachemiss thesystemretrievesrifromthemainmemory andthecache managementalgorithmmustdecidewhethertokeepriinthecache ifitdecidestokeepriandthecachealreadyholdskelements thenitmustevictoneelementtomakeroomforri thecache managementalgorithmevictsdatawiththegoalofminimizingthenumberofcachemissesovertheentiresequenceofrequests typically cachingisanon lineproblem thatis wehavetomakedecisionsaboutwhichdatatokeepinthecachewithoutknowingthefuturerequests however weconsidertheoff lineversionofthisproblem inwhichwearegiven inadvancetheentiresequenceofnrequestsandthecachesizek andwewishtominimizethetotalnumberofcachemisses wecansolvethisoff lineproblembyagreedystrategycalledfurthest future whichchoosestoevicttheiteminthecachewhosenextaccessintherequest sequencecomesfurthestinthefuture writepseudocodeforacachemanagerthatusesthefurthest futurestrategy theinputshouldbeasequencehr rniofrequestsandacachesizek andtheoutputshouldbeasequenceofdecisionsaboutwhichdataelement toevictuponeachrequest whatistherunningtimeofyouralgorithm showthattheoff linecachingproblemexhibitsoptimalsubstructure provethatfurthest futureproducestheminimumpossiblenumberofcachemisses chapter greedyalgorithmschapternotesmuchmorematerialongreedyalgorithmsandmatroidscanbefoundinlawler andpapadimitriouandsteiglitz thegreedyalgorithm rstappearedinthecombinatorialoptimizationliteratureina articlebyedmonds thoughthetheoryofmatroidsdatesbacktoa articlebywhitney ourproofofthecorrectnessofthegreedyalgorithmfortheactivity selectionproblemisbasedonthatofgavril thetask schedulingproblemisstudied inlawler horowitz sahni andrajasekaran andbrassardandbratley huffmancodeswereinventedin lelewerandhirschberg sur veysdata compressiontechniquesknownasof anextensionofmatroidtheorytogreedoidtheorywaspioneeredbykorteandlov asz whogreatlygeneralizethetheorypresentedhere amortizedanalysisinanamortizedanalysis weaveragethetimerequiredtoperformasequenceofdata structureoperationsoveralltheoperationsperformed withamortizedanaly sis wecanshowthattheaveragecostofanoperationissmall ifweaverageovera sequenceofoperations eventhoughasingleoperationwithinthesequencemight beexpensive amortizedanalysisdiffersfromaverage caseanalysisinthatprob abilityisnotinvolved anamortizedanalysisguaranteestheaverageperformanceofeachoperationintheworstcase rstthreesectionsofthischaptercoverthethreemostcommontechniquesusedinamortizedanalysis startswithaggregateanalysis inwhichwedetermineanupperboundt onthetotalcostofasequenceofnoperations theaveragecostperoperationisthent wetaketheaveragecostastheamortizedcostofeachoperation sothatalloperationshavethesameamortized coverstheaccountingmethod inwhichwedetermineanamortizedcostofeachoperation whenthereismorethanonetypeofoperation eachtypeofoperationmayhaveadifferentamortizedcost theaccountingmethodovercharges someoperationsearlyinthesequence storingtheoverchargeas prepaidcredit onspeci cobjectsinthedatastructure laterinthesequence thecreditpaysfor operationsthatarechargedlessthantheyactuallycost discussesthepotentialmethod whichisliketheaccountingmethodinthatwedeterminetheamortizedcostofeachoperationandmayoverchargeop erationsearlyontocompensateforunderchargeslater thepotentialmethodmain tainsthecreditasthe potentialenergy ofthedatastructureasawholeinsteadof associatingthecreditwithindividualobjectswithinthedatastructure weshallusetwoexamplestoexaminethesethreemethods oneisastackwiththeadditionaloperationmultipop whichpopsseveralobjectsatonce theotherisabinarycounterthatcountsupfrom bymeansofthesingleoperationincrement chapter amortizedanalysiswhilereadingthischapter bearinmindthatthechargesassignedduringanamortizedanalysisareforanalysispurposesonly theyneednot andshould not appearinthecode forexample weassignacredittoanobjectxwhenusingtheaccountingmethod wehavenoneedtoassignanappropriateamountto someattribute suchasx credit inthecode whenweperformanamortizedanalysis weoftengaininsightintoaparticulardatastructure andthisinsightcanhelpusoptimizethedesign insection forexample weshallusethepotentialmethodtoanalyzeadynamicallyexpandingandcontractingtable aggregateanalysisinaggregateanalysis weshowthatforalln asequenceofnoperationstakesworst casetimet intotal intheworstcase theaveragecost oramortizedcost peroperationisthereforet notethatthisamortizedcostappliestoeachoperation evenwhenthereareseveraltypesofoperationsinthesequence theothertwomethodsweshallstudyinthischapter theaccountingmethodand thepotentialmethod mayassigndifferentamortizedcoststodifferenttypesofoperations stackoperationsinour rstexampleofaggregateanalysis weanalyzestacksthathavebeenaug mentedwithanewoperation presentedthetwofundamentalstackoperations eachofwhichtakeso pushesobjectxontostacks pop popsthetopofstacksandreturnsthepoppedobject callingpoponanemptystackgeneratesanerror sinceeachoftheseoperationsrunsino letusconsiderthecostofeachtobe thetotalcostofasequenceofnpushandpopoperationsisthereforen andtheactualrunningtimefornoperationsistherefore nowweaddthestackoperationmultipop whichremovesthektopob jectsofstacks poppingtheentirestackifthestackcontainsfewerthankobjects ofcourse weassumethatkispositive otherwisethemultipopoperationleavesthestackunchanged inthefollowingpseudocode theoperationstack emptyreturnstrueiftherearenoobjectscurrentlyonthestack andfalseotherwise aggregateanalysis theactionofmultipoponastacks showninitiallyin thetop objectsarepoppedbymultipop whoseresultisshownin thenextoperationismultipop whichemptiesthestack shownin sincetherewerefewerthan objectsremaining multipop whilenotstack empty andk pop kdk showsanexampleofmultipop whatistherunningtimeofmultipop onastackofsobjects theactualrunningtimeislinearinthenumberofpopoperationsactuallyexecuted andthuswecananalyzemultipopintermsoftheabstractcostsof eachforpushandpop thenumberofiterationsofthewhileloopisthenumbermin ofobjectspoppedoffthestack eachiterationoftheloopmakesonecalltopopinline thetotalcostofmultipopismin andtheactualrunningtimeisalinearfunctionofthiscost letusanalyzeasequenceofnpush pop andmultipopoperationsonanini tiallyemptystack theworst casecostofamultipopoperationinthesequenceiso sincethestacksizeisatmostn theworst casetimeofanystackopera tionisthereforeo andhenceasequenceofnoperationscostso sincewemayhaveo multipopoperationscostingo althoughthisanalysisiscorrect theo whichweobtainedbyconsideringtheworst casecostofeachoperationindividually isnottight usingaggregateanalysis wecanobtainabetterupperboundthatconsiderstheentiresequenceofnoperations infact althoughasinglemultipopoperationcanbeexpensive anysequenceofnpush pop andmultipopoperationsonaninitiallyemptystackcancostatmosto wecanpopeachobjectfromthestackatmostonceforeachtimewehavepusheditontothestack therefore numberoftimesthatpopcanbecalledonanonemptystack includingcallswithinmultipop isatmostthenumberofpushoperations whichisatmostn foranyvalueofn anysequenceofnpush pop andmultipopoperationstakesatotalofo theaveragecostofanoperationiso ndo inaggregate chapter amortizedanalysisanalysis weassigntheamortizedcostofeachoperationtobetheaveragecost inthisexample therefore allthreestackoperationshaveanamortizedcostofo weemphasizeagainthatalthoughwehavejustshownthattheaveragecost andhencetherunningtime ofastackoperationiso wedidnotuseprobabilisticreasoning weactuallyshowedaworst caseboundofo onasequenceofnoperations dividingthistotalcostbynyieldedtheaveragecostperoperation ortheamortizedcost incrementingabinarycounterasanotherexampleofaggregateanalysis considertheproblemofimplementingak bitbinarycounterthatcountsupwardfrom weuseanarraya kofbits wherea lengthdk asthecounter abinarynumberxthatisstoredinthecounterhasitslowest orderbitina anditshighest orderbitina sothatxdpk initially andthusa forid toadd modulo tothevalueinthecounter weusethefollowingprocedure increment whilei lengthanda idic ifi showswhathappenstoabinarycounterasweincrementit times startingwiththeinitialvalue andendingwiththevalue atthestartofeachiterationofthewhileloopinlines wewishtoadda intopositioni ifa thenadding ipsthebitto inpositioniandyieldsacarryof tobeaddedintopositionic onthenextiterationoftheloop otherwise theloopends andthen ifi weknowthata sothatline addsa intopositioni ippingthe toa thecostofeachincrementoperationislinearinthenumberofbits ipped aswiththestackexample acursoryanalysisyieldsaboundthatiscorrectbutnottight asingleexecutionofincrementtakestime intheworstcase inwhicharrayacontainsall asequenceofnincrementoperationsonaninitiallyzerocountertakestimeo intheworstcase wecantightenouranalysistoyieldaworst casecostofo forasequenceofnincrementoperationsbyobservingthatnotallbits ipeachtimeincrementiscalled asfigure shows ipeachtimeincrementiscalled thenextbitup ipsonlyeveryothertime asequenceofnincrement aggregateanalysis countervaluetotalcost bitbinarycounterasitsvaluegoesfrom byasequenceof incrementoperations bitsthat iptoachievethenextvalueareshaded therunningcostfor ippingbitsisshownattheright noticethatthetotalcostisalwayslessthantwicethetotalnumberofincrementoperations operationsonaninitiallyzerocountercausesa ipbn ctimes similarly bita ipsonlyeveryfourthtime orbn ctimesinasequenceofnincrementoperations ingeneral forid bita ipsbn ictimesinasequenceofnincrementoperationsonaninitiallyzerocounter forik bita idoesnotexist andsoitcannot thetotalnumberof ipsinthesequenceisthusk xid xid byequation theworst casetimeforasequenceofnincrementoperationsonaninitiallyzerocounteristhereforeo theaveragecostofeachoperation andthereforetheamortizedcostperoperation iso ndo chapter amortizedanalysisexercises ifthesetofstackoperationsincludedamultipushoperation whichpusheskitemsontothestack wouldtheo boundontheamortizedcostofstackopera tionscontinuetohold showthatifadecrementoperationwereincludedinthek bitcounterexample noperationscouldcostasmuchas supposeweperformasequenceofnoperationsonadatastructureinwhichtheithoperationcostsiifiisanexactpowerof otherwise useaggregateanalysistodeterminetheamortizedcostperoperation theaccountingmethodintheaccountingmethodofamortizedanalysis weassigndifferingchargestodifferentoperations withsomeoperationschargedmoreorlessthantheyactu allycost wecalltheamountwechargeanoperationitsamortizedcost whenanoperation samortizedcostexceedsitsactualcost weassignthedifferenceto speci cobjectsinthedatastructureascredit creditcanhelppayforlateroper ationswhoseamortizedcostislessthantheiractualcost wecanviewthe amortizedcostofanoperationasbeingsplitbetweenitsactualcostandcreditthat iseitherdepositedorusedup differentoperationsmayhavedifferentamortized costs thismethoddiffersfromaggregateanalysis inwhichalloperationshave thesameamortizedcost wemustchoosetheamortizedcostsofoperationscarefully ifwewanttoshowthatintheworstcasetheaveragecostperoperationissmallbyanalyzingwithamortizedcosts wemustensurethatthetotalamortizedcostofasequenceofoper ationsprovidesanupperboundonthetotalactualcostofthesequence moreover asinaggregateanalysis thisrelationshipmustholdforallsequencesofopera tions ifwedenotetheactualcostoftheithoperationbyciandtheamortizedcostoftheithoperationbyyci werequirenxid ycinxid forallsequencesofnoperations thetotalcreditstoredinthedatastructureisthedifferencebetweenthetotalamortizedcostandthetotalactualcost theaccountingmethod pnid ycipnid byinequality thetotalcreditassociatedwiththedatastructuremustbenonnegativeatalltimes ifweeverweretoallowthetotalcredit tobecomenegative theresultofunderchargingearlyoperationswiththepromise ofrepayingtheaccountlateron thenthetotalamortizedcostsincurredatthat timewouldbebelowthetotalactualcostsincurred forthesequenceofoperations uptothattime thetotalamortizedcostwouldnotbeanupperboundonthetotal actualcost wemusttakecarethatthetotalcreditinthedatastructurenever becomesnegative stackoperationstoillustratetheaccountingmethodofamortizedanalysis letusreturntothestackexample recallthattheactualcostsoftheoperationswerepush pop multipopmin wherekistheargumentsuppliedtomultipopandsisthestacksizewhenitiscalled letusassignthefollowingamortizedcosts pop multipop notethattheamortizedcostofmultipopisaconstant whereastheactualcostisvariable allthreeamortizedcostsareconstant ingeneral theamortized costsoftheoperationsunderconsiderationmaydifferfromeachother andthey mayevendifferasymptotically weshallnowshowthatwecanpayforanysequenceofstackoperationsbychargingtheamortizedcosts supposeweuseadollarbilltorepresenteachunit ofcost westartwithanemptystack recalltheanalogyofsection thestackdatastructureandastackofplatesinacafeteria whenwepushaplateonthestack weuse dollartopaytheactualcostofthepushandareleftwithacreditof outofthe dollarscharged whichweleaveontopoftheplate atanypointintime everyplateonthestackhasadollarofcreditonit thedollarstoredontheplateservesasprepaymentforthecostofpoppingitfromthestack whenweexecuteapopoperation wechargetheoperationnothingandpayitsactualcostusingthecreditstoredinthestack topopaplate wetake thedollarofcreditofftheplateanduseittopaytheactualcostoftheoperation bychargingthepushoperationalittlebitmore wecanchargethepopoperationnothing chapter amortizedanalysismoreover wecanalsochargemultipopoperationsnothing topopthe rstplate wetakethedollarofcreditofftheplateanduseittopaytheactualcostofapopoperation topopasecondplate weagainhaveadollarofcreditontheplatetopayforthepopoperation andsoon wehavealwayschargedenoughupfronttopayformultipopoperations inotherwords sinceeachplateonthestackhas dollarofcreditonit andthestackalwayshasanonnegativenumberofplates wehaveensuredthattheamountofcreditisalwaysnonnegative anysequenceofnpush pop andmultipopoperations thetotalamortizedcostisanupperboundonthetotalactualcost sincethetotalamortizedcostiso soisthetotalactualcost incrementingabinarycounterasanotherillustrationoftheaccountingmethod weanalyzetheincrementop erationonabinarycounterthatstartsatzero asweobservedearlier therunning timeofthisoperationisproportionaltothenumberofbits ipped whichweshall useasourcostforthisexample letusonceagainuseadollarbilltorepresent eachunitofcost ippingofabitinthisexample fortheamortizedanalysis letuschargeanamortizedcostof dollarstosetabitto whenabitisset weuse outofthe dollarscharged topayfortheactualsettingofthebit andweplacetheotherdollaronthebitascredittobeusedlaterwhenwe ipthebitbackto atanypointintime inthecounterhasadollarofcreditonit andthuswecanchargenothingtoresetabit wejustpayfortheresetwiththedollarbillonthebit nowwecandeterminetheamortizedcostofincrement thecostofresettingthebitswithinthewhileloopispaidforbythedollarsonthebitsthatarereset theincrementproceduresetsatmostonebit inline andthereforetheamortizedcostofanincrementoperationisatmost dollars thenumberof sinthecounterneverbecomesnegative andthustheamountofcreditstaysnonnegative atalltimes fornincrementoperations thetotalamortizedcostiso whichboundsthetotalactualcost exercises supposeweperformasequenceofstackoperationsonastackwhosesizenever exceedsk aftereverykoperations wemakeacopyoftheentirestackforbackuppurposes showthatthecostofnstackoperations includingcopyingthestack iso byassigningsuitableamortizedcoststothevariousstackoperations thepotentialmethod redoexercise usinganaccountingmethodofanalysis supposewewishnotonlytoincrementacounterbutalsotoresetittozero makeallbitsinit countingthetimetoexamineormodifyabitas showhowtoimplementacounterasanarrayofbitssothatanysequenceofnincrementandresetoperationstakestimeo onaninitiallyzerocounter hint keepapointertothehigh thepotentialmethodinsteadofrepresentingprepaidworkascreditstoredwithspeci cobjectsinthedatastructure thepotentialmethodofamortizedanalysisrepresentstheprepaidworkas potentialenergy orjust potential whichcanbereleasedtopayfor futureoperations weassociatethepotentialwiththedatastructureasawhole ratherthanwithspeci cobjectswithinthedatastructure thepotentialmethodworksasfollows wewillperformnoperations startingwithaninitialdatastructured foreachid weletcibetheactualcostoftheithoperationanddibethedatastructurethatresultsafterapplyingtheithoperationtodatastructuredi apotentialfunction mapseachdatastructureditoarealnumber whichisthepotentialassociatedwithdatastructuredi theamortizedcostycioftheithoperationwithrespecttopotentialfunction isde nedbyycidcic theamortizedcostofeachoperationisthereforeitsactualcostplusthechangeinpotentialduetotheoperation byequation thetotalamortizedcostofthenoperationsisnxid ycidnxid cic dnxid cic thesecondequalityfollowsfromequation becausethe termstele scope ifwecande neapotentialfunction sothat thenthetotalamortizedcostpnid ycigivesanupperboundonthetotalactualcostpnid chapter amortizedanalysisinpractice wedonotalwaysknowhowmanyoperationsmightbeperformed therefore ifwerequirethat foralli thenweguarantee asintheaccountingmethod thatwepayinadvance weusuallyjustde tobe andthenshowthat foralli seeexercise foraneasywaytohandlecasesinwhich intuitively ifthepotentialdifference oftheithoperationispositive thentheamortizedcostycirepresentsanoverchargetotheithoperation andthepotentialofthedatastructureincreases ifthepotentialdifferenceisneg ative thentheamortizedcostrepresentsanunderchargetotheithoperation andthedecreaseinthepotentialpaysfortheactualcostoftheoperation theamortizedcostsde nedbyequations dependonthechoiceofthepotentialfunction differentpotentialfunctionsmayyielddifferentamor tizedcostsyetstillbeupperboundsontheactualcosts weoften ndtrade offs thatwecanmakeinchoosingapotentialfunction thebestpotentialfunctionto usedependsonthedesiredtimebounds stackoperationstoillustratethepotentialmethod wereturnonceagaintotheexampleofthestackoperationspush pop andmultipop wede nethepotentialfunction onastacktobethenumberofobjectsinthestack fortheemptystackd withwhichwestart wehave sincethenumberofobjectsinthestackisnevernegative thestackdithatresultsaftertheithoperationhasnonnegativepotential andthus thetotalamortizedcostofnoperationswithrespectto thereforerepresentsanupperboundontheactualcost letusnowcomputetheamortizedcostsofthevariousstackoperations iftheithoperationonastackcontainingsobjectsisapushoperation thenthepotentialdifferenceis byequation theamortizedcostofthispushoperationisycidcic thepotentialmethod supposethattheithoperationonthestackismultipop whichcausesk dmin objectstobepoppedoffthestack theactualcostoftheopera tionisk andthepotentialdifferenceis theamortizedcostofthemultipopoperationisycidcic similarly theamortizedcostofanordinarypopoperationis theamortizedcostofeachofthethreeoperationsiso andthusthetotalamortizedcostofasequenceofnoperationsiso sincewehavealreadyarguedthat thetotalamortizedcostofnoperationsisanupperboundonthetotalactualcost theworst casecostofnoperationsisthereforeo incrementingabinarycounterasanotherexampleofthepotentialmethod weagainlookatincrementingabinarycounter thistime wede nethepotentialofthecounteraftertheithincrementoperationtobebi thenumberof sinthecounteraftertheithoperation letuscomputetheamortizedcostofanincrementoperation supposethattheithincrementoperationresetstibits theactualcostoftheoperationisthereforeatmosttic sinceinadditiontoresettingtibits itsetsatmostonebitto ifbid thentheithoperationresetsallkbits andsobi dtidk ifbi thenbidbi tic ineithercase bibi tic andthepotentialdifferenceis tic theamortizedcostisthereforeycidcic tic ifthecounterstartsatzero foralli thetotalamortizedcostofasequenceofnincrementoperationsisanupperboundonthetotalactualcost andsotheworst casecostofnincrementoperationsiso thepotentialmethodgivesusaneasywaytoanalyzethecounterevenwhenitdoesnotstartatzero thecounterstartswithb andafternincrement chapter amortizedanalysisoperationsithasbn bnk recallthatkisthenumberofbitsinthecounter wecanrewriteequation asnxid cidnxid yci wehaveyci forall dbn thetotalactualcostofnincrementoperationsisnxid cinxid bncb nbncb noteinparticularthatsinceb aslongaskdo thetotalactualcostiso inotherwords ifweexecuteatleastndk incrementoperations thetotalactualcostiso nomatterwhatinitialvaluethecountercontains exercises supposewehaveapotentialfunction suchthat foralli showthatthereexistsapotentialfunction suchthat foralli andtheamortizedcostsusing arethesameastheamortizedcostsusing redoexercise usingapotentialmethodofanalysis consideranordinarybinarymin heapdatastructurewithnelementssupportingtheinstructionsinsertandextract minino lgn worst casetime giveapotentialfunction suchthattheamortizedcostofinsertiso lgn andtheamortizedcostofextract miniso andshowthatitworks whatisthetotalcostofexecutingnofthestackoperationspush pop andmultipop assumingthatthestackbeginswiths objectsand nisheswithsnobjects supposethatacounterbeginsatanumberwithb sinitsbinaryrepresenta tion ratherthanat showthatthecostofperformingnincrementoperationsiso ifnd donotassumethatbisconstant dynamictables showhowtoimplementaqueuewithtwoordinarystacks sothat theamortizedcostofeachenqueueandeachdequeueoperationiso designadatastructuretosupportthefollowingtwooperationsforadynamic multisetsofintegers whichallowsduplicatevalues insert insertsxintos delete larger deletesthelargestdjsj eelementsfroms explainhowtoimplementthisdatastructuresothatanysequenceofminsertanddelete larger halfoperationsrunsino yourimplementationshouldalsoincludeawaytooutputtheelementsofsino jsj dynamictableswedonotalwaysknowinadvancehowmanyobjectssomeapplicationswillstoreinatable wemightallocatespaceforatable onlyto ndoutlaterthatitisnot wemustthenreallocatethetablewithalargersizeandcopyallobjects storedintheoriginaltableoverintothenew largertable similarly ifmanyobjects havebeendeletedfromthetable itmaybeworthwhiletoreallocatethetablewith asmallersize inthissection westudythisproblemofdynamicallyexpandingand contractingatable usingamortizedanalysis weshallshowthattheamortizedcost ofinsertionanddeletionisonlyo eventhoughtheactualcostofanoperationislargewhenittriggersanexpansionoracontraction moreover weshallseehowtoguaranteethattheunusedspaceinadynamictableneverexceedsaconstantfractionofthetotalspace weassumethatthedynamictablesupportstheoperationstable insertandtable delete insertinsertsintothetableanitemthatoccupiesasin gleslot thatis aspaceforoneitem likewise deleteremovesanitemfromthetable therebyfreeingaslot thedetailsofthedata structuringmethodusedtoorganizethetableareunimportant wemightuseastack aheap chapter orahashtable chapter wemightalsouseanarrayor collectionofarraystoimplementobjectstorage aswedidinsection weshall nditconvenienttouseaconceptintroducedinouranalysisofhashing chapter wede netheloadfactor ofanonemptytablettobethenumberofitemsstoredinthetabledividedbythesize numberofslots ofthe weassignanemptytable onewithnoitems andwede neitsloadfactortobe iftheloadfactorofadynamictableisboundedbelowbyaconstant chapter amortizedanalysistheunusedspaceinthetableisnevermorethanaconstantfractionofthetotalamountofspace westartbyanalyzingadynamictableinwhichweonlyinsertitems wethenconsiderthemoregeneralcaseinwhichwebothinsertanddeleteitems tableexpansionletusassumethatstorageforatableisallocatedasanarrayofslots atable llsupwhenallslotshavebeenusedor equivalently whenitsloadfactoris insomesoftwareenvironments uponattemptingtoinsertanitemintoafulltable theonly alternativeistoabortwithanerror weshallassume however thatoursoftware environment likemanymodernones providesamemory managementsystemthat canallocateandfreeblocksofstorageonrequest uponinsertinganitemintoafulltable wecanexpandthetablebyallocatinganewtablewithmoreslotsthantheoldtablehad becausewealwaysneedthetabletoresideincontiguous memory wemustallocateanewarrayforthelargertableandthencopyitemsfrom theoldtableintothenewtable acommonheuristicallocatesanewtablewithtwiceasmanyslotsastheoldone iftheonlytableoperationsareinsertions thentheloadfactorofthetableisalwaysatleast andthustheamountofwastedspaceneverexceedshalfthetotalspaceinthetable inthefollowingpseudocode weassumethattisanobjectrepresentingthetable theattributet tablecontainsapointertotheblockofstoragerepresentingthetable numcontainsthenumberofitemsinthetable andt sizegivesthetotalnumberofslotsinthetable initially thetableisempty numdt sized insert ift allocatet tablewith slot sized ift num allocatenew tablewith sizeslots insertallitemsint tableintonew freet tablednew sized insertxintot numdt numc insomesituations suchasanopen addresshashtable wemaywishtoconsideratabletobefullifitsloadfactorequalssomeconstantstrictlylessthan seeexercise dynamictables noticethatwehavetwo insertion procedureshere thetable insertproce dureitselfandtheelementaryinsertionintoatableinlines wecananalyzetherunningtimeoftable insertintermsofthenumberofelementaryinsertionsbyassigningacostof toeachelementaryinsertion weassumethattheactualrunningtimeoftable insertislinearinthetimetoinsertindividualitems sothattheoverheadforallocatinganinitialtableinline isconstantand theoverheadforallocatingandfreeingstorageinlines isdominatedby thecostoftransferringitemsinline wecalltheeventinwhichlines areexecutedanexpansion letusanalyzeasequenceofntable insertoperationsonaninitiallyemptytable whatisthecostcioftheithoperation ifthecurrenttablehasroomforthenewitem orifthisisthe rstoperation thencid sinceweneedonlyperformtheoneelementaryinsertioninline ifthecurrenttableisfull however andan expansionoccurs thencidi thecostis fortheelementaryinsertioninline plusi fortheitemsthatwemustcopyfromtheoldtabletothenewtableinline ifweperformnoperations theworst casecostofanoperationiso whichleadstoanupperboundofo onthetotalrunningtimefornoperations thisboundisnottight becausewerarelyexpandthetableinthecourseofntable insertoperations speci cally theithoperationcausesanexpansiononlywheni isanexactpowerof theamortizedcostofanoperationisinfacto aswecanshowusingaggregateanalysis thecostoftheithoperationiscid iifi isanexactpowerof otherwise thetotalcostofntable insertoperationsisthereforenxid cincblgncxjd becauseatmostnoperationscost andthecostsoftheremainingoperationsformageometricseries sincethetotalcostofntable insertoperationsisboundedby theamortizedcostofasingleoperationisatmost byusingtheaccountingmethod wecangainsomefeelingforwhytheamor tizedcostofatable insertoperationshouldbe intuitively eachitempaysfor elementaryinsertions insertingitselfintothecurrenttable movingitselfwhenthetableexpands andmovinganotheritemthathasalreadybeenmoved oncewhenthetableexpands forexample supposethatthesizeofthetableismimmediatelyafteranexpansion thenthetableholdsm items anditcontains chapter amortizedanalysisnocredit wecharge dollarsforeachinsertion theelementaryinsertionthatoccursimmediatelycosts weplaceanotherdollarascreditontheiteminserted weplacethethirddollarascreditononeofthem itemsalreadyinthetable thetablewillnot llagainuntilwehaveinsertedanotherm items andthus bythetimethetablecontainsmitemsandisfull wewillhaveplacedadollaroneachitemtopaytoreinsertitduringtheexpansion wecanusethepotentialmethodtoanalyzeasequenceofntable insertoperations andweshalluseitinsection todesignatable deleteop erationthathasano amortizedcostaswell westartbyde ningapotentialfunction thatis immediatelyafteranexpansionbutbuildstothetablesizebythetimethetableisfull sothatwecanpayforthenextexpansionbythepotential thefunction numt isonepossibility immediatelyafteranexpansion wehavet numdt andthus asdesired immediatelybeforeanexpansion wehavet numdt andthus num asdesired theinitialvalueofthepotentialis andsincethetableisalwaysatleasthalffull numt whichimpliesthat isalwaysnonnegative thesumoftheamortizedcostsofntable insertoperationsgivesanupperboundonthesumoftheactualcosts toanalyzetheamortizedcostoftheithtable insertoperation weletnumidenotethenumberofitemsstoredinthetableaftertheithoperation sizeidenotethetotalsizeofthetableaftertheithoperation idenotethepotentialaftertheithoperation initially wehavenum iftheithtable insertoperationdoesnottriggeranexpansion thenwehavesizeidsizei andtheamortizedcostoftheoperationisycidcic numisizei numi sizei numisizei numi sizei iftheithoperationdoestriggeranexpansion thenwehavesizeid sizei andsizei dnumi dnumi whichimpliesthatsizeid numi theamortizedcostoftheoperationisycidcic dnumic numisizei numi sizei dnumic numi numi numi numi dnumic numi dynamictables inumisizei ifigure theeffectofasequenceofntable insertoperationsonthenumbernumiofitemsinthetable thenumbersizeiofslotsinthetable andthepotential numisizei eachbeingmeasuredaftertheithoperation thethinlineshowsnumi thedashedlineshowssizei andthethicklineshows noticethatimmediatelybeforeanexpansion thepotentialhasbuiltuptothenumberofitemsinthetable andthereforeitcanpayformovingalltheitemstothenewtable afterwards thepotentialdropsto butitisimmediatelyincreasedby uponinsertingtheitemthatcausedtheexpansion plotsthevaluesofnumi sizei iagainsti noticehowthepotentialbuildstopayforexpandingthetable tableexpansionandcontractiontoimplementatable deleteoperation itissimpleenoughtoremovethespec editemfromthetable inordertolimittheamountofwastedspace however wemightwishtocontractthetablewhentheloadfactorbecomestoosmall tablecontractionisanalogoustotableexpansion whenthenumberofitemsinthetable dropstoolow weallocateanew smallertableandthencopytheitemsfromthe oldtableintothenewone wecanthenfreethestoragefortheoldtablebyreturn ingittothememory managementsystem ideally wewouldliketopreservetwo properties theloadfactorofthedynamictableisboundedbelowbyapositiveconstant andtheamortizedcostofatableoperationisboundedabovebyaconstant chapter amortizedanalysisweassumethatwemeasurethecostintermsofelementaryinsertionsanddele tions youmightthinkthatweshoulddoublethetablesizeuponinsertinganitemintoafulltableandhalvethesizewhenadeletinganitemwouldcausethetableto becomelessthanhalffull thisstrategywouldguaranteethattheloadfactorof thetableneverdropsbelow butunfortunately itcancausetheamortizedcostofanoperationtobequitelarge considerthefollowingscenario weperformnoperationsonatablet wherenisanexactpowerof rstn operationsareinsertions whichbyourpreviousanalysiscostatotalof attheendofthissequenceofinsertions numdt sizedn forthesecondn operations weperformthefollowingsequence insert delete delete insert insert delete delete insert insert rstinsertioncausesthetabletoexpandtosizen thetwofollowingdeletionscausethetabletocontractbacktosizen twofurtherinsertionscauseanotherexpansion andsoforth thecostofeachexpansionandcontractionis andthereare ofthem thetotalcostofthenoperationsis makingtheamortizedcostofanoperation thedownsideofthisstrategyisobvious afterexpandingthetable wedonotdeleteenoughitemstopayforacontraction likewise aftercontractingthetable wedonotinsertenoughitemstopayforanexpansion wecanimproveuponthisstrategybyallowingtheloadfactorofthetabletodropbelow speci cally wecontinuetodoublethetablesizeuponinsertinganitemintoafulltable butwehalvethetablesizewhendeletinganitemcauses thetabletobecomelessthan ratherthan fullasbefore theloadfactorofthetableisthereforeboundedbelowbytheconstant intuitively wewouldconsideraloadfactorof tobeideal andthetable spotentialwouldthenbe astheloadfactordeviatesfrom thepotentialincreasessothatbythetimeweexpandorcontractthetable thetablehasgarnered suf cientpotentialtopayforcopyingalltheitemsintothenewlyallocatedtable wewillneedapotentialfunctionthathasgrowntot numbythetimethattheloadfactorhaseitherincreasedto ordecreasedto aftereitherexpandingorcontractingthetable theloadfactorgoesbackto andthetable spotentialreducesbackto weomitthecodefortable delete sinceitisanalogoustotable insert forouranalysis weshallassumethatwheneverthenumberofitemsinthetable dropsto wefreethestorageforthetable thatis ift numd thent sized wecannowusethepotentialmethodtoanalyzethecostofasequenceofntable insertandtable deleteoperations westartbyde ningapoten tialfunction thatis immediatelyafteranexpansionorcontractionandbuildsastheloadfactorincreasesto ordecreasesto letusdenotetheloadfac dynamictables numiisizei ifigure theeffectofasequenceofntable insertandtable deleteoperationsonthenumbernumiofitemsinthetable thenumbersizeiofslotsinthetable andthepotential numisizeiif sizei numiif eachmeasuredaftertheithoperation thethinlineshowsnumi thedashedlineshowssizei andthethicklineshows noticethatimmediatelybeforeanexpansion thepotentialhasbuiltuptothenumberofitemsinthetable andthereforeitcanpayformovingalltheitemstothenewtable likewise immediatelybeforeacontraction thepotentialhasbuiltuptothenumberofitemsinthetable torofanonemptytabletby num sinceforanemptytable numdt sized wealwayshavet numd whetherthetableisemptyornot weshalluseasourpotentialfunction numt sizeif numif observethatthepotentialofanemptytableis andthatthepotentialisnevernegative thetotalamortizedcostofasequenceofoperationswithrespect providesanupperboundontheactualcostofthesequence beforeproceedingwithapreciseanalysis wepausetoobservesomepropertiesofthepotentialfunction asillustratedinfigure noticethatwhentheload factoris thepotentialis whentheloadfactoris wehavet sizedt num whichimplies num andthusthepotentialcanpayforanexpansionifanitemisinserted whentheloadfactoris wehavet sized num chapter amortizedanalysisimplies num andthusthepotentialcanpayforacontractionifanitemisdeleted toanalyzeasequenceofntable insertandtable deleteoperations weletcidenotetheactualcostoftheithoperation ycidenoteitsamortizedcostwithrespectto numidenotethenumberofitemsstoredinthetableaftertheithoperation sizeidenotethetotalsizeofthetableaftertheithoperation idenotetheloadfactorofthetableaftertheithoperation idenotethepotentialaftertheithoperation initially num westartwiththecaseinwhichtheithoperationistable insert theanaly sisisidenticaltothatfortableexpansioninsection whetherthetableexpandsornot theamortizedcostycioftheoperationisatmost thetablecannotexpandasaresultoftheoperation sincetheta bleexpandsonlywhen aswell thentheamortizedcostoftheithoperationisycidcic sizei numi sizei numi sizei numi sizei numi thenycidcic numisizei sizei numi numi sizei sizei numi numi sizei sizei sizei sizei sizei theamortizedcostofatable insertoperationisatmost wenowturntothecaseinwhichtheithoperationistable delete inthiscase numidnumi thenwemustconsiderwhethertheoperationcausesthetabletocontract ifitdoesnot thensizeidsizei andtheamortizedcostoftheoperationisycidcic sizei numi sizei numi sizei numi sizei numic dynamictables andtheithoperationdoestriggeracontraction thentheactualcostoftheoperationiscidnumic sincewedeleteoneitemandmovenumiitems wehavesizei dsizei dnumi dnumic andtheamortizedcostoftheoperationisycidcic numic sizei numi sizei numi numic numic numi numic numic whentheithoperationisatable deleteand theamortizedcostisalsoboundedabovebyaconstant weleavetheanalysisasexercise insummary sincetheamortizedcostofeachoperationisboundedabovebyaconstant theactualtimeforanysequenceofnoperationsonadynamictableiso exercises supposethatwewishtoimplementadynamic addresshashtable whymightweconsiderthetabletobefullwhenitsloadfactorreachessomevalue thatisstrictlylessthan describebrie yhowtomakeinsertionintoadynamic addresshashtableruninsuchawaythattheexpectedvalueoftheamortized costperinsertioniso whyistheexpectedvalueoftheactualcostperinsertionnotnecessarilyo forallinsertions showthatif andtheithoperationonadynamictableistable delete thentheamortizedcostoftheoperationwithrespecttothepotentialfunction isboundedabovebyaconstant supposethatinsteadofcontractingatablebyhalvingitssizewhenitsloadfactor dropsbelow wecontractitbymultiplyingitssizeby whenitsloadfactordropsbelow usingthepotentialfunction numt sizej showthattheamortizedcostofatable deletethatusesthisstrategyisboundedabovebyaconstant chapter amortizedanalysisproblems reversedbinarycounterchapter examinesanimportantalgorithmcalledthefastfouriertransform orfft rststepofthefftalgorithmperformsabit reversalpermutationonaninputarraya nwhoselengthisnd kforsomenonnegativeintegerk thispermutationswapselementswhoseindiceshavebinaryrepresentationsthatarethereverseofeachother wecanexpresseachindexaasak bitsequencehak whereadpk wede nerevk hak dha iithus revk xid aki forexample ifnd equivalently thenrevk sincethe bitrepresentationof whichwhenreversedgives bitrepresentationof givenafunctionrevkthatrunsin writeanalgorithmtoperformthebit reversalpermutationonanarrayoflengthnd kino wecanuseanalgorithmbasedonanamortizedanalysistoimprovetherunningtimeofthebit reversalpermutation wemaintaina reversedcounter anda procedurebit reversed incrementthat whengivenabit reversed countervaluea producesrevk revk ifkd forexample andthebit reversedcounterstartsat thensuccessivecallstobit reversed incrementproducethesequence assumethatthewordsinyourcomputerstorek bitvaluesandthatinunittime yourcomputercanmanipulatethebinaryvalueswithoperationssuchasshifting leftorrightbyarbitraryamounts bitwise bitwise etc animplementationofthebit reversed incrementprocedurethatallowsthebit reversalpermutationonann elementarraytobeperformedinatotalofo supposethatyoucanshiftawordleftorrightbyonlyonebitinunittime isitstillpossibletoimplementano timebit reversalpermutation problemsforchapter makingbinarysearchdynamicbinarysearchofasortedarraytakeslogarithmicsearchtime butthetimetoinsert anewelementislinearinthesizeofthearray wecanimprovethetimefor insertionbykeepingseveralsortedarrays speci cally supposethatwewishtosupportsearchandinsertonasetofnelements letkddlg andletthebinaryrepresentationofnbehnk wehaveksortedarraysa whereforid thelengthofarrayaiis eacharrayiseitherfullorempty dependingonwhethernid ornid respectively thetotalnumberofele mentsheldinallkarraysisthereforepk idn althougheachindividualarrayissorted elementsindifferentarraysbearnoparticularrelationshiptoeach describehowtoperformthesearchoperationforthisdatastructure analyzeitsworst caserunningtime describehowtoperformtheinsertoperation analyzeitsworst caseandamortizedrunningtimes discusshowtoimplementdelete amortizedweight balancedtreesconsideranordinarybinarysearchtreeaugmentedbyaddingtoeachnodextheattributex sizegivingthenumberofkeysstoredinthesubtreerootedatx beaconstantintherange wesaythatagivennodexis balancedifx sizeandx thetreeasawholeis balancedifeverynodeinthetreeis balanced thefollowingamortizedapproachtomaintainingweight balancedtreeswassuggestedbyg varghese balancedtreeis inasense asbalancedasitcanbe givenanodexinanarbitrarybinarysearchtree showhowtorebuildthesubtreerootedatxsothatitbecomes balanced youralgorithmshouldrunintime anditcanuseo auxiliarystorage showthatperformingasearchinann node balancedbinarysearchtreetakeso lgn worst casetime fortheremainderofthisproblem assumethattheconstant isstrictlygreaterthan supposethatweimplementinsertanddeleteasusualforann nodebinarysearchtree exceptthataftereverysuchoperation ifanynodeinthetree isnolonger balanced thenwe rebuild thesubtreerootedatthehighestsuchnodeinthetreesothatitbecomes balanced chapter amortizedanalysisweshallanalyzethisrebuildingschemeusingthepotentialmethod foranodexinabinarysearchtreet wede nex djx sizex sizej andwede nethepotentialoftas dcxx twx wherecisasuf cientlylargeconstantthatdependson arguethatanybinarysearchtreehasnonnegativepotentialandthata balancedtreehaspotential supposethatmunitsofpotentialcanpayforrebuildinganm nodesubtree howlargemustcbeintermsof inorderforittotakeo amortizedtimetorebuildasubtreethatisnot balanced showthatinsertinganodeintoordeletinganodefromann node balancedtreecostso lgn amortizedtime thecostofrestructuringred blacktreestherearefourbasicoperationsonred blacktreesthatperformstructuralmodi cations nodeinsertions nodedeletions rotations andcolorchanges wehaveseenthatrb insertandrb deleteuseonlyo rotations nodeinsertions andnodedeletionstomaintainthered blackproperties buttheymaymakemany morecolorchanges describealegalred blacktreewithnnodessuchthatcallingrb inserttoaddthe stnodecauseslgn colorchanges thendescribealegalred blacktreewithnnodesforwhichcallingrb deleteonaparticularnodecauseslgn colorchanges althoughtheworst casenumberofcolorchangesperoperationcanbelogarithmic weshallprovethatanysequenceofmrb insertandrb deleteoperationsonaninitiallyemptyred blacktreecauseso structuralmodi cationsintheworstcase notethatwecounteachcolorchangeasastructuralmodi cation someofthecaseshandledbythemainloopofthecodeofbothrb insert fixupandrb delete fixupareterminating onceencountered theycausethelooptoterminateafteraconstantnumberofadditionaloperations foreachofthecasesofrb insert fixupandrb delete fixup specifywhichareterminatingandwhicharenot hint lookatfigures problemsforchapter weshall rstanalyzethestructuralmodi cationswhenonlyinsertionsareper formed lettbeared blacktree andde tobethenumberofrednodesint assumethat unitofpotentialcanpayforthestructuralmodi cationsper formedbyanyofthethreecasesofrb insert fixup lett betheresultofapplyingcase ofrb insert fixuptot arguethat whenweinsertanodeintoared blacktreeusingrb insert wecanbreaktheoperationintothreeparts listthestructuralmodi cationsandpotential changesresultingfromlines ofrb insert fromnonterminatingcasesofrb insert fixup andfromterminatingcasesofrb insert fixup usingpart arguethattheamortizednumberofstructuralmodi cationsper formedbyanycallofrb insertiso wenowwishtoprovethatthereareo structuralmodi cationswhentherearebothinsertionsanddeletions letusde foreachnodex ifxisred ifxisblackandhasnoredchildren ifxisblackandhasoneredchild ifxisblackandhastworedchildren nowwerede nethepotentialofared blacktreetas dxx andlett bethetreethatresultsfromapplyinganynonterminatingcaseofrb insert fixuporrb delete fixuptot showthat forallnonterminatingcasesofrb insert fixup arguethattheamortizednumberofstructuralmodi cationsperformedbyanycallofrb insert fixupiso showthat forallnonterminatingcasesofrb delete fixup arguethattheamortizednumberofstructuralmodi cationsperformedbyanycallofrb delete fixupiso completetheproofthatintheworstcase anysequenceofmrb insertandrb deleteoperationsperformso structuralmodi cations chapter amortizedanalysis competitiveanalysisofself organizinglistswithmove frontaself organizinglistisalinkedlistofnelements inwhicheachelementhasauniquekey whenwesearchforanelementinthelist wearegivenakey andwe wantto ndanelementwiththatkey aself organizinglisthastwoimportantproperties ndanelementinthelist givenitskey wemusttraversethelistfromthebeginninguntilweencountertheelementwiththegivenkey ifthatelementis thekthelementfromthestartofthelist thenthecostto ndtheelementisk wemayreorderthelistelementsafteranyoperation accordingtoagivenrulewithagivencost wemaychooseanyheuristicweliketodecidehowtoreorder thelist assumethatwestartwithagivenlistofnelements andwearegivenanaccesssequencedh miofkeysto inorder thecostofthesequenceisthesumofthecostsoftheindividualaccessesinthesequence outofthevariouspossiblewaystoreorderthelistafteranoperation thisprob lemfocusesontransposingadjacentlistelements switchingtheirpositionsinthe withaunitcostforeachtransposeoperation youwillshow bymeansofa potentialfunction thataparticularheuristicforreorderingthelist entailsatotalcostnoworsethan timesthatofanyotherheuristicformaintainingthelistorder eveniftheotherheuristicknowstheaccesssequenceinadvance wecallthistypeofanalysisacompetitiveanalysis foraheuristichandagiveninitialorderingofthelist denotetheaccesscostofsequencebych letmbethenumberofaccessesin arguethatifheuristichdoesnotknowtheaccesssequenceinadvance thentheworst casecostforhonanaccesssequenceisch dmn withthemove frontheuristic immediatelyaftersearchingforanelementx wemovextothe rstpositiononthelist thefrontofthelist letrankl denotetherankofelementxinlistl thatis thepositionofxinlistl forexample ifxisthefourthelementinl thenrankl letcidenotethecostofaccessiusingthemove frontheuristic whichincludesthecostof ndingtheelementinthelistandthecostofmovingittothefrontofthe listbyaseriesoftranspositionsofadjacentlistelements showthatifiaccesseselementxinlistlusingthemove frontheuristic thencid rankl nowwecomparemove frontwithanyotherheuristichthatprocessesanaccesssequenceaccordingtothetwopropertiesabove heuristichmaytranspose problemsforchapter elementsinthelistinanywayitwants anditmightevenknowtheentireaccesssequenceinadvance letlibethelistafteraccessiusingmove andletlibethelistafteraccessiusingheuristich wedenotethecostofaccessibyciformove frontandbyciforheuristich supposethatheuristichperformstitranspositionsduringaccessi inpart youshowedthatcid rankli nowshowthatcidrankli cti wede neaninversioninlistliasapairofelementsyand suchthatyprecedes inliand precedesyinlistli supposethatlistlihasqiinversionsafterprocessingtheaccesssequenceh wede neapotentialfunction thatmapslitoarealnumberby forexample iflihastheelementshe biandlihastheelementshc thenlihas inversions andso observethat foralliandthat ifmove frontandheuristichstartwiththesamelistl arguethatatranspositioneitherincreasesthepotentialby ordecreasesthepotentialby supposethataccessi ndstheelementx tounderstandhowthepotentialchangesduetoi letuspartitiontheelementsotherthanxintofoursets ingonwheretheyareinthelistsjustbeforetheithaccess setaconsistsofelementsthatprecedexinbothli andli setbconsistsofelementsthatprecedexinli andfollowxinli setcconsistsofelementsthatfollowxinli andprecedexinli setdconsistsofelementsthatfollowxinbothli andli arguethatrankli djajcjbjc andrankli djajcjcjc showthataccessicausesachangeinpotentialof jajjbjcti asbefore heuristichperformstitranspositionsduringaccessi netheamortizedcostyciofaccessibyycidcic showthattheamortizedcostyciofaccessiisboundedfromaboveby concludethatthecostcmtf ofaccesssequencewithmove frontisatmost timesthecostch ofwithanyotherheuristich assumingthatbothheuristicsstartwiththesamelist chapter amortizedanalysischapternotesaho hopcroft andullman usedaggregateanalysistodeterminetherunningtimeofoperationsonadisjoint setforest weshallanalyzethisdatastructureus ingthepotentialmethodinchapter tarjan surveystheaccountingand potentialmethodsofamortizedanalysisandpresentsseveralapplications tributestheaccountingmethodtoseveralauthors includingm tarjan huddleston andk mehlhorn heattributesthepotentialmethodto sleator theterm amortized isduetod sleatorandr tarjan potentialfunctionsarealsousefulforprovinglowerboundsforcertaintypesofproblems foreachcon gurationoftheproblem wede neapotentialfunction thatmapsthecon gurationtoarealnumber thenwedeterminethepotential initoftheinitialcon guration thepotential nalofthe nalcon guration andthemaximumchangeinpotentialmaxduetoanystep thenumberofstepsmustthereforebeatleastj nal initj jmaxj examplesofpotentialfunctionstoprovelowerboundsini ocomplexityappearinworksbycormen sundquist wisniewski floyd andaggarwalandvitter krumme cybenko andvenkataraman appliedpotentialfunctionstoprovelowerboundsongos siping communicatingauniqueitemfromeachvertexinagraphtoeveryothervertex themove frontheuristicfromproblem worksquitewellinpractice moreover ifwerecognizethatwhenwe ndanelement wecanspliceitoutofits positioninthelistandrelocateittothefrontofthelistinconstanttime wecan showthatthecostofmove frontisatmosttwicethecostofanyotherheuristic including onethatknowstheentireaccesssequenceinadvance vadvanceddatastructures introductionthispartreturnstostudyingdatastructuresthatsupportoperationsondynamicsets butatamoreadvancedlevelthanpartiii twoofthechapters forexample makeextensiveuseoftheamortizedanalysistechniqueswesawinchapter chapter presentsb trees whicharebalancedsearchtreesspeci callyde signedtobestoredondisks becausedisksoperatemuchmoreslowlythan random accessmemory wemeasuretheperformanceofb treesnotonlybyhow muchcomputingtimethedynamic setoperationsconsumebutalsobyhowmany diskaccessestheyperform foreachb treeoperation thenumberofdiskaccesses increaseswiththeheightoftheb butb treeoperationskeeptheheightlow chapter givesanimplementationofamergeableheap whichsupportstheoperationsinsert minimum extract min andunion theunionoper ationunites ormerges twoheaps fibonacciheaps thedatastructureinchap ter alsosupporttheoperationsdeleteanddecrease weuseamor tizedtimeboundstomeasuretheperformanceoffibonacciheaps theopera tionsinsert minimum anduniontakeonlyo actualandamortizedtimeonfibonacciheaps andtheoperationsextract minanddeletetakeo lgn amortizedtime themostsigni cantadvantageoffibonacciheaps however isthatdecrease keytakesonlyo amortizedtime becausethedecrease asinproblem wehavede nedamergeableheaptosupportminimumandextract min andsowecanalsorefertoitasamergeablemin heap alternatively ifitsupportedmaximumandextract max itwouldbeamergeablemax heap unlesswespecifyotherwise mergeableheapswillbebydefaultmergeablemin heaps partvadvanceddatastructureskeyoperationtakesconstantamortizedtime fibonacciheapsarekeycomponentsofsomeoftheasymptoticallyfastestalgorithmstodateforgraphproblems notingthatwecanbeatthenlgn lowerboundforsortingwhenthekeysareintegersinarestrictedrange chapter askswhetherwecandesignadata structurethatsupportsthedynamic setoperationssearch insert delete minimum maximum successor andpredecessorino lgn timewhenthekeysareintegersinarestrictedrange theanswerturnsouttobethatwecan byusingarecursivedatastructureknownasavanemdeboastree ifthekeysareuniqueintegersdrawnfromthesetf whereuisanexactpowerof thenvanemdeboastreessupporteachoftheaboveoperationsino lglgu finally chapter presentsdatastructuresfordisjointsets wehaveauniverseofnelementsthatarepartitionedintodynamicsets initially eachelementbelongstoitsownsingletonset theoperationunionunitestwosets andthequeryfind setidenti estheuniquesetthatcontainsagivenelementatthemoment byrepresentingeachsetasasimplerootedtree weobtainsurprisinglyfastoperations asequenceofmoperationsrunsino isanincrediblyslowlygrowingfunction isatmost inanyconceivableapplication theamortizedanalysisthatprovesthistimeboundisascomplexasthedatastructure issimple thetopicscoveredinthispartarebynomeanstheonlyexamplesof advanced datastructures otheradvanceddatastructuresincludethefollowing dynamictrees introducedbysleatorandtarjan anddiscussedbytarjan maintainaforestofdisjointrootedtrees eachedgeineachtreehas areal valuedcost dynamictreessupportqueriesto ndparents roots costs andtheminimumedgecostonasimplepathfromanodeuptoaroot treesmaybemanipulatedbycuttingedges updatingalledgecostsonasimple pathfromanodeuptoaroot linkingarootintoanothertree andmakinganodetherootofthetreeitappearsin oneimplementationofdynamictreesgivesano lgn amortizedtimeboundforeachoperation amorecomplicatedimplementationyieldso lgn worst casetimebounds dynamictreesareusedinsomeoftheasymptoticallyfastestnetwork owalgorithms splaytrees developedbysleatorandtarjan discussedbytarjan areaformofbinarysearchtreeonwhichthestandardsearch treeoperationsrunino lgn amortizedtime oneapplicationofsplaytreessimpli esdynamictrees persistentdatastructuresallowqueries andsometimesupdatesaswell onpastversionsofadatastructure driscoll sarnak sleator andtarjan techniquesformakinglinkeddatastructurespersistentwithonlyasmalltime partvadvanceddatastructures andspacecost givesasimpleexampleofapersistentdynamicset asinchapter severaldatastructuresallowafasterimplementationofdic tionaryoperations insert delete andsearch forarestricteduniverseofkeys bytakingadvantageoftheserestrictions theyareabletoachievebet terworst caseasymptoticrunningtimesthancomparison baseddatastructures fredmanandwillardintroducedfusiontrees whichwerethe rstdatastructuretoallowfasterdictionaryoperationswhentheuniverseisrestrictedto integers theyshowedhowtoimplementtheseoperationsino lgn lglgn severalsubsequentdatastructures includingexponentialsearchtrees havealsogivenimprovedboundsonsomeorallofthedictionaryopera tionsandarementionedinthechapternotesthroughoutthisbook dynamicgraphdatastructuressupportvariousquerieswhileallowingthestructureofagraphtochangethroughoperationsthatinsertordeleteverticesoredges examplesofthequeriesthattheysupportincludevertexconnectivity edgeconnectivity minimumspanningtrees biconnectivity andtransitiveclosure chapternotesthroughoutthisbookmentionadditionaldatastructures treesb treesarebalancedsearchtreesdesignedtoworkwellondisksorotherdirect accesssecondarystoragedevices treesaresimilartored blacktrees chap ter buttheyarebetteratminimizingdiski ooperations manydatabasesys temsuseb trees orvariantsofb trees tostoreinformation treesdifferfromred blacktreesinthatb treenodesmayhavemanychildren fromafewtothousands thatis branchingfactor ofab treecanbequite althoughitusuallydependsoncharacteristicsofthediskunitused trees aresimilartored blacktreesinthateveryn nodeb treehasheighto lgn theexactheightofab treecanbeconsiderablylessthanthatofared blacktree however becauseitsbranchingfactor andhencethebaseofthelogarithmthatexpressesitsheight canbemuchlarger therefore wecanalsouseb treestoimplementmanydynamic setoperationsintimeo lgn treesgeneralizebinarysearchtreesinanaturalmanner showsasimpleb ifaninternalb treenodexcontainsx nkeys thenxhasx thekeysinnodexserveasdividingpointsseparatingtherangeofkeyshandledbyxintox subranges eachhandledbyonechildofx whensearchingforakeyinab wemakean waydecisionbasedoncomparisonswiththex nkeysstoredatnodex thestructureofleafnodesdiffersfromthatofinternalnodes wewillexaminethesedifferencesinsection givesaprecisede nitionofb treesandprovesthattheheightofab treegrowsonlylogarithmicallywiththenumberofnodesitcontains sec tion describeshowtosearchforakeyandinsertakeyintoab discussesdeletion beforeproceeding however weneedtoaskwhy weevaluatedatastructuresdesignedtoworkonadiskdifferentlyfromdatastruc turesdesignedtoworkinmainrandom accessmemory datastructuresonsecondarystoragecomputersystemstakeadvantageofvarioustechnologiesthatprovidememorycapacity theprimarymemory ormainmemory ofacomputersystemnormally chapter trees bcfgjkldhnprsvwyzqtxmt rootfigure treewhosekeysaretheconsonantsofenglish aninternalnodexcontainingx nkeyshasx allleavesareatthesamedepthinthetree thelightlyshadednodesareexaminedinasearchfortheletterr plattertrackarmsread writeheadspindlefigure atypicaldiskdrive itcomprisesoneormoreplatters twoplattersareshownhere thatrotatearoundaspindle eachplatterisreadandwrittenwithaheadattheendofanarm armsrotatearoundacommonpivotaxis atrackisthesurfacethatpassesbeneaththeread writeheadwhentheheadisstationary consistsofsiliconmemorychips thistechnologyistypicallymorethananorderofmagnitudemoreexpensiveperbitstoredthanmagneticstoragetechnology astapesordisks mostcomputersystemsalsohavesecondarystoragebasedonmagneticdisks theamountofsuchsecondarystorageoftenexceedstheamountof primarymemorybyatleasttwoordersofmagnitude showsatypicaldiskdrive thedriveconsistsofoneormoreplat ters whichrotateataconstantspeedaroundacommonspindle amagnetizablematerialcoversthesurfaceofeachplatter thedrivereadsandwriteseachplatterbyaheadattheendofanarm thearmscanmovetheirheadstowardoraway chapter treesfromthespindle whenagivenheadisstationary thesurfacethatpassesunder neathitiscalledatrack multipleplattersincreaseonlythediskdrive scapacityandnotitsperformance althoughdisksarecheaperandhavehighercapacitythanmainmemory theyaremuch muchslowerbecausetheyhavemovingmechanicalparts themechanicalmotionhastwocomponents platterrotationandarmmovement asofthiswriting commoditydisksrotateatspeedsof revolutionsperminute rpm wetypicallysee rpmspeedsinserver gradedrives rpmspeedsindrivesfordesktops rpmspeedsindrivesforlaptops although rpmmayseemfast onerotationtakes milliseconds whichisover ordersofmagnitudelongerthanthe nanosecondaccesstimes moreorless commonlyfoundforsiliconmemory inotherwords ifwehavetowaitafullrota tionforaparticularitemtocomeundertheread writehead wecouldaccessmain memorymorethan timesduringthatspan onaveragewehavetowait foronlyhalfarotation butstill thedifferenceinaccesstimesforsiliconmemory comparedwithdisksisenormous movingthearmsalsotakessometime asof thiswriting averageaccesstimesforcommoditydisksareintherangeof milliseconds inordertoamortizethetimespentwaitingformechanicalmovements disksaccessnotjustoneitembutseveralatatime informationisdividedintoanumber ofequal sizedpagesofbitsthatappearconsecutivelywithintracks andeachdiskreadorwriteisofoneormoreentirepages foratypicaldisk apagemightbe bytesinlength oncetheread writeheadispositionedcorrectlyandthediskhasrotatedtothebeginningofthedesiredpage readingorwritingamagneticdisk isentirelyelectronic asidefromtherotationofthedisk andthediskcanquickly readorwritelargeamountsofdata accessingapageofinformationandreadingitfromadisktakeslongerthanexaminingalltheinformationread forthisreason inthischapterweshall lookseparatelyatthetwoprincipalcomponentsoftherunningtime thenumberofdiskaccesses andthecpu computing wemeasurethenumberofdiskaccessesintermsofthenumberofpagesofinfor mationthatneedtobereadfromorwrittentothedisk wenotethatdisk access timeisnotconstant itdependsonthedistancebetweenthecurrenttrackand thedesiredtrackandalsoontheinitialrotationalpositionofthedisk weshall asofthiswriting solid statedriveshaverecentlycomeontotheconsumermarket althoughtheyarefasterthanmechanicaldiskdrives theycostmorepergigabyteandhavelowercapacitiesthanmechanicaldiskdrives chapter trees nonethelessusethenumberofpagesreadorwrittenasa rst orderapproximationofthetotaltimespentaccessingthedisk inatypicalb treeapplication theamountofdatahandledissolargethatallthedatadonot tintomainmemoryatonce theb treealgorithmscopyselected pagesfromdiskintomainmemoryasneededandwritebackontodiskthepages thathavechanged treealgorithmskeeponlyaconstantnumberofpagesin mainmemoryatanytime thesizeofmainmemorydoesnotlimitthesizeof treesthatcanbehandled wemodeldiskoperationsinourpseudocodeasfollows letxbeapointertoanobject iftheobjectiscurrentlyinthecomputer smainmemory thenwecanrefer totheattributesoftheobjectasusual forexample iftheobjectreferredtobyxresidesondisk however thenwemustperformtheoperationdisk toreadobjectxintomainmemorybeforewecanrefertoitsattributes weas sumethatifxisalreadyinmainmemory thendisk requiresnodiskaccesses itisa similarly theoperationdisk isusedtosaveanychangesthathavebeenmadetotheattributesofobjectx thatis thetypicalpatternforworkingwithanobjectisasfollows xdapointertosomeobjectdisk operationsthataccessand ormodifytheattributesofxdisk omittedifnoattributesofxwerechangedotheroperationsthataccessbutdonotmodifyattributesofxthesystemcankeeponlyalimitednumberofpagesinmainmemoryatanyonetime weshallassumethatthesystem ushesfrommainmemorypagesnolonger inuse ourb treealgorithmswillignorethisissue sinceinmostsystemstherunningtimeofab treealgorithmdependsprimar ilyonthenumberofdisk readanddisk writeoperationsitperforms wetypicallywanteachoftheseoperationstoreadorwriteasmuchinformationas treenodeisusuallyaslargeasawholediskpage andthissize limitsthenumberofchildrenab treenodecanhave foralargeb treestoredonadisk weoftenseebranchingfactorsbetween dependingonthesizeofakeyrelativetothesizeofapage alargebranchingfactordramaticallyreducesboththeheightofthetreeandthenumberofdiskaccessesrequiredto ndanykey showsab treewithabranching factorof andheight thatcanstoreoveronebillionkeys nevertheless sincewecankeeptherootnodepermanentlyinmainmemory wecan ndanykeyin thistreebymakingatmostonlytwodiskaccesses chapter trees node keys nodes keys nodes keys rootfigure treeofheight containingoveronebillionkeys showninsideeachnodexisx thenumberofkeysinx eachinternalnodeandleafcontains keys thisb treehas nodesatdepth andoveronemillionleavesatdepth nitionofb treestokeepthingssimple weassume aswehaveforbinarysearchtreesandred blacktrees thatany satelliteinformation associatedwithakeyresidesinthesame nodeasthekey inpractice onemightactuallystorewitheachkeyjustapointerto anotherdiskpagecontainingthesatelliteinformationforthatkey thepseudocode inthischapterimplicitlyassumesthatthesatelliteinformationassociatedwitha orthepointertosuchsatelliteinformation travelswiththekeywheneverthekeyismovedfromnodetonode acommonvariantonab knownasabc storesallthesatelliteinformationintheleavesandstoresonlykeysandchildpointersintheinternalnodes thusmaximizingthebranchingfactoroftheinternalnodes treetisarootedtree whoserootist havingthefollowingproper ties everynodexhasthefollowingattributes thenumberofkeyscurrentlystoredinnodex thex nkeysthemselves keyx storedinnondecreas ingorder sothatx keyx leaf abooleanvaluethatistrueifxisaleafandfalseifxisaninternalnode eachinternalnodexalsocontainsx pointersx toitschildren leafnodeshavenochildren andsotheirciattributesareunde ned nitionofb trees thekeysx keyiseparatetherangesofkeysstoredineachsubtree ifkiisanykeystoredinthesubtreewithrootx thenk keyx nkx allleaveshavethesamedepth whichisthetree sheighth nodeshavelowerandupperboundsonthenumberofkeystheycancontain weexpresstheseboundsintermsofa xedintegert calledtheminimumdegreeoftheb everynodeotherthantherootmusthaveatleastt keys everyinternalnodeotherthantherootthushasatleasttchildren ifthetreeisnonempty therootmusthaveatleastonekey everynodemaycontainatmost keys therefore aninternalnodemayhaveatmost tchildren wesaythatanodeisfullifitcontainsexactly keys thesimplestb treeoccurswhentd everyinternalnodethenhaseither andwehavea inpractice however muchlargervaluesoftyieldb treeswithsmallerheight theheightofab treethenumberofdiskaccessesrequiredformostoperationsonab treeispropor tionaltotheheightoftheb wenowanalyzetheworst caseheightofab theorem ifn thenforanyn keyb treetofheighthandminimumdegreet hlogtnc prooftherootofab treetcontainsatleastonekey andallothernodescontainatleastt keys whoseheightish hasatleast nodesatdepth atleast tnodesatdepth atleast nodesatdepth andsoon untilatdepthhithasatleast nodes illustratessuchatreeforhd anothercommonvariantonab knownasab requireseachinternalnodetobeatleast ratherthanatleasthalffull asab treerequires chapter treest tdepthnumberof nodes rootfigure treeofheight containingaminimumpossiblenumberofkeys showninsideeachnodexisx numbernofkeyssatis estheinequalityn hxid bysimplealgebra wegetth takingbase tlogarithmsofbothsidesprovesthetheorem hereweseethepowerofb trees ascomparedwithred blacktrees althoughtheheightofthetreegrowsaso lgn inbothcases recallthattisaconstant forb treesthebaseofthelogarithmcanbemanytimeslarger treessavea factorofaboutlgtoverred blacktreesinthenumberofnodesexaminedformosttreeoperations becauseweusuallyhavetoaccessthedisktoexamineanarbitrarynodeinatree treesavoidasubstantialnumberofdiskaccesses exercises whydon tweallowaminimumdegreeoftd forwhatvaluesoftisthetreeoffigure alegalb basicoperationsonb trees showalllegalb treesofminimumdegree thatrepresentf asafunctionoftheminimumdegreet whatisthemaximumnumberofkeysthatcanbestoredinab treeofheighth describethedatastructurethatwouldresultifeachblacknodeinared blacktree weretoabsorbitsredchildren incorporatingtheirchildrenwithitsown basicoperationsonb treesinthissection wepresentthedetailsoftheoperationsb andb insert intheseprocedures weadopttwocon ventions therootoftheb treeisalwaysinmainmemory sothatweneverneedto performadisk readontheroot wedohavetoperformadisk writeoftheroot however whenevertherootnodeischanged anynodesthatarepassedasparametersmustalreadyhavehadadisk readoperationperformedonthem theprocedureswepresentareall algorithmsthatproceeddownwardfromtherootofthetree withouthavingtobackup searchingab treesearchingab treeismuchlikesearchingabinarysearchtree exceptthatinsteadofmakingabinary branchingdecisionateachnode wemakea multiwaybranchingdecisionaccordingtothenumberofthenode schildren moreprecisely ateachinternalnodex wemakean waybranchingdecision searchisastraightforwardgeneralizationofthetree searchpro cedurede nedforbinarysearchtrees searchtakesasinputapointertotherootnodexofasubtreeandakeyktobesearchedforinthatsubtree thetop levelcallisthusoftheformb ifkisintheb searchreturnstheorderedpair consistingofanodeyandanindexisuchthaty keyidk otherwise theprocedurereturnsnil chapter treesb whileix nandk keyi idic ifix nandk keyi return elseifx leaf returnnil elsedisk returnb usingalinear searchprocedure lines ndthesmallestindexisuchthatkx keyi orelsetheysetitox lines checktoseewhetherwehavenowdiscoveredthekey returningifwehave otherwise lines eitherter minatethesearchunsuccessfully ifxisaleaf orrecursetosearchtheappropriatesubtreeofx afterperformingthenecessarydisk readonthatchild illustratestheoperationofb theprocedureexam inesthelightlyshadednodesduringasearchforthekeyr asinthetree searchprocedureforbinarysearchtrees thenodesencoun teredduringtherecursionformasimplepathdownwardfromtherootofthetree theb searchprocedurethereforeaccesseso logtn diskpages wherehistheheightoftheb treeandnisthenumberofkeysintheb sincex thewhileloopoflines takeso timewithineachnode andthetotalcputimeiso tlogtn creatinganemptyb treetobuildab treet rstuseb createtocreateanemptyrootnodeandthencallb inserttoaddnewkeys bothoftheseproceduresuseanauxiliaryprocedureallocate node whichallocatesonediskpagetobeusedasanewnodeino wecanassumethatanodecreatedbyallocate noderequiresnodisk sincethereisasyetnousefulinformationstoredonthediskforthatnode xdallocate node leafdtrue disk rootdxb createrequireso diskoperationsando cputime basicoperationsonb trees insertingakeyintoab treeinsertingakeyintoab treeissigni cantlymorecomplicatedthaninsertingakeyintoabinarysearchtree aswithbinarysearchtrees wesearchfortheleafposition atwhichtoinsertthenewkey withab however wecannotsimplycreate anewleafnodeandinsertit astheresultingtreewouldfailtobeavalidb instead weinsertthenewkeyintoanexistingleafnode sincewecannotinserta keyintoaleafnodethatisfull weintroduceanoperationthatsplitsafullnodey having keys arounditsmediankeyy keytintotwonodeshavingonlyt keyseach themediankeymovesupintoy sparenttoidentifythedividingpointbetweenthetwonewtrees butify sparentisalsofull wemustsplititbeforewecaninsertthenewkey andthuswecouldendupsplittingfullnodesallthewayup thetree aswithabinarysearchtree wecaninsertakeyintoab treeinasinglepassdownthetreefromtheroottoaleaf todoso wedonotwaitto ndoutwhetherwewillactuallyneedtosplitafullnodeinordertodotheinsertion instead aswetraveldownthetreesearchingforthepositionwherethenewkeybelongs wesplit eachfullnodewecometoalongtheway includingtheleafitself thuswhenever wewanttosplitafullnodey weareassuredthatitsparentisnotfull splittinganodeinab treetheprocedureb split childtakesasinputanonfullinternalnodex sumedtobeinmainmemory andanindexisuchthatx alsoassumedtobeinmainmemory isafullchildofx theprocedurethensplitsthischildintwoandadjustsxsothatithasanadditionalchild tosplitafullroot wewill rstmaketherootachildofanewemptyrootnode sothatwecanuseb split thetreethusgrowsinheightbyone splittingistheonlymeansbywhichthetreegrows illustratesthisprocess wesplitthefullnodeydx ciaboutitsmediankeys whichmovesupintoy sparentnodex thosekeysinythataregreaterthanthemediankeymoveintoanewnode whichbecomesanewchildofx chapter treesrstqpuvnw rqptuvnws xxt ydx ciydx cic keyi keyi keyix keyix keyic splittinganodewithtd nodeydx cisplitsintotwonodes yand andthemediankeysofymovesupintoy sparent split dallocate node ydx leafdy leaf ndt forjd tot keyjdy keyjct ifnoty leaf forjd tot cjdy cjct ndt forjdx downtoic cjc cic forjdx ndowntoi keyjc keyj keyidy keyt ndx disk disk disk split childworksbystraightforward cuttingandpasting xisthenodebeingsplit andyisx sithchild setinline nodeyoriginallyhas tchildren keys butisreducedtotchildren keys bythisoperation node takesthetlargestchildren keys fromy becomesanewchild basicoperationsonb trees ofx positionedjustafteryinx stableofchildren themediankeyofymovesuptobecomethekeyinxthatseparatesyand lines createnode andgiveitthelargestt keysandcorrespondingtchildrenofy adjuststhekeycountfory finally lines insert asachildofx movethemediankeyfromyuptoxinordertoseparateyfrom andadjustx skeycount lines writeoutallmodi eddiskpages thecputimeusedbyb split childis duetotheloopsonlines theotherloopsrunforo iterations theprocedureperformso diskoperations insertingakeyintoab treeinasinglepassdownthetreeweinsertakeykintoab treetofheighthinasinglepassdownthetree quiringo diskaccesses thecputimerequirediso tlogtn theb insertprocedureusesb split childtoguaranteethatthere cursionneverdescendstoafullnode insert rdt ifr sdallocate node rootds leafdfalse split insert nonfull elseb insert nonfull lines handlethecaseinwhichtherootnoderisfull therootsplitsandanewnodes havingtwochildren becomestheroot splittingtherootistheonlywaytoincreasetheheightofab illustratesthiscase unlikea binarysearchtree treeincreasesinheightatthetopinsteadofatthebottom theprocedure nishesbycallingb insert nonfulltoinsertkeykintothetreerootedatthenonfullrootnode insert nonfullrecursesasnecessarydownthetree atalltimesguaranteeingthatthenodetowhichitrecurses isnotfullbycallingb split childasnecessary theauxiliaryrecursiveprocedureb insert nonfullinsertskeykintonodex whichisassumedtobenonfullwhentheprocedureiscalled theoperationofb insertandtherecursiveoperationofb insert nonfullguaranteethatthisassumptionistrue chapter treest fhldanpfdalnpshrrt roott rootfigure splittingtherootwithtd rootnodersplitsintwo andanewrootnodesiscreated thenewrootcontainsthemediankeyofrandhasthetwohalvesofraschildren theb treegrowsinheightbyonewhentherootissplit insert nonfull idx ifx leaf whilei andk keyi keyic keyi idi keyic ndx disk elsewhilei andk keyi idi idic disk ifx split ifk keyi idic insert nonfull theb insert nonfullprocedureworksasfollows lines handlethecaseinwhichxisaleafnodebyinsertingkeykintox ifxisnotaleafnode thenwemustinsertkintotheappropriateleafnodeinthesubtreerootedatinternalnodex inthiscase lines determinethechildofxtowhichtherecursiondescends detectswhethertherecursionwoulddescendtoafull inwhichcaseline usesb split childtosplitthatchildintotwononfullchildren andlines determinewhichofthetwochildrenisnowthe basicoperationsonb trees correctonetodescendto notethatthereisnoneedforadisk afterline incrementsi sincetherecursionwilldescendinthiscasetoachildthatwasjustcreatedbyb split theneteffectoflines isthustoguaranteethattheprocedureneverrecursestoafullnode thenrecurses toinsertkintotheappropriatesubtree illustratesthevariouscasesofinsertingintoab forab treeofheighth insertperformso diskaccesses sinceonlyo disk readanddisk writeoperationsoccurbetweencallstob insert nonfull thetotalcputimeusediso tlogtn sinceb insert nonfullistail recursive wecanalternativelyimple mentitasawhileloop therebydemonstratingthatthenumberofpagesthatneedtobeinmainmemoryatanytimeiso exercises showtheresultsofinsertingthekeysf inorderintoanemptyb treewithminimumdegree drawonlythecon gura tionsofthetreejustbeforesomenodemustsplit andalsodrawthe nalcon ration explainunderwhatcircumstances ifany redundantdisk readordisk writeoperationsoccurduringthecourseofexecutingacalltob insert aredundantdisk readisadisk readforapagethatisalreadyinmemory aredundantdisk writewritestodiskapageofinformationthatisidenticaltowhatisalreadystoredthere explainhowto ndtheminimumkeystoredinab treeandhowto ndtheprede cessorofagivenkeystoredinab supposethatweinsertthekeysf ngintoanemptyb treewithminimumdegree howmanynodesdoesthe nalb treehave sinceleafnodesrequirenopointerstochildren theycouldconceivablyuseadif ferent larger tvaluethaninternalnodesforthesamediskpagesize showhowtomodifytheproceduresforcreatingandinsertingintoab treetohandlethisvariation chapter treesjknorstdecauvyzpxmg jknorstdebauvyzpxmg cjknodebauvyzpxmg crsqtjknodebauvyzmg crsqlpxtjknodebauvyzmg crsqlpxtfq insertedl insertedf insertedinitial treeb insertedfigure insertingkeysintoab theminimumdegreetforthisb treeis soanodecanholdatmost keys nodesthataremodi edbytheinsertionprocessarelightlyshaded theinitialtreeforthisexample theresultofinsertingbintotheinitialtree thisisasimpleinsertionintoaleafnode theresultofinsertingqintotheprevioustree thenoderstuvsplitsintotwonodescontainingrsanduv thekeytmovesuptotheroot andqisinsertedintheleftmostofthetwohalves thersnode theresultofinsertinglintotheprevioustree therootsplitsrightaway sinceitisfull andtheb treegrowsinheightbyone thenlisinsertedintotheleafcontainingjk theresultofinsertingfintotheprevioustree thenodeabcdesplitsbeforefisinsertedintotherightmostofthetwohalves thedenode deletingakeyfromab supposethatweweretoimplementb searchtousebinarysearchratherthanlinearsearchwithineachnode showthatthischangemakesthecputime requiredo lgn independentlyofhowtmightbechosenasafunctionofn supposethatdiskhardwareallowsustochoosethesizeofadiskpagearbitrarily butthatthetimeittakestoreadthediskpageisacbt whereaandbarespeci edconstantsandtistheminimumdegreeforab treeusingpagesoftheselectedsize describehowtochoosetsoastominimize approximately theb treesearchtime suggestanoptimalvalueoftforthecaseinwhichad millisecondsandbd microseconds deletingakeyfromab treedeletionfromab treeisanalogoustoinsertionbutalittlemorecomplicated causewecandeleteakeyfromanynode notjustaleaf andwhenwedeleteakeyfromaninternalnode wewillhavetorearrangethenode schildren asininsertion wemustguardagainstdeletionproducingatreewhosestructureviolates theb treeproperties justaswehadtoensurethatanodedidn tgettoobigdueto insertion wemustensurethatanodedoesn tgettoosmallduringdeletion thattherootisallowedtohavefewerthantheminimumnumbert ofkeys justasasimpleinsertionalgorithmmighthavetobackupifanodeonthepath towherethekeywastobeinsertedwasfull asimpleapproachtodeletionmight havetobackupifanode otherthantheroot alongthepathtowherethekeyisto bedeletedhastheminimumnumberofkeys theprocedureb deletedeletesthekeykfromthesubtreerootedatx wedesignthisproceduretoguaranteethatwheneveritcallsitselfrecursivelyona nodex thenumberofkeysinxisatleasttheminimumdegreet notethatthisconditionrequiresonemorekeythantheminimumrequiredbytheusualb treeconditions sothatsometimesakeymayhavetobemovedintoachildnodebeforerecursiondescendstothatchild thisstrengthenedconditionallowsustodeleteakeyfromthetreeinonedownwardpasswithouthavingto backup withoneex ception whichwe llexplain youshouldinterpretthefollowingspeci cationfordeletionfromab treewiththeunderstandingthatiftherootnodexeverbecomesaninternalnodehavingnokeys thissituationcanoccurincases cand bonpages thenwedeletex andx sonlychildx becomesthenewrootofthetree decreasingtheheightofthetreebyoneandpreservingthepropertythat therootofthetreecontainsatleastonekey unlessthetreeisempty chapter treesjknodebauvyzmg crsqlpxtfinitial treejknodebauvyzmg crsqlpxtf deleted jknodebauvyzg crsqlpxtm deleted ajknodebauvyz crsqlpxtg deleted cfigure deletingkeysfromab theminimumdegreeforthisb treeistd soanode otherthantheroot cannothavefewerthan keys nodesthataremodi edarelightlyshaded theb treeoffigure deletionoff thisiscase simpledeletionfromaleaf deletionofm thisiscase thepredecessorlofmmovesuptotakem sposition dele tionofg thisiscase wepushgdowntomakenodedegjkandthendeletegfromthisleaf wesketchhowdeletionworksinsteadofpresentingthepseudocode illustratesthevariouscasesofdeletingkeysfromab ifthekeykisinnodexandxisaleaf deletethekeykfromx ifthekeykisinnodexandxisaninternalnode dothefollowing deletingakeyfromab jknoebauvyz crsqlpxtd deleted bjknoebauvyzcrsqlpxtjknoauvyzcrsqlpxt deleted shrinksin heightfigure continued deletionofd thisiscase therecursioncannotdescendtonodeclbecauseithasonly keys sowepushpdownandmergeitwithclandtxtoformclptx thenwedeletedfromaleaf wedeletetherootandthetreeshrinksinheightbyone deletionofb thisiscase cmovesto llb spositionandemovesto llc sposition ifthechildythatprecedeskinnodexhasatleasttkeys ndthepredecessork ofkinthesubtreerootedaty recursivelydeletek andreplacekbyk inx wecan ndk anddeleteitinasingledownwardpass ifyhasfewerthantkeys symmetrically examinethechild thatfollowskinnodex hasatleasttkeys ndthesuccessork ofkinthesubtreerootedat recursivelydeletek andreplacekbyk inx wecan ndk anddeleteitinasingledownwardpass otherwise ifbothyand haveonlyt keys mergekandallof intoy sothatxlosesbothkandthepointerto andynowcontains keys thenfree andrecursivelydeletekfromy ifthekeykisnotpresentininternalnodex determinetherootx cioftheappropriatesubtreethatmustcontaink ifkisinthetreeatall ifx cihasonlyt keys executestep aor basnecessarytoguaranteethatwedescendtoanodecontainingatleasttkeys nishbyrecursingontheappropriatechildofx chapter treesa ifx cihasonlyt keysbuthasanimmediatesiblingwithatleasttkeys givex cianextrakeybymovingakeyfromxdownintox movingakeyfromx simmediateleftorrightsiblingupintox andmovingtheappropriatechildpointerfromthesiblingintox ifx ciandbothofx simmediatesiblingshavet keys mergex ciwithonesibling whichinvolvesmovingakeyfromxdownintothenewmergednodetobecomethemediankeyforthatnode sincemostofthekeysinab treeareintheleaves wemayexpectthatinpractice deletionoperationsaremostoftenusedtodeletekeysfromleaves theb deleteprocedurethenactsinonedownwardpassthroughthetree withouthavingtobackup whendeletingakeyinaninternalnode however theproceduremakesadownwardpassthroughthetreebutmayhavetoreturnto thenodefromwhichthekeywasdeletedtoreplacethekeywithitspredecessoror successor cases aand althoughthisprocedureseemscomplicated itinvolvesonlyo diskoper ationsforab treeofheighth sinceonlyo callstodisk readanddisk writearemadebetweenrecursiveinvocationsoftheprocedure thecputimerequirediso tlogtn exercises showtheresultsofdeletingc andv inorder fromthetreeoffigure writepseudocodeforb delete problems stacksonsecondarystorageconsiderimplementingastackinacomputerthathasarelativelysmallamount offastprimarymemoryandarelativelylargeamountofslowerdiskstorage operationspushandpopworkonsingle wordvalues thestackwewishtosupportcangrowtobemuchlargerthancan tinmemory andthusmostofitmustbestoredondisk asimple butinef cient stackimplementationkeepstheentirestackondisk wemaintaininmemoryastackpointer whichisthediskaddressofthetopelement onthestack ifthepointerhasvaluep thetopelementisthe pmodm thwordonpagebp mcofthedisk wheremisthenumberofwordsperpage problemsforchapter toimplementthepushoperation weincrementthestackpointer readtheap propriatepageintomemoryfromdisk copytheelementtobepushedtotheap propriatewordonthepage andwritethepagebacktodisk apopoperationissimilar wedecrementthestackpointer readintheappropriatepagefromdisk andreturnthetopofthestack weneednotwritebackthepage sinceitwasnot modi becausediskoperationsarerelativelyexpensive wecounttwocostsforanyimplementation thetotalnumberofdiskaccessesandthetotalcputime anydiskaccesstoapageofmwordsincurschargesofonediskaccessand cputime asymptotically whatistheworst casenumberofdiskaccessesfornstackoperationsusingthissimpleimplementation whatisthecputimefornstackoperations expressyouranswerintermsofmandnforthisandsubsequentparts nowconsiderastackimplementationinwhichwekeeponepageofthestackinmemory wealsomaintainasmallamountofmemorytokeeptrackofwhichpage iscurrentlyinmemory wecanperformastackoperationonlyiftherelevantdisk pageresidesinmemory ifnecessary wecanwritethepagecurrentlyinmemory tothediskandreadinthenewpagefromthedisktomemory iftherelevantdisk pageisalreadyinmemory thennodiskaccessesarerequired whatistheworst casenumberofdiskaccessesrequiredfornpushopera tions whatisthecputime whatistheworst casenumberofdiskaccessesrequiredfornstackoperations whatisthecputime supposethatwenowimplementthestackbykeepingtwopagesinmemory inadditiontoasmallnumberofwordsforbookkeeping describehowtomanagethestackpagessothattheamortizednumberofdiskaccessesforanystackoperationiso andtheamortizedcputimeforanystackoperationiso joiningandsplitting treesthejoinoperationtakestwodynamicsetss ands andanelementxsuchthatforanyx andx wehavex itreturnsasetsds fxg thesplitoperationislikean inverse givenadynamicsetsandanelementx itcreatesasets thatconsistsofallelementsinsfxgwhosekeysarelessthanx keyandasets thatconsistsofallelementsinsfxgwhosekeysaregreaterthanx inthisproblem weinvestigate chapter treeshowtoimplementtheseoperationson trees weassumeforconveniencethatelementsconsistonlyofkeysandthatallkeyvaluesaredistinct showhowtomaintain foreverynodexofa theheightofthesubtreerootedatxasanattributex height makesurethatyourimplementationdoesnotaffecttheasymptoticrunningtimesofsearching insertion anddeletion showhowtoimplementthejoinoperation giventwo treest andt andakeyk thejoinoperationshouldrunino cjh whereh andh aretheheightsoft andt respectively considerthesimplepathpfromtherootofa treettoagivenkeyk thesets ofkeysintthatarelessthank andthesets ofkeysintthataregreaterthank showthatpbreakss intoasetoftreesft mgandasetofkeysfk forid wehavey foranykeysy whatistherelationshipbetweentheheightsoft andt describehowpbreakss intosetsoftreesandkeys showhowtoimplementthesplitoperationont usethejoinoperationtoassemblethekeysins intoasingle treet andthekeysins intoasingle treet therunningtimeofthesplitoperationshouldbeo lgn wherenisthenumberofkeysint hint thecostsforjoiningshouldtele scope chapternotesknuth aho hopcroft andullman andsedgewick givefurther discussionsofbalanced treeschemesandb trees comer providesacompre hensivesurveyofb trees guibasandsedgewick discusstherelationships amongvariouskindsofbalanced treeschemes includingred blacktreesand trees hopcroftinvented trees aprecursortob treesand trees inwhicheveryinternalnodehaseithertwoorthreechildren bayerand mccreight introducedb treesin theydidnotexplaintheirchoiceof bender demaine andfarach colton studiedhowtomakeb treesperformwellinthepresenceofmemory hierarchyeffects theircache obliviousalgo rithmsworkef cientlywithoutexplicitlyknowingthedatatransfersizeswithinthememoryhierarchy fibonacciheapsthefibonacciheapdatastructureservesadualpurpose itsupportsasetofoperationsthatconstituteswhatisknownasa mergeableheap fibonacci heapoperationsruninconstantamortizedtime whichmakesthisdata structurewellsuitedforapplicationsthatinvoketheseoperationsfrequently mergeableheapsamergeableheapisanydatastructurethatsupportsthefollowing veoperations inwhicheachelementhasakey heap createsandreturnsanewheapcontainingnoelements insert insertselementx whosekeyhasalreadybeen lledin intoheaph minimum returnsapointertotheelementinheaphwhosekeyisminimum extract min deletestheelementfromheaphwhosekeyisminimum turningapointertotheelement union createsandreturnsanewheapthatcontainsalltheelementsofheapsh andh heapsh andh destroyed bythisoperation inadditiontothemergeable heapoperationsabove fibonacciheapsalsosupportthefollowingtwooperations decrease assignstoelementxwithinheaphthenewkeyvaluek whichweassumetobenogreaterthanitscurrentkeyvalue delete deleteselementxfromheaph asmentionedintheintroductiontopartv ourdefaultmergeableheapsaremergeablemin heaps andsotheoperationsminimum extract min anddecrease keyapply alterna tively wecouldde neamergeablemax heapwiththeoperationsmaximum extract max andincrease chapter fibonacciheapsbinaryheapfibonacciheapprocedure worst amortized heap insert lgn minimum extract min lgn lgn union decrease lgn delete lgn lgn runningtimesforoperationsontwoimplementationsofmergeableheaps thenum berofitemsintheheap atthetimeofanoperationisdenotedbyn asthetableinfigure shows ifwedon tneedtheunionoperation ordi narybinaryheaps asusedinheapsort chapter workfairlywell operations otherthanunionruninworst casetimeo lgn onabinaryheap ifweneedtosupporttheunionoperation however binaryheapsperformpoorly bycon catenatingthetwoarraysthatholdthebinaryheapstobemergedandthenrunningbuild min heap seesection theunionoperationtakes timeintheworstcase fibonacciheaps ontheotherhand havebetterasymptotictimeboundsthanbinaryheapsfortheinsert union anddecrease keyoperations andtheyhavethesameasymptoticrunningtimesfortheremainingoperations thattherunningtimesforfibonacciheapsinfigure areamortizedtime bounds notworst caseper operationtimebounds theunionoperationtakesonlyconstantamortizedtimeinafibonacciheap whichissigni cantlybetter thanthelinearworst casetimerequiredinabinaryheap assuming ofcourse anamortizedtimeboundsuf ces fibonacciheapsintheoryandpracticefromatheoreticalstandpoint fibonacciheapsareespeciallydesirablewhenthenumberofextract minanddeleteoperationsissmallrelativetothenumberofotheroperationsperformed thissituationarisesinmanyapplications forexample somealgorithmsforgraphproblemsmaycalldecrease keyonceperedge fordensegraphs whichhavemanyedges amortizedtimeofeachcallofdecrease keyaddsuptoabigimprovementoverthe lgn worst casetimeofbinaryheaps fastalgorithmsforproblemssuchascomputingminimumspanningtrees chapter ndingsingle sourceshortestpaths chapter makeessentialuseoffibonacciheaps structureoffibonacciheaps fromapracticalpointofview however theconstantfactorsandprogram mingcomplexityoffibonacciheapsmakethemlessdesirablethanordinarybinary ork ary heapsformostapplications exceptforcertainapplicationsthatmanagelargeamountsofdata fibonacciheapsarepredominantlyoftheoreticalin terest ifamuchsimplerdatastructurewiththesameamortizedtimeboundsas fibonacciheapsweredeveloped itwouldbeofpracticaluseaswell bothbinaryheapsandfibonacciheapsareinef cientinhowtheysupporttheoperationsearch itcantakeawhileto ndanelementwithagivenkey forthisreason operationssuchasdecrease keyanddeletethatrefertoagivenele mentrequireapointertothatelementaspartoftheirinput asinourdiscussionof priorityqueuesinsection whenweuseamergeableheapinanapplication oftenstoreahandletothecorrespondingapplicationobjectineachmergeable heap aswellasahandletothecorrespondingmergeable heapelementineach applicationobject theexactnatureofthesehandlesdependsontheapplication anditsimplementation likeseveralotherdatastructuresthatwehaveseen fibonacciheapsarebasedonrootedtrees werepresenteachelementbyanodewithinatree andeachnodehasakeyattribute fortheremainderofthischapter weshallusetheterm node insteadof weshallalsoignoreissuesofallocatingnodesprior toinsertionandfreeingnodesfollowingdeletion assuminginsteadthatthecode callingtheheapproceduresdealswiththesedetails nesfibonacciheaps discusseshowwerepresentthem andpresentsthepotentialfunctionusedfortheiramortizedanalysis showshowtoimplementthemergeable heapoperationsandachievetheamortized timeboundsshowninfigure theremainingtwooperations decrease keyanddelete formthefocusofsection finally nishesakeypartoftheanalysisandalsoexplainsthecuriousnameofthedatastructure structureoffibonacciheapsafibonacciheapisacollectionofrootedtreesthataremin heapordered thatis eachtreeobeysthemin heapproperty thekeyofanodeisgreaterthanorequaltothekeyofitsparent showsanexampleofafibonacciheap asfigure shows eachnodexcontainsapointerx ptoitsparentandapointerx childtoanyoneofitschildren thechildrenofxarelinkedtogetherinacircular doublylinkedlist whichwecallthechildlistofx eachchildyinachildlisthaspointersy leftandy rightthatpointtoy sleftandrightsiblings respectively ifnodeyisanonlychild theny leftdy rightdy siblingsmayappearinachildlistinanyorder chapter fibonacciheaps minh minfigure afibonacciheapconsistingof vemin heap orderedtreesand nodes thedashedlineindicatestherootlist theminimumnodeoftheheapisthenodecontainingthekey blacknodesaremarked thepotentialofthisparticularfibonacciheapis amorecompleterepresentationshowingpointersp uparrows downarrows andleftandright sidewaysarrows theremaining guresinthischapteromitthesedetails sincealltheinformationshownherecanbedeterminedfromwhatappearsinpart circular doublylinkedlists seesection havetwoadvantagesforuseinfibonacciheaps wecaninsertanodeintoanylocationorremoveanodefromanywhereinacircular doublylinkedlistino giventwosuchlists wecanconcatenatethem splice themtogether intoonecircular doublylinkedlistino inthedescriptionsoffibonacciheapoperations weshallrefertotheseoperationsinformally lettingyou llinthedetailsoftheir implementationsifyouwish eachnodehastwootherattributes westorethenumberofchildreninthechildlistofnodexinx theboolean valuedattributex markindicateswhethernodexhaslostachildsincethelasttimexwasmadethechildofanothernode newlycreatednodesareunmarked andanodexbecomesunmarkedwheneveritismadethechildofanothernode untilwelookatthedecrease keyoperationinsection wewilljustsetallmarkattributestofalse weaccessagivenfibonacciheaphbyapointerh mintotherootofatreecontainingtheminimumkey wecallthisnodetheminimumnodeofthefibonacci structureoffibonacciheaps heap ifmorethanoneroothasakeywiththeminimumvalue thenanysuchrootmayserveastheminimumnode whenafibonacciheaphisempty minisnil therootsofallthetreesinafibonacciheaparelinkedtogetherusingtheirleftandrightpointersintoacircular doublylinkedlistcalledtherootlistofthefibonacciheap thepointerh minthuspointstothenodeintherootlistwhosekeyisminimum treesmayappearinanyorderwithinarootlist werelyononeotherattributeforafibonacciheaph thenumberofnodescurrentlyinh potentialfunctionasmentioned weshallusethepotentialmethodofsection toanalyzetheperformanceoffibonacciheapoperations foragivenfibonacciheaph weindicatebyt thenumberoftreesintherootlistofhandbym thenumberofmarkednodesinh wethende nethepotential offibonacciheaphby wewillgainsomeintuitionforthispotentialfunctioninsection forexam ple thepotentialofthefibonacciheapshowninfigure thepotentialofasetoffibonacciheapsisthesumofthepotentialsofitsconstituent fibonacciheaps weshallassumethataunitofpotentialcanpayforaconstant amountofwork wheretheconstantissuf cientlylargetocoverthecostofanyof thespeci cconstant timepiecesofworkthatwemightencounter weassumethatafibonacciheapapplicationbeginswithnoheaps theinitialpotential therefore andbyequation thepotentialisnonnegativeatallsubsequenttimes fromequation anupperboundonthetotalamortized costprovidesanupperboundonthetotalactualcostforthesequenceofoperations maximumdegreetheamortizedanalysesweshallperformintheremainingsectionsofthischapterassumethatweknowanupperboundd onthemaximumdegreeofanynodeinann nodefibonacciheap wewon tproveit butwhenonlythemergeable heapoperationsaresupported blgnc asksyoutoprovethisproperty insections weshallshowthatwhenwesupportdecrease keyanddeleteaswell lgn chapter fibonacciheaps mergeable heapoperationsthemergeable heapoperationsonfibonacciheapsdelayworkaslongaspossible thevariousoperationshaveperformancetrade offs forexample weinsertanode byaddingittotherootlist whichtakesjustconstanttime ifweweretostart withanemptyfibonacciheapandtheninsertknodes thefibonacciheapwouldconsistofjustarootlistofknodes thetrade offisthatifwethenperformanextract minoperationonfibonacciheaph afterremovingthenodethath minpointsto wewouldhavetolookthrougheachoftheremainingk nodesintherootlistto ndthenewminimumnode aslongaswehavetogothrough theentirerootlistduringtheextract minoperation wealsoconsolidatenodesintomin heap orderedtreestoreducethesizeoftherootlist weshallseethat matterwhattherootlistlookslikebeforeaextract minoperation afterwardeachnodeintherootlisthasadegreethatisuniquewithintherootlist whichleads toarootlistofsizeatmostd creatinganewfibonacciheaptomakeanemptyfibonacciheap themake fib heapprocedureallocatesandreturnsthefibonacciheapobjecth whereh andh mindnil therearenotreesinh becauset andm thepotentialoftheemptyfibonacciheapis theamortizedcostofmake fib heapisthusequaltoitso actualcost insertinganodethefollowingprocedureinsertsnodexintofibonacciheaph assumingthatthenodehasalreadybeenallocatedandthatx keyhasalreadybeen lledin fib heap insert degreed pdnil childdnil markdfalse ifh min nil createarootlistforhcontainingjustx mindx elseinsertxintoh srootlist ifx min mindx ndnc mergeable heapoperations minh minfigure insertinganodeintoafibonacciheap afibonacciheaph fibonacciheaphafterinsertingthenodewithkey thenodebecomesitsownmin heap orderedtreeandisthenaddedtotherootlist becomingtheleftsiblingoftheroot lines initializesomeofthestructuralattributesofnodex teststoseewhetherfibonacciheaphisempty ifitis thenlines makexbetheonlynodeinh srootlistandseth mintopointtox otherwise lines insertxintoh srootlistandupdateh minifnecessary finally incrementsh ntore ecttheadditionofthenewnode showsanodewithkey insertedintothefibonacciheapoffigure todeterminetheamortizedcostoffib heap insert lethbetheinputfi bonacciheapandh betheresultingfibonacciheap andm andtheincreaseinpotentialis sincetheactualcostiso theamortizedcostiso findingtheminimumnodetheminimumnodeofafibonacciheaphisgivenbythepointerh min sowecan ndtheminimumnodeino actualtime becausethepotentialofhdoesnotchange theamortizedcostofthisoperationisequaltoitso actualcost unitingtwofibonacciheapsthefollowingprocedureunitesfibonacciheapsh andh destroyingh andh intheprocess itsimplyconcatenatestherootlistsofh andh andthendeter minesthenewminimumnode afterward theobjectsrepresentingh andh willneverbeusedagain chapter fibonacciheapsfib heap union hdmake fib heap mindh min concatenatetherootlistofh withtherootlistofh min nil min nilandh min min mindh min ndh nch returnhlines concatenatetherootlistsofh andh intoanewrootlisth lines settheminimumnodeofh andline setsh ntothetotalnumberofnodes returnstheresultingfibonacciheaph asinthefib heap insertprocedure allrootsremainroots thechangeinpotentialis becauset andm theamortizedcostoffib heap unionisthereforeequaltoitso actualcost extractingtheminimumnodetheprocessofextractingtheminimumnodeisthemostcomplicatedoftheoper ationspresentedinthissection itisalsowherethedelayedworkofconsolidating treesintherootlist nallyoccurs thefollowingpseudocodeextractsthemini mumnode thecodeassumesforconveniencethatwhenanodeisremovedfrom alinkedlist pointersremaininginthelistareupdated butpointersintheextractednodeareleftunchanged italsocallstheauxiliaryprocedureconsolidate whichweshallseeshortly mergeable heapoperations fib heap extract min min nil foreachchildxof addxtotherootlistofh pdnil remove fromtherootlistofh mindnil elseh consolidate ndh return asfigure illustrates fib heap extract minworksby rstmakingarootoutofeachoftheminimumnode schildrenandremovingtheminimumnodefrom therootlist itthenconsolidatestherootlistbylinkingrootsofequaldegreeuntil atmostonerootremainsofeachdegree westartinline bysavingapointer totheminimumnode theprocedurereturnsthispointerattheend isnil thenfibonacciheaphisalreadyemptyandwearedone otherwise wedeletenode fromhbymakingallof schil drenrootsofhinlines puttingthemintotherootlist andremoving fromtherootlistinline isitsownrightsiblingafterline wastheonlynodeontherootlistandithadnochildren soallthatremainsistomakethefibonacciheapemptyinline beforereturning otherwise wesetthepointerh minintotherootlisttopointtoaroototherthan inthiscase srightsibling whichisnotnecessarilygoingtobethenewminimumnodewhenfib heap extract minisdone showsthefibonacciheapoffigure afterexecutingline thenextstep inwhichwereducethenumberoftreesinthefibonacciheap isconsolidatingtherootlistofh whichthecallconsolidate accomplishes consolidatingtherootlistconsistsofrepeatedlyexecutingthefollowingstepsuntil everyrootintherootlisthasadistinctdegreevalue findtworootsxandyintherootlistwiththesamedegree withoutlossofgenerality letx keyy linkytox removeyfromtherootlist andmakeyachildofxbycallingthefib heap linkprocedure thisprocedureincrementstheattributex degreeandclearsthemarkony chapter fibonacciheapsa minh minfigure theactionoffib heap extract min afibonacciheaph thesitua tionafterremovingtheminimumnode fromtherootlistandaddingitschildrentotherootlist thearrayaandthetreesaftereachofthe rstthreeiterationsoftheforloopoflines oftheprocedureconsolidate theprocedureprocessestherootlistbystartingatthenodepointedtobyh minandfollowingrightpointers eachpartshowsthevaluesofwandxattheendofaniteration thenextiterationoftheforloop withthevaluesofwandxshownattheendofeachiterationofthewhileloopoflines showsthesituationafterthe rsttimethroughthewhileloop thenodewithkey hasbeenlinkedtothenodewithkey whichxnowpointsto inpart thenodewithkey hasbeenlinkedtothenodewithkey whichxstillpointsto inpart thenodewithkey hasbeenlinkedtothenodewithkey sincenonodewaspreviouslypointedtoby attheendoftheforloopiteration issettopointtotherootoftheresultingtree mergeable heapoperations xxw xwh minfigure continued thesituationaftereachofthenextfouriterationsoftheforloop fibonacciheaphafterreconstructingtherootlistfromthearrayaanddeterminingthenewh minpointer theprocedureconsolidateusesanauxiliaryarraya ntokeeptrackofrootsaccordingtotheirdegrees ifa idy thenyiscurrentlyarootwithy degreedi ofcourse inordertoallocatethearraywehavetoknowhowtocalculatetheupperboundd onthemaximumdegree butwewillseehowtodosoinsection chapter fibonacciheapsconsolidate leta nbeanewarray forid tod idnil foreachnodewintherootlistofh xdw ddx whilea nil yda anothernodewiththesamedegreeasx ifx exchangexwithy fib heap link ddnil dddc ddx mindnil forid tod ifa nil ifh min nil createarootlistforhcontainingjusta minda elseinserta iintoh srootlist ifa ikey min minda ifib heap link removeyfromtherootlistofh makeyachildofx incrementingx markdfalseindetail theconsolidateprocedureworksasfollows lines allocateandinitializethearrayabymakingeachentrynil theforloopoflines processeseachrootwintherootlist aswelinkrootstogether wmaybelinkedtosomeothernodeandnolongerbearoot nevertheless wisalwaysinatreerootedatsomenodex whichmayormaynotbewitself becausewewantatmostonerootwitheachdegree welookinthearrayatoseewhetheritcontainsarootywiththesamedegreeasx ifitdoes thenwelinktherootsxandybutguaranteeingthatxremainsarootafterlinking thatis welinkytoxafter rstexchangingthepointerstothetworootsify skeyissmallerthanx skey afterwelinkytox thedegreeofxhasincreasedby andsowecontinuethisprocess linkingxandanotherrootwhosedegreeequalsx snewdegree untilnootherroot mergeable heapoperations thatwehaveprocessedhasthesamedegreeasx wethensettheappropriateentryofatopointtox sothatasweprocessrootslateron wehaverecordedthatxistheuniquerootofitsdegreethatwehavealreadyprocessed whenthisforloopterminates atmostonerootofeachdegreewillremain andthearrayawillpointtoeachremainingroot thewhileloopoflines repeatedlylinkstherootxofthetreecontainingnodewtoanothertreewhoseroothasthesamedegreeasx untilnootherroothasthesamedegree thiswhileloopmaintainsthefollowinginvariant atthestartofeachiterationofthewhileloop ddx weusethisloopinvariantasfollows initialization ensuresthattheloopinvariantholdsthe rsttimeweentertheloop maintenance ineachiterationofthewhileloop dpointstosomerooty becauseddx degreedy wewanttolinkxandy whicheverofxandyhasthesmallerkeybecomestheparentoftheotherasaresultofthelinkoperation andsolines exchangethepointerstoxandyifnecessary welinkytoxbythecallfib heap link inline thiscallincrementsx degreebutleavesy degreeasd nodeyisnolongeraroot andsoline removesthepointertoitinarraya becausethecalloffib heap linkincrementsthevalueofx restorestheinvariantthatddx termination werepeatthewhileloopuntila ddnil inwhichcasethereisnootherrootwiththesamedegreeasx afterthewhileloopterminates weseta dtoxinline andperformthenextiterationoftheforloop figures showthearrayaandtheresultingtreesafterthe rstthreeiterationsoftheforloopoflines inthenextiterationoftheforloop threelinksoccur theirresultsareshowninfigures figures theresultofthenextfouriterationsoftheforloop allthatremainsistocleanup oncetheforloopoflines completes emptiestherootlist andlines reconstructitfromthearraya theresultingfibonacciheapappearsinfigure afterconsolidatingtheroot fib heap extract min nishesupbydecrementingh ninline andreturningapointertothedeletednode inline wearenowreadytoshowthattheamortizedcostofextractingtheminimumnodeofann nodefibonacciheapiso lethdenotethefibonacciheapjustpriortothefib heap extract minoperation westartbyaccountingfortheactualcostofextractingtheminimumnode ano contributioncomesfromfib heap extract minprocessingat chapter fibonacciheapsmostd childrenoftheminimumnodeandfromtheworkinlines ofconsolidate itremainstoanalyzethecontributionfromtheforloopoflines inconsolidate forwhichweuseanaggregateanalysis thesizeoftherootlistuponcallingconsolidateisatmostd sinceitconsistsoftheoriginalt listnodes minustheextractedrootnode plusthechildrenoftheextractednode whichnumberatmostd withinagiveniterationoftheforloopoflines thenumberofiterationsofthewhileloopoflines dependsontherootlist butweknowthateverytimethroughthewhileloop oneoftherootsislinkedtoanother andthusthetotalnumberofiterationsofthewhileloopoveralliterationsoftheforloopisatmostthenumberofrootsintherootlist hence thetotalamountofworkperformedintheforloopisatmostproportionaltod thetotalactualworkinextractingtheminimumnodeiso thepotentialbeforeextractingtheminimumnodeist andthepotentialafterwardisatmost sinceatmostd rootsremainandnonodesbecomemarkedduringtheoperation theamortizedcostisthusatmosto sincewecanscaleuptheunitsofpotentialtodominatetheconstanthiddenino intuitively thecostofperformingeachlinkispaidforbythere ductioninpotentialduetothelink sreducingthenumberofrootsbyone weshall seeinsection thatd lgn sothattheamortizedcostofextractingtheminimumnodeiso lgn exercises showthefibonacciheapthatresultsfromcallingfib heap extract minonthefibonacciheapshowninfigure decreasingakeyanddeletinganodeinthissection weshowhowtodecreasethekeyofanodeinafibonacciheap ino amortizedtimeandhowtodeleteanynodefromann nodefibonacciheapino amortizedtime insection wewillshowthatthemaxi decreasingakeyanddeletinganode mumdegreed iso lgn whichwillimplythatfib heap extract minandfib heap deleterunino lgn amortizedtime decreasingakeyinthefollowingpseudocodefortheoperationfib heap decrease weassumeasbeforethatremovinganodefromalinkedlistdoesnotchangeanyof thestructuralattributesintheremovednode fib heap decrease ifk error newkeyisgreaterthancurrentkey keydk ydx ify nilandx cascading ifx min mindxcut removexfromthechildlistofy decrementingy addxtotherootlistofh pdnil markdfalsecascading nil ify false markdtrue elsecut cascading thefib heap decrease keyprocedureworksasfollows lines ensurethatthenewkeyisnogreaterthanthecurrentkeyofxandthenassignthenewkeytox ifxisarootorifx keyy whereyisx sparent thennostructuralchangesneedoccur sincemin heaporderhasnotbeenviolated lines testfor thiscondition ifmin heaporderhasbeenviolated manychangesmayoccur westartbycuttingxinline thecutprocedure cuts thelinkbetweenxanditsparenty makingxaroot chapter fibonacciheapsweusethemarkattributestoobtainthedesiredtimebounds theyrecordalittlepieceofthehistoryofeachnode supposethatthefollowingeventshavehappened tonodex atsometime xwasaroot thenxwaslinkedto madethechildof anothernode thentwochildrenofxwereremovedbycuts assoonasthesecondchildhasbeenlost wecutxfromitsparent makingitanewroot theattributex markistrueifsteps haveoccurredandonechildofxhasbeencut thecutprocedure therefore clearsx markinline sinceitperformsstep wecannowseewhyline offib heap linkclearsy nodeyisbeinglinkedtoanothernode andsostep isbeingperformed thenexttimeachildofyiscut markwillbesettotrue wearenotyetdone becausexmightbethesecondchildcutfromitsparentysincethetimethatywaslinkedtoanothernode therefore offib heap decrease keyattemptstoperformacascading cutoperationony ifyisaroot thenthetestinline ofcascading cutcausestheproceduretojustreturn ifyisunmarked theproceduremarksitinline sinceits rstchildhasjustbeencut andreturns ifyismarked however ithasjustlostitssecondchild yiscutinline andcascading cutcallsitselfrecursivelyinline ony sparent thecascading cutprocedurerecursesitswayupthetreeuntilit ndseitherarootoranunmarkednode onceallthecascadingcutshaveoccurred lines offib heap decrease nishupbyupdatingh minifnecessary theonlynodewhosekeychangedwasthenodexwhosekeydecreased thenewminimumnodeiseithertheoriginalminimumnodeornodex showstheexecutionoftwocallsoffib heap decrease startingwiththefibonacciheapshowninfigure rstcall shown infigure involvesnocascadingcuts thesecondcall showninfig ures invokestwocascadingcuts weshallnowshowthattheamortizedcostoffib heap decrease keyisonlyo westartbydeterminingitsactualcost thefib heap decrease keyproceduretakeso plusthetimetoperformthecascadingcuts sup posethatagiveninvocationoffib heap decrease keyresultsinccallsofcascading thecallmadefromline offib heap decrease keyfol lowedbyc recursivecallsofcascading eachcallofcascading cuttakeso timeexclusiveofrecursivecalls theactualcostoffib heap decrease includingallrecursivecalls iso wenextcomputethechangeinpotential lethdenotethefibonacciheapjustpriortothefib heap decrease keyoperation thecalltocutinline decreasingakeyanddeletinganode minh minh minh minh minfigure twocallsoffib heap decrease theinitialfibonacciheap thenodewithkey hasitskeydecreasedto thenodebecomesaroot anditsparent withkey whichhadpreviouslybeenunmarked becomesmarked thenodewithkey hasitskeydecreasedto inpart thenode nowwithkey becomesaroot itsparent withkey ismarked soacascadingcutoccurs thenodewithkey iscutfromitsparentandmadeanunmarkedrootin anothercascadingcutoccurs sincethenodewithkey ismarkedaswell thisnodeiscutfromitsparentandmadeanunmarkedrootinpart thecascadingcutsstopatthispoint sincethenodewithkey isaroot evenifthisnodewerenotaroot thecascadingcutswouldstop sinceitisunmarked showstheresultofthefib heap decrease keyoperation withh minpointingtothenewminimumnode fib heap decrease keycreatesanewtreerootedatnodexandclearsx smarkbit whichmayhavealreadybeenfalse eachcallofcascading exceptforthelastone cutsamarkednodeandclearsthemarkbit afterward fibonacciheapcontainst cctrees theoriginalt trees treesproducedbycascadingcuts andthetreerootedatx andatmostm markednodes wereunmarkedbycascadingcutsandthelastcallofcascading cutmayhavemarkedanode thechangeinpotentialisthereforeatmost chapter fibonacciheapsthus theamortizedcostoffib heap decrease keyisatmosto cdo sincewecanscaleuptheunitsofpotentialtodominatetheconstanthiddenino youcannowseewhywede nedthepotentialfunctiontoincludeatermthatistwicethenumberofmarkednodes whenamarkednodeyiscutbyacascadingcut itsmarkbitiscleared whichreducesthepotentialby oneunitofpotentialpaysforthecutandtheclearingofthemarkbit andtheotherunitcompensatesfortheunitincreaseinpotentialduetonodeybecomingaroot deletinganodethefollowingpseudocodedeletesanodefromann nodefibonacciheapino amortizedtime weassumethatthereisnokeyvalueofcurrentlyinthefibonacciheap fib heap delete fib heap decrease fib heap extract min fib heap deletemakesxbecometheminimumnodeinthefibonacciheapbygivingitauniquelysmallkeyof thefib heap extract minprocedurethenremovesnodexfromthefibonacciheap theamortizedtimeoffib heap deleteisthesumoftheo amortizedtimeoffib heap decrease keyandtheo amortizedtimeoffib heap extract min sinceweshallseeinsection thatd lgn theamortizedtimeoffib heap deleteiso lgn exercises supposethatarootxinafibonacciheapismarked explainhowxcametobeamarkedroot arguethatitdoesn tmattertotheanalysisthatxismarked eventhoughitisnotarootthatwas rstlinkedtoanothernodeandthenlostonechild justifytheo amortizedtimeoffib heap decrease keyasanaveragecostperoperationbyusingaggregateanalysis boundingthemaximumdegree boundingthemaximumdegreetoprovethattheamortizedtimeoffib heap extract minandfib heap deleteiso lgn wemustshowthattheupperboundd onthedegreeofanynodeofann nodefibonacciheapiso lgn inparticular weshallshowthatd logn whereisthegoldenratio nedinequation asd thekeytotheanalysisisasfollows foreachnodexwithinafibonacciheap nesize tobethenumberofnodes includingxitself inthesubtreerootedatx notethatxneednotbeintherootlist itcanbeanynodeatall weshallshowthatsize isexponentialinx bearinmindthatx degreeisalwaysmaintainedasanaccuratecountofthedegreeofx lemma letxbeanynodeinafibonacciheap andsupposethatx degreedk lety ykdenotethechildrenofxintheorderinwhichtheywerelinkedtox fromtheearliesttothelatest andyi degreei forid proofobviously fori wenotethatwhenyiwaslinkedtox allofy werechildrenofx andsowemusthavehadx degreei becausenodeyiislinkedtox byconsolidate onlyifx degreedyi wemusthavealsohadyi degreei atthattime sincethen nodeyihaslostatmostonechild sinceitwouldhavebeencutfromx bycascading ifithadlosttwochildren weconcludethatyi degreei nallycometothepartoftheanalysisthatexplainsthename fibonacciheaps recallfromsection thatforkd thekthfibonaccinumberisde nedbytherecurrencefkd ifkd ifkd cfk ifk thefollowinglemmagivesanotherwaytoexpressfk chapter fibonacciheapslemma forallintegersk fkc ckxid prooftheproofisbyinductiononk whenkd xid fid wenowassumetheinductivehypothesisthatfkc cpk andwehavefkc dfkcfkc dfkc xid ckxid lemma forallintegersk ndfibonaccinumbersatis esfkc prooftheproofisbyinductiononk thebasecasesareforkd andkd whenkd wehavef andwhenkd wehavef theinductivestepisfork andweassumethatfic iforid recallthatisthepositiverootofequation dxc wehavefkc dfkc cfkk bytheinductivehypothesis byequation thefollowinglemmaanditscorollarycompletetheanalysis boundingthemaximumdegree lemma letxbeanynodeinafibonacciheap andletkdx thensize fkc whered proofletskdenotetheminimumpossiblesizeofanynodeofdegreekinanyfibonacciheap trivially ands thenumberskisatmostsize becauseaddingchildrentoanodecannotdecreasethenode ssize thevalue ofskincreasesmonotonicallywithk considersomenode inanyfibonacciheap suchthat degreedkandsize dsk becausesksize wecomputealowerboundonsize bycomputingalowerboundonsk asinlemma lety ykdenotethechildrenof intheorderinwhichtheywerelinkedto toboundsk wecountonefor itselfandoneforthe rstchildy forwhichsize givingsize ckxid syi ckxid wherethelastlinefollowsfromlemma sothatyi degreei andthemonotonicityofsk sothatsyi degreesi wenowshowbyinductiononkthatskfkc forallnonnegativeintegersk thebases forkd andkd aretrivial fortheinductivestep weassumethatk andthatsific forid wehavesk ckxid ckxid fid ckxid fidfkc bylemma bylemma wehaveshownthatsize skfkc chapter fibonacciheapscorollary themaximumdegreed ofanynodeinann nodefibonacciheapiso lgn proofletxbeanynodeinann nodefibonacciheap andletkdx bylemma wehavensize takingbase logarithmsgivesusklogn infact becausekisaninteger klogn themaximumdegreed ofanynodeisthuso lgn exercises professorpinocchioclaimsthattheheightofann nodefibonacciheapiso lgn showthattheprofessorismistakenbyexhibiting foranypositiveintegern asequenceoffibonacci heapoperationsthatcreatesafibonacciheapconsistingof justonetreethatisalinearchainofnnodes supposewegeneralizethecascading cutruletocutanodexfromitsparentassoonasitlosesitskthchild forsomeintegerconstantk theruleinsection useskd forwhatvaluesofkisd lgn problems alternativeimplementationofdeletionprofessorpisanohasproposedthefollowingvariantofthefib heap deleteprocedure claimingthatitrunsfasterwhenthenodebeingdeletedisnotthenode pointedtobyh min pisano delete ifx min fib heap extract min elseydx ify nil cascading addx schildlisttotherootlistofh removexfromtherootlistofh problemsforchapter theprofessor sclaimthatthisprocedurerunsfasterisbasedpartlyontheas sumptionthatline canbeperformedino actualtime whatiswrongwiththisassumption giveagoodupperboundontheactualtimeofpisano deletewhenxisnoth min yourboundshouldbeintermsofx degreeandthenumbercofcallstothecascading cutprocedure supposethatwecallpisano delete andleth bethefibonacciheapthatresults assumingthatnodexisnotaroot boundthepotentialofh intermsofx andm concludethattheamortizedtimeforpisano deleteisasymptoticallynobetterthanforfib heap delete evenwhenx min binomialtreesandbinomialheapsthebinomialtreebkisanorderedtree seesectionb nedrecursively asshowninfigure thebinomialtreeb consistsofasinglenode thebinomialtreebkconsistsoftwobinomialtreesbk thatarelinkedtogethersothattherootofoneistheleftmostchildoftherootoftheother showsthebinomialtreesb throughb showthatforthebinomialtreebk thereare knodes theheightofthetreeisk thereareexactlykinodesatdepthiforid theroothasdegreek whichisgreaterthanthatofanyothernode moreover asfigure shows ifwenumberthechildrenoftherootfromleftto rightbyk thenchildiistherootofasubtreebi abinomialheaphisasetofbinomialtreesthatsatis esthefollowingproper ties eachnodehasakey likeafibonacciheap eachbinomialtreeinhobeysthemin heapproperty foranynonnegativeintegerk thereisatmostonebinomialtreeinhwhoseroothasdegreek supposethatabinomialheaphhasatotalofnnodes discusstherelationshipbetweenthebinomialtreesthathcontainsandthebinaryrepresentationofn concludethathconsistsofatmostblgncc binomialtrees chapter fibonacciheapsb bkb bkbk depth therecursivede nitionofthebinomialtreebk trianglesrepresentrootedsub trees thebinomialtreesb throughb nodedepthsinb areshown anotherwayoflookingatthebinomialtreebk supposethatwerepresentabinomialheapasfollows theleft siblingschemeofsection representseachbinomialtreewithinabinomial heap eachnodecontainsitskey pointerstoitsparent toitsleftmostchild tothesiblingimmediatelytoitsright thesepointersarenilwhenappropriate anditsdegree asinfibonacciheaps howmanychildrenithas therootsforma singlylinkedrootlist orderedbythedegreesoftheroots fromlowtohigh andweaccessthebinomialheapbyapointertothe rstnodeontherootlist completethedescriptionofhowtorepresentabinomialheap nametheattributes describewhenattributeshavethevaluenil andde nehowtherootlistisorganized andshowhowtoimplementthesamesevenoperationson binomialheapsasthischapterimplementedonfibonacciheaps eachopera tionshouldrunino lgn worst casetime wherenisthenumberofnodesin problemsforchapter thebinomialheap orinthecaseoftheunionoperation inthetwobinomialheapsthatarebeingunited themake heapoperationshouldtakeconstanttime supposethatweweretoimplementonlythemergeable heapoperationsonafibonacciheap wedonotimplementthedecrease keyordeleteop erations howwouldthetreesinafibonacciheapresemblethoseinabinomial heap howwouldtheydiffer showthatthemaximumdegreeinann nodefibonacciheapwouldbeatmostblgnc professormcgeehasdevisedanewdatastructurebasedonfibonacciheaps amcgeeheaphasthesamestructureasafibonacciheapandsupportsjust themergeable heapoperations theimplementationsoftheoperationsarethe sameasforfibonacciheaps exceptthatinsertionandunionconsolidatethe rootlistastheirlaststep whataretheworst caserunningtimesofoperations onmcgeeheaps morefibonacci heapoperationswewishtoaugmentafibonacciheaphtosupporttwonewoperationswithoutchangingtheamortizedrunningtimeofanyotherfibonacci heapoperations theoperationfib heap changesthekeyofnodextothevaluek giveanef cientimplementationoffib heap andanalyzetheamortizedrunningtimeofyourimplementationforthecasesinwhichkisgreaterthan lessthan orequaltox giveanef cientimplementationoffib heap prune whichdeletesqdmin nodesfromh youmaychooseanyqnodestodelete ana lyzetheamortizedrunningtimeofyourimplementation hint youmayneedtomodifythedatastructureandpotentialfunction heapschapter introducedthe inwhicheveryinternalnode otherthanpos siblytheroot hastwo orfourchildrenandallleaveshavethesamedepth thisproblem weshallimplement heaps whichsupportthemergeable heapoperations heapsdifferfrom treesinthefollowingways heaps onlyleavesstorekeys andeachleafxstoresexactlyonekeyintheattributex thekeysintheleavesmayappearinanyorder eachinternalnodexcontainsavaluex smallthatisequaltothesmallestkeystoredinanyleafinthesubtreerootedatx therootrcontainsanattributer heightthatgivestheheightofthe chapter fibonacciheapstree finally heapsaredesignedtobekeptinmainmemory sothatdiskreadsandwritesarenotneeded implementthefollowing heapoperations inparts eachoperationshouldrunino lgn timeona heapwithnelements theunionoperationinpart shouldrunino lgn wherenisthenumberofelementsinthetwoinputheaps minimum whichreturnsapointertotheleafwiththesmallestkey decrease whichdecreasesthekeyofagivenleafxtoagivenvaluekx insert whichinsertsleafxwithkeyk delete whichdeletesagivenleafx extract min whichextractstheleafwiththesmallestkey union whichunitestwo heaps returningasingle heapandde stroyingtheinputheaps chapternotesfredmanandtarjan introducedfibonacciheaps theirpaperalsodescribes theapplicationoffibonacciheapstotheproblemsofsingle sourceshortestpaths pairsshortestpaths weightedbipartitematching andtheminimum spanning treeproblem subsequently driscoll gabow shrairman andtarjan developed relaxedheaps asanalternativetofibonacciheaps theydevisedtwovarietiesofre laxedheaps onegivesthesameamortizedtimeboundsasfibonacciheaps otherallowsdecrease keytorunino worst notamortized timeandextract minanddeletetorunino lgn worst casetime relaxedheapsalsohavesomeadvantagesoverfibonacciheapsinparallelalgorithms seealsothechapternotesforchapter forotherdatastructuresthatsupportfastdecrease keyoperationswhenthesequenceofvaluesreturnedbyextract mincallsaremonotonicallyincreasingovertimeandthedataareintegersinaspeci crange vanemdeboastreesinpreviouschapters wesawdatastructuresthatsupporttheoperationsofapriorityqueue binaryheapsinchapter blacktreesinchapter andfibonacciheapsinchapter ineachofthesedatastructures atleastoneimportantop erationtooko lgn eitherworstcaseoramortized infact becauseeachofthesedatastructuresbasesitsdecisionsoncomparingkeys thenlgn lowerboundforsortinginsection tellsusthatatleastoneoperationwillhaveto takelgn ifwecouldperformboththeinsertandextract minoperationsino lgn thenwecouldsortnkeysino nlgn timeby rstper formingninsertoperations followedbynextract minoperations wesawinchapter however thatsometimeswecanexploitadditionalinfor mationaboutthekeystosortino nlgn inparticular withcountingsortwecansortnkeys eachanintegerintherange tok intime nck whichis whenkdo sincewecancircumventthenlgn lowerboundforsortingwhenthekeysareintegersinaboundedrange youmightwonderwhetherwecanperformeachofthepriority queueoperationsino lgn timeinasimilarscenario inthischapter weshallseethatwecan vanemdeboastreessupportthepriority queueoperations andafewothers eachino lglgn worst casetime thehitchisthatthekeysmustbeintegersintherange ton withnoduplicatesallowed speci cally vanemdeboastreessupporteachofthedynamicsetoperationslistedonpage insert delete minimum maximum suc cessor andpredecessor ino lglgn inthischapter wewillomitdiscussionofsatellitedataandfocusonlyonstoringkeys becauseweconcentrate onkeysanddisallowduplicatekeystobestored insteadofdescribingthesearch chapter doesnotexplicitlydiscusshowtoimplementextract minanddecrease butwecaneasilybuildtheseoperationsforanydatastructurethatsupportsminimum delete andinsert chapter vanemdeboastreesoperation wewillimplementthesimpleroperationmember whichreturnsabooleanindicatingwhetherthevaluexiscurrentlyindynamicsets sofar wehaveusedtheparameternfortwodistinctpurposes thenumberofelementsinthedynamicset andtherangeofthepossiblevalues toavoidany furtherconfusion fromhereonwewillusentodenotethenumberofelementscurrentlyinthesetanduastherangeofpossiblevalues sothateachvanemdeboastreeoperationrunsino lglgu wecallthesetf gtheuniverseofvaluesthatcanbestoredandutheuniversesize weassumethroughoutthischapterthatuisanexactpowerof kforsomeintegerk startsusoutbyexaminingsomesimpleapproachesthatwillgetusgoingintherightdirection weenhancetheseapproachesinsection introducingprotovanemdeboasstructures whicharerecursivebutdonotachieve ourgoalofo lglgu timeoperations modi esprotovanemdeboasstructurestodevelopvanemdeboastrees anditshowshowtoimplementeach operationino lglgu preliminaryapproachesinthissection weshallexaminevariousapproachesforstoringadynamicset althoughnonewillachievetheo lglgu timeboundsthatwedesire wewillgaininsightsthatwillhelpusunderstandvanemdeboastreeswhenweseethemlater inthischapter directaddressingdirectaddressing aswesawinsection providesthesimplestapproachtostoringadynamicset sinceinthischapterweareconcernedonlywithstoring keys wecansimplifythedirect addressingapproachtostorethedynamicsetasa bitvector asdiscussedinexercise tostoreadynamicsetofvaluesfrom theuniversef wemaintainanarraya uofubits theentrya xholdsa ifthevaluexisinthedynamicset anditholdsa otherwise althoughwecanperformeachoftheinsert delete andmemberoperationsino timewithabitvector theremainingoperations minimum maximum successor andpredecessor eachtake timeintheworstcasebecause preliminaryapproaches afigure abinarytreeofbitssuperimposedontopofabitvectorrepresentingthesetf gwhenud eachinternalnodecontainsa ifandonlyifsomeleafinitssubtreecontainsa thearrowsshowthepathfollowedtodeterminethepredecessorof intheset wemighthavetoscanthrough elements forexample ifasetcontainsonlythevalues andu thento ndthesuccessorof wewouldhavetoscanentries throughu ndinga ina superimposingabinarytreestructurewecanshort cutlongscansinthebitvectorbysuperimposingabinarytreeofbitsontopofit showsanexample theentriesofthebitvectorformthe leavesofthebinarytree andeachinternalnodecontainsa ifandonlyifanyleafinitssubtreecontainsa inotherwords thebitstoredinaninternalnodeisthelogical orofitstwochildren theoperationsthattook worst casetimewithanunadornedbitvectornowusethetreestructure ndtheminimumvalueintheset startattherootandheaddowntowardtheleaves alwaystakingtheleftmostnodecontaininga ndthemaximumvalueintheset startattherootandheaddowntowardtheleaves alwaystakingtherightmostnodecontaininga weassumethroughoutthischapterthatminimumandmaximumreturnnilifthedynamicsetisemptyandthatsuccessorandpredecessorreturnniliftheelementtheyaregivenhasnosuccessororpredecessor respectively chapter vanemdeboastreesto ndthesuccessorofx startattheleafindexedbyx andheaduptowardtherootuntilweenteranodefromtheleftandthisnodehasa initsrightchild thenheaddownthroughnode alwaystakingtheleftmostnodecontaininga ndtheminimumvalueinthesubtreerootedattherightchild ndthepredecessorofx startattheleafindexedbyx andheaduptowardtherootuntilweenteranodefromtherightandthisnodehasa initsleftchild thenheaddownthroughnode alwaystakingtherightmostnodecontaininga ndthemaximumvalueinthesubtreerootedattheleftchild showsthepathtakento ndthepredecessor ofthevalue wealsoaugmenttheinsertanddeleteoperationsappropriately whenin sertingavalue westorea ineachnodeonthesimplepathfromtheappropriateleafuptotheroot whendeletingavalue wegofromtheappropriateleafupto theroot recomputingthebitineachinternalnodeonthepathasthelogical orof itstwochildren sincetheheightofthetreeislguandeachoftheaboveoperationsmakesatmostonepassupthetreeandatmostonepassdown eachoperationtakeso lgu timeintheworstcase thisapproachisonlymarginallybetterthanjustusingared blacktree wecanstillperformthememberoperationino whereassearchingared blacktreetakeso lgn thenagain ifthenumbernofelementsstoredismuchsmallerthanthesizeuoftheuniverse ared blacktreewouldbefasterforalltheotheroperations superimposingatreeofconstantheightwhathappensifwesuperimposeatreewithgreaterdegree letusassumethatthesizeoftheuniverseisud kforsomeintegerk sothatpuisaninteger insteadofsuperimposingabinarytreeontopofthebitvector wesuperimposea treeofdegreepu showssuchatreeforthesamebitvectorasinfigure theheightoftheresultingtreeisalways asbefore eachinternalnodestoresthelogical orofthebitswithinitssub sothatthepuinternalnodesatdepth summarizeeachgroupofpuval ues asfigure demonstrates wecanthinkofthesenodesasanarray summary wheresummary icontainsa ifandonlyifthesubar raya ipu pucontainsa wecallthispu bitsubarrayofatheithcluster foragivenvalueofx thebita xappearsinclusternum berbx puc nowinsertbecomesano timeoperation toinsertx setbotha xandsummary pucto wecanusethesummaryarraytoperform preliminaryapproaches aasummarypubitspubitsfigure atreeofdegreepusuperimposedontopofthesamebitvectorasinfigure eachinternalnodestoresthelogical orofthebitsinitssubtree aviewofthesamestructure butwiththeinternalnodesatdepth treatedasanarraysummary wheresummary iisthelogical orofthesubarraya ipu eachoftheoperationsminimum maximum successor predecessor anddeleteino ndtheminimum maximum ndtheleftmost rightmost entryinsummarythatcontainsa saysummary andthendoalinearsearchwithintheithclusterfortheleftmost rightmost ndthesuccessor predecessor ofx rstsearchtotheright withinitscluster ifwe nda thatpositiongivestheresult otherwise letidbx pucandsearchtotheright withinthesummaryarrayfromindexi rstpositionthatholdsa givestheindexofacluster searchwithinthatclusterfortheleftmost rightmost thatpositionholdsthesuccessor predecessor todeletethevaluex letidbx puc seta xto andthensetsummary itothelogical orofthebitsintheithcluster ineachoftheaboveoperations wesearchthroughatmosttwoclustersofpubitsplusthesummaryarray andsoeachoperationtakeso rstglance itseemsasthoughwehavemadenegativeprogress superimpos ingabinarytreegaveuso lgu timeoperations whichareasymptoticallyfasterthano usingatreeofdegreepuwillturnouttobeakeyideaofvanemdeboastrees however wecontinuedownthispathinthenextsection exercises modifythedatastructuresinthissectiontosupportduplicatekeys chapter vanemdeboastrees modifythedatastructuresinthissectiontosupportkeysthathaveassociatedsatel litedata observethat usingthestructuresinthissection thewaywe ndthesuccessorand predecessorofavaluexdoesnotdependonwhetherxisinthesetatthetime showhowto ndthesuccessorofxinabinarysearchtreewhenxisnotstoredinthetree supposethatinsteadofsuperimposingatreeofdegreepu weweretosuperim poseatreeofdegreeu wherek isaconstant whatwouldbetheheightofsuchatree andhowlongwouldeachoftheoperationstake arecursivestructureinthissection wemodifytheideaofsuperimposingatreeofdegreepuontopofabitvector intheprevioussection weusedasummarystructureofsizepu witheachentrypointingtoanotherstuctureofsizepu wemakethestructurerecursive shrinkingtheuniversesizebythesquarerootateachlevelofrecursion startingwithauniverseofsizeu wemakestructuresholdingpudu items whichthemselvesholdstructuresofu items whichholdstructuresofu items andsoon downtoabasesizeof forsimplicity inthissection weassumethatud kforsomeintegerk sothatu areintegers thisrestrictionwouldbequitesevereinpractice allowingonlyvaluesofuinthesequence weshallseeinthenextsectionhowtorelaxthisassumptionandassumeonlythatud kforsomeintegerk sincethestructureweexamineinthissectionisonlyaprecursortothetruevanemdeboastreestructure wetoleratethisrestrictioninfavorofaidingourunderstanding recallingthatourgoalistoachieverunningtimesofo lglgu fortheoper ations sthinkabouthowwemightobtainsuchrunningtimes attheendofsection wesawthatbychangingvariables wecouldshowthattherecurrencet tpnclgn hasthesolutiont lgnlglgn sconsiderasimilar butsimpler recurrence arecursivestructure ifweusethesametechnique changingvariables wecanshowthatrecur rence hasthesolutiont lglgu letmdlgu sothatud mandwehavet nowwerenames givingthenewrecurrences bycase ofthemastermethod thisrecurrencehasthesolutions lgm wechangebackfroms tot givingt lgm lglgu recurrence willguideoursearchforadatastructure wewilldesignarecursivedatastructurethatshrinksbyafactorofpuineachlevelofitsrecursion whenanoperationtraversesthisdatastructure itwillspendaconstantamountof timeateachlevelbeforerecursingtothelevelbelow recurrence willthen characterizetherunningtimeoftheoperation hereisanotherwaytothinkofhowthetermlglguendsupinthesolutiontorecurrence aswelookattheuniversesizeineachleveloftherecursivedata structure weseethesequenceu ifweconsiderhowmanybitsweneedtostoretheuniversesizeateachlevel weneedlguatthetoplevel andeachlevelneedshalfthebitsofthepreviouslevel ingeneral ifwestartwithbbitsandhalvethenumberofbitsateachlevel thenafterlgblevels wegetdowntojustonebit sincebdlgu weseethatafterlglgulevels wehaveauniversesizeof lookingbackatthedatastructureinfigure agivenvaluexresidesinclusternumberbx puc ifweviewxasalgu bitbinaryinteger thatclusternumber puc isgivenbythemostsigni cant lgu bitsofx withinitscluster xappearsinpositionxmodpu whichisgivenbytheleastsigni cant lgu bitsofx wewillneedtoindexinthisway andsoletusde nesomefunctionsthatwillhelpusdoso dxmodpu index dxpucy thefunctionhigh givesthemostsigni cant lgu bitsofx producingthenumberofx scluster thefunctionlow givestheleastsigni cant lgu bitsofxandprovidesx spositionwithinitscluster thefunctionindex buildsanelementnumberfromxandy treatingxasthemostsigni cant lgu bitsoftheelementnumberandyastheleastsigni cant lgu bits wehavetheidentityxdindex thevalueofuusedbyeachofthesefunctionswill chapter vanemdeboastrees proto usummaryclusterproto structurepuproto structuresfigure theinformationinaproto structurewhenu thestructurecontainstheuniversesizeu apointersummarytoaproto structure andanarraycluster puofpupointerstoproto structures alwaysbetheuniversesizeofthedatastructureinwhichwecallthefunction whichchangesaswedescendintotherecursivestructure protovanemdeboasstructurestakingourcuefromrecurrence letusdesignarecursivedatastructuretosupporttheoperations althoughthisdatastructurewillfailtoachieveourgoalof lglgu timeforsomeoperations itservesasabasisforthevanemdeboastreestructurethatwewillseeinsection fortheuniversef wede neaprotovanemdeboasstruc ture orproto vebstructure whichwedenoteasproto recursivelyasfollows eachproto structurecontainsanattributeugivingitsuniversesize inaddition itcontainsthefollowing ifud thenitisthebasesize anditcontainsanarraya oftwobits otherwise kforsomeintegerk sothatu inadditiontotheuniversesizeu thedatastructureproto containsthefollowingattributes illustratedinfigure apointernamedsummarytoaproto structureandanarraycluster puofpupointers eachtoaproto struc ture theelementx isrecursivelystoredintheclusternumberedhigh aselementlow withinthatcluster inthetwo levelstructureoftheprevioussection eachnodestoresasummaryarrayofsizepu inwhicheachentrycontainsabit fromtheindexofeachentry wecancomputethestartingindexofthesubarrayofsizeputhatthebitsummarizes intheproto vebstructure weuseexplicitpointersratherthanindex arecursivestructure clusteru summaryproto veb clusteru summaryproto veb aproto veb clusteru summaryproto veb clusteru summaryproto veb clusteru summaryproto veb clusteru summaryproto veb elements elements clusters clusters elements elements elements elements elements elements aproto veb aproto veb aproto veb aproto veb aproto veb aproto veb aproto veb aproto veb aproto veb aproto veb aproto veb aproto veb aproto veb aproto veb aproto structurerepresentingthesetf itpointstofourproto structuresincluster andtoasummarystructure whichisalsoaproto eachproto structurepointstotwoproto structuresincluster andtoaproto summary eachproto structurecontainsjustanarraya oftwobits theproto structuresabove elementsi storebitsiandjoftheactualdynamicset andtheproto structuresabove clustersi storethesummarybitsforclustersiandjinthetop levelproto structure forclarity heavyshadingindicatesthetoplevelofaproto vebstructurethatstoressummaryinformationforitsparentstructure suchaproto vebstructureisotherwiseidenticaltoanyotherproto vebstructurewiththesameuniversesize chapter vanemdeboastreescalculations thearraysummarycontainsthesummarybitsstoredrecursivelyinaproto vebstructure andthearrayclustercontainspupointers showsafullyexpandedproto structurerepresentingthesetf ifthevalueiisintheproto vebstructurepointedtobysummary thentheithclustercontainssomevalueinthesetbeingrepresented asinthetreeofconstantheight cluster irepresentsthevaluesiputhrough whichformtheithcluster atthebaselevel theelementsoftheactualdynamicsetsarestoredinsomeoftheproto structures andtheremainingproto structuresstoresummarybits beneatheachofthenon summarybasestructures gurein dicateswhichbitsitstores forexample theproto structurelabeled elements storesbit sinceelement isnotintheset initsa andbit sinceelement isintheset initsa liketheclusters eachsummaryisjustadynamicsetwithuniversesizepu andsowerepresenteachsummaryasaproto structure thefoursum marybitsforthemainproto structureareintheleftmostproto structure andtheyultimatelyappearintwoproto structures forexam ple theproto structurelabeled clusters hasa indicatingthatcluster oftheproto structure containingelements isall anda tellingusthatcluster containingelements hasatleastone eachproto structurepointstoitsownsummary whichisitselfstoredasaproto structure forexample lookattheproto struc turejusttotheleftoftheonelabeled elements becauseitsa ittellsusthatthe elements structureisall andbecauseitsa weknowthatthe elements structurecontainsatleastone operationsonaprotovanemdeboasstructureweshallnowdescribehowtoperformoperationsonaproto vebstructure rstexaminethequeryoperations member minimum maximum andsuccessor whichdonotchangetheproto vebstructure wethendiscussinsertanddelete weleavemaximumandpredecessor whicharesym metrictominimumandsuccessor respectively asexercise eachofthemember successor predecessor insert anddeleteop erationstakesaparameterx alongwithaproto vebstructurev eachoftheseoperationsassumesthat determiningwhetheravalueisinthesettoperformmember weneedto ndthebitcorrespondingtoxwithintheappropriateproto structure wecandosoino lglgu bypassing arecursivestructure thesummarystructuresaltogether thefollowingproceduretakesaproto ebstructurevandavaluex anditreturnsabitindicatingwhetherxisinthedynamicsetheldbyv proto veb member ifv returnv elsereturnproto veb member cluster xlow theproto veb memberprocedureworksasfollows testswhetherweareinabasecase wherevisaproto structure handlesthebasecase simplyreturningtheappropriatebitofarraya dealswiththerecursivecase drillingdown intotheappropriatesmallerproto vebstructure thevaluehigh sayswhichproto structurewevisit andlow termineswhichelementwithinthatproto structurewearequerying sseewhathappenswhenwecallproto veb member ontheproto structureinfigure sincehigh whenud werecurseintotheproto structureintheupperright andweaskaboutele mentlow ofthatstructure inthisrecursivecall andsowerecurseagain withud wehavehigh andlow andsoweaskaboutelement oftheproto structureintheupperright thisrecursivecallturnsouttobeabasecase andsoitreturnsa backupthroughthechainofre cursivecalls wegettheresultthatproto veb member returns indicatingthat isnotintheset todeterminetherunningtimeofproto veb member lett denoteitsrunningtimeonaproto structure eachrecursivecalltakescon stanttime notincludingthetimetakenbytherecursivecallsthatitmakes whenproto veb membermakesarecursivecall itmakesacallonaproto structure wecancharacterizetherunningtimebytherecur rencet whichwehavealreadyseenasrecurrence itssolutionist lglgu andsoweconcludethatproto veb memberrunsintimeo lglgu findingtheminimumelementnowweexaminehowtoperformtheminimumoperation theprocedureproto veb minimum returnstheminimumelementintheproto vebstruc turev ornilifvrepresentsanemptyset chapter vanemdeboastreesproto veb minimum ifv ifv return elseifv return elsereturnnil elsemin clusterdproto veb minimum summary ifmin cluster nil returnnil elseoffsetdproto veb minimum cluster min cluster returnindex min cluster offset thisprocedureworksasfollows testsforthebasecase whichlines handlebybruteforce lines handletherecursivecase ndsthe numberofthe rstclusterthatcontainsanelementoftheset itdoessobyrecur sivelycallingproto veb minimumonv summary whichisaproto structure assignsthisclusternumbertothevariablemin cluster ifthesetisempty thentherecursivecallreturnednil andline returnsnil otherwise theminimumelementofthesetissomewhereinclusternumbermin cluster therecursivecallinline ndstheoffsetwithintheclusteroftheminimumelementinthiscluster finally constructsthevalueoftheminimumelementfromtheclusternumberandoffset anditreturnsthisvalue althoughqueryingthesummaryinformationallowsustoquickly ndtheclus tercontainingtheminimumelement becausethisproceduremakestworecursivecallsonproto structures itdoesnotrunino lglgu timeintheworstcase lettingt denotetheworst casetimeforproto veb minimumonaproto structure wehavetherecurrencet weuseachangeofvariablestosolvethisrecurrence lettingmdlgu whichgivest renamings givess bycase ofthemastermethod hasthesolutions bychang ingbackfroms tot wehavethatt lgu weseethatbecauseofthesecondrecursivecall proto veb minimumrunsin lgu timeratherthanthedesiredo lglgu arecursivestructure findingthesuccessorthesuccessoroperationisevenworse intheworstcase itmakestworecursivecalls alongwithacalltoproto veb minimum theprocedureproto veb successor returnsthesmallestelementintheproto vebstructurevthatisgreaterthanx ornilifnoelementinvisgreaterthanx itdoesnotrequirextobeamemberoftheset butitdoesassumethat proto veb successor ifv ifx andv return elsereturnnil elseoffsetdproto veb successor cluster xlow ifoffset nil returnindex offset elsesucc clusterdproto veb successor summary ifsucc cluster nil returnnil elseoffsetdproto veb minimum cluster succ cluster returnindex succ cluster offset theproto veb successorprocedureworksasfollows asusual testsforthebasecase whichlines handlebybruteforce theonlywaythatxcanhaveasuccessorwithinaproto structureiswhenxd anda lines handletherecursivecase searchesforasuccessortoxwithinx scluster assigningtheresulttooffset determineswhetherxhasasuccessorwithinitscluster ifitdoes thenline computesandreturnsthevalueofthissuccessor otherwise wehavetosearchinotherclusters assignsto succ clusterthenumberofthenextnonemptycluster usingthesummaryinforma tionto ndit testswhethersucc clusterisnil withline returningnilifallsucceedingclustersareempty ifsucc clusterisnon nil assignsthe rstelementwithinthatclustertooffset andline computesandreturnstheminimumelementinthatcluster intheworstcase proto veb successorcallsitselfrecursivelytwiceonproto structures anditmakesonecalltoproto veb minimumonaproto structure therecurrencefortheworst caserunningtimet ofproto veb successorist lgpu lgu chapter vanemdeboastreeswecanemploythesametechniquethatweusedforrecurrence toshowthatthisrecurrencehasthesolutiont lgulglgu proto veb successorisasymptoticallyslowerthanproto veb minimum insertinganelementtoinsertanelement weneedtoinsertitintotheappropriateclusterandalsosetthesummarybitforthatclusterto theprocedureproto veb insert insertsthevaluexintotheproto vebstructurev proto veb insert ifv elseproto veb insert cluster xlow proto veb insert summary inthebasecase setstheappropriatebitinthearrayato intherecursivecase therecursivecallinline insertsxintotheappropriatecluster andline setsthesummarybitforthatclusterto becauseproto veb insertmakestworecursivecallsintheworstcase currence characterizesitsrunningtime hence proto veb insertrunsin lgu deletinganelementthedeleteoperationismorecomplicatedthaninsertion whereaswecanalwayssetasummarybitto wheninserting wecannotalwaysresetthesamesummarybitto whendeleting weneedtodeterminewhetheranybitintheappropriateclusteris aswehavede nedproto vebstructures wewouldhavetoexamineallpubitswithinaclustertodeterminewhetheranyofthemare alternatively wecouldaddanattributentotheproto vebstructure countinghowmanyel ementsithas weleaveimplementationofproto veb deleteasexercises clearly weneedtomodifytheproto vebstructuretogeteachoperationdowntomakingatmostonerecursivecall wewillseeinthenextsectionhowtodoso exercises writepseudocodefortheproceduresproto veb maximumandproto veb predecessor thevanemdeboastree writepseudocodeforproto veb delete itshouldupdatetheappropriatesummarybitbyscanningtherelatedbitswithinthecluster whatistheworst caserunningtimeofyourprocedure addtheattributentoeachproto vebstructure givingthenumberofelementscurrentlyinthesetitrepresents andwritepseudocodeforproto veb deletethatusestheattributentodecidewhentoresetsummarybitsto whatistheworst caserunningtimeofyourprocedure whatotherproceduresneedtochangebecauseofthenewattribute dothesechangesaffecttheirrunningtimes modifytheproto vebstructuretosupportduplicatekeys modifytheproto vebstructuretosupportkeysthathaveassociatedsatellitedata writepseudocodeforaprocedurethatcreatesaproto structure arguethatifline ofproto veb minimumisexecuted thentheproto vebstructureisempty supposethatwedesignedaproto vebstructureinwhicheachclusterarrayhadonlyu elements whatwouldtherunningtimesofeachoperationbe thevanemdeboastreetheproto vebstructureoftheprevioussectionisclosetowhatweneedtoachieveo lglgu runningtimes itfallsshortbecausewehavetorecursetoomanytimesinmostoftheoperations inthissection weshalldesignadatastructurethat issimilartotheproto vebstructurebutstoresalittlemoreinformation thereby removingtheneedforsomeoftherecursion insection weobservedthattheassumptionthatwemadeabouttheuni versesize thatud kforsomeintegerk isundulyrestrictive con ningthepossiblevaluesofuanoverlysparseset fromthispointon therefore wewillallowtheuniversesizeutobeanyexactpowerof andwhenpuisnotaninte chapter vanemdeboastrees uminmaxsummaryclustereb peb treesfigure theinformationinaeb treewhenu thestructurecontainstheuni versesizeu elementsminandmax apointersummarytoaeb andanarraycluster puof pupointerstoeb trees ger thatis ifuisanoddpowerof forsomeintegerk thenwewilldividethelgubitsofanumberintothemostsigni cantd lgu ebitsandtheleastsigni cantb lgu cbits forconvenience wedenote lgu persquareroot ofu puand lgu lowersquareroot ofu sothatud puand whenuisanevenpowerof kforsomeintegerk pud pudpu becausewenowallowutobeanoddpowerof wemustrede neourhelpfulfunctionsfromsection dxmod index pucy vanemdeboastreesthevanemdeboastree orvebtree modi estheproto vebstructure wedenoteavebtreewithauniversesizeofuaseb unlessuequalsthebasesizeof theattributesummarypointstoaeb treeandthearraycluster pupointsto peb trees asfigure illustrates avebtreecontainstwoattributesnotfoundinaproto vebstructure minstorestheminimumelementinthevebtree andmaxstoresthemaximumelementinthevebtree furthermore theelementstoredinmindoesnotappearinanyoftherecur siveeb treesthattheclusterarraypointsto theelementsstoredinaeb treev therefore arev minplusalltheelementsrecursivelystoredintheeb treespointedtobyv cluster notethatwhenavebtreecontainstwoormoreelements wetreatminandmaxdifferently theelement thevanemdeboastree storedinmindoesnotappearinanyoftheclusters buttheelementstoredinmaxdoes sincethebasesizeis aeb treedoesnotneedthearrayathatthecor respondingproto structurehas instead wecandetermineitselementsfromitsminandmaxattributes inavebtreewithnoelements regardlessofitsuniversesizeu bothminandmaxarenil showsaeb treevholdingthesetf causethesmallestelementis minequals andeventhoughhigh theelement doesnotappearintheeb treepointedtobyv cluster noticethatv cluster minequals andso isnotinthisvebtree similarly sincev cluster minequals aretheonlyelementsinv cluster theeb clusterswithinv cluster areempty theminandmaxattributeswillturnouttobekeytoreducingthenumberofrecursivecallswithintheoperationsonvebtrees theseattributeswillhelpusin fourways theminimumandmaximumoperationsdonotevenneedtorecurse fortheycanjustreturnthevaluesofminormax thesuccessoroperationcanavoidmakingarecursivecalltodeterminewhetherthesuccessorofavaluexlieswithinhigh thatisbecausex ssuccessorlieswithinitsclusterifandonlyifxisstrictlylessthanthemaxattributeofitscluster asymmetricargumentholdsforpredecessorandmin wecantellwhetheravebtreehasnoelements exactlyoneelement oratleasttwoelementsinconstanttimefromitsminandmaxvalues thisabilitywillhelpintheinsertanddeleteoperations ifminandmaxarebothnil thenthevebtreehasnoelements ifminandmaxarenon nilbutareequaltoeachother thenthevebtreehasexactlyoneelement otherwise bothminandmaxarenon nilbutareunequal andthevebtreehastwoormoreelements ifweknowthatavebtreeisempty wecaninsertanelementintoitbyupdatingonlyitsminandmaxattributes hence wecaninsertintoanemptyvebtreeinconstanttime similarly ifweknowthatavebtreehasonlyoneelement candeletethatelementinconstanttimebyupdatingonlyminandmax thesepropertieswillallowustocutshortthechainofrecursivecalls eveniftheuniversesizeuisanoddpowerof thedifferenceinthesizesofthesummaryvebtreeandtheclusterswillnotturnouttoaffecttheasymptotic runningtimesoftheveb treeoperations therecursiveproceduresthatimplement theveb treeoperationswillallhaverunningtimescharacterizedbytherecurrencet chapter vanemdeboastrees clusteru summaryveb min max clusteru summaryveb min max min max veb min max veb min max veb clustersummaryu minmaxveb minmaxveb minmaxveb clustersummaryu min max veb min max veb min max veb clustersummaryu minmaxveb minmaxveb minmaxveb clustersummaryu min max veb minmaxveb min max veb veb min max veb min max veb minmaxu veb min max aeb treecorrespondingtotheproto vebtreeinfigure itstoresthesetf slashesindicatenilvalues thevaluestoredintheminattributeofavebtreedoesnotappearinanyofitsclusters heavyshadingservesthesamepurposehereasinfigure thevanemdeboastree thisrecurrencelookssimilartorecurrence andwewillsolveitinasimilarfashion lettingmdlgu werewriteitast notingthatdm forallm wehavet lettings werewritethislastrecurrenceass bycase ofthemastermethod hasthesolutions lgm intermsoftheasymptoticsolution thefraction doesnotmakeanydifferencecomparedwiththefraction becausewhenweapplythemastermethod ndthatlog dlog wehavet lgm lglgu beforeusingavanemdeboastree wemustknowtheuniversesizeu sothatwecancreateavanemdeboastreeoftheappropriatesizethatinitiallyrepresentsanemptyset asproblem asksyoutoshow thetotalspacerequirementof avanemdeboastreeiso anditisstraightforwardtocreateanemptytreeino incontrast wecancreateanemptyred blacktreeinconstanttime therefore wemightnotwanttouseavanemdeboastreewhenweperformonly asmallnumberofoperations sincethetimetocreatethedatastructurewould exceedthetimesavedintheindividualoperations thisdrawbackisusuallynot signi cant sincewetypicallyuseasimpledatastructure suchasanarrayorlinked torepresentasetwithonlyafewelements operationsonavanemdeboastreewearenowreadytoseehowtoperformoperationsonavanemdeboastree aswedidfortheprotovanemdeboasstructure wewillconsiderthequeryingoper ations rst andtheninsertanddelete duetotheslightasymmetrybetweentheminimumandmaximumelementsinavebtree whenavebtreecontains atleasttwoelements theminumumelementdoesnotappearwithinaclusterbut themaximumelementdoes wewillprovidepseudocodeforall vequeryingop erations asintheoperationsonprotovanemdeboasstructures theoperations herethattakeparametersvandx wherevisavanemdeboastreeandxisanelement assumethat findingtheminimumandmaximumelementsbecausewestoretheminimumandmaximumintheattributesminandmax twooftheoperationsareone liners takingconstanttime chapter vanemdeboastreesveb minimum returnv minveb maximum returnv maxdeterminingwhetheravalueisinthesettheprocedureveb member hasarecursivecaselikethatofproto veb member butthebasecaseisalittledifferent wealsocheckdi rectlywhetherxequalstheminimumormaximumelement sinceavebtreedoesn tstorebitsasaproto vebstructuredoes wedesignveb membertoreturntrueorfalseratherthan veb member ifx minorx max returntrue elseifv returnfalse elsereturnveb member cluster xlow checkstoseewhetherxequalseithertheminimumormaximumelement ifitdoes returnstrue otherwise testsforthebasecase sinceaeb treehasnoelementsotherthanthoseinminandmax ifitisthebasecase returnsfalse theotherpossibility itisnotabasecaseandxequalsneitherminnormax ishandledbytherecursivecallinline recurrence characterizestherunningtimeoftheveb memberprocedure andsothisproceduretakeso lglgu findingthesuccessorandpredecessornextweseehowtoimplementthesuccessoroperation recallthatthepro cedureproto veb successor couldmaketworecursivecalls onetodeterminewhetherx ssuccessorresidesinthesameclusterasxand ifitdoesnot oneto ndtheclustercontainingx ssuccessor becausewecanaccessthemaximumvalueinavebtreequickly wecanavoidmakingtworecursivecalls andinsteadmakeonerecursivecalloneitheraclusteroronthesummary butnot onboth thevanemdeboastree veb successor ifv ifx andv max return elsereturnnil elseifv min nilandx min returnv min elsemax lowdveb maximum cluster ifmax nilandlow max offsetdveb successor cluster xlow returnindex offset elsesucc clusterdveb successor summary ifsucc cluster nil returnnil elseoffsetdveb minimum cluster succ cluster returnindex succ cluster offset thisprocedurehassixreturnstatementsandseveralcases westartwiththebasecaseinlines whichreturns inline ifwearetryingto ndthesuccessorof isinthe elementset otherwise thebasecasereturnsnilinline ifwearenotinthebasecase wenextcheckinline whetherxisstrictlylessthantheminimumelement ifso thenwesimplyreturntheminimumelementin ifwegettoline thenweknowthatwearenotinabasecaseandthatxisgreaterthanorequaltotheminimumvalueinthevebtreev assignstomax lowthemaximumelementinx scluster ifx sclustercontainssomeelementthatisgreaterthanx thenweknowthatx ssuccessorliessomewherewithinx scluster testsforthiscondition ifx ssuccessoriswithinx scluster thenline determineswhereintheclusteritis andline returnsthesuccessorinthesamewayasline ofproto veb successor wegettoline ifxisgreaterthanorequaltothegreatestelementinitscluster inthiscase lines ndx ssuccessorinthesamewayaslines ofproto veb successor itiseasytoseehowrecurrence characterizestherunningtimeofveb successor dependingontheresultofthetestinline theprocedurecallsitselfrecursivelyineitherline onavebtreewithuniversesize orline onavebtreewithuniversesize ineithercase theonerecursivecallisonavebtreewithuniversesizeatmost theremainderoftheproce dure includingthecallstoveb minimumandveb maximum takeso hence veb successorrunsino lglgu worst casetime chapter vanemdeboastreestheveb predecessorprocedureissymmetrictotheveb successorprocedure butwithoneadditionalcase veb predecessor ifv ifx andv min return elsereturnnil elseifv max nilandx max returnv max elsemin lowdveb minimum cluster ifmin nilandlow min offsetdveb predecessor cluster xlow returnindex offset elsepred clusterdveb predecessor summary ifpred cluster nil ifv min nilandx min returnv min elsereturnnil elseoffsetdveb maximum cluster pred cluster returnindex pred cluster offset lines formtheadditionalcase thiscaseoccurswhenx spredecessor ifitexists doesnotresideinx scluster inveb successor wewereassuredthatifx ssuccessorresidesoutsideofx scluster thenitmustresideinahigher numberedcluster butifx spredecessoristheminimumvalueinvebtreev thenthesuccessorresidesinnoclusteratall checksforthiscondition andline returnstheminimumvalueasappropriate thisextracasedoesnotaffecttheasymptoticrunningtimeofveb predecessorwhencomparedwithveb successor andsoveb predecessorrunsino lglgu worst casetime insertinganelementnowweexaminehowtoinsertanelementintoavebtree recallthatproto veb insertmadetworecursivecalls onetoinserttheelementandonetoinserttheelement sclusternumberintothesummary theveb insertproce durewillmakeonlyonerecursivecall howcanwegetawaywithjustone whenweinsertanelement eithertheclusterthatitgoesintoalreadyhasanotherelement oritdoesnot iftheclusteralreadyhasanotherelement thentheclusternumberisalreadyinthesummary andsowedonotneedtomakethatrecursivecall thevanemdeboastree theclusterdoesnotalreadyhaveanotherelement thentheelementbeinginsertedbecomestheonlyelementinthecluster andwedonotneedtorecursetoinsertan elementintoanemptyvebtree veb empty insert mindx maxdxwiththisprocedureinhand hereisthepseudocodeforveb insert whichassumesthatxisnotalreadyanelementinthesetrepresentedbyvebtreev veb insert ifv min nil veb empty insert elseifx min exchangexwithv min ifv ifveb minimum cluster nil veb insert summary veb empty insert cluster xlow elseveb insert cluster xlow ifx max maxdxthisprocedureworksasfollows testswhethervisanemptyvebtreeand ifitis thenline handlesthiseasycase lines assumethatvisnotempty andthereforesomeelementwillbeinsertedintooneofv sclusters butthatelementmightnotnecessarilybetheelementxpassedtoveb insert ifx min astestedinline thenxneedstobecomethenewmin wedon twanttolosetheoriginalmin however andsoweneedtoinsertitintooneofv sclusters inthiscase exchangesxwithmin sothatweinserttheoriginalminintooneofv sclusters weexecutelines onlyifvisnotabase casevebtree determineswhethertheclusterthatxwillgointoiscurrentlyempty ifso thenline sertsx sclusternumberintothesummaryandline handlestheeasycaseofinsertingxintoanemptycluster ifx sclusterisnotcurrentlyempty thenline insertsxintoitscluster inthiscase wedonotneedtoupdatethesummary sincex sclusternumberisalreadyamemberofthesummary finally lines takecareofupdatingmaxifx max notethatifvisabase casevebtreethatisnotempty thenlines updateminandmaxproperly chapter vanemdeboastreesonceagain wecaneasilyseehowrecurrence characterizestherunningtime dependingontheresultofthetestinline eithertherecursivecallinline runonavebtreewithuniversesize ortherecursivecallinline runonavebwithuniversesize executes ineithercase theonerecursivecallisonavebtreewithuniversesizeatmost becausetheremainderofveb inserttakeso recurrence applies andsotherunningtimeiso lglgu deletinganelementfinally welookathowtodeleteanelementfromavebtree theprocedureveb delete assumesthatxiscurrentlyanelementinthesetrepre sentedbythevebtreev veb delete ifv min max mindnil maxdnil elseifv ifx elsev maxdv min elseifx min rst clusterdveb minimum summary xdindex rst cluster veb minimum cluster rst cluster mindx veb delete cluster xlow ifveb minimum cluster nil veb delete summary ifx max summary maxdveb maximum summary ifsummary max nil maxdv min elsev maxdindex summary max veb maximum cluster summary max elseifx max maxdindex veb maximum cluster thevanemdeboastree theveb deleteprocedureworksasfollows ifthevebtreevcon tainsonlyoneelement thenit sjustaseasytodeleteitasitwastoinsertanelement intoanemptyvebtree justsetminandmaxtonil lines handlethiscase otherwise vhasatleasttwoelements testswhethervisabase casevebtreeand ifso lines setminandmaxtotheoneremainingelement lines assumethatvhastwoormoreelementsandthatu inthiscase wewillhavetodeleteanelementfromacluster theelementwedeletefrom aclustermightnotbex however becauseifxequalsmin thenoncewehavedeletedx someotherelementwithinoneofv sclustersbecomesthenewmin andwehavetodeletethatotherelementfromitscluster ifthetestinline reveals thatweareinthiscase thenline sets rst clustertothenumberoftheclusterthatcontainsthelowestelementotherthanmin andline setsxtothevalueofthelowestelementinthatcluster thiselementbecomesthenewmininline becausewesetxtoitsvalue itistheelementthatwillbedeletedfromitscluster whenwereachline weknowthatweneedtodeleteelementxfromitscluster whetherxwasthevalueoriginallypassedtoveb deleteorxistheelementbecomingthenewminimum deletesxfromitscluster thatclustermightnowbecomeempty whichline tests andifitdoes weneedtoremovex sclusternumberfromthesummary whichline handles afterupdatingthesummary wemightneedtoupdatemax checkstoseewhetherwearedeletingthemaximumelementinvand ifweare thenline setssummary maxtothenumberofthehighest numberednonemptycluster thecallveb maximum summary worksbecausewehavealreadyrecursivelycalledveb deleteonv summary andthereforev summary maxhasal readybeenupdatedasnecessary ifallofv sclustersareempty thentheonlyremainingelementinvismin checksforthiscase andline updatesmaxappropriately otherwise setsmaxtothemaximumelementinthehighest numberedcluster ifthisclusteriswheretheelementhasbeendeleted weagainrelyontherecursivecallinline havingalreadycorrectedthatcluster maxattribute finally wehavetohandlethecaseinwhichx sclusterdidnotbecomeemptyduetoxbeingdeleted althoughwedonothavetoupdatethesummaryinthiscase wemighthavetoupdatemax testsforthiscase andifwehavetoupdatemax doesso againrelyingontherecursivecalltohavecorrectedmaxinthecluster nowweshowthatveb deleterunsino lglgu timeintheworstcase rstglance youmightthinkthatrecurrence doesnotalwaysapply becauseasinglecallofveb deletecanmaketworecursivecalls oneonline andoneonline althoughtheprocedurecanmakebothrecursive calls sthinkaboutwhathappenswhenitdoes inorderfortherecursivecallon chapter vanemdeboastreesline tooccur thetestonline mustshowthatx sclusterisempty theonlywaythatx sclustercanbeemptyisifxwastheonlyelementinitsclusterwhenwemadetherecursivecallonline butifxwastheonlyelementinitscluster thenthatrecursivecalltooko becauseitexecutedonlylines wehavetwomutuallyexclusivepossibilities therecursivecallonline tookconstanttime therecursivecallonline didnotoccur ineithercase recurrence characterizestherunningtimeofveb delete andhenceitsworst caserunningtimeiso lglgu exercises modifyvebtreestosupportduplicatekeys modifyvebtreestosupportkeysthathaveassociatedsatellitedata writepseudocodeforaprocedurethatcreatesanemptyvanemdeboastree whathappensifyoucallveb insertwithanelementthatisalreadyinthevebtree whathappensifyoucallveb deletewithanelementthatisnotinthevebtree explainwhytheproceduresexhibitthebehaviorthatthey showhowtomodifyvebtreesandtheiroperationssothatwecancheckinconstanttimewhetheranelementispresent supposethatinsteadof puclusters eachwithuniversesize weconstructedvebtreestohaveu kclusters eachwithuniversesizeu wherek isaconstant ifweweretomodifytheoperationsappropriately whatwouldbetheir runningtimes forthepurposeofanalysis assumethatu kandu karealwaysintegers creatingavebtreewithuniversesizeurequireso supposewewishtoexplicitlyaccountforthattime whatisthesmallestnumberofoperationsnforwhichtheamortizedtimeofeachoperationinavebtreeiso lglgu problemsforchapter problems spacerequirementsforvanemdeboastreesthisproblemexploresthespacerequirementsforvanemdeboastreesandsug gestsawaytomodifythedatastructuretomakeitsspacerequirementdependon thenumbernofelementsactuallystoredinthetree ratherthanontheuniversesizeu forsimplicity assumethatpuisalwaysaninteger explainwhythefollowingrecurrencecharacterizesthespacerequirementp ofavanemdeboastreewithuniversesizeu puc provethatrecurrence hasthesolutionp inordertoreducethespacerequirements letusde neareduced spacevanemdeboastree orrs vebtree asavebtreevbutwiththefollowingchanges theattributev cluster ratherthanbeingstoredasasimplearrayofpointerstovebtreeswithuniversesizepu isahashtable seechapter storedasady namictable seesection correspondingtothearrayversionofv cluster thehashtablestorespointerstors vebtreeswithuniversesizepu ndtheithcluster welookupthekeyiinthehashtable sothatwecan ndtheithclusterbyasinglesearchinthehashtable thehashtablestoresonlypointerstononemptyclusters asearchinthehashtableforanemptyclusterreturnsnil indicatingthattheclusterisempty theattributev summaryisnilifallclustersareempty otherwise summarypointstoanrs vebtreewithuniversesizepu becausethehashtableisimplementedwithadynamictable thespaceitrequiresisproportionaltothenumberofnonemptyclusters whenweneedtoinsertanelementintoanemptyrs vebtree wecreatethers vebtreebycallingthefollowingprocedure wheretheparameteruistheuniversesizeofthers vebtree veb allocateanewvebtreev udu mindnil maxdnil summarydnil createv clusterasanemptydynamichashtable returnv chapter vanemdeboastreesc modifytheveb insertproceduretoproducepseudocodeforthepro cedurers veb insert whichinsertsxintothers vebtreev callingcreate veb treeasappropriate modifytheveb successorproceduretoproducepseudocodefortheprocedurers veb successor whichreturnsthesuccessorofxinrs vebtreev ornilifxhasnosuccessorinv provethat undertheassumptionofsimpleuniformhashing yourrs veb insertandrs veb successorproceduresrunino lglgu expectedtime assumingthatelementsareneverdeletedfromavebtree provethatthespacerequirementforthers vebtreestructureiso wherenisthenumberofelementsactuallystoredinthers vebtree vebtreeshaveanotheradvantageovervebtrees theyrequirelesstimetocreate howlongdoesittaketocreateanemptyrs vebtree fasttriesthisprobleminvestigatesd willard fasttries likevanemdeboastrees performeachoftheoperationsmember minimum maximum pre decessor andsuccessoronelementsdrawnfromauniversewithsizeuino lglgu worst casetime theinsertanddeleteoperationstakeo lglgu amortizedtime likereduced spacevanemdeboastrees seeproblem fasttriesuseonlyo spacetostorenelements thedesignofy fasttriesreliesonperfecthashing seesection asapreliminarystructure supposethatwecreateaperfecthashtablecontainingnotonlyeveryelementinthedynamicset buteverypre xofthebinaryrepresen tationofeveryelementintheset forexample ifud sothatlgud andxd isintheset thenbecausethebinaryrepresentationof theperfecthashtablewouldcontainthestrings inadditiontothehashtable wecreateadoublylinkedlistoftheelementscurrentlyintheset increasingorder howmuchspacedoesthisstructurerequire showhowtoperformtheminimumandmaximumoperationsino themember predecessor andsuccessoroperationsino lglgu andtheinsertanddeleteoperationsino lgu toreducethespacerequirementtoo wemakethefollowingchangestothedatastructure notesforchapter weclusterthenelementsinton lgugroupsofsizelgu assumefornowthatlgudividesn rstgroupconsistsofthelgusmallestelementsintheset thesecondgroupconsistsofthenextlgusmallestelements andsoon wedesignatea representative valueforeachgroup therepresentativeoftheithgroupisatleastaslargeasthelargestelementintheithgroup anditissmallerthaneveryelementofthe stgroup therepresentativeofthelastgroupcanbethemaximumpossibleelementu notethatarepresentativemightbeavaluenotcurrentlyintheset westorethelguelementsofeachgroupinabalancedbinarysearchtree suchasared blacktree eachrepresentativepointstothebalancedbinarysearch treeforitsgroup andeachbalancedbinarysearchtreepointstoitsgroup representative theperfecthashtablestoresonlytherepresentatives whicharealsostoredin adoublylinkedlistinincreasingorder wecallthisstructureay fasttrie showthatay fasttrierequiresonlyo spacetostorenelements showhowtoperformtheminimumandmaximumoperationsino lglgu timewithay fasttrie showhowtoperformthememberoperationino lglgu showhowtoperformthepredecessorandsuccessoroperationsino lglgu explainwhytheinsertanddeleteoperationstakelglgu showhowtorelaxtherequirementthateachgroupinay fasttriehasexactlylguelementstoallowinsertanddeletetorunino lglgu amortizedtimewithoutaffectingtheasymptoticrunningtimesoftheotheroperations chapternotesthedatastructureinthischapterisnamedafterp vanemdeboas whodescribed anearlyformoftheideain laterpapersbyvanemdeboas andvanemdeboas kaas andzijlstra nedtheideaandtheexposition mehlhornandn aher subsequentlyextendedtheideastoapplytouniverse chapter vanemdeboastreessizesthatareprime mehlhorn sbook containsaslightlydifferenttreatmentofvanemdeboastreesthantheoneinthischapter usingtheideasbehindvanemdeboastrees dementievetal developedanonrecursive levelsearchtreethatranfasterthanvanemdeboastreesin theirownexperiments wangandlin designedahardware pipelinedversionofvanemdeboastrees whichachievesconstantamortizedtimeperoperationanduseso lglgu stagesinthepipeline alowerboundbyp atras cuandthorup ndingthepredecessorshowsthatvanemdeboastreesareoptimalforthisoperation evenifrandomiza tionisallowed datastructuresfordisjointsetssomeapplicationsinvolvegroupingndistinctelementsintoacollectionofdisjointsets theseapplicationsoftenneedtoperformtwooperationsinparticular nding theuniquesetthatcontainsagivenelementandunitingtwosets thischapter exploresmethodsformaintainingadatastructurethatsupportstheseoperations describestheoperationssupportedbyadisjoint setdatastructureandpresentsasimpleapplication insection welookatasimplelinked implementationfordisjointsets presentsamoreef cientrepresen tationusingrootedtrees therunningtimeusingthetreerepresentationistheo reticallysuperlinear butforallpracticalpurposesitislinear nes anddiscussesaveryquicklygrowingfunctionanditsveryslowlygrowinginverse whichappearsintherunningtimeofoperationsonthetree basedimplementation andthen byacomplexamortizedanalysis provesanupperboundontherunning timethatisjustbarelysuperlinear disjoint setoperationsadisjoint setdatastructuremaintainsacollectionsdfs skgofdis jointdynamicsets weidentifyeachsetbyarepresentative whichissomemem beroftheset insomeapplications itdoesn tmatterwhichmemberisusedasthe representative wecareonlythatifweaskfortherepresentativeofadynamicset twicewithoutmodifyingthesetbetweentherequests wegetthesameanswerboth times otherapplicationsmayrequireaprespeci edruleforchoosingtherepre sentative suchaschoosingthesmallestmemberintheset assuming ofcourse thattheelementscanbeordered asintheotherdynamic setimplementationswehavestudied werepresenteachelementofasetbyanobject lettingxdenoteanobject wewishtosupportthefollowingoperations chapter datastructuresfordisjointsetsmake createsanewsetwhoseonlymember andthusrepresentative isx sincethesetsaredisjoint werequirethatxnotalreadybeinsomeotherset union unitesthedynamicsetsthatcontainxandy saysxandsy intoanewsetthatistheunionofthesetwosets weassumethatthetwosetsaredis jointpriortotheoperation therepresentativeoftheresultingsetisanymember ofsx althoughmanyimplementationsofunionspeci callychoosetherepresentativeofeithersxorsyasthenewrepresentative sincewerequirethesetsinthecollectiontobedisjoint conceptuallywedestroysetssxandsy removingthemfromthecollections inpractice weoftenabsorbtheelementsofoneofthesetsintotheotherset returnsapointertotherepresentativeofthe unique setcontain ingx throughoutthischapter weshallanalyzetherunningtimesofdisjoint setdatastructuresintermsoftwoparameters thenumberofmake setoperations andm thetotalnumberofmake union andfind setoperations sincethesetsaredisjoint eachunionoperationreducesthenumberofsetsbyone aftern unionoperations therefore onlyonesetremains thenumberofunionoperationsisthusatmostn notealsothatsincethemake setoperationsareincludedinthetotalnumberofoperationsm wehavemn weassumethatthenmake setoperationsarethe rstnoperationsperformed anapplicationofdisjoint setdatastructuresoneofthemanyapplicationsofdisjoint setdatastructuresarisesindetermin ingtheconnectedcomponentsofanundirectedgraph seesectionb ure forexample showsagraphwithfourconnectedcomponents theprocedureconnected componentsthatfollowsusesthedisjoint setoperationstocomputetheconnectedcomponentsofagraph onceconnected componentshaspreprocessedthegraph theproceduresame componentanswersqueriesaboutwhethertwoverticesareinthesameconnectedcomponent inpseudocode wedenotethesetofverticesofagraphgbyg vandthesetofedgesbyg whentheedgesofthegrapharestatic notchangingovertime wecancomputetheconnectedcomponentsfasterbyusingdepth rstsearch sometimes however theedgesareaddeddynamicallyandweneedtomaintaintheconnectedcomponentsaseachedgeisadded inthiscase theimplementationgivenherecanbemoreef cientthanrunninganewdepth rstsearchforeachnewedge disjoint setoperations abcdefghijedge processedinitial sets collection disjoint sets agraphwithfourconnectedcomponents andfjg thecollectionofdisjointsetsafterprocessingeachedge connected components foreachvertex foreachedge iffind union component iffind returntrue elsereturnfalsetheprocedureconnected componentsinitiallyplaceseachvertexinitsownset foreachedge itunitesthesetscontaininguand byexercise afterprocessingalltheedges twoverticesareinthesamecon nectedcomponentifandonlyifthecorrespondingobjectsareinthesameset connected componentscomputessetsinsuchawaythattheproce duresame componentcandeterminewhethertwoverticesareinthesamecon chapter datastructuresfordisjointsetsnectedcomponent illustrateshowconnected componentscomputesthedisjointsets inanactualimplementationofthisconnected componentsalgorithm therepre sentationsofthegraphandthedisjoint setdatastructurewouldneedtoreference eachother thatis anobjectrepresentingavertexwouldcontainapointerto thecorrespondingdisjoint setobject andviceversa theseprogrammingdetails dependontheimplementationlanguage andwedonotaddressthemfurtherhere exercises supposethatconnected componentsisrunontheundirectedgraphgd wherevdfa kgandtheedgesofearepro cessedintheorder listtheverticesineachconnectedcomponentaftereachiterationoflines showthatafteralledgesareprocessedbyconnected components twover ticesareinthesameconnectedcomponentifandonlyiftheyareinthesameset duringtheexecutionofconnected componentsonanundirectedgraphgd withkconnectedcomponents howmanytimesisfind setcalled howmanytimesisunioncalled expressyouranswersintermsofjvj jej andk linked listrepresentationofdisjointsetsfigure showsasimplewaytoimplementadisjoint setdatastructure eachsetisrepresentedbyitsownlinkedlist theobjectforeachsethasattributeshead pointingtothe rstobjectinthelist andtail pointingtothelastobject eachobjectinthelistcontainsasetmember apointertothenextobjectinthelist apointerbacktothesetobject withineachlinkedlist theobjectsmayappearin anyorder therepresentativeisthesetmemberinthe rstobjectinthelist withthislinked listrepresentation bothmake setandfind setareeasy requiringo tocarryoutmake wecreateanewlinkedlistwhoseonlyobjectisx forfind wejustfollowthepointerfromxbacktoitssetobjectandthenreturnthememberintheobjectthatheadpointsto forexample infigure thecallfind wouldreturnf linked listrepresentationofdisjointsets fgdcheb headtails cheheadtails bfgdheadtails linked listrepresentationsoftwosets sets containsmembersd andg withrepresentativef andsets containsmembersb andh withrepresentativec eachobjectinthelistcontainsasetmember apointertothenextobjectinthelist andapointerbacktothesetobject eachsetobjecthaspointersheadandtailtothe rstandlastobjects respectively theresultofunion whichappendsthelinkedlistcontainingetothelinkedlistcontainingg therepresentativeoftheresultingsetisf thesetobjectfore slist isdestroyed asimpleimplementationofunionthesimplestimplementationoftheunionoperationusingthelinked listsetrep resentationtakessigni cantlymoretimethanmake setorfind asfig ure shows weperformunion byappendingy slistontotheendofx slist therepresentativeofx slistbecomestherepresentativeoftheresultingset weusethetailpointerforx slisttoquickly ndwheretoappendy slist causeallmembersofy slistjoinx slist wecandestroythesetobjectfory slist unfortunately wemustupdatethepointertothesetobjectforeachobjectorigi nallyony slist whichtakestimelinearinthelengthofy slist infigure forexample theoperationunion causespointerstobeupdatedintheobjectsforb andh infact wecaneasilyconstructasequenceofmoperationsonnobjectsthatrequires supposethatwehaveobjectsx weexecutethesequenceofnmake setoperationsfollowedbyn unionoperationsshowninfigure sothatmd wespend timeperformingthenmake setoperations becausetheithunionoperationupdatesiobjects thetotalnumberofobjectsupdatedbyalln unionoperationsis chapter datastructuresfordisjointsetsoperationnumberofobjectsupdatedmake union union union union asequenceof operationsonnobjectsthattakes timeperoperationonaverage usingthelinked listsetrepresentationandthesimpleimplementationofunion xid thetotalnumberofoperationsis andsoeachoperationonaveragerequires thatis theamortizedtimeofanoperationis aweighted unionheuristicintheworstcase theaboveimplementationoftheunionprocedurerequiresanaverageof timepercallbecausewemaybeappendingalongerlistontoashorterlist wemustupdatethepointertothesetobjectforeachmemberof thelongerlist supposeinsteadthateachlistalsoincludesthelengthofthelist whichwecaneasilymaintain andthatwealwaysappendtheshorterlistontothe longer breakingtiesarbitrarily withthissimpleweighted unionheuristic asin gleunionoperationcanstilltake timeifbothsetshave members asthefollowingtheoremshows however asequenceofmmake union andfind setoperations nofwhicharemake setoperations takeso mcnlgn theorem usingthelinked listrepresentationofdisjointsetsandtheweighted unionheuris tic asequenceofmmake union andfind setoperations nofwhicharemake setoperations takeso mcnlgn linked listrepresentationofdisjointsets proofbecauseeachunionoperationunitestwodisjointsets weperformatmostn unionoperationsoverall wenowboundthetotaltimetakenbytheseunionoperations westartbydetermining foreachobject anupperboundonthenumberoftimestheobject spointerbacktoitssetobjectisupdated considera particularobjectx weknowthateachtimex spointerwasupdated xmusthavestartedinthesmallerset rsttimex spointerwasupdated therefore theresultingsetmusthavehadatleast members similarly thenexttimex spointerwasupdated theresultingsetmusthavehadatleast members continuingon weobservethatforanykn afterx spointerhasbeenupdateddlgketimes theresultingsetmusthaveatleastkmembers sincethelargestsethasatmostnmembers eachobject spointerisupdatedatmostdlgnetimesoveralltheunionoperations thusthetotaltimespentupdatingobjectpointersoverallunionoperationsiso nlgn wemustalsoaccountforupdatingthetailpointersandthelistlengths whichtakeonly timeperunionoperation thetotaltimespentinallunionoperationsisthuso nlgn thetimefortheentiresequenceofmoperationsfollowseasily eachmake setandfind setoperationtakeso andthereareo ofthem thetotaltimefortheentiresequenceisthuso mcnlgn exercises writepseudocodeformake andunionusingthelinked listrepresentationandtheweighted unionheuristic makesuretospecifytheattributes thatyouassumeforsetobjectsandlistobjects showthedatastructurethatresultsandtheanswersreturnedbythefind setoperationsinthefollowingprogram usethelinked listrepresentationwiththe weighted unionheuristic forid forid union xic forid union xic union union union chapter datastructuresfordisjointsetsassumethatifthesetscontainingxiandxjhavethesamesize thentheoperationunion appendsxj slistontoxi slist adapttheaggregateproofoftheorem toobtainamortizedtimebounds ofo formake setandfind setando lgn forunionusingthelinked listrepresentationandtheweighted unionheuristic giveatightasymptoticboundontherunningtimeofthesequenceofoperationsinfigure assumingthelinked listrepresentationandtheweighted unionheuris tic professorgomperssuspectsthatitmightbepossibletokeepjustonepointerin eachsetobject ratherthantwo headandtail whilekeepingthenumberofpoint ersineachlistelementattwo showthattheprofessor ssuspicioniswellfounded bydescribinghowtorepresenteachsetbyalinkedlistsuchthateachoperation hasthesamerunningtimeastheoperationsdescribedinthissection alsohowtheoperationswork yourschemeshouldallowfortheweighted union heuristic withthesameeffectasdescribedinthissection hint usethetailofalinkedlistasitsset srepresentative suggestasimplechangetotheunionprocedureforthelinked listrepresentationthatremovestheneedtokeepthetailpointertothelastobjectineachlist whetherornottheweighted unionheuristicisused yourchangeshouldnotchangetheasymptoticrunningtimeoftheunionprocedure hint ratherthanappendingonelisttoanother splicethemtogether disjoint setforestsinafasterimplementationofdisjointsets werepresentsetsbyrootedtrees eachnodecontainingonememberandeachtreerepresentingoneset inadisjoint setforest illustratedinfigure eachmemberpointsonlytoitsparent therootofeachtreecontainstherepresentativeandisitsownparent asweshallsee althoughthestraightforwardalgorithmsthatusethisrepresentationareno fasterthanonesthatusethelinked listrepresentation byintroducingtwoheuris tics unionbyrank pathcompression wecanachieveanasymptotically optimaldisjoint setdatastructure disjoint setforests che bfd fche adisjoint setforest twotreesrepresentingthetwosetsoffigure thetreeontheleftrepresentsthesetfb withcastherepresentative andthetreeontherightrepresentsthesetfd withfastherepresentative theresultofunion weperformthethreedisjoint setoperationsasfollows amake setoperationsimplycreatesatreewithjustonenode weperformafind setoperationbyfollowingparentpointersuntilwe ndtherootofthetree thenodesvisitedon thissimplepathtowardtherootconstitutethe ndpath aunionoperation showninfigure causestherootofonetreetopointtotherootoftheother heuristicstoimprovetherunningtimesofar wehavenotimprovedonthelinked listimplementation asequenceofn unionoperationsmaycreateatreethatisjustalinearchainofnnodes byusingtwoheuristics however wecanachievearunningtimethatisalmostlinear inthetotalnumberofoperationsm rstheuristic unionbyrank issimilartotheweighted unionheuristicweusedwiththelinked listrepresentation theobviousapproachwouldbetomaketherootofthetreewithfewernodespointtotherootofthetreewithmorenodes ratherthanexplicitlykeepingtrackofthesizeofthesubtreerootedateachnode weshalluseanapproachthateasestheanalysis foreachnode wemaintainarank whichisanupperboundontheheightofthenode inunionbyrank wemaketherootwithsmallerrankpointtotherootwithlargerrankduringaunionoperation thesecondheuristic pathcompression isalsoquitesimpleandhighlyeffec tive asshowninfigure weuseitduringfind setoperationstomakeeachnodeonthe ndpathpointdirectlytotheroot pathcompressiondoesnotchange anyranks chapter datastructuresfordisjointsetsabcdefabcdef pathcompressionduringtheoperationfind arrowsandself loopsatrootsareomitted atreerepresentingasetpriortoexecutingfind trianglesrepresentsubtreeswhoserootsarethenodesshown eachnodehasapointertoitsparent thesamesetafterexecutingfind eachnodeonthe ndpathnowpointsdirectlytotheroot pseudocodefordisjoint setforeststoimplementadisjoint setforestwiththeunion rankheuristic wemustkeeptrackofranks witheachnodex wemaintaintheintegervaluex rank whichisanupperboundontheheightofx thenumberofedgesinthelongestsimplepathbetweenxandadescendantleaf whenmake setcreatesasingletonset thesinglenodeinthecorrespondingtreehasaninitialrankof eachfind setoper ationleavesallranksunchanged theunionoperationhastwocases dependingonwhethertherootsofthetreeshaveequalrank iftherootshaveunequalrank wemaketherootwithhigherranktheparentoftherootwithlowerrank butthe ranksthemselvesremainunchanged instead therootshaveequalranks arbitrarilychooseoneoftherootsastheparentandincrementitsrank letusputthismethodintopseudocode wedesignatetheparentofnodexbyx thelinkprocedure asubroutinecalledbyunion takespointerstotworootsasinputs disjoint setforests pdx rankd union link link ifx rank rank pdx elsex pdy ifx rank rank rankdy rankc thefind setprocedurewithpathcompressionisquitesimple ifx pdfind returnx pthefind setprocedureisatwo passmethod asitrecurses itmakesonepassupthe ndpathto ndtheroot andastherecursionunwinds itmakesasecond passbackdownthe ndpathtoupdateeachnodetopointdirectlytotheroot calloffind returnsx pinline ifxistheroot thenfind setskipsline andinsteadreturnsx whichisx thisisthecaseinwhichtherecursionbottomsout otherwise executes andtherecursivecallwithparameterx preturnsapointertotheroot updatesnodextopointdirectlytotheroot andline returnsthispointer effectoftheheuristicsontherunningtimeseparately eitherunionbyrankorpathcompressionimprovestherunningtimeoftheoperationsondisjoint setforests andtheimprovementisevengreaterwhen weusethetwoheuristicstogether alone unionbyrankyieldsarunningtime ofo mlgn seeexercise andthisboundistight seeexercise althoughweshallnotproveithere forasequenceofnmake setopera tions andhenceatmostn unionoperations andffind setopera tions thepath compressionheuristicalonegivesaworst caserunningtimeof ncf clog chapter datastructuresfordisjointsetswhenweusebothunionbyrankandpathcompression theworst caserunningtimeiso isaveryslowlygrowingfunction whichwede neinsection inanyconceivableapplicationofadisjoint setdatastructure wecanviewtherunningtimeaslinearinminallpracticalsitua tions strictlyspeaking however itissuperlinear insection weprovethis upperbound exercises redoexercise usingadisjoint setforestwithunionbyrankandpathcom pression writeanonrecursiveversionoffind setwithpathcompression giveasequenceofmmake union andfind setoperations nofwhicharemake setoperations thattakesmlgn timewhenweuseunionbyrankonly supposethatwewishtoaddtheoperationprint whichisgivenanodexandprintsallthemembersofx sset inanyorder showhowwecanaddjustasingleattributetoeachnodeinadisjoint setforestsothatprint takestimelinearinthenumberofmembersofx ssetandtheasymptoticrunningtimesoftheotheroperationsareunchanged assumethatwecanprinteachmemberofthesetino showthatanysequenceofmmake andlinkoperations whereallthelinkoperationsappearbeforeanyofthefind setoperations takesonlyo timeifweusebothpathcompressionandunionbyrank whathappensinthesamesituationifweuseonlythepath compressionheuristic analysisofunionbyrankwithpathcompression analysisofunionbyrankwithpathcompressionasnotedinsection thecombinedunion rankandpath compressionheu risticrunsintimeo formdisjoint setoperationsonnelements inthissection weshallexaminethefunction toseejusthowslowlyitgrows thenweprovethisrunningtimeusingthepotentialmethodofamortizedanalysis averyquicklygrowingfunctionanditsveryslowlygrowinginverseforintegersk andj wede nethefunctionak asak ifkd ifk wheretheexpressiona usesthefunctional iterationnotationgiveninsec tion speci cally djanda dak fori wewillrefertotheparameterkasthelevelofthefunctiona thefunctionak strictlyincreaseswithbothjandk toseejusthowquicklythisfunctiongrows rstobtainclosed formexpressionsfora anda lemma foranyintegerj wehavea proofwe rstuseinductiononitoshowthata djci forthebasecase wehavea djdjc fortheinductivestep assumethata djc thena djci finally wenotethata djc lemma foranyintegerj wehavea proofwe rstuseinductiononitoshowthata forthebasecase wehavea djd fortheinductivestep assumethata thena finally wenotethata nowwecanseehowquicklyak growsbysimplyexaminingak forlevelskd fromthede nitionofa andtheabovelemmas wehavea anda chapter datastructuresfordisjointsetswealsohavea whichistheestimatednumberofatomsintheobservableuniverse thesymbol denotesthe greater relation wede netheinverseofthefunctionak forintegern dminfkwak inwords isthelowestlevelkforwhichak isatleastn fromtheabovevaluesofak weseethat fornd itisonlyforvaluesofnsolargethattheterm astronomical understatesthem greaterthana ahugenumber andso forallpracticalpurposes analysisofunionbyrankwithpathcompression propertiesofranksintheremainderofthissection weproveano boundontherunningtimeofthedisjoint setoperationswithunionbyrankandpathcompression inorderto provethisbound rstprovesomesimplepropertiesofranks lemma forallnodesx wehavex rankx rank withstrictinequalityifx thevalueofx rankisinitially andincreasesthroughtimeuntilx fromthenon rankdoesnotchange thevalueofx rankmonotonicallyincreasesovertime prooftheproofisastraightforwardinductiononthenumberofoperations ingtheimplementationsofmake union andfind setthatappearinsection weleaveitasexercise corollary aswefollowthesimplepathfromanynodetowardaroot thenoderanksstrictly increase lemma everynodehasrankatmostn proofeachnode srankstartsat anditincreasesonlyuponlinkoperations becausethereareatmostn unionoperations therearealsoatmostn linkoperations becauseeachlinkoperationeitherleavesallranksaloneorincreasessomenode srankby allranksareatmostn lemma providesaweakboundonranks infact everynodehasrankatmostblgnc seeexercise thelooserboundoflemma willsuf ceforourpurposes however provingthetimeboundweshallusethepotentialmethodofamortizedanalysis seesection toprovetheo timebound inperformingtheamortizedanalysis wewill nditconvenienttoassumethatweinvokethelinkoperationratherthantheunionoperation thatis sincetheparametersofthelinkprocedurearepointerstotworoots weactasthoughweperformtheappropriatefind setoperationssepa rately thefollowinglemmashowsthatevenifwecounttheextrafind setop erationsinducedbyunioncalls theasymptoticrunningtimeremainsunchanged chapter datastructuresfordisjointsetslemma supposeweconvertasequences ofm union andfind setop erationsintoasequencesofmmake link andfind setoperationsbyturningeachunionintotwofind setoperationsfollowedbyalink ifsequencesrunsino sequences runsino proofsinceeachunionoperationinsequences isconvertedintothreeopera tionsins wehavem sincemdo ano timeboundfortheconvertedsequencesimpliesano timeboundfortheoriginalsequences intheremainderofthissection weshallassumethattheinitialsequenceofm union andfind setoperationshasbeenconvertedtoasequenceofmmake link andfind setoperations wenowproveano timeboundfortheconvertedsequenceandappealtolemma toprovethe runningtimeoftheoriginalsequenceofm operations potentialfunctionthepotentialfunctionweuseassignsapotentialq toeachnodexinthedisjoint setforestafterqoperations wesumthenodepotentialsforthepoten tialoftheentireforest qdpxq qdenotesthepotentialoftheforestafterqoperations theforestisemptypriortothe rstoperation andwearbitrarilyset nopotential qwilleverbenegative thevalueofq dependsonwhetherxisatreerootaftertheqthoperation ifitis orifx rankd thenq rank nowsupposethataftertheqthoperation xisnotarootandthatx rank weneedtode netwoauxiliaryfunctionsonxbeforewecande neq firstwede nelevel dmaxfkwx rankak rank thatis isthegreatestlevelkforwhichak appliedtox srank isnogreaterthanx sparent srank weclaimthat whichweseeasfollows wehave rankx rankc bylemma rank byde nitionofa whichimpliesthatlevel andwehave analysisofunionbyrankwithpathcompression rank becauseak isstrictlyincreasing bythede nitionof rank bylemma whichimpliesthatlevel notethatbecausex rankmonotonicallyincreasesovertime sodoeslevel thesecondauxiliaryfunctionapplieswhenx rank iter dmax iwx ranka rank thatis iter isthelargestnumberoftimeswecaniterativelyapplyalevel appliedinitiallytox srank beforewegetavaluegreaterthanx sparent srank weclaimthatwhenx rank wehave iter rank whichweseeasfollows wehave rankalevel rank byde nitionoflevel rank byde nitionoffunctionaliteration whichimpliesthatiter andwehavea rankc rank dalevel rank byde nitionofak rank byde nitionoflevel whichimpliesthatiter rank notethatbecausex rankmonotonicallyincreasesovertime inorderforiter todecrease mustincrease aslongaslevel remainsunchanged iter musteitherincreaseorremainunchanged withtheseauxiliaryfunctionsinplace wearereadytode nethepotentialofnodexafterqoperations rankifxisarootorx rankd rankiter ifxisnotarootandx rank wenextinvestigatesomeusefulpropertiesofnodepotentials lemma foreverynodex andforalloperationcountsq wehave rank chapter datastructuresfordisjointsetsproofifxisarootorx rankd thenq rankbyde nition nowsupposethatxisnotarootandthatx rank weobtainalowerboundonq bymaximizinglevel anditer bythebound andbythebound iter rank rankiter rankx rankdx rankx rankd similarly weobtainanupperboundonq byminimizinglevel anditer bythebound andbythebound iter rank rank rank corollary ifnodexisnotarootandx rank thenq rank potentialchangesandamortizedcostsofoperationswearenowreadytoexaminehowthedisjoint setoperationsaffectnodepotentials withanunderstandingofthechangeinpotentialduetoeachoperation wecan determineeachoperation samortizedcost lemma letxbeanodethatisnotaroot andsupposethattheqthoperationiseitheralinkorfind thenaftertheqthoperation moreover ifx rank andeitherlevel oriter changesduetotheqthoperation thenq thatis spotentialcannotincrease andifithaspositiverankandeitherlevel oriter changes thenx spotentialdropsbyatleast proofbecausexisnotaroot theqthoperationdoesnotchangex rank andbecausendoesnotchangeaftertheinitialnmake setoperations remainsunchangedaswell hence thesecomponentsoftheformulaforx spotentialre mainthesameaftertheqthoperation ifx rankd thenq nowassumethatx rank recallthatlevel monotonicallyincreasesovertime iftheqthoperationleaveslevel unchanged theniter eitherincreasesorremainsunchanged ifbothlevel anditer areunchanged thenq iflevel analysisofunionbyrankwithpathcompression isunchangedanditer increases thenitincreasesbyatleast andsoq finally iftheqthoperationincreaseslevel itincreasesbyatleast sothatthevalueoftheterm rankdropsbyatleastx rank causelevel increased thevalueofiter mightdrop butaccordingtothebound thedropisbyatmostx rank theincreaseinpoten tialduetothechangeiniter islessthanthedecreaseinpotentialduetothechangeinlevel andweconcludethatq nalthreelemmasshowthattheamortizedcostofeachmake link andfind setoperationiso recallfromequation thattheamor tizedcostofeachoperationisitsactualcostplustheincreaseinpotentialdueto theoperation lemma theamortizedcostofeachmake setoperationiso proofsupposethattheqthoperationismake thisoperationcreatesnodexwithrank sothatq nootherranksorpotentialschange andso notingthattheactualcostofthemake setoperationiso completestheproof lemma theamortizedcostofeachlinkoperationiso proofsupposethattheqthoperationislink theactualcostofthelinkoperationiso withoutlossofgenerality supposethatthelinkmakesytheparentofx todeterminethechangeinpotentialduetothelink wenotethattheonlynodeswhosepotentialsmaychangearex andthechildrenofyjustpriortotheoperation weshallshowthattheonlynodewhosepotentialcanincreasedueto thelinkisy andthatitsincreaseisatmost bylemma anynodethatisy schildjustbeforethelinkcannothaveitspotentialincreaseduetothelink fromthede nitionofq weseethat sincexwasarootjustbeforetheqthoperation rank ifx rankd thenq otherwise rank bycorollary andsox spotentialdecreases chapter datastructuresfordisjointsetsbecauseyisarootpriortothelink rank thelinkoperationleavesyasaroot anditeitherleavesy srankaloneoritincreasesy srankby therefore eitherq orq theincreaseinpotentialduetothelinkoperation therefore isatmost theamortizedcostofthelinkoperationiso lemma theamortizedcostofeachfind setoperationiso proofsupposethattheqthoperationisafind setandthatthe ndpathcon tainssnodes theactualcostofthefind setoperationiso weshallshowthatnonode spotentialincreasesduetothefind setandthatatleastmax nodesonthe ndpathhavetheirpotentialdecreasebyatleast toseethatnonode spotentialincreases rstappealtolemma forallnodesotherthantheroot ifxistheroot thenitspotentialis rank whichdoesnotchange nowweshowthatatleastmax nodeshavetheirpotentialdecreasebyatleast letxbeanodeonthe ndpathsuchthatx rank andxisfollowedsomewhereonthe ndpathbyanothernodeythatisnotaroot wherelevel dlevel justbeforethefind setoperation nodeyneednotimmediatelyfollowxonthe ndpath allbutatmost nodesonthe ndpathsatisfytheseconstraintsonx thosethatdonotsatisfythemarethe rstnodeonthe ndpath ifithasrank thelastnodeonthepath theroot andthelastnodewonthepathforwhichlevel foreachkd letus xsuchanodex andweshallshowthatx spotentialdecreasesbyatleast letkdlevel dlevel justpriortothepathcompressioncausedbythefind wehavex ranka iter rank byde nitionofiter rankak rank byde nitionoflevel rankx rank bycorollary andbecauseyfollowsxonthe ndpath puttingtheseinequalitiestogetherandlettingibethevalueofiter beforepathcompression wehavey rankak rank rank becauseak isstrictlyincreasing iter rank rank analysisofunionbyrankwithpathcompression becausepathcompressionwillmakexandyhavethesameparent weknowthatafterpathcompression rankdy rankandthatthepathcompressiondoesnotdecreasey rank sincex rankdoesnotchange afterpathcompressionwehavethatx ranka rank pathcompressionwillcauseei theriter toincrease toatleastic orlevel toincrease whichoccursifiter increasestoatleastx rankc ineithercase bylemma wehaveq hence spotentialdecreasesbyatleast theamortizedcostofthefind setoperationistheactualcostplusthechangeinpotential theactualcostiso andwehaveshownthatthetotalpotentialdecreasesbyatleastmax theamortizedcost therefore isatmosto sco sincewecanscaleuptheunitsofpotentialtodominatetheconstanthiddenino puttingtheprecedinglemmastogetheryieldsthefollowingtheorem theorem asequenceofmmake union andfind setoperations nofwhicharemake setoperations canbeperformedonadisjoint setforestwithunionbyrankandpathcompressioninworst casetimeo proofimmediatefromlemmas exercises provelemma provethateverynodehasrankatmostblgnc inlightofexercise howmanybitsarenecessarytostorex rankforeachnodex usingexercise giveasimpleproofthatoperationsonadisjoint setforest withunionbyrankbutwithoutpathcompressionrunino mlgn professordantereasonsthatbecausenoderanksincreasestrictlyalongasimple pathtotheroot nodelevelsmustmonotonicallyincreasealongthepath inother chapter datastructuresfordisjointsetswords ifx rank andx pisnotaroot thenlevel istheprofessorcorrect considerthefunction dminfkwak showthat forallpracticalvaluesofnand usingexercise showhowtomodifythepotential functionargumenttoprovethatwecanperformasequenceofmmake union andfind setoperations nofwhicharemake setoperations onadisjoint setforestwithunionbyrankandpathcompressioninworst casetimeo problems lineminimumtheoff lineminimumproblemasksustomaintainadynamicsettofelementsfromthedomainf ngundertheoperationsinsertandextract min wearegivenasequencesofninsertandmextract mincalls whereeachkeyinf ngisinsertedexactlyonce wewishtodeterminewhichkeyisreturnedbyeachextract mincall speci cally wewishto llinanarrayextracted whereforid extracted iisthekeyreturnedbytheithextract mincall theproblemis inthesensethatweareallowedtoprocesstheentiresequencesbeforedetermininganyofthereturnedkeys inthefollowinginstanceoftheoff lineminimumproblem eachoperationinsert isrepresentedbythevalueofiandeachextract minisrep resentedbythelettere fillinthecorrectvaluesintheextractedarray todevelopanalgorithmforthisproblem webreakthesequencesintohomoge neoussubsequences thatis werepresentsbyi imc whereeacherepresentsasingleextract mincallandeachijrepresentsa pos siblyempty sequenceofinsertcalls foreachsubsequenceij weinitiallyplacethekeysinsertedbytheseoperationsintoasetkj whichisemptyifijisempty wethendothefollowing problemsforchapter minimum forid ton determinejsuchthati ifj extracted jdi letlbethesmallestvaluegreaterthanjforwhichsetklexists kldkj destroyingkj returnextractedb arguethatthearrayextractedreturnedbyoff minimumiscorrect describehowtoimplementoff minimumef cientlywithadisjoint setdatastructure giveatightboundontheworst caserunningtimeofyour implementation depthdeterminationinthedepth determinationproblem wemaintainaforestfdftigofrootedtreesunderthreeoperations createsatreewhoseonlynodeis depth returnsthedepthofnodewithinitstree graft makesnoder whichisassumedtobetherootofatree becomethechildofnode whichisassumedtobeinadifferenttreethanrbutmayormaynotitselfbearoot supposethatweuseatreerepresentationsimilartoadisjoint setforest pistheparentofnode exceptthatpdifisaroot supposefurtherthatweimplementgraft bysettingr pdandfind depth byfollowingthe ndpathuptotheroot returningacountofallnodesotherthanencountered showthattheworst caserunningtimeofasequenceofmmake depth andgraftoperationsis byusingtheunion rankandpath compressionheuristics wecanreducetheworst caserunningtime weusethedisjoint setforestsdfsig whereeachsetsi whichisitselfatree correspondstoatreetiintheforestf thetreestructurewithinasetsi however doesnotnecessarilycorrespondtothatofti infact theimplementationofsidoesnotrecordtheexactparent childrelationshipsbutneverthelessallowsustodetermineanynode sdepthinti thekeyideaistomaintainineachnodea pseudodistance whichisde nedsothatthesumofthepseudodistancesalongthesimplepathfromtothe chapter datastructuresfordisjointsetsrootofitssetsiequalsthedepthofinti thatis ifthesimplepathfromtoitsrootinsiis dandkissi sroot thenthedepthofintiispkjd giveanimplementationofmake showhowtomodifyfind settoimplementfind depth yourimplemen tationshouldperformpathcompression anditsrunningtimeshouldbelinear inthelengthofthe ndpath makesurethatyourimplementationupdatespseudodistancescorrectly showhowtoimplementgraft whichcombinesthesetscontainingrand bymodifyingtheunionandlinkprocedures makesurethatyourimplementationupdatespseudodistancescorrectly notethattherootofasetsiisnotnecessarilytherootofthecorrespondingtreeti giveatightboundontheworst caserunningtimeofasequenceofmmake depth andgraftoperations nofwhicharemake treeop erations tarjan soff lineleast ancestorsalgorithmtheleastcommonancestoroftwonodesuandinarootedtreetisthenodewthatisanancestorofbothuandandthathasthegreatestdepthint intheoff lineleast ancestorsproblem wearegivenarootedtreetandanarbitrarysetpdffu ggofunorderedpairsofnodesint andwewishtodeter minetheleastcommonancestorofeachpairinp tosolvetheoff lineleast ancestorsproblem thefollowingprocedureperformsatreewalkoftwiththeinitialcalllca weassumethateachnodeiscoloredwhitepriortothewalk lca ancestordu foreachchildofuint lca union ancestordu colordblack foreachnodesuchthatfu ifcolor theleastcommonancestorof ancestor notesforchapter arguethatline executesexactlyonceforeachpairfu arguethatatthetimeofthecalllca thenumberofsetsinthedisjoint setdatastructureequalsthedepthofuint provethatlcacorrectlyprintstheleastcommonancestorofuandforeachpairfu analyzetherunningtimeoflca assumingthatweusetheimplementationofthedisjoint setdatastructureinsection chapternotesmanyoftheimportantresultsfordisjoint setdatastructuresaredueatleastinpart tor tarjan usingaggregateanalysis tarjan gavethe rsttight upperboundintermsoftheveryslowlygrowinginversey ofackermann sfunction thefunctionak giveninsection issimilartoackermann sfunction andthefunction issimilartotheinverse andy areatmost forallconceivablevaluesofmandn ano mlgn upperboundwasprovenearlierbyhopcroftandullman thetreatmentinsection isadaptedfromalateranalysisbytarjan whichisinturnbasedonananal ysisbykozen harfstandreingold giveapotential basedversionoftarjan searlierbound tarjanandvanleeuwen discussvariantsonthepath compressionheuris tic including passmethods whichsometimesofferbetterconstantfactors intheirperformancethandotwo passmethods aswithtarjan searlieranalyses ofthebasicpath compressionheuristic theanalysesbytarjanandvanleeuwen areaggregate harfstandreingold latershowedhowtomakeasmallchange tothepotentialfunctiontoadapttheirpath compressionanalysistotheseone variants gabowandtarjan showthatincertainapplications thedisjoint operationscanbemadetorunino tarjan showedthatalowerboundofmy timeisrequiredforoperationsonanydisjoint setdatastructuresatisfyingcertaintechnicalconditions thislowerboundwaslatergeneralizedbyfredmanandsaks whoshowed thatintheworstcase lgn bitwordsofmemorymustbeaccessed vigraphalgorithms introductiongraphproblemspervadecomputerscience andalgorithmsforworkingwiththemarefundamentaltothe eld hundredsofinterestingcomputationalproblemsarecouchedintermsofgraphs inthispart wetouchonafewofthemoresigni cant ones chapter showshowwecanrepresentagraphinacomputerandthendiscussesalgorithmsbasedonsearchingagraphusingeitherbreadth rstsearchordepth rstsearch thechaptergivestwoapplicationsofdepth rstsearch topologically sortingadirectedacyclicgraphanddecomposingadirectedgraphintoitsstrongly connectedcomponents chapter describeshowtocomputeaminimum weightspanningtreeofagraph theleast weightwayofconnectingalloftheverticestogetherwheneachedgehasanassociatedweight thealgorithmsforcomputingminimumspanning treesserveasgoodexamplesofgreedyalgorithms seechapter chapters considerhowtocomputeshortestpathsbetweenverticeswheneachedgehasanassociatedlengthor chapter showshowto ndshortestpathsfromagivensourcevertextoallothervertices andchapter examinesmethodstocomputeshortestpathsbetweeneverypairofvertices finally chapter showshowtocomputeamaximum owofmaterialina ownetwork whichisadirectedgraphhavingaspeci edsourcevertexofmaterial speci edsinkvertex andspeci edcapacitiesfortheamountofmaterialthatcan traverseeachdirectededge thisgeneralproblemarisesinmanyforms anda goodalgorithmforcomputingmaximum owscanhelpsolveavarietyofrelated problemsef ciently partvigraphalgorithmswhenwecharacterizetherunningtimeofagraphalgorithmonagivengraphgd weusuallymeasurethesizeoftheinputintermsofthenumberofverticesjvjandthenumberofedgesjejofthegraph thatis wedescribethesizeoftheinputwithtwoparameters notjustone weadoptacommonnotational conventionfortheseparameters insideasymptoticnotation suchaso notationor notation andonlyinsidesuchnotation thesymbolvdenotesjvjandthesymboledenotesjej forexample wemightsay thealgorithmrunsintimeo meaningthatthealgorithmrunsintimeo jvjjej thisconven tionmakestherunning timeformulaseasiertoread withoutriskofambiguity anotherconventionweadoptappearsinpseudocode wedenotethevertexsetofagraphgbyg vanditsedgesetbyg thatis thepseudocodeviewsvertexandedgesetsasattributesofagraph elementarygraphalgorithmsthischapterpresentsmethodsforrepresentingagraphandforsearchingagraph searchingagraphmeanssystematicallyfollowingtheedgesofthegraphsoasto visittheverticesofthegraph agraph searchingalgorithmcandiscovermuch aboutthestructureofagraph manyalgorithmsbeginbysearchingtheirinput graphtoobtainthisstructuralinformation severalothergraphalgorithmselabo rateonbasicgraphsearching techniquesforsearchingagraphlieattheheartof eldofgraphalgorithms discussesthetwomostcommoncomputationalrepresentationsofgraphs asadjacencylistsandasadjacencymatrices presentsasim plegraph searchingalgorithmcalledbreadth rstsearchandshowshowtocre ateabreadth rsttree presentsdepth rstsearchandprovessomestandardresultsabouttheorderinwhichdepth rstsearchvisitsvertices sec tion providesour rstrealapplicationofdepth rstsearch topologicallysort ingadirectedacyclicgraph asecondapplicationofdepth rstsearch ndingthestronglyconnectedcomponentsofadirectedgraph isthetopicofsection representationsofgraphswecanchoosebetweentwostandardwaystorepresentagraphgd asacollectionofadjacencylistsorasanadjacencymatrix eitherwayapplies tobothdirectedandundirectedgraphs becausetheadjacency listrepresentation providesacompactwaytorepresentsparsegraphs thoseforwhichjejismuchlessthanjvj itisusuallythemethodofchoice mostofthegraphalgorithmspresentedinthisbookassumethataninputgraphisrepresentedinadjacency listform wemaypreferanadjacency matrixrepresentation however whenthegraphisdense jejisclosetojvj orwhenweneedtobeabletotellquicklyifthereisanedgeconnectingtwogivenvertices forexample twooftheall pairs chapter elementarygraphalgorithms tworepresentationsofanundirectedgraph anundirectedgraphgwith verticesand edges anadjacency listrepresentationofg theadjacency matrixrepresentationofg tworepresentationsofadirectedgraph adirectedgraphgwith verticesand edges anadjacency listrepresentationofg theadjacency matrixrepresentationofg shortest pathsalgorithmspresentedinchapter assumethattheirinputgraphsarerepresentedbyadjacencymatrices theadjacency listrepresentationofagraphgd consistsofanar rayadjofjvjlists oneforeachvertexinv foreachu theadjacencylistadjcontainsalltheverticessuchthatthereisanedge thatis adjconsistsofalltheverticesadjacenttouing alternatively itmaycontainpointerstothesevertices sincetheadjacencylistsrepresenttheedgesofagraph inpseudocodewetreatthearrayadjasanattributeofthegraph justaswetreattheedgesete inpseudocode therefore wewillseenotationsuchasg adj isanadjacency listrepresentationoftheundirectedgraphinfig ure similarly isanadjacency listrepresentationofthe directedgraphinfigure ifgisadirectedgraph thesumofthelengthsofalltheadjacencylistsisjej sinceanedgeoftheform isrepresentedbyhavingappearinadj ifgis representationsofgraphs anundirectedgraph thesumofthelengthsofalltheadjacencylistsis jej sinceif isanundirectededge thenuappearsin sadjacencylistandviceversa forbothdirectedandundirectedgraphs theadjacency listrepresentationhasthe desirablepropertythattheamountofmemoryitrequiresis vce wecanreadilyadaptadjacencyliststorepresentweightedgraphs thatis graphsforwhicheachedgehasanassociatedweight typicallygivenbyaweightfunctionwwe forexample letgd beaweightedgraphwithweightfunctionw wesimplystoretheweightw oftheedge ewithvertexinu sadjacencylist theadjacency listrepresentationisquiterobustinthatwecanmodifyittosupportmanyothergraphvariants apotentialdisadvantageoftheadjacency listrepresentationisthatitprovidesnoquickerwaytodeterminewhetheragivenedge ispresentinthegraphthantosearchforintheadjacencylistadj anadjacency matrixrepresenta tionofthegraphremediesthisdisadvantage butatthecostofusingasymptotically morememory seeexercise forsuggestionsofvariationsonadjacencylists thatpermitfasteredgelookup fortheadjacency matrixrepresentationofagraphgd weassumethattheverticesarenumbered jvjinsomearbitrarymanner thentheadjacency matrixrepresentationofagraphgconsistsofajvjjvjmatrixad aij suchthataijd otherwise figures aretheadjacencymatricesoftheundirectedanddi rectedgraphsinfigures respectively theadjacencymatrixof agraphrequires memory independentofthenumberofedgesinthegraph observethesymmetryalongthemaindiagonaloftheadjacencymatrixinfig ure sinceinanundirectedgraph representthesameedge theadjacencymatrixaofanundirectedgraphisitsowntranspose adat insomeapplications itpaystostoreonlytheentriesonandabovethediagonalof theadjacencymatrix therebycuttingthememoryneededtostorethegraphalmost inhalf liketheadjacency listrepresentationofagraph anadjacencymatrixcanrepre sentaweightedgraph forexample ifgd isaweightedgraphwithedge weightfunctionw wecansimplystoretheweightw oftheedge eastheentryinrowuandcolumnoftheadjacencymatrix ifanedgedoesnotexist wecanstoreanilvalueasitscorrespondingmatrixentry thoughformanyproblemsitisconvenienttouseavaluesuchas althoughtheadjacency listrepresentationisasymptoticallyatleastasspace cientastheadjacency matrixrepresentation adjacencymatricesaresimpler andsowemaypreferthemwhengraphsarereasonablysmall moreover adja chapter elementarygraphalgorithmscencymatricescarryafurtheradvantageforunweightedgraphs theyrequireonlyonebitperentry representingattributesmostalgorithmsthatoperateongraphsneedtomaintainattributesforverticesand oredges weindicatetheseattributesusingourusualnotation suchasdforanattributedofavertex whenweindicateedgesaspairsofvertices weusethesamestyleofnotation forexample ifedgeshaveanattributef thenwedenotethisattributeforedge forthepurposeofpresentingandunderstandingalgorithms ourattributenotationsuf ces implementingvertexandedgeattributesinrealprogramscanbeanotherstoryentirely thereisnoonebestwaytostoreandaccessvertexandedgeattributes foragivensituation yourdecisionwilllikelydependontheprogramminglan guageyouareusing thealgorithmyouareimplementing andhowtherestofyour programusesthegraph ifyourepresentagraphusingadjacencylists onedesign representsvertexattributesinadditionalarrays suchasanarrayd jvjthatparallelstheadjarray iftheverticesadjacenttouareinadj thenwhatwecalltheattributeu dwouldactuallybestoredinthearrayentryd manyotherwaysofimplementingattributesarepossible forexample inanobject orientedpro gramminglanguage vertexattributesmightberepresentedasinstancevariableswithinasubclassofavertexclass exercises givenanadjacency listrepresentationofadirectedgraph howlongdoesittake tocomputetheout degreeofeveryvertex howlongdoesittaketocomputethe degrees giveanadjacency listrepresentationforacompletebinarytreeon vertices giveanequivalentadjacency matrixrepresentation assumethatverticesarenumbered asinabinaryheap thetransposeofadirectedgraphgd isthegraphgtd whereetdf vvw gtisgwithallitsedgesreversed describeef cientalgorithmsforcomputinggtfromg forboththeadjacency listandadjacency matrixrepresentationsofg analyzetherunningtimesofyouralgorithms representationsofgraphs givenanadjacency listrepresentationofamultigraphgd describeano vce timealgorithmtocomputetheadjacency listrepresentationofthe equivalent undirectedgraphg wheree consistsoftheedgesinewithallmultipleedgesbetweentwoverticesreplacedbyasingleedgeandwithall loopsremoved thesquareofadirectedgraphgd isthegraphg suchthat ifandonlygcontainsapathwithatmosttwoedgesbetweenuand describeef cientalgorithmsforcomputingg fromgforboththeadjacency listandadjacency matrixrepresentationsofg analyzetherunningtimesofyouralgorithms mostgraphalgorithmsthattakeanadjacency matrixrepresentationasinputre quiretimev buttherearesomeexceptions showhowtodeterminewhetheradirectedgraphgcontainsauniversalsink avertexwithin degreejvj andout intimeo givenanadjacencymatrixforg theincidencematrixofadirectedgraphgd withnoself loopsisajvjjejmatrixbd bij suchthatbijd ifedgejleavesvertexi ifedgejentersvertexi otherwise describewhattheentriesofthematrixproductbbtrepresent wherebtisthetransposeofb supposethatinsteadofalinkedlist eacharrayentryadjisahashtablecontain ingtheverticesforwhich ifalledgelookupsareequallylikely whatistheexpectedtimetodeterminewhetheranedgeisinthegraph whatdisadvan tagesdoesthisschemehave suggestanalternatedatastructureforeachedgelist thatsolvestheseproblems doesyouralternativehavedisadvantagescomparedto thehashtable chapter elementarygraphalgorithms breadth rstsearchbreadth rstsearchisoneofthesimplestalgorithmsforsearchingagraphandthearchetypeformanyimportantgraphalgorithms prim sminimum spanning treealgorithm anddijkstra ssingle sourceshortest pathsalgorithm useideassimilartothoseinbreadth rstsearch givenagraphgd andadistinguishedsourcevertexs breadth rstsearchsystematicallyexplorestheedgesofgto discover everyvertexthatisreachablefroms itcomputesthedistance smallestnumberofedges fromstoeachreachablevertex italsoproducesa breadth rsttree withrootsthatcontainsallreachablevertices foranyvertexreachablefroms thesimplepathinthebreadth rsttreefromstocorrespondstoa shortestpath fromstoing thatis apathcontainingthesmallestnumberofedges thealgorithmworksonbothdirectedandundirectedgraphs breadth rstsearchissonamedbecauseitexpandsthefrontierbetweendiscov eredandundiscoveredverticesuniformlyacrossthebreadthofthefrontier thealgorithmdiscoversallverticesatdistancekfromsbeforediscoveringanyverticesatdistancekc tokeeptrackofprogress breadth rstsearchcolorseachvertexwhite orblack allverticesstartoutwhiteandmaylaterbecomegrayandthenblack avertexisdiscoveredthe rsttimeitisencounteredduringthesearch atwhichtimeitbecomesnonwhite grayandblackvertices therefore havebeendiscovered butbreadth rstsearchdistinguishesbetweenthemtoensurethatthesearchproceeds inabreadth rstmanner eandvertexuisblack thenvertexiseithergrayorblack thatis allverticesadjacenttoblackverticeshavebeen discovered grayverticesmayhavesomeadjacentwhitevertices theyrepresent thefrontierbetweendiscoveredandundiscoveredvertices breadth rstsearchconstructsabreadth rsttree initiallycontainingonlyitsroot whichisthesourcevertexs wheneverthesearchdiscoversawhitevertexinthecourseofscanningtheadjacencylistofanalreadydiscoveredvertexu thevertexandtheedge areaddedtothetree wesaythatuisthepredecessororparentofinthebreadth rsttree sinceavertexisdiscoveredatmostonce ithasatmostoneparent ancestoranddescendantrelationshipsinthebreadth rst treearede nedrelativetotherootsasusual ifuisonthesimplepathinthetreefromtherootstovertex thenuisanancestorofandisadescendantofu wedistinguishbetweengrayandblackverticestohelpusunderstandhowbreadth rstsearchop erates infact asexercise shows wewouldgetthesameresultevenifwedidnotdistinguishbetweengrayandblackvertices breadth rstsearch thebreadth rst searchprocedurebfsbelowassumesthattheinputgraphgd isrepresentedusingadjacencylists itattachesseveraladditionalattributestoeachvertexinthegraph westorethecolorofeachvertexu vintheattributeu colorandthepredecessorofuintheattributeu ifuhasnopredecessor forexample ifudsoruhasnotbeendiscovered thenu dnil theattributeu dholdsthedistancefromthesourcestovertexucomputedbythealgorithm thealgorithmalsousesa rst rst outqueueq seesection tomanagethesetofgrayvertices bfs foreachvertexu vfsg colordwhite dnil colordgray dnil enqueue whileq uddequeue foreach adj ifcolor colordgray ddu enqueue colordblackfigure illustratestheprogressofbfsonasamplegraph theprocedurebfsworksasfollows withtheexceptionofthesourcevertexs lines painteveryvertexwhite setu dtobein nityforeachvertexu andsettheparentofeveryvertextobenil paintssgray sinceweconsiderittobediscoveredastheprocedurebegins initializess dto andline setsthepredecessorofthesourcetobenil lines initializeqtothequeuecontainingjustthevertexs thewhileloopoflines iteratesaslongasthereremaingrayvertices whicharediscoveredverticesthathavenotyethadtheiradjacencylistsfullyex amined thiswhileloopmaintainsthefollowinginvariant atthetestinline thequeueqconsistsofthesetofgrayvertices chapter elementarygraphalgorithmsrstuvwxy tuvwxy tuvwxy tuvwxy rsrsrst tuvwxy qrs tuvwxy qrs tuvwxy qrs tuvwxy qrs tuvwxy theoperationofbfsonanundirectedgraph treeedgesareshownshadedastheyareproducedbybfs thevalueofu dappearswithineachvertexu thequeueqisshownatthebeginningofeachiterationofthewhileloopoflines vertexdistancesappearbelowverticesinthequeue althoughwewon tusethisloopinvarianttoprovecorrectness itiseasytoseethatitholdspriortothe rstiterationandthateachiterationoftheloopmaintains theinvariant priortothe rstiteration theonlygrayvertex andtheonlyvertex inq isthesourcevertexs determinesthegrayvertexuattheheadofthequeueqandremovesitfromq theforloopoflines considerseachvertexintheadjacencylistofu ifiswhite thenithasnotyetbeendiscovered andtheprocedurediscoversitbyexecutinglines theprocedurepaints vertexgray setsitsdistancedtou recordsuasitsparent andplacesitatthetailofthequeueq oncetheprocedurehasexaminedalltheverticesonu breadth rstsearch adjacencylist itblackensuinline theloopinvariantismaintainedbecausewheneveravertexispaintedgray inline itisalsoenqueued inline wheneveravertexisdequeued inline itisalsopaintedblack inline theresultsofbreadth rstsearchmaydependupontheorderinwhichtheneigh borsofagivenvertexarevisitedinline thebreadth rsttreemayvary butthe distancesdcomputedbythealgorithmwillnot seeexercise analysisbeforeprovingthevariouspropertiesofbreadth rstsearch wetakeonthesome whateasierjobofanalyzingitsrunningtimeonaninputgraphgd weuseaggregateanalysis aswesawinsection afterinitialization breadth rst searchneverwhitensavertex andthusthetestinline ensuresthateachvertexisenqueuedatmostonce andhencedequeuedatmostonce theoperationsofenqueuinganddequeuingtakeo andsothetotaltimedevotedtoqueueoperationsiso becausetheprocedurescanstheadjacencylistofeachvertexonlywhenthevertexisdequeued itscanseachadjacencylistatmostonce thesumofthelengthsofalltheadjacencylistsis thetotaltimespentinscanningadjacencylistsiso theoverheadforinitializationiso andthusthetotalrunningtimeofthebfsprocedureiso vce breadth rstsearchrunsintimelinearinthesizeoftheadjacency listrepresentationofg shortestpathsatthebeginningofthissection weclaimedthatbreadth rstsearch ndsthedis tancetoeachreachablevertexinagraphgd fromagivensourcevertexs netheshortest pathdistance fromstoastheminimumnum berofedgesinanypathfromvertexstovertex ifthereisnopathfromsto wecallapathoflength fromstoashortestpath fromsto beforeshowingthatbreadth rstsearchcorrectlycomputesshortest pathdistances weinvestigateanimportantpropertyofshortest pathdistances inchapters weshallgeneralizeourstudyofshortestpathstoweightedgraphs inwhicheveryedgehasareal valuedweightandtheweightofapathisthesumoftheweightsofitscon stituentedges thegraphsconsideredinthepresentchapterareunweightedor equivalently alledgeshaveunitweight chapter elementarygraphalgorithmslemma letgd beadirectedorundirectedgraph andlets vbeanarbitraryvertex foranyedge proofifuisreachablefroms thensois inthiscase theshortestpathfromstocannotbelongerthantheshortestpathfromstoufollowedbytheedge andthustheinequalityholds ifuisnotreachablefroms andtheinequalityholds wewanttoshowthatbfsproperlycomputesdd foreachver tex rstshowthatdbounds fromabove lemma letgd beadirectedorundirectedgraph andsupposethatbfsisrunongfromagivensourcevertexs thenupontermination foreachver tex thevaluedcomputedbybfssatis esd proofweuseinductiononthenumberofenqueueoperations ourinductivehypothesisisthatd forall thebasisoftheinductionisthesituationimmediatelyafterenqueuingsinline ofbfs theinductivehypothesisholdshere becauses andd forall vfsg fortheinductivestep considerawhitevertexthatisdiscoveredduringthesearchfromavertexu theinductivehypothesisimpliesthatu fromtheassignmentperformedbyline andfromlemma weobtainddu vertexisthenenqueued anditisneverenqueuedagainbecauseitisalsograyedandthethenclauseoflines isexecutedonlyforwhitevertices thevalueofdneverchangesagain andtheinductivehypothesisismaintained toprovethatdd wemust rstshowmorepreciselyhowthequeueqoperatesduringthecourseofbfs thenextlemmashowsthatatalltimes queueholdsatmosttwodistinctdvalues breadth rstsearch lemma supposethatduringtheexecutionofbfsonagraphgd thequeueqcontainstheverticesh istheheadofqandristhetail andi dic dforid prooftheproofisbyinductiononthenumberofqueueoperations initially whenthequeuecontainsonlys thelemmacertainlyholds fortheinductivestep wemustprovethatthelemmaholdsafterbothdequeuingandenqueuingavertex ifthehead ofthequeueisdequeued becomesthenewhead ifthequeuebecomesempty thenthelemmaholdsvacuously bythe inductivehypothesis butthenwehaver andtheremaininginequalitiesareunaffected thelemmafollowswith asthehead inordertounderstandwhathappensuponenqueuingavertex weneedtoex aminethecodemoreclosely whenweenqueueavertexinline ofbfs itbecomesrc atthattime wehavealreadyremovedvertexu whoseadjacencylistiscurrentlybeingscanned fromthequeueq andbytheinductivehypothesis thenewhead ddddu fromtheinductivehypothesis wealsohaver andsor dddrc andtheremaininginequalitiesareunaffected thelemmafollowswhenisenqueued thefollowingcorollaryshowsthatthedvaluesatthetimethatverticesareenqueuedaremonotonicallyincreasingovertime corollary supposethatverticesiandjareenqueuedduringtheexecutionofbfs andthatiisenqueuedbeforej theni datthetimethatjisenqueued proofimmediatefromlemma andthepropertythateachvertexreceivesa nitedvalueatmostonceduringthecourseofbfs wecannowprovethatbreadth rstsearchcorrectly ndsshortest pathdis tances theorem correctnessofbreadth rstsearch letgd beadirectedorundirectedgraph andsupposethatbfsisrunongfromagivensourcevertexs duringitsexecution bfsdiscoverseveryvertex vthatisreachablefromthesources andupontermination forall moreover foranyvertex sthatisreachable chapter elementarygraphalgorithmsfroms oneoftheshortestpathsfromstoisashortestpathfromstofollowedbytheedge proofassume forthepurposeofcontradiction thatsomevertexreceivesadvaluenotequaltoitsshortest pathdistance letbethevertexwithmin imum thatreceivessuchanincorrectdvalue clearly bylemma andthuswehavethatd vertexmustbereachablefroms forifitisnot letubethevertexim mediatelyprecedingonashortestpathfromsto sothat because andbecauseofhowwechose wehaveu puttingthesepropertiestogether wehaved nowconsiderthetimewhenbfschoosestodequeuevertexufromqinline atthistime vertexiseitherwhite orblack weshallshowthatineachofthesecases wederiveacontradictiontoinequality ifiswhite thenline setsddu contradictinginequality ifisblack thenitwasalreadyremovedfromthequeueand bycorollary wehave againcontradictinginequality ifisgray thenitwaspaintedgrayupondequeuingsomevertexw whichwasremovedfromqearlierthanuandforwhichddw bycorollary however andsowehaveddw onceagaincontradictinginequality thusweconcludethatdd forall allverticesreachablefromsmustbediscovered forotherwisetheywouldhave toconcludetheproofofthetheorem observethatifdu thenddu wecanobtainashortestpathfromstobytakingashortestpathfromstoandthentraversingtheedge breadth rsttreestheprocedurebfsbuildsabreadth rsttreeasitsearchesthegraph asfig ure illustrates thetreecorrespondstotheattributes moreformally foragraphgd withsources wede nethepredecessorsubgraphofgasgd wherevdf nilg fsgandedf vfsgg thepredecessorsubgraphgisabreadth rsttreeifvconsistsoftheverticesreachablefromsand forall thesubgraphgcontainsauniquesimple breadth rstsearch pathfromstothatisalsoashortestpathfromstoing abreadth rsttreeisinfactatree sinceitisconnectedandjejdjvj seetheoremb wecalltheedgesinetreeedges thefollowinglemmashowsthatthepredecessorsubgraphproducedbythebfsprocedureisabreadth rsttree lemma whenappliedtoadirectedorundirectedgraphgd procedurebfscon structssothatthepredecessorsubgraphgd isabreadth rsttree proofline ofbfssetsduifandonlyif eand thatis ifisreachablefroms andthusvconsistsoftheverticesinvreachablefroms sincegformsatree bytheoremb itcontainsauniquesimplepathfromstoeachvertexinv byapplyingtheorem inductively weconcludethateverysuchpathisashortestpathing thefollowingprocedureprintsouttheverticesonashortestpathfromsto assumingthatbfshasalreadycomputedabreadth rsttree prints elseif nil nopathfrom exists elseprint printthisprocedurerunsintimelinearinthenumberofverticesinthepathprinted sinceeachrecursivecallisforapathonevertexshorter exercises showthedandvaluesthatresultfromrunningbreadth rstsearchonthedi rectedgraphoffigure usingvertex asthesource showthedandvaluesthatresultfromrunningbreadth rstsearchontheundi rectedgraphoffigure usingvertexuasthesource chapter elementarygraphalgorithms showthatusingasinglebittostoreeachvertexcolorsuf cesbyarguingthatthebfsprocedurewouldproducethesameresultiflines wereremoved whatistherunningtimeofbfsifwerepresentitsinputgraphbyanadjacency matrixandmodifythealgorithmtohandlethisformofinput arguethatinabreadth rstsearch thevalueu dassignedtoavertexuisinde pendentoftheorderinwhichtheverticesappearineachadjacencylist usingfigure asanexample showthatthebreadth rsttreecomputedbybfscan dependontheorderingwithinadjacencylists giveanexampleofadirectedgraphgd asourcevertexs andasetoftreeedgeseesuchthatforeachvertex theuniquesimplepathinthegraph fromstoisashortestpathing yetthesetofedgesecannotbeproducedbyrunningbfsong nomatterhowtheverticesareorderedineachadjacencylist therearetwotypesofprofessionalwrestlers babyfaces goodguys heels badguys betweenanypairofprofessionalwrestlers theremayor maynotbearivalry supposewehavenprofessionalwrestlersandwehavealistofrpairsofwrestlersforwhichtherearerivalries giveano ncr timealgo rithmthatdetermineswhetheritispossibletodesignatesomeofthewrestlersasbabyfacesandtheremainderasheelssuchthateachrivalryisbetweenababyfaceandaheel ifitispossibletoperformsuchadesignation youralgorithmshould produceit thediameterofatreetd isde nedasmax thatis thelargestofallshortest pathdistancesinthetree giveanef cientalgorithmto computethediameterofatree andanalyzetherunningtimeofyouralgorithm letgd beaconnected undirectedgraph giveano vce timealgo rithmtocomputeapathingthattraverseseachedgeineexactlyonceineachdirection describehowyoucan ndyourwayoutofamazeifyouaregivena largesupplyofpennies depth rstsearch depth rstsearchthestrategyfollowedbydepth rstsearchis asitsnameimplies tosearch deeper inthegraphwheneverpossible depth rstsearchexploresedgesout ofthemostrecentlydiscoveredvertexthatstillhasunexplorededgesleavingit onceallof sedgeshavebeenexplored thesearch backtracks toexploreedgesleavingthevertexfromwhichwasdiscovered thisprocesscontinuesuntilwehavediscoveredalltheverticesthatarereachablefromtheoriginalsourcevertex ifanyundiscoveredverticesremain thendepth rstsearchselectsoneofthemas anewsource anditrepeatsthesearchfromthatsource thealgorithmrepeatsthis entireprocessuntilithasdiscoveredeveryvertex asinbreadth rstsearch wheneverdepth rstsearchdiscoversavertexdur ingascanoftheadjacencylistofanalreadydiscoveredvertexu itrecordsthiseventbysetting spredecessorattributetou unlikebreadth rstsearch whosepredecessorsubgraphformsatree thepredecessorsubgraphproducedby adepth rstsearchmaybecomposedofseveraltrees becausethesearchmay repeatfrommultiplesources therefore wede nethepredecessorsubgraphofadepth rstsearchslightlydifferentlyfromthatofabreadth rstsearch welet whereedf vand nilg thepredecessorsubgraphofadepth rstsearchformsadepth rstforestcom prisingseveraldepth rsttrees theedgesinearetreeedges asinbreadth rstsearch depth rstsearchcolorsverticesduringthesearchtoindicatetheirstate eachvertexisinitiallywhite isgrayedwhenitisdiscoveredinthesearch andisblackenedwhenitis nished thatis whenitsadjacencylisthasbeenexaminedcompletely thistechniqueguaranteesthateachvertexendsup inexactlyonedepth rsttree sothatthesetreesaredisjoint besidescreatingadepth rstforest depth rstsearchalsotimestampseachver tex eachvertexhastwotimestamps rsttimestampdrecordswhenis rstdiscovered andgrayed andthesecondtimestampfrecordswhenthesearch nishesexamining sadjacencylist andblackens thesetimestamps itmayseemarbitrarythatbreadth rstsearchislimitedtoonlyonesourcewhereasdepth rstsearchmaysearchfrommultiplesources althoughconceptually breadth rstsearchcouldproceedfrommultiplesourcesanddepth rstsearchcouldbelimitedtoonesource ourapproachre ectshowtheresultsofthesesearchesaretypicallyused breadth rstsearchusuallyservesto ndshortest pathdistances andtheassociatedpredecessorsubgraph fromagivensource depth rstsearchisoftenasubroutineinanotheralgorithm asweshallseelaterinthischapter chapter elementarygraphalgorithmsprovideimportantinformationaboutthestructureofthegraphandaregenerallyhelpfulinreasoningaboutthebehaviorofdepth rstsearch theproceduredfsbelowrecordswhenitdiscoversvertexuintheattributeu dandwhenit nishesvertexuintheattributeu thesetimestampsareintegersbetween jvj sincethereisonediscoveryeventandone nishingeventforeachofthejvjvertices foreveryvertexu vertexuiswhitebeforetimeu graybetweentimeu dandtimeu andblackthereafter thefollowingpseudocodeisthebasicdepth rst searchalgorithm theinputgraphgmaybeundirectedordirected thevariabletimeisaglobalvariablethatweusefortimestamping dfs foreachvertexu colordwhite dnil timed foreachvertexu ifu dfs dfs timedtimec whitevertexuhasjustbeendiscovered ddtime colordgray foreach adj exploreedge ifcolor dfs colordblack blackenu itis nished timedtimec fdtimefigure illustratestheprogressofdfsonthegraphshowninfigure proceduredfsworksasfollows lines paintallverticeswhiteandini tializetheirattributestonil resetstheglobaltimecounter lines checkeachvertexinvinturnand whenawhitevertexisfound visititusingdfs everytimedfs iscalledinline vertexubecomes depth rstsearch uvwxyz cbb uvwxyzuvwxyzuvwxyzuvwxyzuvwxyzuvwxyzuvwxyzuvwxyzuvwxyzuvwxyzuvwxyzuvwxyzuvwxyzuvwxyzuvwxyz theprogressofthedepth rst searchalgorithmdfsonadirectedgraph asedgesareexploredbythealgorithm theyareshownaseithershaded iftheyaretreeedges ordashed otherwise nontreeedgesarelabeledb orfaccordingtowhethertheyareback orforwardedges timestampswithinverticesindicatediscoverytime nishingtimes therootofanewtreeinthedepth rstforest whendfsreturns everyvertexuhasbeenassignedadiscoverytimeu danda nishingtimeu ineachcalldfs vertexuisinitiallywhite incrementstheglobalvariabletime recordsthenewvalueoftimeasthediscoverytimeu andline paintsugray lines examineeachvertexadjacenttouandrecursivelyvisitifitiswhite aseachvertex adjisconsideredinline wesaythatedge isexploredbythedepth rstsearch finally aftereveryedgeleavinguhasbeenexplored lines paintublack incrementtime andrecordthe nishingtimeinu notethattheresultsofdepth rstsearchmaydependupontheorderinwhichline ofdfsexaminestheverticesandupontheorderinwhichline ofdfs visitvisitstheneighborsofavertex thesedifferentvisitationorderstendnot chapter elementarygraphalgorithmstocauseproblemsinpractice aswecanusuallyuseanydepth rstsearchresulteffectively withessentiallyequivalentresults whatistherunningtimeofdfs theloopsonlines andlines ofdfstaketime exclusiveofthetimetoexecutethecallstodfs aswedidforbreadth rstsearch weuseaggregateanalysis theproceduredfs visitiscalledexactlyonceforeachvertex sincethevertexuonwhichdfs visitisinvokedmustbewhiteandthe rstthingdfs visitdoesispaintvertexugray duringanexecutionofdfs thelooponlines executesjadjjtimes sincex vjadjjd thetotalcostofexecutinglines ofdfs visitis therunningtimeofdfsistherefore vce propertiesofdepth rstsearchdepth rstsearchyieldsvaluableinformationaboutthestructureofagraph per hapsthemostbasicpropertyofdepth rstsearchisthatthepredecessorsub graphgdoesindeedformaforestoftrees sincethestructureofthedepth rsttreesexactlymirrorsthestructureofrecursivecallsofdfs thatis udifandonlyifdfs wascalledduringasearchofu sad jacencylist additionally vertexisadescendantofvertexuinthedepth rstforestifandonlyifisdiscoveredduringthetimeinwhichuisgray anotherimportantpropertyofdepth rstsearchisthatdiscoveryand nishingtimeshaveparenthesisstructure ifwerepresentthediscoveryofvertexuwithaleftparenthesis andrepresentits nishingbyarightparenthesis thenthehistoryofdiscoveriesand nishingsmakesawell formedexpressioninthe sensethattheparenthesesareproperlynested forexample thedepth rstsearch offigure correspondstotheparenthesizationshowninfigure followingtheoremprovidesanotherwaytocharacterizetheparenthesisstructure theorem parenthesistheorem inanydepth rstsearchofa directedorundirected graphgd foranytwoverticesuand exactlyoneofthefollowingthreeconditionsholds theintervals fand fareentirelydisjoint andneitherunorisadescendantoftheotherinthedepth rstforest theinterval fiscontainedentirelywithintheinterval anduisadescendantofinadepth rsttree ortheinterval fiscontainedentirelywithintheinterval andisadescendantofuinadepth rsttree depth rstsearch yzstuvwxbcfcccb stzywxvuszywxtvucfbccbc propertiesofdepth rstsearch theresultofadepth rstsearchofadirectedgraph verticesaretimestampedandedgetypesareindicatedasinfigure intervalsforthediscoverytimeand nishingtimeofeachvertexcorrespondtotheparenthesizationshown eachrectanglespanstheintervalgivenbythediscoveryand nishingtimesofthecorrespondingvertex onlytreeedgesareshown iftwointervalsoverlap thenoneisnestedwithintheother andthevertexcorrespondingtothesmallerintervalisadescendantofthevertexcorrespondingtothelarger thegraphofpart redrawnwithalltreeandforwardedgesgoingdownwithinadepth rsttreeandallbackedgesgoingupfromadescendanttoanancestor chapter elementarygraphalgorithmsproofwebeginwiththecaseinwhichu weconsidertwosubcases accordingtowhetherd fornot rstsubcaseoccurswhend sowasdiscoveredwhileuwasstillgray whichimpliesthatisadescendantofu moreover sincewasdiscoveredmorerecentlythanu allofitsoutgo ingedgesareexplored andis nished beforethesearchreturnstoand ishesu inthiscase therefore theinterval fisentirelycontainedwithintheinterval intheothersubcase andbyinequality thustheintervals fand faredisjoint becausetheintervalsaredisjoint neithervertexwasdiscoveredwhiletheotherwasgray andsoneithervertexisadescendantoftheother thecaseinwhichd dissimilar withtherolesofuandreversedintheaboveargument corollary nestingofdescendants intervals vertexisaproperdescendantofvertexuinthedepth rstforestfora directedorundirected graphgifandonlyifu proofimmediatefromtheorem thenexttheoremgivesanotherimportantcharacterizationofwhenonevertexisadescendantofanotherinthedepth rstforest theorem paththeorem inadepth rstforestofa directedorundirected graphgd vertexisadescendantofvertexuifandonlyifatthetimeu dthatthesearchdiscoversu thereisapathfromutoconsistingentirelyofwhitevertices proof ifdu thenthepathfromutocontainsjustvertexu whichisstillwhitewhenwesetthevalueofu supposethatisaproperdescendantofuinthedepth rstforest bycorollary andsoiswhiteattimeu sincecanbeanydescendantofu allverticesontheuniquesimplepathfromutointhedepth rstforestarewhiteattimeu supposethatthereisapathofwhiteverticesfromutoattimeu butdoesnotbecomeadescendantofuinthedepth rsttree withoutlossofgeneral ity assumethateveryvertexotherthanalongthepathbecomesadescendantofu otherwise letbetheclosestvertextoualongthepaththatdoesn tbecomeade scendantofu letwbethepredecessorofinthepath sothatwisadescendantofu wandumayinfactbethesamevertex bycorollary causemustbediscoveredafteruisdiscovered butbeforewis nished wehaveu theorem thenimpliesthattheinterval depth rstsearch iscontainedentirelywithintheinterval bycorollary mustafterallbeadescendantofu classi cationofedgesanotherinterestingpropertyofdepth rstsearchisthatthesearchcanbeusedtoclassifytheedgesoftheinputgraphgd thetypeofeachedgecanprovideimportantinformationaboutagraph forexample inthenextsection shallseethatadirectedgraphisacyclicifandonlyifadepth rstsearchyieldsno edges lemma wecande nefouredgetypesintermsofthedepth rstforestgproducedbyadepth rstsearchong treeedgesareedgesinthedepth rstforestg isatreeedgeifwas rstdiscoveredbyexploringedge backedgesarethoseedges connectingavertexutoanancestorinadepth rsttree weconsiderself loops whichmayoccurindirectedgraphs tobebackedges forwardedgesarethosenontreeedges connectingavertexutoade scendantinadepth rsttree crossedgesareallotheredges theycangobetweenverticesinthesamedepth rsttree aslongasonevertexisnotanancestoroftheother ortheycan gobetweenverticesindifferentdepth rsttrees infigures edgelabelsindicateedgetypes alsoshowshowtoredrawthegraphoffigure sothatalltreeandforwardedgeshead downwardinadepth rsttreeandallbackedgesgoup wecanredrawanygraph inthisfashion thedfsalgorithmhasenoughinformationtoclassifysomeedgesasitencoun tersthem thekeyideaisthatwhenwe rstexploreanedge thecolorofvertextellsussomethingabouttheedge whiteindicatesatreeedge grayindicatesabackedge blackindicatesaforwardorcrossedge rstcaseisimmediatefromthespeci cationofthealgorithm forthesec ondcase observethatthegrayverticesalwaysformalinearchainofdescendants correspondingtothestackofactivedfs visitinvocations thenumberofgrayverticesisonemorethanthedepthinthedepth rstforestofthevertexmostre centlydiscovered explorationalwaysproceedsfromthedeepestgrayvertex chapter elementarygraphalgorithmsanedgethatreachesanothergrayvertexhasreachedanancestor thethirdcasehandlestheremainingpossibility asksyoutoshowthatsuchan isaforwardedgeifu dandacrossedgeifu anundirectedgraphmayentailsomeambiguityinhowweclassifyedges arereallythesameedge insuchacase weclassifytheedgeasthe rsttypeintheclassi cationlistthatapplies equivalently seeex ercise weclassifytheedgeaccordingtowhicheverof thesearchencounters rst wenowshowthatforwardandcrossedgesneveroccurinadepth rstsearchofanundirectedgraph theorem inadepth rstsearchofanundirectedgraphg everyedgeofgiseitheratreeedgeorabackedge prooflet beanarbitraryedgeofg andsupposewithoutlossofgeneralitythatu thenthesearchmustdiscoverand nishbeforeit nishesu whileuisgray sinceisonu sadjacencylist ifthe rsttimethatthesearchexploresedge itisinthedirectionfromuto thenisundiscovered untilthattime forotherwisethesearchwouldhaveexploredthisedgealreadyinthedirectionfromtou becomesatreeedge ifthesearchexplores rstinthedirectionfromtou isabackedge sinceuisstillgrayatthetimetheedgeis rstexplored weshallseeseveralapplicationsofthesetheoremsinthefollowingsections exercises makea chartwithrowandcolumnlabelswhite andblack ineachcell indicatewhether atanypointduringadepth rstsearchofadi rectedgraph therecanbeanedgefromavertexofcoloritoavertexofcolorj foreachpossibleedge indicatewhatedgetypesitcanbe makeasecondsuch chartfordepth rstsearchofanundirectedgraph showhowdepth rstsearchworksonthegraphoffigure assumethatthe forloopoflines ofthedfsprocedureconsiderstheverticesinalphabeticalorder andassumethateachadjacencylistisorderedalphabetically showthe discoveryand nishingtimesforeachvertex andshowtheclassi cationofeach depth rstsearch qrstuvwxyzfigure adirectedgraphforuseinexercises showtheparenthesisstructureofthedepth rstsearchoffigure showthatusingasinglebittostoreeachvertexcolorsuf cesbyarguingthat thedfsprocedurewouldproducethesameresultifline ofdfs visitwasremoved showthatedge isa atreeedgeorforwardedgeifandonlyifu abackedgeifandonlyifdu andc acrossedgeifandonlyifd showthatinanundirectedgraph classifyinganedge asatreeedgeorabackedgeaccordingtowhether isencountered rstduringthedepth rstsearchisequivalenttoclassifyingitaccordingtotheorderingofthefourtypesintheclassi cationscheme rewritetheproceduredfs usingastacktoeliminaterecursion giveacounterexampletotheconjecturethatifadirectedgraphgcontainsapathfromuto andifu dinadepth rstsearchofg thenisadescendantofuinthedepth rstforestproduced chapter elementarygraphalgorithms giveacounterexampletotheconjecturethatifadirectedgraphgcontainsapathfromuto thenanydepth rstsearchmustresultindu modifythepseudocodefordepth rstsearchsothatitprintsouteveryedgeinthe directedgraphg togetherwithitstype showwhatmodi cations ifany youneedtomakeifgisundirected explainhowavertexuofadirectedgraphcanendupinadepth rsttreecontain ingonlyu eventhoughuhasbothincomingandoutgoingedgesing showthatwecanuseadepth rstsearchofanundirectedgraphgtoidentifytheconnectedcomponentsofg andthatthedepth rstforestcontainsasmanytreesasghasconnectedcomponents moreprecisely showhowtomodifydepth rstsearchsothatitassignstoeachvertexanintegerlabelccbetween andk wherekisthenumberofconnectedcomponentsofg suchthatu ccdccifandonlyifuandareinthesameconnectedcomponent adirectedgraphgd issinglyconnectedifuimpliesthatgcontainsatmostonesimplepathfromutoforallverticesu giveanef cientalgorithmtodeterminewhetherornotadirectedgraphissinglyconnected topologicalsortthissectionshowshowwecanusedepth rstsearchtoperformatopologicalsort ofadirectedacyclicgraph ora dag asitissometimescalled atopologicalsortofadaggd isalinearorderingofallitsverticessuchthatifgcontainsanedge thenuappearsbeforeintheordering ifthegraphcontainsacycle thennolinearorderingispossible wecanviewatopologicalsortofagraphas anorderingofitsverticesalongahorizontallinesothatalldirectededgesgofrom lefttoright topologicalsortingisthusdifferentfromtheusualkindof sorting studiedinpartii manyapplicationsusedirectedacyclicgraphstoindicateprecedencesamongevents givesanexamplethatariseswhenprofessorbumsteadgetsdressedinthemorning theprofessormustdoncertaingarmentsbeforeothers socksbeforeshoes otheritemsmaybeputoninanyorder socksand topologicalsort undershortspantsbeltshirttiejacketsocksshoeswatchsocksundershortspantsshoeswatchshirtbelttiejacketfigure professorbumsteadtopologicallysortshisclothingwhengettingdressed eachdirectededge meansthatgarmentumustbeputonbeforegarment thediscoveryand nishingtimesfromadepth rstsearchareshownnexttoeachvertex thesamegraphshowntopologicallysorted withitsverticesarrangedfromlefttorightinorderofdecreasing nishingtime alldirectededgesgofromlefttoright pants adirectededge inthedagoffigure indicatesthatgarmentumustbedonnedbeforegarment atopologicalsortofthisdagthereforegivesanorderforgettingdressed showsthetopologicallysorteddagasan orderingofverticesalongahorizontallinesuchthatalldirectededgesgofromleft toright thefollowingsimplealgorithmtopologicallysortsadag topological sort calldfs tocompute nishingtimesfforeachvertex aseachvertexis nished insertitontothefrontofalinkedlist returnthelinkedlistofverticesfigure showshowthetopologicallysortedverticesappearinreverseorderoftheir nishingtimes wecanperformatopologicalsortintime vce sincedepth rstsearchtakes vce timeandittakeso timetoinserteachofthejvjverticesontothefrontofthelinkedlist weprovethecorrectnessofthisalgorithmusingthefollowingkeylemmachar acterizingdirectedacyclicgraphs chapter elementarygraphalgorithmslemma adirectedgraphgisacyclicifandonlyifadepth rstsearchofgyieldsnobackedges proof supposethatadepth rstsearchproducesabackedge thenvertexisanancestorofvertexuinthedepth rstforest gcontainsapathfromtou andthebackedge completesacycle supposethatgcontainsacyclec weshowthatadepth rstsearchofgyieldsabackedge letbethe rstvertextobediscoveredinc andlet betheprecedingedgeinc attimed theverticesofcformapathofwhiteverticesfromtou bythewhite paththeorem vertexubecomesadescendantofinthedepth rstforest therefore isabackedge theorem topological sortproducesatopologicalsortofthedirectedacyclicgraphprovidedasitsinput proofsupposethatdfsisrunonagivendaggd todetermine ishingtimesforitsvertices itsuf cestoshowthatforanypairofdistinctver ticesu ifgcontainsanedgefromuto thenf consideranyedge exploredbydfs whenthisedgeisexplored cannotbegray sincethenwouldbeanancestorofuand wouldbeabackedge contra dictinglemma therefore mustbeeitherwhiteorblack ifiswhite itbecomesadescendantofu andsof ifisblack ithasalreadybeen nished sothatfhasalreadybeenset becausewearestillexploringfromu wehaveyettoassignatimestamptou andsooncewedo wewillhavef faswell foranyedge inthedag wehavef provingthetheorem exercises showtheorderingofverticesproducedbytopological sortwhenitisrunonthedagoffigure undertheassumptionofexercise givealinear timealgorithmthattakesasinputadirectedacyclicgraphgd andtwoverticessandt andreturnsthenumberofsimplepathsfromstoting forexample thedirectedacyclicgraphoffigure containsexactlyfoursimplepathsfromvertexptovertex pory posry andpsry youralgorithmneedsonlytocountthesimplepaths notlistthem stronglyconnectedcomponents zyxwvutsrqponmfigure adagfortopologicalsorting giveanalgorithmthatdetermineswhetherornotagivenundirectedgraphgd containsacycle youralgorithmshouldrunino independentofjej proveordisprove ifadirectedgraphgcontainscycles thentopological sort producesavertexorderingthatminimizesthenumberof edgesthatareinconsistentwiththeorderingproduced anotherwaytoperformtopologicalsortingonadirectedacyclicgraphgd istorepeatedly ndavertexofin outputit andremoveitandallofitsoutgoingedgesfromthegraph explainhowtoimplementthisideasothatitrunsintimeo vce whathappenstothisalgorithmifghascycles stronglyconnectedcomponentswenowconsideraclassicapplicationofdepth rstsearch decomposingadi rectedgraphintoitsstronglyconnectedcomponents thissectionshowshowtodo sousingtwodepth rstsearches manyalgorithmsthatworkwithdirectedgraphsbeginwithsuchadecomposition afterdecomposingthegraphintostronglycon nectedcomponents suchalgorithmsrunseparatelyoneachoneandthencombine thesolutionsaccordingtothestructureofconnectionsamongcomponents recallfromappendixbthatastronglyconnectedcomponentofadirectedgraphgd isamaximalsetofverticescvsuchthatforeverypairofverticesuandinc wehavebothuandu thatis verticesuandarereachablefromeachother showsanexample chapter elementarygraphalgorithms abcdefghabcdefghabecdfgh adirectedgraphg eachshadedregionisastronglyconnectedcomponentofg eachvertexislabeledwithitsdiscoveryand nishingtimesinadepth rstsearch andtreeedgesareshaded thegraphgt thetransposeofg withthedepth rstforestcomputedinline ofstrongly connected componentsshownandtreeedgesshaded eachstronglyconnectedcomponentcorrespondstoonedepth rsttree verticesb andh whichareheavilyshaded aretherootsofthedepth rsttreesproducedbythedepth rstsearchofgt theacycliccomponentgraphgsccobtainedbycontractingalledgeswithineachstronglyconnectedcomponentofgsothatonlyasinglevertexremainsineachcomponent ouralgorithmfor ndingstronglyconnectedcomponentsofagraphgd usesthetransposeofg whichwede nedinexercise tobethegraphgtd whereetdf thatis etconsistsoftheedgesofgwiththeirdirectionsreversed givenanadjacency listrepresenta tionofg thetimetocreategtiso vce itisinterestingtoobservethatgandgthaveexactlythesamestronglyconnectedcomponents uandarereach ablefromeachotheringifandonlyiftheyarereachablefromeachotheringt showsthetransposeofthegraphinfigure withthestrongly connectedcomponentsshaded stronglyconnectedcomponents thefollowinglinear vce algorithmcomputesthestronglyconnectedcomponentsofadirectedgraphgd usingtwodepth rstsearches oneongandoneongt strongly connected components calldfs tocompute nishingtimesu fforeachvertexu computegt calldfs butinthemainloopofdfs considertheverticesinorderofdecreasingu ascomputedinline outputtheverticesofeachtreeinthedepth rstforestformedinline asaseparatestronglyconnectedcomponenttheideabehindthisalgorithmcomesfromakeypropertyofthecomponentgraphgsccd vscc escc whichwede neasfollows supposethatghasstronglyconnectedcomponentsc thevertexsetvsccisf anditcontainsavertexiforeachstronglyconnectedcompo nentciofg thereisanedgeij esccifgcontainsadirectededge forsomex ciandsomey lookedatanotherway bycontractingalledgeswhoseincidentverticesarewithinthesamestronglyconnectedcomponent ofg theresultinggraphisgscc showsthecomponentgraphofthegraphinfigure thekeypropertyisthatthecomponentgraphisadag whichthefollowinglemmaimplies lemma letcandc bedistinctstronglyconnectedcomponentsindirectedgraphgd letu letu andsupposethatgcontainsapathuu thengcannotalsocontainapath proofifgcontainsapath thenitcontainspathsuu uand arereachablefromeachother therebycontradictingtheassumptionthatcandc aredistinctstronglyconnectedcomponents weshallseethatbyconsideringverticesintheseconddepth rstsearchinde creasingorderofthe nishingtimesthatwerecomputedinthe rstdepth rst weare inessence visitingtheverticesofthecomponentgraph eachof whichcorrespondstoastronglyconnectedcomponentofg intopologicallysortedorder becausethestrongly connected componentsprocedureperformstwodepth rstsearches thereisthepotentialforambiguitywhenwediscussu doru inthissection thesevaluesalwaysrefertothediscoveryand nishingtimesascomputedbythe rstcallofdfs inline chapter elementarygraphalgorithmsweextendthenotationfordiscoveryand nishingtimestosetsofvertices ifuv thenwede ned dminu ufu dgandf dmaxu ufu thatis andf aretheearliestdiscoverytimeandlatest nishingtime respectively ofanyvertexinu thefollowinglemmaanditscorollarygiveakeypropertyrelatingstronglycon nectedcomponentsand nishingtimesinthe rstdepth rstsearch lemma letcandc bedistinctstronglyconnectedcomponentsindirectedgraphgd supposethatthereisanedge whereu cand thenf proofweconsidertwocases dependingonwhichstronglyconnectedcompo nent corc hadthe rstdiscoveredvertexduringthedepth rstsearch ifd letxbethe rstvertexdiscoveredinc attimex allver ticesincandc arewhite atthattime gcontainsapathfromxtoeachvertexincconsistingonlyofwhitevertices because foranyvertexw thereisalsoapathingattimex dfromxtowconsistingonlyofwhitevertices bythewhite paththeorem allverticesincandc becomedescendantsofxinthedepth rsttree bycorollary xhasthelatest nishingtimeofanyofitsdescendants andsox fdf ifinsteadwehaved letybethe rstvertexdiscoveredinc attimey allverticesinc arewhiteandgcontainsapathfromytoeachvertexinc consistingonlyofwhitevertices bythewhite paththeorem allver ticesinc becomedescendantsofyinthedepth rsttree andbycorollary fdf attimey allverticesincarewhite sincethereisanedge fromctoc lemma impliesthattherecannotbeapathfromc toc hence novertexincisreachablefromy attimey therefore allverticesincarestillwhite foranyvertexw wehavew whichimpliesthatf thefollowingcorollarytellsusthateachedgeingtthatgoesbetweendifferentstronglyconnectedcomponentsgoesfromacomponentwithanearlier nishingtime inthe rstdepth rstsearch toacomponentwithalater nishingtime corollary letcandc bedistinctstronglyconnectedcomponentsindirectedgraphgd supposethatthereisanedge whereu cand thenf stronglyconnectedcomponents proofsince wehave becausethestronglycon nectedcomponentsofgandgtarethesame lemma impliesthatf corollary providesthekeytounderstandingwhythestronglyconnectedcomponentsalgorithmworks letusexaminewhathappenswhenweperformthe seconddepth rstsearch whichisongt westartwiththestronglyconnectedcomponentcwhose nishingtimef ismaximum thesearchstartsfromsomevertexx anditvisitsallverticesinc bycorollary gtcontainsnoedgesfromctoanyotherstronglyconnectedcomponent andsothesearchfromxwillnotvisitverticesinanyothercomponent thetreerootedatxcontainsexactlytheverticesofc havingcompletedvisitingallverticesinc thesearchinline selectsasarootavertexfromsomeotherstronglyconnectedcomponentc nishingtimef ismaximumoverallcomponentsotherthanc thesearchwillvisitallverticesinc butbycorollary theonlyedgesingtfromc toanyothercomponentmustbetoc whichwehavealreadyvisited ingeneral whenthedepth rstsearchofgtinline visitsanystronglyconnectedcomponent anyedgesoutofthatcomponentmustbeto componentsthatthesearchalreadyvisited eachdepth rsttree therefore willbe exactlyonestronglyconnectedcomponent thefollowingtheoremformalizesthis argument theorem thestrongly connected componentsprocedurecorrectlycomputesthestronglyconnectedcomponentsofthedirectedgraphgprovidedasitsinput proofwearguebyinductiononthenumberofdepth rsttreesfoundinthedepth rstsearchofgtinline thattheverticesofeachtreeformastronglyconnectedcomponent theinductivehypothesisisthatthe rstktreesproducedinline arestronglyconnectedcomponents thebasisfortheinduction istrivial intheinductivestep weassumethateachofthe rstkdepth rsttreesproducedinline isastronglyconnectedcomponent andweconsiderthe sttreeproduced lettherootofthistreebevertexu andletubeinstronglyconnectedcomponentc becauseofhowwechooserootsinthedepth rstsearchinline fdf foranystronglyconnectedcomponentc otherthancthathasyettobevisited bytheinductivehypothesis atthetimethatthesearch visitsu allotherverticesofcarewhite bythewhite paththeorem therefore allotherverticesofcaredescendantsofuinitsdepth rsttree moreover bytheinductivehypothesisandbycorollary anyedgesingtthatleavecmustbetostronglyconnectedcomponentsthathavealreadybeenvisited novertex chapter elementarygraphalgorithmsinanystronglyconnectedcomponentotherthancwillbeadescendantofuduringthedepth rstsearchofgt theverticesofthedepth rsttreeingtthatisrootedatuformexactlyonestronglyconnectedcomponent whichcompletestheinductivestepandtheproof hereisanotherwaytolookathowtheseconddepth rstsearchoperates con siderthecomponentgraph sccofgt ifwemapeachstronglyconnectedcomponentvisitedintheseconddepth rstsearchtoavertexof scc thesec onddepth rstsearchvisitsverticesof sccinthereverseofatopologicallysortedorder ifwereversetheedgesof scc wegetthegraph scc because scc tdgscc seeexercise theseconddepth rstsearchvisitstheverticesofgsccintopologicallysortedorder exercises howcanthenumberofstronglyconnectedcomponentsofagraphchangeifanew edgeisadded showhowtheprocedurestrongly connected componentsworksonthegraphoffigure speci cally showthe nishingtimescomputedinline theforestproducedinline assumethattheloopoflines ofdfsconsiders verticesinalphabeticalorderandthattheadjacencylistsareinalphabeticalorder professorbaconclaimsthatthealgorithmforstronglyconnectedcomponentswouldbesimplerifitusedtheoriginal insteadofthetranspose graphintheseconddepth rstsearchandscannedtheverticesinorderofincreasing nishingtimes doesthissimpleralgorithmalwaysproducecorrectresults provethatforanydirectedgraphg wehave scc tdgscc thatis thetransposeofthecomponentgraphofgtisthesameasthecomponentgraphofg giveano vce timealgorithmtocomputethecomponentgraphofadirectedgraphgd makesurethatthereisatmostoneedgebetweentwoverticesinthecomponentgraphyouralgorithmproduces problemsforchapter givenadirectedgraphgd explainhowtocreateanothergraphg suchthat hasthesamestronglyconnectedcomponentsasg hasthesamecomponentgraphasg isassmallaspossible describeafastalgorithmtocomputeg adirectedgraphgd issemiconnectedif forallpairsofverticesu wehaveuoru giveanef cientalgorithmtodeterminewhetherornotgissemiconnected provethatyouralgorithmiscorrect andanalyzeitsrunningtime problems classifyingedgesbybreadth rstsearch adepth rstforestclassi estheedgesofagraphintotree crossedges abreadth rsttreecanalsobeusedtoclassifytheedgesreachablefromthesourceofthesearchintothesamefourcategories provethatinabreadth rstsearchofanundirectedgraph thefollowingprop ertieshold therearenobackedgesandnoforwardedges foreachtreeedge wehaveddu foreachcrossedge wehaveddu dorddu provethatinabreadth rstsearchofadirectedgraph thefollowingpropertieshold therearenoforwardedges foreachtreeedge wehaveddu foreachcrossedge wehavedu foreachbackedge wehave articulationpoints bridges andbiconnectedcomponentsletgd beaconnected undirectedgraph anarticulationpointofgisavertexwhoseremovaldisconnectsg abridgeofgisanedgewhoseremovaldisconnectsg abiconnectedcomponentofgisamaximalsetofedgessuchthatanytwoedgesinthesetlieonacommonsimplecycle illustrates chapter elementarygraphalgorithms thearticulationpoints bridges andbiconnectedcomponentsofaconnected undi rectedgraphforuseinproblem thearticulationpointsaretheheavilyshadedvertices thebridgesaretheheavilyshadededges andthebiconnectedcomponentsaretheedgesintheshadedregions withabccnumberingshown thesede nitions wecandeterminearticulationpoints bridges andbiconnectedcomponentsusingdepth rstsearch letgd beadepth rsttreeofg provethattherootofgisanarticulationpointofgifandonlyifithasatleasttwochildrening letbeanonrootvertexofg provethatisanarticulationpointofgifandonlyifhasachildssuchthatthereisnobackedgefromsoranydescendantofstoaproperancestorof letlowdmin isabackedgeforsomedescendantuofshowhowtocomputelowforallvertices vino showhowtocomputeallarticulationpointsino provethatanedgeofgisabridgeifandonlyifitdoesnotlieonanysimplecycleofg showhowtocomputeallthebridgesofgino provethatthebiconnectedcomponentsofgpartitionthenonbridgeedgesofg giveano timealgorithmtolabeleachedgeeofgwithapositivein tegere bccsuchthate bccde bccifandonlyifeande areinthesamebiconnectedcomponent notesforchapter eulertouraneulertourofastronglyconnected directedgraphgd isacyclethattraverseseachedgeofgexactlyonce althoughitmayvisitavertexmorethanonce showthatghasaneulertourifandonlyifin dout foreachvertex describeano timealgorithmto ndaneulertourofgifoneexists hint mergeedge disjointcycles reachabilityletgd beadirectedgraphinwhicheachvertexu vislabeledwithauniqueintegerl fromthesetf jvjg foreachvertexu letr vwugbethesetofverticesthatarereachablefromu nemin tobethevertexinr whoselabelisminimum min isthevertexsuchthat dminfl giveano vce timealgorithmthatcomputesmin forallverticesu chapternoteseven andtarjan areexcellentreferencesforgraphalgorithms breadth rstsearchwasdiscoveredbymoore inthecontextof ndingpathsthroughmazes lee independentlydiscoveredthesamealgorithminthecontextofroutingwiresoncircuitboards hopcroftandtarjan advocatedtheuseoftheadjacency listrepresentationovertheadjacency matrixrepresentationforsparsegraphsandwerethe rstto recognizethealgorithmicimportanceofdepth rstsearch depth rstsearchhas beenwidelyusedsincethelate especiallyinarti cialintelligenceprograms tarjan gavealinear timealgorithmfor ndingstronglyconnectedcompo nents thealgorithmforstronglyconnectedcomponentsinsection isadapted fromaho hopcroft andullman whocreditittos kosaraju unpublished andm sharir gabow alsodevelopedanalgorithmforstronglycon nectedcomponentsthatisbasedoncontractingcyclesandusestwostackstomake itruninlineartime knuth wasthe rsttogivealinear timealgorithmfor topologicalsorting minimumspanningtreeselectroniccircuitdesignsoftenneedtomakethepinsofseveralcomponentselec tricallyequivalentbywiringthemtogether tointerconnectasetofnpins wecanuseanarrangementofn wires eachconnectingtwopins ofallsucharrange ments theonethatusestheleastamountofwireisusuallythemostdesirable wecanmodelthiswiringproblemwithaconnected undirectedgraphgd wherevisthesetofpins eisthesetofpossibleinterconnectionsbetweenpairsofpins andforeachedge wehaveaweightw specifyingthecost amountofwireneeded toconnectuand wethenwishto ndanacyclicsubsettethatconnectsalloftheverticesandwhosetotalweightw isminimized sincetisacyclicandconnectsallofthevertices itmustformatree whichwecallaspanningtreesinceit spans thegraphg wecalltheproblemofdeterminingthetreettheminimum spanning treeproblem showsanexampleofaconnectedgraphandaminimumspanningtree inthischapter weshallexaminetwoalgorithmsforsolvingtheminimum spanning treeproblem kruskal salgorithmandprim salgorithm wecaneasily makeeachofthemrunintimeo elgv usingordinarybinaryheaps byusingfibonacciheaps prim salgorithmrunsintimeo ecvlgv whichimprovesoverthebinary heapimplementationifjvjismuchsmallerthanjej thetwoalgorithmsaregreedyalgorithms asdescribedinchapter eachstepofagreedyalgorithmmustmakeoneofseveralpossiblechoices thegreedy strategyadvocatesmakingthechoicethatisthebestatthemoment suchastrat egydoesnotgenerallyguaranteethatitwillalways ndgloballyoptimalsolutions thephrase minimumspanningtree isashortenedformofthephrase minimum weightspanningtree wearenot forexample minimizingthenumberofedgesint sinceallspanningtreeshaveexactlyjvj edgesbytheoremb growingaminimumspanningtree bahcgidfe aminimumspanningtreeforaconnectedgraph theweightsonedgesareshown andtheedgesinaminimumspanningtreeareshaded thetotalweightofthetreeshownis thisminimumspanningtreeisnotunique removingtheedge andreplacingitwiththeedge yieldsanotherspanningtreewithweight toproblems fortheminimum spanning treeproblem however wecanprovethatcertaingreedystrategiesdoyieldaspanningtreewithminimumweight although youcanreadthischapterindependentlyofchapter thegreedymethodspre sentedhereareaclassicapplicationofthetheoreticalnotionsintroducedthere introducesa generic minimum spanning treemethodthatgrowsaspanningtreebyaddingoneedgeatatime givestwoalgorithms thatimplementthegenericmethod rstalgorithm duetokruskal issimilar totheconnected componentsalgorithmfromsection thesecond dueto prim resemblesdijkstra sshortest pathsalgorithm becauseatreeisatypeofgraph inordertobeprecisewemustde neatreeintermsofnotjustitsedges butitsverticesaswell althoughthischapterfocusesontreesintermsoftheiredges weshalloperatewiththeunderstandingthattheverticesofatreetarethosethatsomeedgeoftisincidenton growingaminimumspanningtreeassumethatwehaveaconnected undirectedgraphgd withaweightfunctionwwe andwewishto ndaminimumspanningtreeforg thetwoalgorithmsweconsiderinthischapteruseagreedyapproachtotheproblem althoughtheydifferinhowtheyapplythisapproach thisgreedystrategyiscapturedbythefollowinggenericmethod whichgrowstheminimumspanningtreeoneedgeatatime thegenericmethodmanagesasetofedgesa maintainingthefollowingloopinvariant priortoeachiteration aisasubsetofsomeminimumspanningtree ateachstep wedetermineanedge thatwecanaddtoawithoutviolatingthisinvariant inthesensethata gisalsoasubsetofaminimumspanning chapter minimumspanningtreestree wecallsuchanedgeasafeedgefora sincewecanadditsafelytoawhilemaintainingtheinvariant generic mst whileadoesnotformaspanningtree ndanedge thatissafefora ada returnaweusetheloopinvariantasfollows initialization afterline thesetatriviallysatis estheloopinvariant maintenance theloopinlines maintainstheinvariantbyaddingonlysafeedges termination alledgesaddedtoaareinaminimumspanningtree andsothesetareturnedinline mustbeaminimumspanningtree thetrickypartis ofcourse ndingasafeedgeinline onemustexist sincewhenline isexecuted theinvariantdictatesthatthereisaspanningtreetsuchthatat withinthewhileloopbody amustbeapropersubsetoft andthereforetheremustbeanedge tsuchthat aand issafefora intheremainderofthissection weprovidearule theorem forrecogniz ingsafeedges thenextsectiondescribestwoalgorithmsthatusethisruleto safeedgesef ciently rstneedsomede nitions acut ofanundirectedgraphgd isapartitionofv illustratesthisnotion wesaythatanedge ecrossesthecut ifoneofitsendpointsisinsandtheotherisinvs wesaythatacutrespectsasetaofedgesifnoedgeinacrossesthecut anedgeisalightedgecrossingacutifitsweightistheminimumofanyedgecrossingthecut notethattherecanbemorethanonelightedgecrossingacutin thecaseofties moregenerally wesaythatanedgeisalightedgesatisfyingagivenpropertyifitsweightistheminimumofanyedgesatisfyingtheproperty ourruleforrecognizingsafeedgesisgivenbythefollowingtheorem theorem letgd beaconnected undirectedgraphwithareal valuedweightfunc tionwde nedone letabeasubsetofethatisincludedinsomeminimumspanningtreeforg beanycutofgthatrespectsa andlet bealightedgecrossing issafefora growingaminimumspanningtree bahcgidfe abdehigcf ssv ssv sfigure twowaysofviewingacut ofthegraphfromfigure blackverticesareinthesets andwhiteverticesareinvs theedgescrossingthecutarethoseconnectingwhiteverticeswithblackvertices theedge istheuniquelightedgecrossingthecut asubsetaoftheedgesisshaded notethatthecut respectsa sincenoedgeofacrossesthecut thesamegraphwiththeverticesinthesetsontheleftandtheverticesinthesetvsontheright anedgecrossesthecutifitconnectsavertexontheleftwithavertexontheright prooflettbeaminimumspanningtreethatincludesa andassumethattdoesnotcontainthelightedge sinceifitdoes wearedone weshallconstructanotherminimumspanningtreet thatincludesa gbyusingacut pastetechnique therebyshowingthat isasafeedgefora theedge formsacyclewiththeedgesonthesimplepathpfromutoint asfigure illustrates sinceuandareonoppositesidesofthecut atleastoneedgeintliesonthesimplepathpandalsocrossesthecut beanysuchedge theedge isnotina becausethecutrespectsa isontheuniquesimplepathfromutoint remov ing breakstintotwocomponents adding reconnectsthemtoformanewspanningtreet dtf wenextshowthatt isaminimumspanningtree isalightedgecrossing alsocrossesthiscut therefore chapter minimumspanningtreesyvuxpfigure theproofoftheorem blackverticesareins andwhiteverticesareinvs theedgesintheminimumspanningtreetareshown buttheedgesinthegraphgarenot theedgesinaareshaded isalightedgecrossingthecut theedge isanedgeontheuniquesimplepathpfromutoint toformaminimumspanningtreet thatcontains removetheedge fromtandaddtheedge buttisaminimumspanningtree sothatw mustbeaminimumspanningtreealso itremainstoshowthat isactuallyasafeedgefora wehaveat sinceatand consequently sincet isaminimumspanningtree issafefora theorem givesusabetterunderstandingoftheworkingsofthegeneric mstmethodonaconnectedgraphgd asthemethodproceeds thesetaisalwaysacyclic otherwise aminimumspanningtreeincludingawouldcontainacycle whichisacontradiction atanypointintheexecution thegraph gad isaforest andeachoftheconnectedcomponentsofgaisatree someofthetreesmaycontainjustonevertex asisthecase forexample themethodbegins aisemptyandtheforestcontainsjvjtrees oneforeachvertex moreover anysafeedge foraconnectsdistinctcomponentsofga sincea gmustbeacyclic thewhileloopinlines ofgeneric mstexecutesjvj timesbecauseit ndsoneofthejvj edgesofaminimumspanningtreeineachiteration initially whenad therearejvjtreesinga andeachiterationreducesthatnumberby whentheforestcontainsonlyasingletree themethodterminates thetwoalgorithmsinsection usethefollowingcorollarytotheorem growingaminimumspanningtree corollary letgd beaconnected undirectedgraphwithareal valuedweightfunc tionwde nedone letabeasubsetofethatisincludedinsomeminimumspanningtreeforg andletcd beaconnectedcomponent intheforestgad isalightedgeconnectingctosomeothercomponentinga issafefora proofthecut vvc respectsa isalightedgeforthiscut therefore issafefora exercises beaminimum weightedgeinaconnectedgraphg showthat belongstosomeminimumspanningtreeofg professorsabatierconjecturesthefollowingconverseoftheorem letgd beaconnected undirectedgraphwithareal valuedweightfunctionwde nedone letabeasubsetofethatisincludedinsomeminimumspanningtreeforg beanycutofgthatrespectsa andlet beasafeedgeforacrossing isalightedgeforthecut showthattheprofessor sconjectureisincorrectbygivingacounterexample showthatifanedge iscontainedinsomeminimumspanningtree thenitisalightedgecrossingsomecutofthegraph giveasimpleexampleofaconnectedgraphsuchthatthesetofedgesf wthereexistsacut suchthat isalightedgecrossing gdoesnotformaminimumspanningtree letebeamaximum weightedgeonsomecycleofconnectedgraphgd provethatthereisaminimumspanningtreeofg efeg thatisalsoaminimumspanningtreeofg thatis thereisaminimumspanningtreeofgthatdoesnotincludee chapter minimumspanningtrees showthatagraphhasauniqueminimumspanningtreeif foreverycutofthe graph thereisauniquelightedgecrossingthecut showthattheconverseisnot truebygivingacounterexample arguethatifalledgeweightsofagrapharepositive thenanysubsetofedgesthat connectsallverticesandhasminimumtotalweightmustbeatree giveanexample toshowthatthesameconclusiondoesnotfollowifweallowsomeweightstobenonpositive lettbeaminimumspanningtreeofagraphg andletlbethesortedlistoftheedgeweightsoft showthatforanyotherminimumspanningtreet ofg thelistlisalsothesortedlistofedgeweightsoft lettbeaminimumspanningtreeofagraphgd andletv beasubsetofv lett bethesubgraphoftinducedbyv andletg bethesubgraphofginducedbyv showthatift isconnected thent isaminimumspanningtreeofg givenagraphgandaminimumspanningtreet supposethatwedecreasetheweightofoneoftheedgesint showthattisstillaminimumspanningtreeforg moreformally lettbeaminimumspanningtreeforgwithedgeweightsgivenbyweightfunctionw chooseoneedge tandapositivenumberk andde netheweightfunctionw byw kif showthattisaminimumspanningtreeforgwithedgeweightsgivenbyw givenagraphgandaminimumspanningtreet supposethatwedecreasetheweightofoneoftheedgesnotint giveanalgorithmfor ndingtheminimumspanningtreeinthemodi edgraph thealgorithmsofkruskalandprim thealgorithmsofkruskalandprimthetwominimum spanning treealgorithmsdescribedinthissectionelaborateonthegenericmethod theyeachuseaspeci cruletodetermineasafeedgeinline ofgeneric mst inkruskal salgorithm thesetaisaforestwhoseverticesareallthoseofthegivengraph thesafeedgeaddedtoaisalwaysaleast weightedgeinthegraphthatconnectstwodistinctcomponents inprim salgorithm thesetaformsasingletree thesafeedgeaddedtoaisalwaysaleast weightedgeconnectingthetreetoavertexnotinthetree kruskal salgorithmkruskal salgorithm ndsasafeedgetoaddtothegrowingforestby nding ofalltheedgesthatconnectanytwotreesintheforest anedge ofleastweight letc andc denotethetwotreesthatareconnectedby mustbealightedgeconnectingc tosomeothertree corollary impliesthat isasafeedgeforc kruskal salgorithmquali esasagreedyalgorithmbecauseateachstepitaddstotheforestanedgeofleastpossibleweight ourimplementationofkruskal salgorithmislikethealgorithmtocomputeconnectedcomponentsfromsection itusesadisjoint setdatastructuretomaintainseveraldisjointsetsofelements eachsetcontainstheverticesinonetreeofthecurrentforest theoperationfind returnsarepresentativeelementfromthesetthatcontainsu wecandeterminewhethertwoverticesuandbelongtothesametreebytestingwhetherfind equalsfind tocombinetrees kruskal salgorithmcallstheunionprocedure mst kruskal foreachvertex sorttheedgesofg eintonondecreasingorderbyweightw foreachedge takeninnondecreasingorderbyweight iffind ada union returnafigure showshowkruskal salgorithmworks lines initializethesetatotheemptysetandcreatejvjtrees onecontainingeachvertex theforloopinlines examinesedgesinorderofweight fromlowesttohighest theloop chapter minimumspanningtreesbahcgidfe bahcgidfe bahcgidfe bahcgidfe bahcgidfe bahcgidfe bahcgidfe bahcgidfe theexecutionofkruskal salgorithmonthegraphfromfigure shadededgesbelongtotheforestabeinggrown thealgorithmconsiderseachedgeinsortedorderbyweight anarrowpointstotheedgeunderconsiderationateachstepofthealgorithm iftheedgejoinstwodistincttreesintheforest itisaddedtotheforest therebymergingthetwotrees checks foreachedge whethertheendpointsuandbelongtothesametree iftheydo thentheedge cannotbeaddedtotheforestwithoutcreatingacycle andtheedgeisdiscarded otherwise thetwoverticesbelongtodifferent trees inthiscase addstheedge toa andline mergestheverticesinthetwotrees thealgorithmsofkruskalandprim bahcgidfe bahcgidfe bahcgidfe bahcgidfe bahcgidfe bahcgidfe continuedfurtherstepsintheexecutionofkruskal salgorithm therunningtimeofkruskal salgorithmforagraphgd dependsonhowweimplementthedisjoint setdatastructure weassumethatweuse thedisjoint forestimplementationofsection withtheunion rankand compressionheuristics sinceitistheasymptoticallyfastestimplementation known initializingthesetainline takeso andthetimetosorttheedgesinline iso elge wewillaccountforthecostofthejvjmake setoperationsintheforloopoflines inamoment theforloopoflines performso setandunionoperationsonthedisjoint setforest alongwiththejvjmake setoperations thesetakeatotalofo vce istheveryslowlygrowingfunctionde nedinsection becauseweassumethatgisconnected wehavejejjvj andsothedisjoint setopera tionstakeo moreover jvj lgv lge theto talrunningtimeofkruskal salgorithmiso elge observingthatjej jvj wehavelgjejdo lgv andsowecanrestatetherunningtimeofkruskal salgorithmaso elgv chapter minimumspanningtreesprim salgorithmlikekruskal salgorithm prim salgorithmisaspecialcaseofthegenericmin imum spanning treemethodfromsection prim salgorithmoperatesmuch likedijkstra salgorithmfor ndingshortestpathsinagraph whichweshallseein prim salgorithmhasthepropertythattheedgesinthesetaalwaysformasingletree asfigure shows thetreestartsfromanarbitraryroot vertexrandgrowsuntilthetreespansalltheverticesinv eachstepaddstothetreeaalightedgethatconnectsatoanisolatedvertex oneonwhichnoedgeofaisincident bycorollary thisruleaddsonlyedgesthataresafefora therefore whenthealgorithmterminates theedgesinaformaminimumspanningtree thisstrategyquali esasgreedysinceateachstepitaddstothetreeanedge thatcontributestheminimumamountpossibletothetree sweight inordertoimplementprim salgorithmef ciently weneedafastwaytoselectanewedgetoaddtothetreeformedbytheedgesina inthepseudocodebelow theconnectedgraphgandtherootroftheminimumspanningtreetobegrownareinputstothealgorithm duringexecutionofthealgorithm allverticesthat arenotinthetreeresideinamin priorityqueueqbasedonakeyattribute foreachvertex theattributekeyistheminimumweightofanyedgeconnectingtoavertexinthetree byconvention keyd ifthereisnosuchedge theattributenamestheparentofinthetree thealgorithmimplicitlymaintainsthesetafromgeneric mstasadf vfrgqg whenthealgorithmterminates themin priorityqueueqisempty theminimumspanningtreeaforgisthusadf vfrgg mst prim foreachu keyd dnil keyd qdg whileq udextract min foreach adj qandw keydw thealgorithmsofkruskalandprim bahcgidfe bahcgidfe bahcgidfe bahcgidfe bahcgidfe bahcgidfe bahcgidfe bahcgidfe bahcgidfe theexecutionofprim salgorithmonthegraphfromfigure therootvertexisa shadededgesareinthetreebeinggrown andblackverticesareinthetree ateachstepofthealgorithm theverticesinthetreedetermineacutofthegraph andalightedgecrossingthecutisaddedtothetree inthesecondstep forexample thealgorithmhasachoiceofaddingeitheredge oredge tothetreesincebotharelightedgescrossingthecut chapter minimumspanningtreesfigure showshowprim salgorithmworks lines setthekeyofeachvertexto exceptfortherootr whosekeyissetto sothatitwillbethe rstvertexprocessed settheparentofeachvertextonil andinitializethemin priorityqueueqtocontainallthevertices thealgorithmmaintainsthefollowingthree partloopinvariant priortoeachiterationofthewhileloopoflines adf vfrgqg theverticesalreadyplacedintotheminimumspanningtreearethoseinvq forallvertices nil thenkey andkeyistheweightofalightedge connectingtosomevertexalreadyplacedintotheminimumspanningtree identi esavertexu qincidentonalightedgethatcrossesthecut withtheexceptionofthe rstiteration inwhichudrduetoline removingufromthesetqaddsittothesetvqofverticesinthetree thusadding toa theforloopoflines updatesthekeyandattributesofeveryvertexadjacenttoubutnotinthetree therebymaintainingthethirdpartoftheloopinvariant therunningtimeofprim salgorithmdependsonhowweimplementthemin priorityqueueq ifweimplementqasabinarymin heap seechapter wecanusethebuild min heapproceduretoperformlines ino thebodyofthewhileloopexecutesjvjtimes andsinceeachextract minopera tiontakeso lgv thetotaltimeforallcallstoextract miniso vlgv theforloopinlines executeso timesaltogether sincethesumofthelengthsofalladjacencylistsis jej withintheforloop wecanimplementthetestformembershipinqinline inconstanttimebykeepingabitforeachvertexthattellswhetherornotitisinq andupdatingthebitwhenthevertexisremovedfromq theassignmentinline involvesanimplicitdecrease keyopera tiononthemin heap whichabinarymin heapsupportsino lgv thetotaltimeforprim salgorithmiso vlgvcelgv elgv whichisasymptoticallythesameasforourimplementationofkruskal salgorithm wecanimprovetheasymptoticrunningtimeofprim salgorithmbyusingfi bonacciheaps chapter showsthatifafibonacciheapholdsjvjelements anextract minoperationtakeso lgv amortizedtimeandadecrease keyoperation toimplementline takeso amortizedtime therefore ifweuseafibonacciheaptoimplementthemin priorityqueueq therunningtimeofprim salgorithmimprovestoo ecvlgv thealgorithmsofkruskalandprim exercises kruskal salgorithmcanreturndifferentspanningtreesforthesameinputgraphg dependingonhowitbreakstieswhentheedgesaresortedintoorder showthatforeachminimumspanningtreetofg thereisawaytosorttheedgesofginkruskal salgorithmsothatthealgorithmreturnst supposethatwerepresentthegraphgd asanadjacencymatrix giveasimpleimplementationofprim salgorithmforthiscasethatrunsino forasparsegraphgd wherejejd istheimplementationofprim salgorithmwithafibonacciheapasymptoticallyfasterthanthebinary heap implementation whataboutforadensegraph wherejejd howmustthesizesjejandjvjberelatedforthefibonacci heapimplementationtobeasymptoticallyfasterthanthebinary heapimplementation supposethatalledgeweightsinagraphareintegersintherangefrom tojvj howfastcanyoumakekruskal salgorithmrun whatiftheedgeweightsare integersintherangefrom towforsomeconstantw supposethatalledgeweightsinagraphareintegersintherangefrom tojvj howfastcanyoumakeprim salgorithmrun whatiftheedgeweightsareintegers intherangefrom towforsomeconstantw supposethattheedgeweightsinagraphareuniformlydistributedoverthehalf openinterval whichalgorithm kruskal sorprim canyoumakerunfaster supposethatagraphghasaminimumspanningtreealreadycomputed howquicklycanweupdatetheminimumspanningtreeifweaddanewvertexand incidentedgestog professorbordenproposesanewdivide conqueralgorithmforcomputingminimumspanningtrees whichgoesasfollows givenagraphgd partitionthesetvofverticesintotwosetsv andv suchthatjv jandjv jdiffer chapter minimumspanningtreesbyatmost lete bethesetofedgesthatareincidentonlyonverticesinv andlete bethesetofedgesthatareincidentonlyonverticesinv recursivelysolveaminimum spanning treeproblemoneachofthetwosubgraphsg andg finally selecttheminimum weightedgeinethatcrossesthecut andusethisedgetounitetheresultingtwominimumspanningtreesintoasinglespanningtree eitherarguethatthealgorithmcorrectlycomputesaminimumspanningtreeofg orprovideanexampleforwhichthealgorithmfails problems bestminimumspanningtreeletgd beanundirected connectedgraphwhoseweightfunctioniswwe andsupposethatjejjvjandalledgeweightsaredistinct wede neasecond bestminimumspanningtreeasfollows lettbethesetofallspanningtreesofg andlett beaminimumspanningtreeofg thenasecond bestminimumspanningtreeisaspanningtreetsuchthatw dmint gfw showthattheminimumspanningtreeisunique butthatthesecond bestmini mumspanningtreeneednotbeunique lettbetheminimumspanningtreeofg provethatgcontainsedges tand tsuchthattf gisasecond bestminimumspanningtreeofg lettbeaspanningtreeofgand foranytwoverticesu letmax denoteanedgeofmaximumweightontheuniquesimplepathbetweenuandint describeano timealgorithmthat givent computesmax forallu giveanef cientalgorithmtocomputethesecond bestminimumspanningtreeofg minimumspanningtreeinsparsegraphsforaverysparseconnectedgraphgd wecanfurtherimproveupontheo ecvlgv runningtimeofprim salgorithmwithfibonacciheapsbyprepro cessinggtodecreasethenumberofverticesbeforerunningprim salgorithm inparticular wechoose foreachvertexu theminimum weightedge incidentonu andweput intotheminimumspanningtreeunderconstruction problemsforchapter thencontractallchosenedges seesectionb ratherthancontractingtheseedgesoneatatime rstidentifysetsofverticesthatareunitedintothesame newvertex thenwecreatethegraphthatwouldhaveresultedfromcontracting theseedgesoneatatime butwedosoby renaming edgesaccordingtothesets intowhichtheirendpointswereplaced severaledgesfromtheoriginalgraphmay berenamedthesameaseachother insuchacase onlyoneedgeresults andits weightistheminimumoftheweightsofthecorrespondingoriginaledges initially wesettheminimumspanningtreetbeingconstructedtobeempty andforeachedge weinitializetheattributes origd cdw weusetheorigattributetoreferencetheedgefromtheinitialgraphthatisassociatedwithanedgeinthecontractedgraph thecattributeholdstheweightofanedge andasedgesarecontracted weupdateitaccordingto theaboveschemeforchoosingedgeweights theproceduremst reducetakesinputsgandt anditreturnsacontractedgraphg withupdatedattributesorig andc theprocedurealsoaccumulatesedgesofgintotheminimumspanningtreet mst reduce foreach markdfalse foreachu ifu false adjsuchthat cisminimized union tdt origg markdmarkdtrue vdffind foreach udfind dfind edg orig orig elseif orig orig constructadjacencylistsg adjforg returng andt chapter minimumspanningtreesa lettbethesetofedgesreturnedbymst reduce andletabetheminimumspanningtreeofthegraphg formedbythecallmst prim wherec istheweightattributeontheedgesofg eandrisanyvertexing provethatt orig agisaminimumspanningtreeofg arguethatjg vjjvj showhowtoimplementmst reducesothatitrunsino hint usesimpledatastructures supposethatwerunkphasesofmst reduce usingtheoutputg producedbyonephaseastheinputgtothenextphaseandaccumulatingedgesint arguethattheoverallrunningtimeofthekphasesiso supposethatafterrunningkphasesofmst reduce asinpart werunprim salgorithmbycallingmst prim whereg withweightat tributec isreturnedbythelastphaseandrisanyvertexing showhowtopickksothattheoverallrunningtimeiso elglgv arguethatyourchoiceofkminimizestheoverallasymptoticrunningtime forwhatvaluesofjej intermsofjvj doesprim salgorithmwithpreprocess ingasymptoticallybeatprim salgorithmwithoutpreprocessing bottleneckspanningtreeabottleneckspanningtreetofanundirectedgraphgisaspanningtreeofgwhoselargestedgeweightisminimumoverallspanningtreesofg wesaythatthevalueofthebottleneckspanningtreeistheweightofthemaximum edgeint arguethataminimumspanningtreeisabottleneckspanningtree showsthat ndingabottleneckspanningtreeisnoharderthan ndingaminimumspanningtree intheremainingparts wewillshowhowto nda bottleneckspanningtreeinlineartime givealinear timealgorithmthatgivenagraphgandanintegerb determineswhetherthevalueofthebottleneckspanningtreeisatmostb useyouralgorithmforpart asasubroutineinalinear timealgorithmforthebottleneck spanning treeproblem hint youmaywanttouseasubroutinethatcontractssetsofedges asinthemst reduceproceduredescribedinproblem notesforchapter alternativeminimum spanning treealgorithmsinthisproblem wegivepseudocodeforthreedifferentalgorithms eachonetakes aconnectedgraphandaweightfunctionasinputandreturnsasetofedgest foreachalgorithm eitherprovethattisaminimumspanningtreeorprovethattisnotaminimumspanningtree alsodescribethemostef cientimplementationof eachalgorithm whetherornotitcomputesaminimumspanningtree maybe mst sorttheedgesintononincreasingorderofedgeweightsw tde foreachedgee takeninnonincreasingorderbyweight iftfegisaconnectedgraph tdtfeg returntb maybe mst foreachedgee takeninarbitraryorder ift feghasnocycles tdt feg returntc maybe mst foreachedgee takeninarbitraryorder tdt feg ifthasacyclec lete beamaximum weightedgeonc tdtfe returntchapternotestarjan surveystheminimum spanning treeproblemandprovidesexcellentadvancedmaterial grahamandhell compiledahistoryoftheminimum spanning treeproblem tarjanattributesthe rstminimum spanning treealgorithmtoa paperbyo bor uvka bor uvka salgorithmconsistsofrunningo lgv iterationsofthe chapter minimumspanningtreesproceduremst reducedescribedinproblem kruskal salgorithmwasreportedbykruskal thealgorithmcommonlyknownasprim algorithmwasindeedinventedbyprim butitwasalsoinventedearlierby jarn kin thereasonunderlyingwhygreedyalgorithmsareeffectiveat ndingminimumspanningtreesisthatthesetofforestsofagraphformsagraphicmatroid whenjejdvlgv prim salgorithm implementedwithfibonacciheaps runsino forsparsergraphs usingacombinationoftheideasfromprim salgorithm kruskal salgorithm andbor uvka salgorithm togetherwithad vanceddatastructures fredmanandtarjan giveanalgorithmthatrunsin elgv gabow galil spencer andtarjan improvedthisalgo rithmtorunino elglgv chazelle givesanalgorithmthatrunsino wherey isthefunctionalinverseofackermann sfunction seethechapternotesforchapter forabriefdiscussionofacker mann sfunctionanditsinverse unlikepreviousminimum spanning treealgo rithms chazelle salgorithmdoesnotfollowthegreedymethod arelatedproblemisspanning treeveri cation inwhichwearegivenagraphgd andatreete andwewishtodeterminewhethertisaminimumspanningtreeofg givesalinear timealgorithmtoverifyaspanningtree buildingonearlierworkofkoml anddixon rauch andtarjan theabovealgorithmsarealldeterministicandfallintothecomparison basedmodeldescribedinchapter karger klein andtarjan givearandomizedminimum spanning treealgorithmthatrunsino vce expectedtime thisalgorithmusesrecursioninamannersimilartothelinear timeselectionalgorithm insection arecursivecallonanauxiliaryproblemidenti esasubsetofthe edgese thatcannotbeinanyminimumspanningtree anotherrecursivecallonee ndstheminimumspanningtree thealgorithmalsousesideasfrombor uvka salgorithmandking salgorithmforspanning treeveri cation fredmanandwillard showedhowto ndaminimumspanningtreeino vce timeusingadeterministicalgorithmthatisnotcomparisonbased theiralgorithmassumesthatthedataareb bitintegersandthatthecomputermemoryconsistsofaddressableb bitwords sourceshortestpathsprofessorpatrickwishesto ndtheshortestpossibleroutefromphoenixtoindi anapolis givenaroadmapoftheunitedstatesonwhichthedistancebetween eachpairofadjacentintersectionsismarked howcanshedeterminethisshortest route onepossiblewaywouldbetoenumeratealltheroutesfromphoenixtoindi anapolis addupthedistancesoneachroute andselecttheshortest itiseasyto however thatevendisallowingroutesthatcontaincycles professorpatrick wouldhavetoexamineanenormousnumberofpossibilities mostofwhichare simplynotworthconsidering forexample aroutefromphoenixtoindianapolis thatpassesthroughseattleisobviouslyapoorchoice becauseseattleisseveral hundredmilesoutoftheway inthischapterandinchapter weshowhowtosolvesuchproblemsef ciently inashortest pathsproblem wearegivenaweighted directedgraphgd withweightfunctionwwe rmappingedgestoreal valuedweights theweightw ofpathpdh kiisthesumoftheweightsofitsconstituentedges dkxid wede netheshortest pathweight fromutoby minfw wupgifthereisapathfromuto otherwise ashortestpathfromvertexutovertexisthende nedasanypathpwithweightw inthephoenix indianapolisexample wecanmodeltheroadmapasagraph verticesrepresentintersections edgesrepresentroadsegmentsbetweenintersec tions andedgeweightsrepresentroaddistances ourgoalisto ndashortestpath fromagivenintersectioninphoenixtoagivenintersectioninindianapolis chapter sourceshortestpathsedgeweightscanrepresentmetricsotherthandistances suchastime penalties loss oranyotherquantitythataccumulateslinearlyalongapathand thatwewouldwanttominimize thebreadth rst searchalgorithmfromsection isashortest pathsalgo rithmthatworksonunweightedgraphs thatis graphsinwhicheachedgehasunit becausemanyoftheconceptsfrombreadth rstsearchariseinthestudy ofshortestpathsinweightedgraphs youmightwanttoreviewsection proceeding variantsinthischapter weshallfocusonthesingle sourceshortest pathsproblem givenagraphgd wewantto ndashortestpathfromagivensourcevertexs vtoeachvertex thealgorithmforthesingle sourceproblemcansolvemanyotherproblems includingthefollowingvariants destinationshortest pathsproblem findashortestpathtoagivendes tinationvertextfromeachvertex byreversingthedirectionofeachedgeinthegraph wecanreducethisproblemtoasingle sourceproblem pairshortest pathproblem findashortestpathfromutoforgivenverticesuand ifwesolvethesingle sourceproblemwithsourcevertexu wesolvethisproblemalso moreover allknownalgorithmsforthisproblem havethesameworst caseasymptoticrunningtimeasthebestsingle source algorithms pairsshortest pathsproblem findashortestpathfromutoforeverypairofverticesuand althoughwecansolvethisproblembyrunningasingle sourcealgorithmoncefromeachvertex weusuallycansolveitfaster addi tionally itsstructureisinterestinginitsownright chapter addressesthe pairsproblemindetail optimalsubstructureofashortestpathshortest pathsalgorithmstypicallyrelyonthepropertythatashortestpathbe tweentwoverticescontainsothershortestpathswithinit theedmonds karp maximum owalgorithminchapter alsoreliesonthisproperty recall thatoptimalsubstructureisoneofthekeyindicatorsthatdynamicprogramming chapter andthegreedymethod chapter mightapply dijkstra salgo rithm whichweshallseeinsection isagreedyalgorithm andthefloyd warshallalgorithm ndsshortestpathsbetweenallpairsofvertices isadynamic programmingalgorithm thefollowinglemmastatestheoptimal substructurepropertyofshortestpathsmoreprecisely chapter sourceshortestpaths lemma subpathsofshortestpathsareshortestpaths givenaweighted directedgraphgd withweightfunctionwwe letpdh kibeashortestpathfromvertex tovertexkand foranyiandjsuchthat ijk letpijdhiic jibethesubpathofpfromvertexitovertexj pijisashortestpathfromitoj proofifwedecomposepathpinto iipijjpjkk thenwehavethatw pij pjk assumethatthereisapathp ijfromitojwithweightw pij iip ijjpjkkisapathfrom tokwhoseweightw pjk islessthanw whichcontradictstheassumptionthatpisashortestpathfrom tok negative weightedgessomeinstancesofthesingle sourceshortest pathsproblemmayincludeedgeswhoseweightsarenegative ifthegraphgd containsnonegative weightcyclesreachablefromthesources thenforall theshortest pathweight remainswellde ned evenifithasanegativevalue ifthegraphcontainsanegative weightcyclereachablefroms however shortest pathweightsarenotwellde ned nopathfromstoavertexonthecyclecanbeashort estpath wecanalways ndapathwithlowerweightbyfollowingtheproposed shortest pathandthentraversingthenegative weightcycle ifthereisanegative weightcycleonsomepathfromsto wede illustratestheeffectofnegativeweightsandnegative weightcy clesonshortest pathweights becausethereisonlyonepathfromstoa thepathhs wehave similarly thereisonlyonepathfromstob andso therearein nitelymanypathsfromstoc andsoon becausethecyclehc cihasweight theshortestpathfromstocishs withweight similarly theshortestpathfromstodishs withweight analogously therearein nitelymanypathsfromstoe andsoon becausethecyclehe eihasweight however thereisnoshortestpathfromstoe bytraversingthenegative weightcyclehe eiarbitrarilymanytimes wecan ndpathsfromstoewitharbitrarilylargenegativeweights andso similarly becausegisreachablefromf wecanalso ndpathswitharbitrarilylargenegativeweightsfromstog andso verticesh andjalsoformanegative weightcycle theyarenotreachablefroms however andso chapter sourceshortestpaths negativeedgeweightsinadirectedgraph theshortest pathweightfromsourcesappearswithineachvertex becauseverticeseandfformanegative weightcyclereachablefroms theyhaveshortest pathweightsof becausevertexgisreachablefromavertexwhoseshortest pathweightis hasashortest pathweightof verticessuchash andjarenotreachablefroms andsotheirshortest pathweightsare eventhoughtheylieonanegative weightcycle someshortest pathsalgorithms suchasdijkstra salgorithm assumethatalledgeweightsintheinputgrapharenonnegative asintheroad mapexample oth ers suchasthebellman fordalgorithm allownegative weightedgesinthein putgraphandproduceacorrectansweraslongasnonegative weightcyclesare reachablefromthesource typically ifthereissuchanegative weightcycle algorithmcandetectandreportitsexistence cyclescanashortestpathcontainacycle aswehavejustseen itcannotcontainanegative weightcycle norcanitcontainapositive weightcycle sinceremov ingthecyclefromthepathproducesapathwiththesamesourceanddestination verticesandalowerpathweight thatis ifpdh kiisapathandcdhiic jiisapositive weightcycleonthispath sothatidjandw thenthepathp ijc kihasweightw andsopcannotbeashortestpathfrom tok thatleavesonly weightcycles wecanremovea weightcyclefromanypathtoproduceanotherpathwhoseweightisthesame ifthereisashortest pathfromasourcevertexstoadestinationvertexthatcontainsa weightcycle thenthereisanothershortestpathfromstowithoutthiscycle aslongasashortestpathhas weightcycles wecanrepeatedlyremovethesecyclesfromthepathuntilwehaveashortestpaththatiscycle therefore withoutlossofgeneralitywecanassumethatwhenweare ndingshortestpaths theyhaveno cycles theyaresimplepaths sinceanyacyclicpathinagraphgd chapter sourceshortestpaths containsatmostjvjdistinctvertices italsocontainsatmostjvj edges wecanrestrictourattentiontoshortestpathsofatmostjvj edges representingshortestpathsweoftenwishtocomputenotonlyshortest pathweights buttheverticesonshort estpathsaswell werepresentshortestpathssimilarlytohowwerepresented breadth rsttreesinsection givenagraphgd wemaintainforeachvertex vapredecessorthatiseitheranothervertexornil theshortest pathsalgorithmsinthischaptersettheattributessothatthechainofpre decessorsoriginatingatavertexrunsbackwardsalongashortestpathfromsto givenavertexforwhich nil theprocedureprint fromsection willprintashortestpathfromsto inthemidstofexecutingashortest pathsalgorithm however thevaluesmightnotindicateshortestpaths asinbreadth rstsearch weshallbeinterestedinthe predecessorsubgraphgd inducedbythevalues hereagain wede nethevertexsetvtobethesetofverticesofgwithnon nilpredecessors plusthesources vdf nilg fsg thedirectededgeseteisthesetofedgesinducedbythevaluesforverticesinv edf vfsgg weshallprovethatthevaluesproducedbythealgorithmsinthischapterhavethepropertythatatterminationgisa shortest pathstree informally arootedtreecontainingashortestpathfromthesourcestoeveryvertexthatisreachablefroms ashortest pathstreeislikethebreadth rsttreefromsection butitcontainsshortestpathsfromthesourcede nedintermsofedgeweightsinsteadof numbersofedges tobeprecise letgd beaweighted directedgraphwithweightfunctionwwe andassumethatgcontainsnonegative weightcyclesreachablefromthesourcevertexs sothatshortestpathsarewellde ned ashortest pathstreerootedatsisadirectedsubgraphg wherev vande suchthat isthesetofverticesreachablefromsing formsarootedtreewithroots forall theuniquesimplepathfromstoing isashortestpathfromstoing chapter sourceshortestpaths stxyz stxyz stxyz aweighted directedgraphwithshortest pathweightsfromsources theshadededgesformashortest pathstreerootedatthesources anothershortest pathstreewiththesameroot shortestpathsarenotnecessarilyunique andneitherareshortest pathstrees forexample showsaweighted directedgraphandtwoshortest pathstrees withthesameroot relaxationthealgorithmsinthischapterusethetechniqueofrelaxation foreachvertex wemaintainanattributed whichisanupperboundontheweightofashortestpathfromsourcesto wecalldashortest pathestimate weinitializetheshortest pathestimatesandpredecessorsbythefollowing timeprocedure initialize source foreachvertex dnil afterinitialization wehavednilforall anddd vfsg theprocessofrelaxinganedge consistsoftestingwhetherwecanim provetheshortestpathtofoundsofarbygoingthroughuand ifso updat ingdand arelaxationstep maydecreasethevalueoftheshortest theuseofthetermishistorical theoutcomeofarelaxationstepcanbeviewedasarelaxationoftheconstraintdu dcw bythetriangleinequality lemma mustbesatis edifu anddd thatis ifdu dcw thereisno pressure itmayseemstrangethattheterm relaxation isusedforanoperationthattightensanupperbound sotheconstraintis relaxed tosatisfythisconstraint chapter sourceshortestpaths relax relax relaxinganedge withweightw theshortest pathestimateofeachvertexappearswithinthevertex becaused dcw priortorelaxation thevalueofddecreases dcw beforerelaxingtheedge andsotherelaxationstepleavesdunchanged estimatedandupdate spredecessorattribute thefollowingcodeper formsarelaxationsteponedge ino relax ifd dcw ddu dcw dufigure showstwoexamplesofrelaxinganedge oneinwhichashortest pathestimatedecreasesandoneinwhichnoestimatechanges eachalgorithminthischaptercallsinitialize sourceandthenre peatedlyrelaxesedges moreover relaxationistheonlymeansbywhichshortest pathestimatesandpredecessorschange thealgorithmsinthischapterdifferinhowmanytimestheyrelaxeachedgeandtheorderinwhichtheyrelaxedges dijk stra salgorithmandtheshortest pathsalgorithmfordirectedacyclicgraphsrelax eachedgeexactlyonce thebellman fordalgorithmrelaxeseachedgejvj times propertiesofshortestpathsandrelaxationtoprovethealgorithmsinthischaptercorrect weshallappealtoseveralprop ertiesofshortestpathsandrelaxation westatethesepropertieshere andsec tion provesthemformally foryourreference eachpropertystatedherein cludestheappropriatelemmaorcorollarynumberfromsection thelatter veoftheseproperties whichrefertoshortest pathestimatesorthepredecessor subgraph implicitlyassumethatthegraphisinitializedwithacalltoinitialize source andthattheonlywaythatshortest pathestimatesandthepredecessorsubgraphchangearebysomesequenceofrelaxationsteps chapter sourceshortestpathstriangleinequality lemma foranyedge wehave upper boundproperty lemma wealwayshaved forallvertices andoncedachievesthevalue itneverchanges pathproperty corollary ifthereisnopathfromsto thenwealwayshavedd convergenceproperty lemma ifsu isashortestpathingforsomeu andifu atanytimepriortorelaxingedge thendd atalltimesafterward relaxationproperty lemma ifpdh kiisashortestpathfromsd tok andwerelaxtheedgesofpintheorder thenk thispropertyholdsregardlessofanyotherrelaxationstepsthatoccur evenif theyareintermixedwithrelaxationsoftheedgesofp predecessor subgraphproperty lemma oncedd forall thepredecessorsubgraphisashortest pathstreerootedats chapteroutlinesection presentsthebellman fordalgorithm whichsolvesthesingle sourceshortest pathsprobleminthegeneralcaseinwhichedgescanhavenegativeweight thebellman fordalgorithmisremarkablysimple andithasthefurtherbene ofdetectingwhetheranegative weightcycleisreachablefromthesource sec tion givesalinear timealgorithmforcomputingshortestpathsfromasinglesourceinadirectedacyclicgraph coversdijkstra salgorithm hasalowerrunningtimethanthebellman fordalgorithmbutrequirestheedge weightstobenonnegative showshowwecanusethebellman ford algorithmtosolveaspecialcaseoflinearprogramming finally provesthepropertiesofshortestpathsandrelaxationstatedabove werequiresomeconventionsfordoingarithmeticwithin nities weshallas sumethatforanyrealnumbera wehaveac cad tomakeourproofsholdinthepresenceofnegative weightcycles weshallassume thatforanyrealnumbera wehaveac allalgorithmsinthischapterassumethatthedirectedgraphgisstoredintheadjacency listrepresentation additionally storedwitheachedgeisitsweight thataswetraverseeachadjacencylist wecandeterminetheedgeweightsino timeperedge thebellman fordalgorithm thebellman fordalgorithmthebellman fordalgorithmsolvesthesingle sourceshortest pathsprobleminthegeneralcaseinwhichedgeweightsmaybenegative givenaweighted rectedgraphgd withsourcesandweightfunctionwwe thebellman fordalgorithmreturnsabooleanvalueindicatingwhetherornotthereisanegative weightcyclethatisreachablefromthesource ifthereissuchacy cle thealgorithmindicatesthatnosolutionexists ifthereisnosuchcycle algorithmproducestheshortestpathsandtheirweights thealgorithmrelaxesedges progressivelydecreasinganestimatedontheweightofashortestpathfromthesourcestoeachvertex vuntilitachievestheactualshortest pathweight thealgorithmreturnstrueifandonlyifthegraphcontainsnonegative weightcyclesthatarereachablefromthesource bellman ford initialize source forid tojg foreachedge relax foreachedge ifd dcw returnfalse returntruefigure showstheexecutionofthebellman fordalgorithmonagraphwith vertices afterinitializingthedandvaluesofallverticesinline thealgorithmmakesjvj passesovertheedgesofthegraph eachpassisoneiterationoftheforloopoflines andconsistsofrelaxingeachedgeofthegraphonce figures showthestateofthealgorithmaftereachofthe fourpassesovertheedges aftermakingjvj passes lines checkforanegative weightcycleandreturntheappropriatebooleanvalue llseealittle laterwhythischeckworks thebellman fordalgorithmrunsintimeo sincetheinitializationinline takes eachofthejvj passesovertheedgesinlines takes andtheforloopoflines takeso toprovethecorrectnessofthebellman fordalgorithm westartbyshowingthatiftherearenonegative weightcycles thealgorithmcomputescorrectshortest weightsforallverticesreachablefromthesource chapter sourceshortestpaths txsyz txsyz txsyz txsyz txsyz theexecutionofthebellman fordalgorithm thesourceisvertexs thedval uesappearwithinthevertices andshadededgesindicatepredecessorvalues ifedge isshaded thendu inthisparticularexample eachpassrelaxestheedgesintheorder thesituationjustbeforethe rstpassovertheedges thesituationaftereachsuccessivepassovertheedges thedandvaluesinpart arethe nalvalues thebellman fordalgorithmreturnstrueinthisexample lemma letgd beaweighted directedgraphwithsourcesandweightfunc tionwwe andassumethatgcontainsnonegative weightcyclesthatarereachablefroms afterthejvj iterationsoftheforloopoflines ofbellman ford wehavedd forallverticesthatarereachablefroms proofweprovethelemmabyappealingtothepath relaxationproperty con sideranyvertexthatisreachablefroms andletpdh dsandkd beanyshortestpathfromsto becauseshortestpathsaresimple phasatmostjvj edges andsokjvj eachofthejvj itera tionsoftheforloopoflines relaxesalljejedges amongtheedgesrelaxedintheithiteration forid isi bythepath relaxationproperty therefore ddk thebellman fordalgorithm corollary letgd beaweighted directedgraphwithsourcevertexsandweightfunctionwwe andassumethatgcontainsnonegative weightcyclesthatarereachablefroms foreachvertex thereisapathfromstoifandonlyifbellman fordterminateswithd whenitisrunong prooftheproofisleftasexercise theorem correctnessofthebellman fordalgorithm letbellman fordberunonaweighted directedgraphgd withsourcesandweightfunctionwwe ifgcontainsnonegative weightcyclesthatarereachablefroms thenthealgorithmreturnstrue wehavedd forallvertices andthepredecessorsubgraphgisashortest pathstreerootedats ifgdoescontainanegative weightcyclereachablefroms thenthealgorithmreturnsfalse proofsupposethatgraphgcontainsnonegative weightcyclesthatarereach ablefromthesources rstprovetheclaimthatattermination forallvertices ifvertexisreachablefroms thenlemma provesthisclaim ifisnotreachablefroms thentheclaimfollowsfromtheno pathprop erty theclaimisproven thepredecessor subgraphproperty alongwiththe impliesthatgisashortest pathstree nowweusetheclaimtoshowthatbellman fordreturnstrue attermination wehaveforalledges bythetriangleinequality dcw andsononeofthetestsinline causesbellman fordtoreturnfalse fore itreturnstrue supposethatgraphgcontainsanegative weightcyclethatisreachablefromthesources letthiscyclebecdh kxid assumeforthepurposeofcontradictionthatthebellman fordalgorithmreturnstrue dcw forid summingtheinequalitiesaroundcyclecgivesus chapter sourceshortestpathskxid dkxid dcw dkxid dckxid eachvertexincappearsexactlyonceineachofthesummationspkid dandpkid andsokxid ddkxid moreover bycorollary dis niteforid kxid whichcontradictsinequality weconcludethatthebellman fordalgorithmreturnstrueifgraphgcontainsnonegative weightcyclesreachablefromthesource andfalseotherwise exercises runthebellman fordalgorithmonthedirectedgraphoffigure usingver tex asthesource ineachpass relaxedgesinthesameorderasinthe gure andshowthedandvaluesaftereachpass changetheweightofedge andrunthealgorithmagain usingsasthesource provecorollary givenaweighted directedgraphgd withnonegative weightcycles letmbethemaximumoverallvertices voftheminimumnumberofedgesinashortestpathfromthesourcesto theshortestpathisbyweight notthenumberofedges suggestasimplechangetothebellman fordalgorithmthatallowsittoterminateinmc passes evenifmisnotknowninadvance modifythebellman fordalgorithmsothatitsetsdtoforallverticesforwhichthereisanegative weightcycleonsomepathfromthesourceto sourceshortestpathsindirectedacyclicgraphs letgd beaweighted directedgraphwithweightfunctionwwe giveano timealgorithmto foreachvertex thevalue dminu supposethataweighted directedgraphgd hasanegative weightcycle giveanef cientalgorithmtolisttheverticesofonesuchcycle provethatyour algorithmiscorrect sourceshortestpathsindirectedacyclicgraphsbyrelaxingtheedgesofaweighteddag directedacyclicgraph accordingtoatopologicalsortofitsvertices wecancomputeshortestpathsfrom asinglesourcein vce shortestpathsarealwayswellde nedinadag sinceeveniftherearenegative weightedges nonegative weightcyclescanexist thealgorithmstartsbytopologicallysortingthedag seesection toim posealinearorderingonthevertices ifthedagcontainsapathfromvertexutovertex thenuprecedesinthetopologicalsort wemakejustonepassovertheverticesinthetopologicallysortedorder asweprocesseachvertex werelaxeach edgethatleavesthevertex dag shortest paths topologicallysorttheverticesofg initialize source foreachvertexu takenintopologicallysortedorder foreachvertex adj relax showstheexecutionofthisalgorithm therunningtimeofthisalgorithmiseasytoanalyze asshowninsection thetopologicalsortofline takes vce thecallofinitialize sourceinline takes theforloopoflines makesoneiterationpervertex altogether theforloopoflines relaxeseachedgeexactlyonce wehaveusedanaggregateanalysishere becauseeachiterationofthe innerforlooptakes thetotalrunningtimeis vce whichislinearinthesizeofanadjacency listrepresentationofthegraph thefollowingtheoremshowsthatthedag shortest pathsprocedurecor rectlycomputestheshortestpaths chapter sourceshortestpaths xtsryz xtsryz xtsryz xtsryz xtsryz xtsryz xtsryz theexecutionofthealgorithmforshortestpathsinadirectedacyclicgraph theverticesaretopologicallysortedfromlefttoright thesourcevertexiss thedvaluesappearwithinthevertices andshadededgesindicatethevalues thesituationbeforethe rstiterationoftheforloopoflines thesituationaftereachiterationoftheforloopoflines thenewlyblackenedvertexineachiterationwasusedasuinthatiteration thevaluesshowninpart arethe nalvalues theorem ifaweighted directedgraphgd hassourcevertexsandnocycles thenattheterminationofthedag shortest pathsprocedure forallvertices andthepredecessorsubgraphgisashortest pathstree proofwe rstshowthatdd forallvertices vattermina tion ifisnotreachablefroms thendd bytheno pathproperty supposethatisreachablefroms sothatthereisashort estpathpdh dsandkd becausewepro sourceshortestpathsindirectedacyclicgraphs cesstheverticesintopologicallysortedorder werelaxtheedgesonpintheorder thepath relaxationpropertyimpliesthati atterminationforid finally bythepredecessor subgraphproperty gisashortest pathstree aninterestingapplicationofthisalgorithmarisesindeterminingcriticalpathsinpertchart analysis edgesrepresentjobstobeperformed andedgeweightsrepresentthetimesrequiredtoperformparticularjobs ifedge entersver texandedge leaves thenjob mustbeperformedbeforejob apaththroughthisdagrepresentsasequenceofjobsthatmustbeperformedina particularorder acriticalpathisalongestpaththroughthedag correspondingtothelongesttimetoperformanysequenceofjobs theweightofacritical pathprovidesalowerboundonthetotaltimetoperformallthejobs wecan ndacriticalpathbyeithernegatingtheedgeweightsandrunningdag shortest paths orrunningdag shortest paths withthemodi cationthatwereplace inline ofinitialize sourceand intherelaxprocedure exercises rundag shortest pathsonthedirectedgraphoffigure usingvertexrasthesource supposewechangeline ofdag shortest pathstoread forthe rstjvj vertices takenintopologicallysortedordershowthattheprocedurewouldremaincorrect thepertchartformulationgivenaboveissomewhatunnatural inamorenatu ralstructure verticeswouldrepresentjobsandedgeswouldrepresentsequencing constraints thatis wouldindicatethatjobumustbeperformedbeforejob wewouldthenassignweightstovertices notedges modifythedag shortest pathsproceduresothatit ndsalongestpathinadirectedacyclicgraphwithweightedverticesinlineartime pert isanacronymfor programevaluationandreviewtechnique chapter sourceshortestpaths giveanef cientalgorithmtocountthetotalnumberofpathsinadirectedacyclic graph analyzeyouralgorithm dijkstra salgorithmdijkstra salgorithmsolvesthesingle sourceshortest pathsproblemonaweighted directedgraphgd forthecaseinwhichalledgeweightsarenonnegative inthissection therefore weassumethatw foreachedge asweshallsee withagoodimplementation therunningtimeofdijkstra salgorithm islowerthanthatofthebellman fordalgorithm dijkstra salgorithmmaintainsasetsofverticeswhose nalshortest pathweightsfromthesourceshavealreadybeendetermined thealgorithmrepeat edlyselectsthevertexu vswiththeminimumshortest pathestimate addsutos andrelaxesalledgesleavingu inthefollowingimplementation weuseamin priorityqueueqofvertices keyedbytheirdvalues dijkstra initialize source qdg whileq udextract min sds fug foreachvertex adj relax dijkstra salgorithmrelaxesedgesasshowninfigure initializesthedandvaluesintheusualway andline initializesthesetstotheemptyset thealgorithmmaintainstheinvariantthatqdvsatthestartofeachiterationofthewhileloopoflines initializesthemin priorityqueueqtocontainalltheverticesinv sincesd atthattime theinvariantistrueafterline eachtimethroughthewhileloopoflines extractsavertexufromqdvsandline addsittosets therebymaintainingtheinvariant rsttimethroughthisloop uds vertexu therefore hasthesmallestshortest pathestimateofanyvertexinvs lines relaxeachedge leavingu thusupdatingtheestimatedandthepredecessorifwecanimprovetheshortestpathtofoundsofarbygoingthroughu observethatthealgorithmneverinsertsverticesintoqafterline andthateachvertexisextractedfromq dijkstra salgorithm stxyz stxyz stxyz stxyz stxyz stxyzfigure theexecutionofdijkstra salgorithm thesourcesistheleftmostvertex theshortest pathestimatesappearwithinthevertices andshadededgesindicatepredecessorvalues blackverticesareinthesets andwhiteverticesareinthemin priorityqueueqdvs thesituationjustbeforethe rstiterationofthewhileloopoflines theshadedvertexhasthemini mumdvalueandischosenasvertexuinline thesituationaftereachsuccessiveiterationofthewhileloop theshadedvertexineachpartischosenasvertexuinline ofthenextiteration thedvaluesandpredecessorsshowninpart arethe nalvalues andaddedtosexactlyonce sothatthewhileloopoflines iteratesexactlyjvjtimes becausedijkstra salgorithmalwayschoosesthe lightest closest vertexinvstoaddtosets wesaythatitusesagreedystrategy chapter explainsgreedystrategiesindetail butyouneednothavereadthatchaptertounderstand dijkstra salgorithm greedystrategiesdonotalwaysyieldoptimalresultsingen eral butasthefollowingtheoremanditscorollaryshow dijkstra salgorithmdoes indeedcomputeshortestpaths thekeyistoshowthateachtimeitaddsavertexutosets wehaveu theorem correctnessofdijkstra salgorithm dijkstra salgorithm runonaweighted directedgraphgd withnon negativeweightfunctionwandsources terminateswithu forallverticesu chapter sourceshortestpathsp uysxfigure theproofoftheorem setsisnonemptyjustbeforevertexuisaddedtoit wedecomposeashortestpathpfromsourcestovertexuintosp whereyisthe rstvertexonthepaththatisnotinsandx simmediatelyprecedesy verticesxandyaredistinct butwemayhavesdxorydu pathp mayormaynotreentersets proofweusethefollowingloopinvariant atthestartofeachiterationofthewhileloopoflines foreachvertex itsuf cestoshowforeachvertexu wehaveu atthetimewhenuisaddedtosets onceweshowthatu werelyontheupper boundpropertytoshowthattheequalityholdsatalltimesthereafter initialization initially andsotheinvariantistriviallytrue maintenance wewishtoshowthatineachiteration forthevertexaddedtosets forthepurposeofcontradiction letubethe rstvertexforwhichu whenitisaddedtosets weshallfocusourattentiononthesituationatthebeginningoftheiterationofthewhileloopinwhichuisaddedtosandderivethecontradictionthatu atthattimebyexaminingashortestpathfromstou wemusthaveu sbecausesisthe rstvertexaddedtosetsands atthattime becauseu wealsohavethats justbeforeuisaddedtos theremustbesomepathfromstou forotherwiseu bytheno pathproperty whichwouldviolateourassumptionthatu becausethereisatleastonepath thereisashortestpathpfromstou priortoaddingutos pathpconnectsavertexins namelys toavertexinvs namelyu letusconsiderthe rstvertexyalongpsuchthaty andletx sbey spredecessoralongp asfigure illustrates wecandecomposepathpintosp eitherofpathsp orp mayhavenoedges weclaimthaty whenuisaddedtos toprovethisclaim servethatx becausewechoseuasthe rstvertexforwhichu whenitisaddedtos wehadx whenxwasadded dijkstra salgorithm tos wasrelaxedatthattime andtheclaimfollowsfromtheconvergenceproperty wecannowobtainacontradictiontoprovethatu becauseyappearsbeforeuonashortestpathfromstouandalledgeweightsarenon negative notablythoseonpathp wehave andthusy bytheupper boundproperty butbecausebothverticesuandywereinvswhenuwaschoseninline wehaveu thetwoinequalitiesin areinfactequalities givingy consequently whichcontradictsourchoiceofu weconcludethatu whenuisaddedtos andthatthisequalityismaintainedatalltimesthereafter termination attermination alongwithourearlierinvariantthatqdvs impliesthatsdv forallverticesu corollary ifwerundijkstra salgorithmonaweighted directedgraphgd withnonnegativeweightfunctionwandsources thenattermination thepredecessorsubgraphgisashortest pathstreerootedats proofimmediatefromtheorem andthepredecessor subgraphproperty analysishowfastisdijkstra salgorithm itmaintainsthemin priorityqueueqbycall ingthreepriority queueoperations insert implicitinline extract min anddecrease implicitinrelax whichiscalledinline thealgorithmcallsbothinsertandextract minoncepervertex becauseeachvertexu visaddedtosetsexactlyonce eachedgeintheadjacencylistadjisexaminedintheforloopoflines exactlyonceduringthecourseoftheal gorithm sincethetotalnumberofedgesinalltheadjacencylistsisjej thisforloopiteratesatotalofjejtimes andthusthealgorithmcallsdecrease keyatmostjejtimesoverall observeonceagainthatweareusingaggregateanalysis therunningtimeofdijkstra salgorithmdependsonhowweimplementthemin priorityqueue rstthecaseinwhichwemaintainthemin priority chapter sourceshortestpathsqueuebytakingadvantageoftheverticesbeingnumbered tojvj wesimplystoredinthethentryofanarray eachinsertanddecrease keyoperationtakeso andeachextract minoperationtakeso sincewehavetosearchthroughtheentirearray foratotaltimeofo ifthegraphissuf cientlysparse inparticular edo lgv wecanimprovethealgorithmbyimplementingthemin priorityqueuewithabinarymin heap asdiscussedinsection theimplementationshouldmakesurethat verticesandcorrespondingheapelementsmaintainhandlestoeachother eachextract minoperationthentakestimeo lgv asbefore therearejvjsuchoperations thetimetobuildthebinarymin heapiso eachdecrease keyoperationtakestimeo lgv andtherearestillatmostjejsuchoperations thetotalrunningtimeisthereforeo vce lgv whichiso elgv ifallverticesarereachablefromthesource thisrunningtimeimprovesuponthestraightfor wardo timeimplementationifedo lgv wecaninfactachievearunningtimeofo vlgvce byimplementingthemin priorityqueuewithafibonacciheap seechapter theamortizedcostofeachofthejvjextract minoperationsiso lgv andeachdecrease keycall ofwhichthereareatmostjej takesonlyo amortizedtime torically thedevelopmentoffibonacciheapswasmotivatedbytheobservation thatdijkstra salgorithmtypicallymakesmanymoredecrease keycallsthanextract mincalls sothatanymethodofreducingtheamortizedtimeofeachdecrease keyoperationtoo lgv withoutincreasingtheamortizedtimeofextract minwouldyieldanasymptoticallyfasterimplementationthanwithbi naryheaps dijkstra salgorithmresemblesbothbreadth rstsearch seesection andprim salgorithmforcomputingminimumspanningtrees seesection itis likebreadth rstsearchinthatsetscorrespondstothesetofblackverticesinabreadth rstsearch justasverticesinshavetheir nalshortest pathweights sodoblackverticesinabreadth rstsearchhavetheircorrectbreadth rstdistances dijkstra salgorithmislikeprim salgorithminthatbothalgorithmsuseamin priorityqueueto ndthe lightest vertexoutsideagivenset thesetsindijkstra salgorithmandthetreebeinggrowninprim salgorithm addthisvertexintothe andadjusttheweightsoftheremainingverticesoutsidethesetaccordingly exercises rundijkstra salgorithmonthedirectedgraphoffigure rstusingvertexsasthesourceandthenusingvertex asthesource inthestyleoffigure showthedandvaluesandtheverticesinsetsaftereachiterationofthewhileloop dijkstra salgorithm giveasimpleexampleofadirectedgraphwithnegative weightedgesforwhich dijkstra salgorithmproducesincorrectanswers whydoesn ttheproofoftheo rem gothroughwhennegative weightedgesareallowed supposewechangeline ofdijkstra salgorithmtothefollowing whilejqj thischangecausesthewhilelooptoexecutejvj timesinsteadofjvjtimes isthisproposedalgorithmcorrect professorgaedelhaswrittenaprogramthatheclaimsimplementsdijkstra sal gorithm theprogramproducesdandforeachvertex giveano vce timealgorithmtochecktheoutputoftheprofessor sprogram itshoulddeterminewhetherthedandattributesmatchthoseofsomeshortest pathstree youmayassumethatalledgeweightsarenonnegative professornewmanthinksthathehasworkedoutasimplerproofofcorrectness fordijkstra salgorithm heclaimsthatdijkstra salgorithmrelaxestheedgesof everyshortestpathinthegraphintheorderinwhichtheyappearonthepath thereforethepath relaxationpropertyappliestoeveryvertexreachablefromthe source showthattheprofessorismistakenbyconstructingadirectedgraphforwhichdijkstra salgorithmcouldrelaxtheedgesofashortestpathoutoforder wearegivenadirectedgraphgd onwhicheachedge ehasanassociatedvaluer whichisarealnumberintherange thatrepresentsthereliabilityofacommunicationchannelfromvertexutovertex weinterpretr astheprobabilitythatthechannelfromutowillnotfail andweassumethattheseprobabilitiesareindependent giveanef cientalgorithm ndthemostreliablepathbetweentwogivenvertices letgd beaweighted directedgraphwithpositiveweightfunctionwwe wgforsomepositiveintegerw andassumethatnotwover ticeshavethesameshortest pathweightsfromsourcevertexs nowsupposethatwede neanunweighted directedgraphg byreplacingeachedge ewithw weightedgesinseries howmanyverticesdoesg nowsupposethatwerunabreadth rstsearchong showthat chapter sourceshortestpathstheorderinwhichthebreadth rstsearchofg colorsverticesinvblackisthesameastheorderinwhichdijkstra salgorithmextractstheverticesofvfromthepriorityqueuewhenitrunsong letgd beaweighted directedgraphwithnonnegativeweightfunctionwwe wgforsomenonnegativeintegerw modifydijkstra salgo rithmtocomputetheshortestpathsfromagivensourcevertexsino wvce modifyyouralgorithmfromexercise torunino vce lgw hint howmanydistinctshortest pathestimatescantherebeinvsatanypointintime supposethatwearegivenaweighted directedgraphgd inwhichedgesthatleavethesourcevertexsmayhavenegativeweights allotheredgeweightsarenonnegative andtherearenonegative weightcycles arguethatdijkstra algorithmcorrectly ndsshortestpathsfromsinthisgraph differenceconstraintsandshortestpathschapter studiesthegenerallinear programmingproblem inwhichwewishtooptimizealinearfunctionsubjecttoasetoflinearinequalities inthissection investigateaspecialcaseoflinearprogrammingthatwereduceto ndingshortest pathsfromasinglesource wecanthensolvethesingle sourceshortest paths problemthatresultsbyrunningthebellman fordalgorithm therebyalsosolving thelinear programmingproblem linearprogramminginthegenerallinear programmingproblem wearegivenanmnmatrixa anm vectorb andann vectorc wewishto ndavectorxofnelementsthatmaximizestheobjectivefunctionpnid cixisubjecttothemconstraintsgivenbyaxb althoughthesimplexalgorithm whichisthefocusofchapter doesnotalwaysrunintimepolynomialinthesizeofitsinput thereareotherlinear programmingalgorithmsthatdoruninpolynomialtime weofferheretworeasonstounderstandthesetupoflinear programmingproblems ifweknowthatwe differenceconstraintsandshortestpaths cancastagivenproblemasapolynomial sizedlinear programmingproblem thenweimmediatelyhaveapolynomial timealgorithmtosolvetheproblem fasteralgorithmsexistformanyspecialcasesoflinearprogramming forexam ple thesingle pairshortest pathproblem andthemaximum arespecialcasesoflinearprogramming sometimeswedon treallycareabouttheobjectivefunction wejustwishto ndanyfeasiblesolution thatis anyvectorxthatsatis esaxb ortodeterminethatnofeasiblesolutionexists weshallfocusononesuchfeasibilityproblem systemsofdifferenceconstraintsinasystemofdifferenceconstraints eachrowofthelinear programmingmatrixacontainsone andone andallotherentriesofaare theconstraintsgivenbyaxbareasetofmdifferenceconstraintsinvolvingnunknowns inwhicheachconstraintisasimplelinearinequalityoftheformxjxibk forexample considertheproblemof ndinga vectorxd thatsatis thisproblemisequivalentto ndingvaluesfortheunknownsx satisfyingthefollowing differenceconstraints chapter sourceshortestpathsonesolutiontothisproblemisxd whichyoucanverifydi rectlybycheckingeachinequality infact thisproblemhasmorethanonesolution anotherisx thesetwosolutionsarerelated eachcomponentofx largerthanthecorrespondingcomponentofx thisfactisnotmerecoincidence lemma letxd beasolutiontoasystemaxbofdifferencecon straints andletdbeanyconstant thenxcdd xncd isasolutiontoaxbaswell proofforeachxiandxj wehave xjcd xicd dxjxi ifxsatis esaxb sodoesxcd systemsofdifferenceconstraintsoccurinmanydifferentapplications forex ample theunknownsximaybetimesatwhicheventsaretooccur eachconstraintstatesthatatleastacertainamountoftime oratmostacertainamountoftime mustelapsebetweentwoevents perhapstheeventsarejobstobeperformeddur ingtheassemblyofaproduct ifweapplyanadhesivethattakes hourstosetattimex andwehavetowaituntilitsetstoinstallapartattimex thenwehavetheconstraintthatx equivalently thatx alternatively wemightrequirethatthepartbeinstalledaftertheadhesivehasbeenappliedbutno laterthanthetimethattheadhesivehassethalfway inthiscase wegetthepairof constraintsx andx equivalently andx constraintgraphswecaninterpretsystemsofdifferenceconstraintsfromagraph theoreticpointofview inasystemaxbofdifferenceconstraints weviewthemnlinear programmingmatrixaasthetransposeofanincidencematrix seeexer cise foragraphwithnverticesandmedges eachvertexiinthegraph forid correspondstooneofthenunknownvariablesxi eachdi rectededgeinthegraphcorrespondstooneoftheminequalitiesinvolvingtwounknowns moreformally givenasystemaxbofdifferenceconstraints thecorrespond ingconstraintgraphisaweighted directedgraphgd wherevdf ngandedfij wxjxibkisaconstraintg differenceconstraintsandshortestpaths theconstraintgraphcorrespondingtothesystem ofdifferencecon straints thevalueof appearsineachvertexi onefeasiblesolutiontothesystemisxd theconstraintgraphcontainstheadditionalvertex asweshallseeshortly toguaranteethatthegraphhassomevertexwhichcanreachallothervertices thevertexsetvconsistsofavertexiforeachunknownxi plusanadditionalvertex theedgesetecontainsanedgeforeachdifferenceconstraint plusanedge foreachunknownxi ifxjxibkisadifferenceconstraint thentheweightofedgeij isw dbk theweightofeachedgeleav ing showstheconstraintgraphforthesystem ofdifferenceconstraints thefollowingtheoremshowsthatwecan ndasolutiontoasystemofdiffer enceconstraintsby ndingshortest pathweightsinthecorrespondingconstraintgraph theorem givenasystemaxbofdifferenceconstraints letgd bethecorre spondingconstraintgraph ifgcontainsnonegative weightcycles thenxd isafeasiblesolutionforthesystem ifgcontainsanegative weightcycle thenthereisnofeasiblesolutionforthesystem proofwe rstshowthatiftheconstraintgraphcontainsnonegative weightcycles thenequation givesafeasiblesolution consideranyedgeij bythetriangleinequality equivalently lettingxid chapter sourceshortestpathsxjd satis esthedifferenceconstraintxjxiw thatcorre spondstoedgeij nowweshowthatiftheconstraintgraphcontainsanegative weightcycle thenthesystemofdifferenceconstraintshasnofeasiblesolution withoutlossofgen erality letthenegative weightcyclebecdh thevertex cannotbeoncyclec becauseithasnoenteringedges cycleccorrespondstothefollowingdifferenceconstraints xkxk wewillassumethatxhasasolutionsatisfyingeachofthesekinequalitiesandthenderiveacontradiction thesolutionmustalsosatisfytheinequalitythatresultswhenwesumthekinequalitiestogether ifwesumtheleft handsides eachunknownxiisaddedinonceandsubtractedoutonce rememberthat dkimpliesx dxk sothattheleft handsideofthesumis theright handsidesumstow andthusweobtain butsincecisanegative weightcycle andweobtainthecontradictionthat solvingsystemsofdifferenceconstraintstheorem tellsusthatwecanusethebellman fordalgorithmtosolveasystemofdifferenceconstraints becausetheconstraintgraphcontainsedges fromthesourcevertex toallothervertices anynegative weightcycleintheconstraintgraphisreachablefrom ifthebellman fordalgorithmreturnstrue thentheshortest pathweightsgiveafeasiblesolutiontothesystem infigure forexample theshortest pathweightsprovidethefeasiblesolution andbylemma isalsoafeasiblesolutionforanyconstantd ifthebellman fordalgorithmreturnsfalse thereisnofeasiblesolutiontothesystemofdifferenceconstraints asystemofdifferenceconstraintswithmconstraintsonnunknownsproducesagraphwithnc verticesandncmedges usingthebellman fordalgorithm wecansolvethesystemino ncm cnm asksyoutomodifythealgorithmtorunino evenifmismuchlessthann differenceconstraintsandshortestpaths exercises findafeasiblesolutionordeterminethatnofeasiblesolutionexistsforthefollow ingsystemofdifferenceconstraints findafeasiblesolutionordeterminethatnofeasiblesolutionexistsforthefollow ingsystemofdifferenceconstraints cananyshortest pathweightfromthenewvertex inaconstraintgraphbeposi tive explain expressthesingle pairshortest pathproblemasalinearprogram chapter sourceshortestpaths showhowtomodifythebellman fordalgorithmslightlysothatwhenweuseit tosolveasystemofdifferenceconstraintswithminequalitiesonnunknowns therunningtimeiso supposethatinadditiontoasystemofdifferenceconstraints wewanttohandle equalityconstraintsoftheformxidxjcbk showhowtoadaptthebellman fordalgorithmtosolvethisvarietyofconstraintsystem showhowtosolveasystemofdifferenceconstraintsbyabellman ford likealgo rithmthatrunsonaconstraintgraphwithouttheextravertex letaxbbeasystemofmdifferenceconstraintsinnunknowns showthatthebellman fordalgorithm whenrunonthecorrespondingconstraintgraph maxi mizespnid xisubjecttoaxbandxi forallxi showthatthebellman fordalgorithm whenrunontheconstraintgraphforasys temaxbofdifferenceconstraints minimizesthequantity maxfxigminfxig subjecttoaxb explainhowthisfactmightcomeinhandyifthealgorithmisusedtoscheduleconstructionjobs supposethateveryrowinthematrixaofalinearprogramaxbcorrespondstoadifferenceconstraint asingle variableconstraintoftheformxibk orasingle variableconstraintoftheformxibk showhowtoadaptthebellman fordalgorithmtosolvethisvarietyofconstraintsystem giveanef cientalgorithmtosolveasystemaxbofdifferenceconstraintswhenalloftheelementsofbarereal valuedandalloftheunknownsximustbeintegers giveanef cientalgorithmtosolveasystemaxbofdifferenceconstraintswhenalloftheelementsofbarereal valuedandaspeci edsubsetofsome butnotnecessarilyall oftheunknownsximustbeintegers proofsofshortest pathsproperties proofsofshortest pathspropertiesthroughoutthischapter ourcorrectnessargumentshavereliedonthetriangleinequality upper boundproperty pathproperty convergenceproperty relaxationproperty andpredecessor subgraphproperty westatedtheseproperties withoutproofatthebeginningofthischapter inthissection weprovethem thetriangleinequalityinstudyingbreadth rstsearch weprovedaslemma asim plepropertyofshortestdistancesinunweightedgraphs thetriangleinequalitygeneralizesthepropertytoweightedgraphs lemma triangleinequality letgd beaweighted directedgraphwithweightfunctionwwe randsourcevertexs foralledges wehave proofsupposethatpisashortestpathfromsourcestovertex thenphasnomoreweightthananyotherpathfromsto speci cally pathphasnomoreweightthantheparticularpaththattakesashortestpathfromsourcestovertexuandthentakesedge asksyoutohandlethecaseinwhichthereisnoshortestpathfromsto effectsofrelaxationonshortest pathestimatesthenextgroupoflemmasdescribeshowshortest pathestimatesareaffectedwhenweexecuteasequenceofrelaxationstepsontheedgesofaweighted directed graphthathasbeeninitializedbyinitialize source lemma upper boundproperty letgd beaweighted directedgraphwithweightfunctionwwe lets vbethesourcevertex andletthegraphbeinitializedbyinitialize source forall andthisinvariantismaintainedoveranysequenceofrelaxationstepsontheedgesofg moreover oncedachievesitslowerbound itneverchanges chapter sourceshortestpathsproofweprovetheinvariantd forallvertices vbyinductionoverthenumberofrelaxationsteps forthebasis iscertainlytrueafterinitialization sincedd impliesd forall vfsg andsinces notethat ifsisonanegative weightcycleand otherwise fortheinductivestep considertherelaxationofanedge bytheinductivehypothesis forallx vpriortotherelaxation theonlydvaluethatmaychangeisd ifitchanges wehaveddu dcw bytheinductivehypothesis bythetriangleinequality andsotheinvariantismaintained toseethatthevalueofdneverchangesoncedd notethathavingachieveditslowerbound dcannotdecreasebecausewehavejustshownthatd anditcannotincreasebecauserelaxationstepsdonotincreasedvalues corollary pathproperty supposethatinaweighted directedgraphgd withweightfunctionwwe nopathconnectsasourcevertexs vtoagivenvertex afterthegraphisinitializedbyinitialize source wehavedd andthisequalityismaintainedasaninvariantoveranysequenceofrelaxationstepsontheedgesofg proofbytheupper boundproperty wealwayshave andthusdd lemma letgd beaweighted directedgraphwithweightfunctionwwe andlet immediatelyafterrelaxingedge byexecutingrelax wehavedu dcw proofif justpriortorelaxingedge wehaved dcw thenddu dcw afterward instead dcw justbeforetherelaxation thenneitheru dnordchanges andsodu dcw afterward lemma convergenceproperty letgd beaweighted directedgraphwithweightfunctionwwe lets vbeasourcevertex andletsu beashortestpathingfor proofsofshortest pathsproperties someverticesu supposethatgisinitializedbyinitialize source andthenasequenceofrelaxationstepsthatincludesthecallrelax isexecutedontheedgesofg ifu atanytimepriortothecall thendd atalltimesafterthecall proofbytheupper boundproperty ifu atsomepointpriortore laxingedge thenthisequalityholdsthereafter inparticular afterrelaxingedge wehavedu dcw bylemma bylemma bytheupper boundproperty fromwhichweconcludethatdd andthisequalityismaintainedthereafter lemma relaxationproperty letgd beaweighted directedgraphwithweightfunctionwwe andlets vbeasourcevertex consideranyshortestpathpdh kifromsd tok ifgisinitializedbyinitialize source andthenasequenceofrelaxationstepsoccursthatincludes inorder relaxingtheedges thenk aftertheserelaxationsandatalltimesafterward thispropertyholdsnomatterwhatotheredgerelaxations includingrelaxationsthatareintermixedwithrelaxationsoftheedgesofp proofweshowbyinductionthataftertheithedgeofpathpisrelaxed wehavei forthebasis andbeforeanyedgesofphavebeenrelaxed wehavefromtheinitializationthat dds bytheupper boundproperty thevalueofs dneverchangesafterinitialization fortheinductivestep weassumethati andweexaminewhathappenswhenwerelaxedgei bytheconvergenceproperty afterrelaxingthisedge wehavei andthisequalityismaintainedatalltimesthereafter relaxationandshortest pathstreeswenowshowthatonceasequenceofrelaxationshascausedtheshortest pathes timatestoconvergetoshortest pathweights thepredecessorsubgraphginducedbytheresultingvaluesisashortest pathstreeforg westartwiththefollow inglemma whichshowsthatthepredecessorsubgraphalwaysformsarootedtreewhoserootisthesource chapter sourceshortestpathslemma letgd beaweighted directedgraphwithweightfunctionwwe lets vbeasourcevertex andassumethatgcontainsnonegative weightcyclesthatarereachablefroms afterthegraphisinitializedbyinitialize source thepredecessorsubgraphgformsarootedtreewithroots andanysequenceofrelaxationstepsonedgesofgmaintainsthispropertyasaninvariant proofinitially theonlyvertexingisthesourcevertex andthelemmaistriv iallytrue considerapredecessorsubgraphgthatarisesafterasequenceofrelaxationsteps weshall rstprovethatgisacyclic supposeforthesakeofcontradictionthatsomerelaxationstepcreatesacycleinthegraphg letthecy clebecdh wherekd idi forid kand withoutlossofgenerality wecanassumethatrelaxingedgek createdthecycleing weclaimthatallverticesoncyclecarereachablefromthesources eachvertexonchasanon nilpredecessor andsoeachvertexoncwasassigneda niteshortest pathestimatewhenitwasassigneditsnon nilvalue bytheupper boundproperty eachvertexoncyclechasa niteshortest pathweight whichimpliesthatitisreachablefroms weshallexaminetheshortest pathestimatesoncjustpriortothecallrelaxk andshowthatcisanegative weightcycle therebycontra dictingtheassumptionthatgcontainsnonegative weightcyclesthatarereachablefromthesource justbeforethecall wehaveidi forid forid thelastupdatetoi dwasbytheassignmenti ddi dcw ifi dchangedsincethen itdecreased therefore justbeforethecallrelaxk wehavei dcw forallid becausekischangedbythecall immediatelybeforehandwealsohavethestrictinequalityk dcw summingthisstrictinequalitywiththek inequalities weobtainthesumoftheshortest pathestimatesaroundcyclec kxid kxid dcw dkxid dckxid proofsofshortest pathsproperties suxyzvfigure showingthatasimplepathingfromsourcestovertexisunique iftherearetwopathsp sux andp suy wherex dxand acontradiction butkxid ddkxid sinceeachvertexinthecyclecappearsexactlyonceineachsummation thisequalityimplies kxid thesumofweightsaroundthecyclecisnegative whichprovidesthedesiredcontradiction wehavenowproventhatgisadirected acyclicgraph toshowthatitformsarootedtreewithroots itsuf ces seeexerciseb toprovethatforeachvertex thereisauniquesimplepathfromstoing rstmustshowthatapathfromsexistsforeachvertexinv thever ticesinvarethosewithnon nilvalues pluss theideahereistoprovebyinductionthatapathexistsfromstoallverticesinv weleavethedetailsasexercise tocompletetheproofofthelemma wemustnowshowthatforanyvertex thegraphgcontainsatmostonesimplepathfromsto supposeother wise thatis supposethat asfigure illustrates gcontainstwosimplepathsfromstosomevertex whichwedecomposeintosux andp whichwedecomposeintosuy wherex thoughucouldbesand couldbe butthen dxand whichimpliesthecontradictionthatxdy weconcludethatgcontainsauniquesimplepathfromsto andthusgformsarootedtreewithroots wecannowshowthatif afterwehaveperformedasequenceofrelaxationsteps allverticeshavebeenassignedtheirtrueshortest pathweights thenthepredeces sorsubgraphgisashortest pathstree chapter sourceshortestpathslemma predecessor subgraphproperty letgd beaweighted directedgraphwithweightfunctionwwe lets vbeasourcevertex andassumethatgcontainsnonegative weightcyclesthatarereachablefroms letuscallinitialize source andthenexecuteanysequenceofrelaxationstepsonedgesofgthatproducesdd forall thepredecessorsubgraphgisashortest pathstreerootedats proofwemustprovethatthethreepropertiesofshortest pathstreesgivenonpage holdforg toshowthe rstproperty wemustshowthatvisthesetofverticesreachablefroms byde nition ashortest pathweight niteifandonlyifisreachablefroms andthustheverticesthatarereachablefromsareexactlythosewith nitedvalues butavertex vfsghasbeenassigneda nitevaluefordifandonlyif nil theverticesinvareexactlythosereachablefroms thesecondpropertyfollowsdirectlyfromlemma itremains therefore toprovethelastpropertyofshortest pathstrees foreachvertex theuniquesimplepathspingisashortestpathfromstoing letpdh dsandkd forid wehavebothi andi dcw fromwhichweconcludew summingtheweightsalongpathpyieldsw dkxid kxid becausethesumtelescopes because isalowerboundontheweightofanypathfromstok weconcludethatw andthuspisashortestpathfromstodk exercises givetwoshortest pathstreesforthedirectedgraphoffigure onpage otherthanthetwoshown proofsofshortest pathsproperties giveanexampleofaweighted directedgraphgd withweightfunctionwwe randsourcevertexssuchthatgsatis esthefollowingproperty foreveryedge thereisashortest pathstreerootedatsthatcontains andanothershortest pathstreerootedatsthatdoesnotcontain embellishtheproofoflemma tohandlecasesinwhichshortest weightsare letgd beaweighted directedgraphwithsourcevertexs andletgbeinitializedbyinitialize source provethatifasequenceofrelaxationstepssetss toanon nilvalue thengcontainsanegative weightcycle letgd beaweighted directedgraphwithnonegative weightedges lets vbethesourcevertex andsupposethatweallowtobethepredecessorofonanyshortestpathtofromsourcesif vfsgisreachablefroms andnilotherwise giveanexampleofsuchagraphgandanassignmentofvaluesthatproducesacycleing bylemma suchanassignmentcannotbeproducedbyasequenceofrelaxationsteps letgd beaweighted directedgraphwithweightfunctionwwe randnonegative weightcycles lets vbethesourcevertex andletgbeinitial izedbyinitialize source provethatforeveryvertex thereexistsapathfromstoingandthatthispropertyismaintainedasaninvariantoveranysequenceofrelaxations letgd beaweighted directedgraphthatcontainsnonegative weightcycles lets vbethesourcevertex andletgbeinitializedbyinitialize source provethatthereexistsasequenceofjvj relaxationstepsthatproducesdd forall letgbeanarbitraryweighted directedgraphwithanegative weightcyclereach ablefromthesourcevertexs showhowtoconstructanin nitesequenceofrelax ationsoftheedgesofgsuchthateveryrelaxationcausesashortest pathestimatetochange chapter sourceshortestpathsproblems yen simprovementtobellman fordsupposethatweordertheedgerelaxationsineachpassofthebellman fordal gorithmasfollows beforethe rstpass weassignanarbitrarylinearorder jvjtotheverticesoftheinputgraphgd weparti tiontheedgeseteintoef whereefdfij ewi jgandebdfij ewi assumethatgcontainsnoself loops sothateveryedgeisineithereforeb negfd andgbd provethatgfisacyclicwithtopologicalsorth jvjiandthatgbisacyclicwithtopologicalsorthjvjjv supposethatweimplementeachpassofthebellman fordalgorithminthefol lowingway wevisiteachvertexintheorder jvj relaxingedgesofefthatleavethevertex wethenvisiteachvertexintheorderjvjjv relaxingedgesofebthatleavethevertex provethatwiththisscheme ifgcontainsnonegative weightcyclesthatarereachablefromthesourcevertexs thenafteronlydjvj epassesovertheedges forallvertices doesthisschemeimprovetheasymptoticrunningtimeofthebellman fordalgorithm nestingboxesad dimensionalboxwithdimensions nestswithinanotherboxwithdimensions ifthereexistsapermutationonf dgsuchthatx arguethatthenestingrelationistransitive describeanef cientmethodtodeterminewhetherornotoned dimensionalboxnestsinsideanother supposethatyouaregivenasetofnd dimensionalboxesfb bng giveanef cientalgorithmto ndthelongestsequencehbi bikiofboxessuchthatbijnestswithinbijc forjd expresstherunningtimeofyouralgorithmintermsofnandd problemsforchapter arbitragearbitrageistheuseofdiscrepanciesincurrencyexchangeratestotransformoneunitofacurrencyintomorethanoneunitofthesamecurrency forexample supposethat dollarbuys indianrupees indianrupeebuys japaneseyen japaneseyenbuys dollars byconvertingcurrencies atradercanstartwith dollarandbuy dollars thusturningapro tof percent supposethatwearegivenncurrenciesc cnandannntablerofexchangerates suchthatoneunitofcurrencycibuysr junitsofcurrencycj giveanef cientalgorithmtodeterminewhetherornotthereexistsasequenceofcurrencieshci cikisuchthatr ikr analyzetherunningtimeofyouralgorithm giveanef cientalgorithmtoprintoutsuchasequenceifoneexists analyzetherunningtimeofyouralgorithm gabow sscalingalgorithmforsingle sourceshortestpathsascalingalgorithmsolvesaproblembyinitiallyconsideringonlythehighest orderbitofeachrelevantinputvalue suchasanedgeweight itthenre nesthe initialsolutionbylookingatthetwohighest orderbits itprogressivelylooksat moreandmorehigh orderbits ningthesolutioneachtime untilithasexam inedallbitsandcomputedthecorrectsolution inthisproblem weexamineanalgorithmforcomputingtheshortestpathsfromasinglesourcebyscalingedgeweights wearegivenadirectedgraphgd withnonnegativeintegeredgeweightsw letwdmax efw ourgoalistodevelopanalgorithmthatrunsino elgw weassumethatallverticesarereachablefromthesource thealgorithmuncoversthebitsinthebinaryrepresentationoftheedgeweightsoneatatime fromthemostsigni cantbittotheleastsigni cantbit speci cally letkddlg ebethenumberofbitsinthebinaryrepresentationofw andforid letwi thatis isthe scaled versionofw givenbytheimostsigni cantbitsofw forall forexample ifkd andw whichhasthebinaryrepresentationh thenw asanotherexamplewithkd ifw thenw letusde astheshortest pathweightfromvertexutovertexusingweightfunctionwi forallu foragivensourcevertexs thescalingalgorithm rstcomputesthe chapter sourceshortestpathsshortest pathweights forall thencomputes forall andsoon untilitcomputes forall weassumethroughoutthatjejjvj andweshallseethatcomputing ifrom takeso sothattheentirealgorithmtakeso elgw supposethatforallvertices wehave jej showthatwecancompute forall vino showthatwecancompute forall vino letusnowfocusoncomputing ifrom provethatforid wehaveeitherwi orwi provethat cjvj forall neforid kandall ywi dwi provethatforid kandallu reweighted valueywi ofedge isanonnegativeinteger ney astheshortest pathweightfromstousingtheweightfunctionywi provethatforid kandall andthaty jej showhowtocompute forall vino andconcludethatwecancompute forall vino elgw karp sminimummean weightcyclealgorithmletgd beadirectedgraphwithweightfunctionwwe andletndjvj wede nethemeanweightofacyclecdhe ekiofedgesinetobec kkxid problemsforchapter letdmincc wherecrangesoveralldirectedcyclesing wecallacyclecforwhichc daminimummean weightcycle thisprobleminvestigatesanef cientalgorithmforcomputing assumewithoutlossofgeneralitythateveryvertex visreachablefromasourcevertexs betheweightofashortestpathfromsto andlet betheweightofashortestpathfromstoconsistingofexactlykedges ifthereisnopathfromstowithexactlykedges showthatifd thengcontainsnonegative weightcyclesand dmin forallvertices showthatifd thenmax forallvertices hint usebothpropertiesfrompart letcbea weightcycle andletuandbeanytwoverticesonc supposethatd andthattheweightofthesimplepathfromutoalongthecycleisx provethat hint theweightofthesimplepathfromtoualongthecycleisx showthatifd thenoneachminimummean weightcyclethereexistsavertexsuchthatmax nkd hint showhowtoextendashortestpathtoanyvertexonaminimummean weightcyclealongthecycletomakeashortestpathtothenextvertexonthe cycle showthatifd thenmin vmax nkd showthatifweaddaconstantttotheweightofeachedgeofg thenincreasesbyt usethisfacttoshowthatdmin vmax giveano timealgorithmtocompute chapter sourceshortestpaths bitonicshortestpathsasequenceisbitonicifitmonotonicallyincreasesandthenmonotonicallyde creases orifbyacircularshiftitmonotonicallyincreasesandthenmonotonically decreases forexamplethesequencesh andh iarebitonic buth iisnotbitonic seeproblem forthebitoniceuclideantraveling salesmanproblem supposethatwearegivenadirectedgraphgd withweightfunctionwwe wherealledgeweightsareunique andwewishto ndsingle sourceshortestpathsfromasourcevertexs wearegivenoneadditionalpieceofinfor mation foreachvertex theweightsoftheedgesalonganyshortestpathfromstoformabitonicsequence givethemostef cientalgorithmyoucantosolvethisproblem andanalyzeitsrunningtime chapternotesdijkstra salgorithm appearedin butitcontainednomentionofapriority queue thebellman fordalgorithmisbasedonseparatealgorithmsbybellman andford bellmandescribestherelationofshortestpathstodifferenceconstraints lawler describesthelinear timealgorithmforshortestpathsin adag whichheconsiderspartofthefolklore whenedgeweightsarerelativelysmallnonnegativeintegers wehavemoreef cientalgorithmstosolvethesingle sourceshortest pathsproblem thesequence ofvaluesreturnedbytheextract mincallsindijkstra salgorithmmonoton icallyincreasesovertime asdiscussedinthechapternotesforchapter inthiscaseseveraldatastructurescanimplementthevariouspriority queueopera tionsmoreef cientlythanabinaryheaporafibonacciheap ahuja mehlhorn orlin andtarjan giveanalgorithmthatrunsino ecvplgw timeongraphswithnonnegativeedgeweights wherewisthelargestweightofanyedgeinthegraph thebestboundsarebythorup whogivesanalgorithmthat runsino elglgv andbyraman whogivesanalgorithmthatrunsinoecvmin lgv lgw ctime thesetwoalgorithmsuseanamountofspacethatdependsonthewordsizeoftheunderlyingmachine thoughtheamountofspaceusedcanbeunboundedinthesizeoftheinput itcan bereducedtobelinearinthesizeoftheinputusingrandomizedhashing forundirectedgraphswithintegerweights thorup givesano vce timealgorithmforsingle sourceshortestpaths incontrasttothealgorithmsmen tionedinthepreviousparagraph thisalgorithmisnotanimplementationofdijk notesforchapter stra salgorithm sincethesequenceofvaluesreturnedbyextract mincallsdoesnotmonotonicallyincreaseovertime forgraphswithnegativeedgeweights analgorithmduetogabowandtar jan runsino pvelg andonebygoldberg runsino pvelgw wherewdmax efjw cherkassky goldberg andradzik conductedextensiveexperimentscom paringvariousshortest pathalgorithms pairsshortestpathsinthischapter weconsidertheproblemof ndingshortestpathsbetweenallpairsofverticesinagraph thisproblemmightariseinmakingatableofdistancesbe tweenallpairsofcitiesforaroadatlas asinchapter wearegivenaweighted directedgraphgd withaweightfunctionwwe rthatmapsedgestoreal valuedweights wewishto foreverypairofverticesu ashortest pathfromuto wheretheweightofapathisthesumoftheweightsofitsconstituentedges wetypicallywanttheoutputintabularform theentryinu srowand scolumnshouldbetheweightofashortestpathfromuto wecansolveanall pairsshortest pathsproblembyrunningasingle sourceshortest pathsalgorithmjvjtimes onceforeachvertexasthesource ifalledgeweightsarenonnegative wecanusedijkstra salgorithm ifweuse thelinear arrayimplementationofthemin priorityqueue therunningtimeis cve thebinarymin heapimplementationofthemin priorityqueueyieldsarunningtimeofo velgv whichisanimprovementifthegraphissparse alternatively wecanimplementthemin priorityqueuewithafibonacci heap yieldingarunningtimeofo lgvcve ifthegraphhasnegative weightedges wecannotusedijkstra salgorithm wemustruntheslowerbellman fordalgorithmoncefromeachvertex resultingrunningtimeiso whichonadensegraphiso inthischap terweshallseehowtodobetter wealsoinvestigatetherelationoftheall pairs shortest pathsproblemtomatrixmultiplicationandstudyitsalgebraicstructure unlikethesingle sourcealgorithms whichassumeanadjacency listrepresen tationofthegraph mostofthealgorithmsinthischapteruseanadjacency matrixrepresentation johnson salgorithmforsparsegraphs insection usesadjacencylists forconvenience weassumethattheverticesarenumbered jvj sothattheinputisannnmatrixwrepresentingtheedgeweightsofann vertexdirectedgraphgd thatis wij chapter pairsshortestpaths wijd ifidj theweightofdirectededge ifi jand ifi jand weallownegative weightedges butweassumeforthetimebeingthattheinputgraphcontainsnonegative weightcycles thetabularoutputoftheall pairsshortest pathsalgorithmspresentedinthischapterisannnmatrixdd dij whereentrydijcontainstheweightofashortestpathfromvertexitovertexj thatis ifwelet denotetheshortest pathweightfromvertexitovertexj asinchapter thendijd attermination tosolvetheall pairsshortest pathsproblemonaninputadjacencymatrix weneedtocomputenotonlytheshortest pathweightsbutalsoapredecessormatrix dij whereijisnilifeitheridjorthereisnopathfromitoj andotherwiseijisthepredecessorofjonsomeshortestpathfromi justasthepredecessorsubgraphgfromchapter isashortest pathstreeforagivensourcevertex thesubgraphinducedbytheithrowofthe matrixshouldbeashortest pathstreewithrooti foreachvertexi wede nethepredecessorsubgraphofgforiasgid wherevidfj vwij nilg figandeidfij vifigg ifgiisashortest pathstree thenthefollowingprocedure whichisamodi edversionoftheprint pathprocedurefromchapter printsashortestpathfromvertexitovertexj pairs shortest ifi printi elseifij nil nopathfrom exists elseprint pairs shortest iij printjinordertohighlighttheessentialfeaturesoftheall pairsalgorithmsinthischapter wewon tcoverthecreationandpropertiesofpredecessormatricesasextensively aswedealtwithpredecessorsubgraphsinchapter someoftheexercisescoverthebasics chapter pairsshortestpathschapteroutlinesection presentsadynamic programmingalgorithmbasedonmatrixmulti plicationtosolvetheall pairsshortest pathsproblem usingthetechniqueof peatedsquaring wecanachievearunningtimeof lgv givesanotherdynamic programmingalgorithm thefloyd warshallalgorithm runsintime alsocoverstheproblemof ndingthetran sitiveclosureofadirectedgraph whichisrelatedtotheall pairsshortest paths finally presentsjohnson salgorithm whichsolvestheall pairsshortest pathsproblemino lgvcve timeandisagoodchoiceforlarge sparsegraphs beforeproceeding weneedtoestablishsomeconventionsforadjacency matrixrepresentations weshallgenerallyassumethattheinputgraphgd hasnvertices sothatndjvj weshallusetheconventionofdenotingmatricesbyuppercaseletters suchasw ord andtheirindividualelementsbysubscriptedlowercaseletters suchaswij lij ordij somematriceswillhaveparenthesizedsuperscripts asinl ijord toindicateiterates finally foragivennnmatrixa weshallassumethatthevalueofnisstoredintheattributea rows shortestpathsandmatrixmultiplicationthissectionpresentsadynamic programmingalgorithmfortheall pairsshortest pathsproblemonadirectedgraphgd eachmajorloopofthedynamicprogramwillinvokeanoperationthatisverysimilartomatrixmultiplication thatthealgorithmwilllooklikerepeatedmatrixmultiplication weshallstartby developinga timealgorithmfortheall pairsshortest pathsproblemandthenimproveitsrunningtimeto lgv beforeproceeding letusbrie yrecapthestepsgiveninchapter fordevel opingadynamic programmingalgorithm characterizethestructureofanoptimalsolution recursivelyde nethevalueofanoptimalsolution computethevalueofanoptimalsolutioninabottom upfashion wereservethefourthstep constructinganoptimalsolutionfromcomputedin formation fortheexercises shortestpathsandmatrixmultiplication thestructureofashortestpathwestartbycharacterizingthestructureofanoptimalsolution fortheall pairsshortest pathsproblemonagraphgd wehaveproven lemma thatallsubpathsofashortestpathareshortestpaths supposethatwerepresent thegraphbyanadjacencymatrixwd wij considerashortestpathpfromvertexitovertexj andsupposethatpcontainsatmostmedges assumingthattherearenonegative weightcycles mis nite ifidj thenphasweight andnoedges ifverticesiandjaredistinct thenwedecomposepathpintoip wherepathp nowcontainsatmostm edges bylemma isashortestpathfromitok andso cwkj arecursivesolutiontotheall pairsshortest pathsproblemnow letl ijbetheminimumweightofanypathfromvertexitovertexjthatcontainsatmostmedges whenmd thereisashortestpathfromitojwithnoedgesifandonlyifidj ijd ifidj ifi wecomputel ijastheminimumofl theweightofashortestpathfromitojconsistingofatmostm edges andtheminimumweightofanypathfromitojconsistingofatmostmedges obtainedbylookingatallpossiblepredecessorskofj werecursivelyde nel ijdminl min ikcwkjdmin ikcwkj thelatterequalityfollowssincewjjd forallj whataretheactualshortest pathweights ifthegraphcontainsnonegative weightcycles thenforeverypairofverticesiandjforwhich thereisashortestpathfromitojthatissimpleandthuscontainsatmostn edges apathfromvertexitovertexjwithmorethann edgescannothavelowerweightthanashortestpathfromitoj theactualshortest pathweightsarethereforegivenby ijdl ijdl ijd chapter pairsshortestpathscomputingtheshortest pathweightsbottomuptakingasourinputthematrixwd wij wenowcomputeaseriesofmatricesl whereformd wehavel nalmatrixl containstheactualshortest pathweights observethatl ijdwijforallverticesi andsol theheartofthealgorithmisthefollowingprocedure givenmatricesl andw returnsthematrixl thatis itextendstheshortestpathscom putedsofarbyonemoreedge extend shortest paths ndl rows letl ijbeanewnnmatrix forid ton forjd ton ijd forkd ton ijdmin likcwkj returnl theprocedurecomputesamatrixl whichitreturnsattheend itdoessobycomputingequation foralliandj usinglforl andl forl itiswrittenwithoutthesuperscriptstomakeitsinputandoutputmatricesinde pendentofm itsrunningtimeis duetothethreenestedforloops nowwecanseetherelationtomatrixmultiplication supposewewishtocom putethematrixproductcdaboftwonnmatricesaandb fori wecomputecijdnxkd aikbkj observethatifwemakethesubstitutionsl min inequation weobtainequation ifwemakethesechangestoextend shortest pathsandalsoreplace theidentityformin shortestpathsandmatrixmultiplication identityforc weobtainthesame timeprocedureformultiplyingsquarematricesthatwesawinsection matrix nda rows letcbeanewnnmatrix forid ton forjd ton cijd forkd ton cijdcijcaikbkj returncreturningtotheall pairsshortest pathsproblem wecomputetheshortest pathweightsbyextendingshortestpathsedgebyedge lettingabdenotethema trix returnedbyextend shortest paths wecomputethese quenceofn matricesl wdw wdw wdw wdwn aswearguedabove thematrixl dwn containstheshortest pathweights thefollowingprocedurecomputesthissequencein pairs shortest paths ndw rows formd ton letl beanewnnmatrix dextend shortest paths returnl showsagraphandthematricesl computedbytheprocedureslow pairs shortest paths improvingtherunningtimeourgoal however isnottocomputeallthel matrices weareinterestedonlyinmatrixl recallthatintheabsenceofnegative weightcycles equa chapter pairsshortestpaths adirectedgraphandthesequenceofmatricesl computedbyslow pairs shortest paths youmightwanttoverifythatl nedasl equalsl andthusl forallm tion impliesl forallintegersmn justastradi tionalmatrixmultiplicationisassociative soismatrixmultiplicationde nedbytheextend shortest pathsprocedure seeexercise therefore wecancomputel withonlydlg ematrixproductsbycomputingthese quencel dww dlg dlg edw dlg dlg dlg nalproductl dlg isequaltol thefollowingprocedurecomputestheabovesequenceofmatricesbyusingthistechniqueofrepeatedsquaring shortestpathsandmatrixmultiplication aweighted directedgraphforuseinexercises faster pairs shortest paths ndw rows whilem letl beanewnnmatrix dextend shortest paths returnl ineachiterationofthewhileloopoflines wecomputel startingwithmd attheendofeachiteration wedoublethevalueofm naliterationcomputesl byactuallycomputingl forsomen byequation thenexttimethetestinline isperformed mhasbeendoubled sonowmn thetestfails andtheprocedurereturnsthelastmatrixitcomputed becauseeachofthedlg ematrixproductstakes faster pairs shortest pathsrunsin lgn observethatthecodeistight containingnoelaboratedatastructures andtheconstanthiddeninthe notationisthereforesmall exercises runslow pairs shortest pathsontheweighted directedgraphoffigure showingthematricesthatresultforeachiterationoftheloop thendothesameforfaster pairs shortest paths whydowerequirethatwiid forall chapter pairsshortestpaths whatdoesthematrixl usedintheshortest pathsalgorithmscorrespondtoinregularmatrixmultiplica tion showthatmatrixmultiplicationde nedbyextend shortest pathsisasso ciative showhowtoexpressthesingle sourceshortest pathsproblemasaproductofma tricesandavector describehowevaluatingthisproductcorrespondstoabellman ford likealgorithm seesection supposewealsowishtocomputetheverticesonshortestpathsinthealgorithmsof thissection showhowtocomputethepredecessormatrix fromthecompletedmatrixlofshortest pathweightsino wecanalsocomputetheverticesonshortestpathsaswecomputetheshortest pathweights ijasthepredecessorofvertexjonanyminimum weightpathfromitojthatcontainsatmostmedges modifytheextend shortest pathsandslow pairs shortest pathsprocedurestocomputethema trices asthematricesl arecomputed thefaster pairs shortest pathsprocedure aswritten requiresustostoredlg ematrices eachwithn elements foratotalspacerequirementof lgn modifytheproceduretorequireonly spacebyusingonlytwonnmatrices modifyfaster pairs shortest pathssothatitcandeterminewhetherthegraphcontainsanegative weightcycle thefloyd warshallalgorithm giveanef cientalgorithmto ndthelength numberofedges ofaminimum lengthnegative weightcycleinagraph thefloyd warshallalgorithminthissection weshalluseadifferentdynamic programmingformulationtosolve theall pairsshortest pathsproblemonadirectedgraphgd theresult ingalgorithm knownasthefloyd warshallalgorithm runsin asbefore negative weightedgesmaybepresent butweassumethatthereareno negative weightcycles asinsection wefollowthedynamic programming processtodevelopthealgorithm afterstudyingtheresultingalgorithm presentasimilarmethodfor ndingthetransitiveclosureofadirectedgraph thestructureofashortestpathinthefloyd warshallalgorithm wecharacterizethestructureofashortestpathdifferentlyfromhowwecharacterizeditinsection thefloyd warshallalgo rithmconsiderstheintermediateverticesofashortestpath whereanintermediatevertexofasimplepathpdh liisanyvertexofpotherthan orl thatis anyvertexinthesetf thefloyd warshallalgorithmreliesonthefollowingobservation underourassumptionthattheverticesofgarevdf letusconsiderasubsetf kgofverticesforsomek foranypairofverticesi considerallpathsfromitojwhoseintermediateverticesarealldrawnfromf andletpbeaminimum weightpathfromamongthem pathpissimple thefloyd warshallalgorithmexploitsarelationshipbetweenpathpandshortestpathsfromitojwithallintermediateverticesinthesetf therelationshipdependsonwhetherornotkisanintermediatevertexofpathp ifkisnotanintermediatevertexofpathp thenallintermediateverticesofpathpareinthesetf ashortestpathfromvertexitovertexjwithallintermediateverticesinthesetf gisalsoashortestpathfromitojwithallintermediateverticesinthesetf ifkisanintermediatevertexofpathp thenwedecomposepintoip asfigure illustrates bylemma isashortestpathfromitokwithallintermediateverticesinthesetf infact wecanmakeaslightlystrongerstatement becausevertexkisnotanintermediatevertexofpathp allintermediateverticesofp areinthesetf chapter pairsshortestpathsikjp allintermediateverticesinf kgallintermediateverticesinf gallintermediateverticesinf gfigure pathpisashortestpathfromvertexitovertexj andkisthehighest numberedintermediatevertexofp pathp theportionofpathpfromvertexitovertexk hasallintermediateverticesinthesetf thesameholdsforpathp fromvertexktovertexj fore isashortestpathfromitokwithallintermediateverticesinthesetf similarly isashortestpathfromvertexktovertexjwithallintermediateverticesinthesetf arecursivesolutiontotheall pairsshortest pathsproblembasedontheaboveobservations wede nearecursiveformulationofshortest pathestimatesthatdiffersfromtheoneinsection letd ijbetheweightofashortestpathfromvertexitovertexjforwhichallintermediateverticesareinthesetf whenkd apathfromvertexitovertexjwithnointermediatevertexnumberedhigherthan hasnointermediateverticesatall suchapathhasatmostoneedge andhenced ijdwij followingtheabovediscussion wede ned ijrecursivelybyd ijd wijifkd ikcd kjifk becauseforanypath allintermediateverticesareinthesetf thema trixd ijgivesthe nalanswer ijd foralli computingtheshortest pathweightsbottomupbasedonrecurrence wecanusethefollowingbottom upproceduretocom putethevaluesd ijinorderofincreasingvaluesofk itsinputisannnmatrixwde nedasinequation theprocedurereturnsthematrixd ofshortest pathweights thefloyd warshallalgorithm floyd warshall ndw rows forkd ton letd ijbeanewnnmatrix forid ton forjd ton ijdmind ikcd returnd showsthematricesd computedbythefloyd warshallalgorithmforthegraphinfigure therunningtimeofthefloyd warshallalgorithmisdeterminedbythetriplynestedforloopsoflines becauseeachexecutionofline takeso thealgorithmrunsintime asinthe nalalgorithminsection thecodeistight withnoelaboratedatastructures andsotheconstanthiddeninthe notationissmall thefloyd warshallalgorithmisquitepracticalforevenmoderate sizedinputgraphs constructingashortestpaththereareavarietyofdifferentmethodsforconstructingshortestpathsinthefloyd warshallalgorithm onewayistocomputethematrixdofshortest pathweightsandthenconstructthepredecessormatrix fromthedmatrix asksyoutoimplementthismethodsothatitrunsino giventhepre decessormatrix theprint pairs shortest pathprocedurewillprinttheverticesonagivenshortestpath alternatively wecancomputethepredecessormatrix whilethealgorithmcomputesthematricesd speci cally wecomputeasequenceofmatrices andwede ijasthepredecessorofvertexjonashortestpathfromvertexiwithallintermediateverticesinthesetf wecangivearecursiveformulationof whenkd ashortestpathfromitojhasnointermediateverticesatall ijd nilifidjorwijd iifi jandwij fork ifwetakethepathikj wherek thenthepredecessorofjwechooseisthesameasthepredecessorofjwechoseonashortestpathfromkwithallintermediateverticesinthesetf otherwise chapter pairsshortestpathsd dnil nil nilnilnil nil nilnilnil nil nilnilnilnilnil nil dnil nil nilnilnil nil nilnilnil nil nilnilnil nil dnil nilnilnil nil nil nil nilnilnil nil dnil nilnilnil nil nil nil nilnilnil nil dnil nil nil nil nil dnil nil nil nil nil thesequenceofmatricesd computedbythefloyd warshallalgorithmforthegraphinfigure thefloyd warshallalgorithm choosethesamepredecessorofjthatwechoseonashortestpathfromiwithallintermediateverticesinthesetf formally fork ijd ijifd ijd ikcd kjifd ikcd weleavetheincorporationofthe matrixcomputationsintothefloyd warshallprocedureasexercise showsthesequenceof matricesthattheresultingalgorithmcomputesforthegraphoffigure theexercisealsoasksforthemoredif culttaskofprovingthatthepredecessorsub graphgiisashortest pathstreewithrooti asksforyetanotherwaytoreconstructshortestpaths transitiveclosureofadirectedgraphgivenadirectedgraphgd withvertexsetvdf wemightwishtodeterminewhethergcontainsapathfromitojforallvertexpairsi wede nethetransitiveclosureofgasthegraphgd whereedf wthereisapathfromvertexitovertexjingg onewaytocomputethetransitiveclosureofagraphin timeistoassignaweightof toeachedgeofeandrunthefloyd warshallalgorithm ifthereisapathfromvertexitovertexj wegetdij otherwise wegetdijd thereisanother similarwaytocomputethetransitiveclosureofgin timethatcansavetimeandspaceinpractice thismethodsubstitutesthelogical operations logicalor logicaland forthearithmeticoperationsminandcinthefloyd warshallalgorithm fori wede net ijtobe ifthereexistsapathingraphgfromvertexitovertexjwithallintermediateverticesinthesetf otherwise weconstructthetransitiveclosuregd byputtingedge intoeifandonlyift ijd arecursivede nitionoft analogoustorecurrence ist ijd ifi jand ifidjor andfork ijdt asinthefloyd warshallalgorithm wecomputethematricest ijinorderofincreasingk chapter pairsshortestpaths adirectedgraphandthematricest computedbythetransitive closurealgorithm transitive closure ndjg lett ijbeanewnnmatrix forid ton forjd ton ifi jor ijd elset ijd forkd ton lett ijbeanewnnmatrix forid ton forjd ton ijdt returnt showsthematricest computedbythetransitive closureprocedureonasamplegraph thetransitive closureprocedure likethefloyd warshallalgorithm runsin onsomecomputers icaloperationsonsingle bitvaluesexecutefasterthanarithmeticoperationsonintegerwordsofdata moreover becausethedirecttransitive closurealgorithmusesonlybooleanvaluesratherthanintegervalues itsspacerequirementisless thefloyd warshallalgorithm thanthefloyd warshallalgorithm sbyafactorcorrespondingtothesizeofawordofcomputerstorage exercises runthefloyd warshallalgorithmontheweighted directedgraphoffigure showthematrixd thatresultsforeachiterationoftheouterloop showhowtocomputethetransitiveclosureusingthetechniqueofsection modifythefloyd warshallproceduretocomputethe matricesaccordingtoequations proverigorouslythatforalli thepredecessorsubgraphgiisashortest pathstreewithrooti hint toshowthatgiisacyclic rstshowthat ijdlimpliesd ijd ilcwlj accordingtothede nitionof adapttheproofoflemma asitappearsabove thefloyd warshallalgorithmrequires sincewecomputed ijfori showthatthefollowingprocedure whichsimplydropsallthesuperscripts iscorrect andthusonly spaceisrequired floyd warshall ndw rows ddw forkd ton forid ton forjd ton dijdmin dij dikcdkj returnd supposethatwemodifythewayinwhichequation handlesequality ijd ijifd ikcd kjifd ijd ikcd isthisalternativede nitionofthepredecessormatrix chapter pairsshortestpaths howcanweusetheoutputofthefloyd warshallalgorithmtodetectthepresence ofanegative weightcycle anotherwaytoreconstructshortestpathsinthefloyd warshallalgorithmusesvalues ijfori ijisthehighest numberedinterme diatevertexofashortestpathfromitojinwhichallintermediateverticesareinthesetf givearecursiveformulationfor modifythefloyd warshallproceduretocomputethe ijvalues andrewritetheprint pairs shortest pathproceduretotakethematrix ijasaninput howisthematrix likethestableinthematrix chainmultiplicationproblemofsection giveano timealgorithmforcomputingthetransitiveclosureofadirectedgraphgd supposethatwecancomputethetransitiveclosureofadirectedacyclicgraphin jvj jej wherefisamonotonicallyincreasingfunctionofjvjandjej showthatthetimetocomputethetransitiveclosuregd ofageneraldirectedgraphgd isthenf jvj jej vce johnson salgorithmforsparsegraphsjohnson salgorithm ndsshortestpathsbetweenallpairsino lgvcve forsparsegraphs itisasymptoticallyfasterthaneitherrepeatedsquaringof matricesorthefloyd warshallalgorithm thealgorithmeitherreturnsamatrixofshortest pathweightsforallpairsofverticesorreportsthattheinputgraphcontainsanegative weightcycle johnson salgorithmusesassubroutinesbothdijkstra algorithmandthebellman fordalgorithm whichchapter describes johnson salgorithmusesthetechniqueofreweighting whichworksasfollows ifalledgeweightswinagraphgd arenonnegative wecan ndshort estpathsbetweenallpairsofverticesbyrunningdijkstra salgorithmoncefrom eachvertex withthefibonacci heapmin priorityqueue therunningtimeofthis pairsalgorithmiso lgvcve ifghasnegative weightedgesbutnonegative weightcycles wesimplycomputeanewsetofnonnegativeedgeweights johnson salgorithmforsparsegraphs thatallowsustousethesamemethod thenewsetofedgeweightsywmustsatisfytwoimportantproperties forallpairsofverticesu apathpisashortestpathfromutousingweightfunctionwifandonlyifpisalsoashortestpathfromutousingweightfunctionyw foralledges thenewweightyw isnonnegative asweshallseeinamoment wecanpreprocessgtodeterminethenewweightfunctionywino preservingshortestpathsbyreweightingthefollowinglemmashowshoweasilywecanreweighttheedgestosatisfythe rstpropertyabove weuse todenoteshortest pathweightsderivedfromweightfunctionwandy todenoteshortest pathweightsderivedfromweightfunctionyw lemma reweightingdoesnotchangeshortestpaths givenaweighted directedgraphgd withweightfunctionwwe lethwv rbeanyfunctionmappingverticestorealnumbers foreachedge neyw letpdh kibeanypathfromvertex tovertexk thenpisashortestpathfrom tokwithweightfunctionwifandonlyifitisashortestpathwithweightfunctionyw thatis ifandonlyifyw furthermore ghasanegative weightcycleusingweightfunctionwifandonlyifghasanegative weightcycleusingweightfunctionyw proofwestartbyshowingthatyw wehaveyw dkxid dkxid dkxid becausethesumtelescopes chapter pairsshortestpathstherefore anypathpfrom tokhasyw causeh andh donotdependonthepath ifonepathfrom tokisshorterthananotherusingweightfunctionw thenitisalsoshorterusingyw ifandonlyifyw finally weshowthatghasanegative weightcycleusingweightfunctionwifandonlyifghasanegative weightcycleusingweightfunctionyw consideranycyclecdh byequation andthuschasnegativeweightusingwifandonlyifithasnegativeweightus ingyw producingnonnegativeweightsbyreweightingournextgoalistoensurethatthesecondpropertyholds wewantyw tobenonnegativeforalledges givenaweighted directedgraphgd withweightfunctionwwe wemakeanewgraphg wherev fsgforsomenewvertexs vande weextendtheweightfunctionwsothatw forall notethatbecauseshasnoedgesthatenterit noshortestpathsing otherthanthosewithsources contains moreover hasnonegative weightcyclesifandonlyifghasnonegative weightcycles showsthegraphg correspondingtothegraphgoffigure nowsupposethatgandg havenonegative weightcycles letusde neh forall bythetriangleinequality lemma wehaveh foralledges ifwede nethenewweightsywbyreweightingaccordingtoequation wehaveyw andwehavesatis edthesecondproperty showsthegraphg fromfigure withreweightededges computingall pairsshortestpathsjohnson salgorithmtocomputeall pairsshortestpathsusesthebellman fordal gorithm anddijkstra salgorithm assubroutines itassumesimplicitlythattheedgesarestoredinadjacencylists thealgorithmre turnstheusualjvjjvjmatrixdddij wheredijd oritreportsthattheinputgraphcontainsanegative weightcycle asistypicalforanall pairsshortest pathsalgorithm weassumethattheverticesarenumberedfrom tojvj johnson salgorithmforsparsegraphs johnson sall pairsshortest pathsalgorithmrunonthegraphoffigure ver texnumbersappearoutsidethevertices thegraphg withtheoriginalweightfunctionw thenewvertexsisblack withineachvertexish afterreweightingeachedge withweightfunctionyw theresultofrunningisblack andshadededgesareintheshortest pathstreecomputedbythealgorithm withineachvertexarethevaluesy separatedbyaslash thevaluedd isequaltoy dijkstra salgorithmoneachvertexofgusingweightfunctionwy ineachpart thesourcevertexu chapter pairsshortestpathsjohnson computeg whereg vdg fsg edg andw forall ifbellman ford false theinputgraphcontainsanegative weightcycle elseforeachvertex seth tothevalueof computedbythebellman fordalgorithm foreachedge letdd beanewnnmatrix foreachvertexu rundijkstra tocomputey forall foreachvertex ddy returndthiscodesimplyperformstheactionswespeci edearlier producesg runsthebellman fordalgorithmong withweightfunctionwandsourcevertexs ifg andhenceg containsanegative weightcycle reportstheproblem lines assumethatg containsnonegative weightcycles lines seth totheshortest pathweight computedbythebellman fordalgo rithmforall lines computethenewweightsyw foreachpairofver ticesu theforloopoflines computestheshortest pathweighty bycallingdijkstra salgorithmoncefromeachvertexinv storesinmatrixentrydthecorrectshortest pathweight calculatedusingequa tion finally returnsthecompleteddmatrix depictstheexecutionofjohnson salgorithm ifweimplementthemin priorityqueueindijkstra salgorithmbyafibonacciheap johnson salgorithmrunsino lgvcve thesimplerbinarymin heapimplementationyieldsarunningtimeofo velgv whichisstillasymp toticallyfasterthanthefloyd warshallalgorithmifthegraphissparse exercises usejohnson salgorithmto ndtheshortestpathsbetweenallpairsofverticesin thegraphoffigure showthevaluesofhandywcomputedbythealgorithm problemsforchapter whatisthepurposeofaddingthenewvertexstov yieldingv supposethatw foralledges whatistherelationshipbetweentheweightfunctionswandyw professorgreenstreetclaimsthatthereisasimplerwaytoreweightedgesthan themethodusedinjohnson salgorithm lettingwdmin efw justde neyw wforalledges whatiswrongwiththeprofessor smethodofreweighting supposethatwerunjohnson salgorithmonadirectedgraphgwithweightfunc tionw showthatifgcontainsa weightcyclec thenyw foreveryedge inc professormichenerclaimsthatthereisnoneedtocreateanewsourcevertexin ofjohnson heclaimsthatinsteadwecanjustuseg dgandletsbeanyvertex giveanexampleofaweighted directedgraphgforwhichincorporatingtheprofessor sideaintojohnsoncausesincorrectanswers thenshowthatifgisstronglyconnected everyvertexisreachablefromeveryothervertex theresults returnedbyjohnsonwiththeprofessor smodi cationarecorrect problems transitiveclosureofadynamicgraph supposethatwewishtomaintainthetransitiveclosureofadirectedgraphgd asweinsertedgesintoe thatis aftereachedgehasbeeninserted wewanttoupdatethetransitiveclosureoftheedgesinsertedsofar assumethatthe graphghasnoedgesinitiallyandthatwerepresentthetransitiveclosureasabooleanmatrix showhowtoupdatethetransitiveclosuregd ofagraphgd ino timewhenanewedgeisaddedtog giveanexampleofagraphgandanedgeesuchthatv timeisrequiredtoupdatethetransitiveclosureaftertheinsertionofeintog nomatterwhatalgorithmisused chapter pairsshortestpathsc describeanef cientalgorithmforupdatingthetransitiveclosureasedgesareinsertedintothegraph foranysequenceofninsertions youralgorithmshouldrunintotaltimepnid tido wheretiisthetimetoupdatethetransitiveclosureuponinsertingtheithedge provethatyouralgorithmattainsthistimebound shortestpathsin densegraphsagraphgd denseifjejd forsomeconstantintherange byusingd arymin heaps seeproblem inshortest pathsalgorithmson densegraphs wecanmatchtherunningtimesoffibonacci heap basedalgorithmswithoutusingascomplicatedadatastructure whataretheasymptoticrunningtimesforinsert extract min anddecrease asafunctionofdandthenumbernofelementsinad arymin heap whataretheserunningtimesifwechoosedd forsomeconstant comparetheserunningtimestotheamortizedcostsoftheseoperationsforafibonacciheap showhowtocomputeshortestpathsfromasinglesourceonan densedirectedgraphgd withnonegative weightedgesino hint pickdasafunctionof showhowtosolvetheall pairsshortest pathsproblemonan densedirectedgraphgd withnonegative weightedgesino showhowtosolvetheall pairsshortest pathsproblemino timeonan densedirectedgraphgd thatmayhavenegative weightedgesbuthasnonegative weightcycles chapternoteslawler hasagooddiscussionoftheall pairsshortest pathsproblem thoughhedoesnotanalyzesolutionsforsparsegraphs heattributesthematrix multiplicationalgorithmtothefolklore thefloyd warshallalgorithmisdueto floyd whobaseditonatheoremofwarshall thatdescribeshowtocomputethetransitiveclosureofbooleanmatrices johnson salgorithmistakenfrom severalresearchershavegivenimprovedalgorithmsforcomputingshortestpathsviamatrixmultiplication fredman showshowtosolvetheall pairsshortestpathsproblemusingo comparisonsbetweensumsofedge notesforchapter weightsandobtainsanalgorithmthatrunsino lglgv lgv whichisslightlybetterthantherunningtimeofthefloyd warshallalgorithm han reducedtherunningtimetoo lglgv lgv anotherlineofresearchdemonstratesthatwecanapplyalgorithmsforfastmatrixmultiplication seethe chapternotesforchapter totheall pairsshortestpathsproblem leto betherunningtimeofthefastestalgorithmformultiplyingnnmatrices currently galilandmargalit andseidel designedalgo rithmsthatsolvetheall pairsshortestpathsprobleminundirected unweightedgraphsin wherep denotesaparticularfunctionthatispoly logarithmicallyboundedinn indensegraphs thesealgorithmsarefasterthantheo timeneededtoperformjvjbreadth rstsearches severalresearchershaveextendedtheseresultstogivealgorithmsforsolvingtheall pairsshortest pathsprobleminundirectedgraphsinwhichtheedgeweightsareintegersinthe rangef theasymptoticallyfastestsuchalgorithm byshoshanandzwick runsintimeo karger koller andphillips andindependentlymcgeoch havegivenatimeboundthatdependsone thesetofedgesinethatparticipateinsomeshortestpath givenagraphwithnonnegativeedgeweights theiralgorithmsrunino vecv lgv timeandimproveuponrunningdijkstra salgorithmjvjtimeswhenjejdo baswana hariharan andsen examineddecrementalalgorithmsformain tainingall pairsshortestpathsandtransitive closureinformation decremen talalgorithmsallowasequenceofintermixededgedeletionsandqueries bycomparison inwhichedgesareinserted asksforanincremen talalgorithm thealgorithmsbybaswana hariharan andsenarerandomized whenapathexists theirtransitive closurealgorithmcanfailtoreportit withprobability ncforanarbitraryc thequerytimesareo withhighprobability fortransitiveclosure theamortizedtimeforeachupdateis forall pairsshortestpaths theupdatetimesdependonthequeries forqueriesjustgivingtheshortest pathweights theamortizedtimeper updateiso elg toreporttheactualshortestpath theamortizedup datetimeismin plgv elg demetrescuanditaliano showedhowtohandleupdateandqueryoperationswhenedgesarebothinserted anddeleted aslongaseachgivenedgehasaboundedrangeofpossiblevalues drawnfromtherealnumbers aho hopcroft andullman nedanalgebraicstructureknownasa closedsemiring whichservesasageneralframeworkforsolvingpathproblemsindi rectedgraphs boththefloyd warshallalgorithmandthetransitive closurealgo rithmfromsection areinstantiationsofanall pairsalgorithmbasedonclosed semirings maggsandplotkin showedhowto ndminimumspanningtrees usingaclosedsemiring maximumflowjustaswecanmodelaroadmapasadirectedgraphinorderto ndtheshortestpathfromonepointtoanother wecanalsointerpretadirectedgraphasa network anduseittoanswerquestionsaboutmaterial ows imagineamate rialcoursingthroughasystemfromasource wherethematerialisproduced asink whereitisconsumed thesourceproducesthematerialatsomesteady rate andthesinkconsumesthematerialatthesamerate ofthemate rialatanypointinthesystemisintuitivelytherateatwhichthematerialmoves flownetworkscanmodelmanyproblems includingliquids owingthroughpipes partsthroughassemblylines currentthroughelectricalnetworks andinformation throughcommunicationnetworks wecanthinkofeachdirectededgeina ownetworkasaconduitforthemate rial eachconduithasastatedcapacity givenasamaximumrateatwhichthema terialcan owthroughtheconduit suchas gallonsofliquidperhourthroughapipeor amperesofelectricalcurrentthroughawire verticesareconduitjunctions andotherthanthesourceandsink owsthroughtheverticeswithoutcollectinginthem inotherwords therateatwhichmaterialentersaver texmustequaltherateatwhichitleavesthevertex wecallthisproperty conservation anditisequivalenttokirchhoff scurrentlawwhenthematerialis electricalcurrent inthemaximum owproblem wewishtocomputethegreatestrateatwhichwecanshipmaterialfromthesourcetothesinkwithoutviolatinganycapacity constraints itisoneofthesimplestproblemsconcerning ownetworksand weshallseeinthischapter thisproblemcanbesolvedbyef cientalgorithms moreover wecanadaptthebasictechniquesusedinmaximum owalgorithmsto solveothernetwork owproblems thischapterpresentstwogeneralmethodsforsolvingthemaximum owprob lem formalizesthenotionsof ownetworksand ows formally ningthemaximum owproblem describestheclassicalmethodoffordandfulkersonfor ndingmaximum ows anapplicationofthismethod flownetworks ndingamaximummatchinginanundirectedbipartitegraph appearsinsec tion presentsthepush relabelmethod whichunderliesmanyof thefastestalgorithmsfornetwork owproblems coversthe relabel algorithm aparticularimplementationofthepush relabelmethodthat runsintimeo althoughthisalgorithmisnotthefastestalgorithmknown itillustratessomeofthetechniquesusedintheasymptoticallyfastestalgorithms anditisreasonablyef cientinpractice flownetworksinthissection wegiveagraph theoreticde nitionof ownetworks discusstheir properties andde nethemaximum owproblemprecisely wealsointroduce somehelpfulnotation flownetworksand owsa ownetworkgd isadirectedgraphinwhicheachedge ehasanonnegativecapacityc wefurtherrequirethatifecontainsanedge thenthereisnoedge inthereversedirection weshallseeshortlyhowtoworkaroundthisrestriction thenforconveniencewede nec andwedisallowself loops wedistinguishtwoverticesina ownetwork asourcesandasinkt forconvenience weassumethateachvertexliesonsomepathfromthesourcetothesink thatis foreachvertex ownetworkcontainsapathst thegraphisthereforeconnectedand sinceeachvertexotherthanshasatleastoneenteringedge jejjvj showsanexampleofa ownetwork wearenowreadytode owsmoreformally letgd bea ownetworkwithacapacityfunctionc letsbethesourceofthenetwork andlettbethesink owingisareal valuedfunctionfwvv rthatsatis esthefollowingtwoproperties capacityconstraint forallu werequire flowconservation forallu vfs werequirex therecanbeno owfromuto andf chapter maximumflowst edmontoncalgarysaskatoonreginavancouverwinnipegst ownetworkgd fortheluckypuckcompany struckingproblem thevancouverfactoryisthesources andthewinnipegwarehouseisthesinkt thecompanyshipspucksthroughintermediatecities butonlyc cratesperdaycangofromcityutocity eachedgeislabeledwithitscapacity owfingwithvaluejfjd eachedge islabeledbyf theslashnotationmerelyseparatesthe owandcapacity itdoesnotindicatedivision wecallthenonnegativequantityf owfromvertexutovertex thevaluejfjofa owfisde nedasjfjdx thatis thetotal owoutofthesourceminusthe owintothesource thejjnotationdenotes owvalue notabsolutevalueorcardinality typically ownetworkwillnothaveanyedgesintothesource andthe owintothesource given bythesummationp willbe weincludeit however becausewhenweintroduceresidualnetworkslaterinthischapter owintothesourcewill becomesigni cant inthemaximum owproblem wearegivena ownetworkgwithsourcesandsinkt andwewishto nda owofmaximumvalue beforeseeinganexampleofanetwork owproblem letusbrie yexplorethede nitionof owandthetwo owproperties thecapacityconstraintsimplysaysthatthe owfromonevertextoanothermustbenonnegativeandmustnotexceedthegivencapacity conservationpropertysaysthatthetotal owintoavertexotherthanthesourceorsinkmustequalthetotal owoutofthatvertex informally owinequals owout anexampleof owa ownetworkcanmodelthetruckingproblemshowninfigure theluckypuckcompanyhasafactory sources invancouverthatmanufactureshockeypucks andithasawarehouse sinkt inwinnipegthatstocksthem lucky flownetworks convertinganetworkwithantiparalleledgestoanequivalentonewithnoantiparalleledges ownetworkcontainingboththeedges anequivalentnetworkwithnoantiparalleledges weaddthenewvertex andwereplaceedge bythepairofedges bothwiththesamecapacityas puckleasesspaceontrucksfromanother rmtoshipthepucksfromthefactorytothewarehouse becausethetruckstraveloverspeci edroutes edges cities vertices andhavealimitedcapacity luckypuckcanshipatmostc cratesperdaybetweeneachpairofcitiesuandinfigure luckypuckhasnocontrolovertheseroutesandcapacities andsothecompanycannotalterthe ownetworkshowninfigure theyneedtodeterminethelargestnumberpofcratesperdaythattheycanshipandthentoproducethisamount sincethereisnopointinproducingmorepucksthantheycanshiptotheirwarehouse luckypuckisnotconcernedwithhowlongittakesforagivenpucktogetfrom thefactorytothewarehouse theycareonlythatpcratesperdayleavethefactoryandpcratesperdayarriveatthewarehouse wecanmodelthe ofshipmentswitha owinthisnetworkbecausethenumberofcratesshippedperdayfromonecitytoanotherissubjecttoacapacity constraint additionally themodelmustobey owconservation forinasteady therateatwhichpucksenteranintermediatecitymustequaltherateatwhich theyleave otherwise crateswouldaccumulateatintermediatecities modelingproblemswithantiparalleledgessupposethatthetrucking rmofferedluckypucktheopportunitytoleasespacefor cratesintrucksgoingfromedmontontocalgary itwouldseemnaturalto addthisopportunitytoourexampleandformthenetworkshowninfigure thisnetworksuffersfromoneproblem however itviolatesouroriginalassump tionthatifanedge wecallthetwoedges antiparallel ifwewishtomodela owproblemwithantipar alleledges wemusttransformthenetworkintoanequivalentonecontainingno chapter maximumflowantiparalleledges displaysthisequivalentnetwork wechooseoneofthetwoantiparalleledges inthiscase andsplititbyaddinganewvertex andreplacingedge withthepairofedges wealsosetthecapacityofbothnewedgestothecapacityoftheoriginaledge theresultingnetworksatis esthepropertythatifanedgeisinthenetwork reverseedgeisnot asksyoutoprovethattheresultingnetworkis equivalenttotheoriginalone weseethatareal owproblemmightbemostnaturallymodeledbyanetworkwithantiparalleledges itwillbeconvenienttodisallowantipar alleledges however andsowehaveastraightforwardwaytoconvertanetwork containingantiparalleledgesintoanequivalentonewithnoantiparalleledges networkswithmultiplesourcesandsinksamaximum owproblemmayhaveseveralsourcesandsinks ratherthanjustoneofeach theluckypuckcompany forexample mightactuallyhaveaset ofmfactoriesfs smgandasetofnwarehousesft tng asshowninfigure fortunately thisproblemisnoharderthanordinarymaximum wecanreducetheproblemofdeterminingamaximum owinanetworkwithmultiplesourcesandmultiplesinkstoanordinarymaximum owproblem ure showshowtoconvertthenetworkfrom toanordinary ownetworkwithonlyasinglesourceandasinglesink weaddasupersourcesandaddadirectededge withcapacityc foreachid wealsocreateanewsupersinktandaddadirectededge withcapacityc foreachid intuitively owinthenetworkin correspondstoa owinthenetworkin andviceversa thesinglesourcessimplyprovidesasmuch owasdesiredforthemultiplesourcessi andthesinglesinktlikewiseconsumesasmuch owasdesiredforthemultiplesinksti asksyoutoproveformallythatthetwoproblemsareequivalent exercises showthatsplittinganedgeina ownetworkyieldsanequivalentnetwork formally supposethat ownetworkgcontainsedge andwecreateanew ownetworkg bycreatinganewvertexxandreplacing bynewedges withc showthatamaximum owing hasthesamevalueasamaximum owing flownetworks stfigure convertingamultiple source multiple sinkmaximum owproblemintoaproblemwithasinglesourceandasinglesink ownetworkwith vesourcessdfs gandthreesinkstdft anequivalentsingle source sink ownetwork weaddasupersourcesandanedgewithin nitecapacityfromstoeachofthemultiplesources wealsoaddasupersinktandanedgewithin nitecapacityfromeachofthemultiplesinkstot extendthe owpropertiesandde nitionstothemultiple source multiple sink showthatany owinamultiple source multiple sink ownetwork correspondstoa owofidenticalvalueinthesingle source sinknetwork obtainedbyaddingasupersourceandasupersink andviceversa supposethata ownetworkgd violatestheassumptionthatthenetworkcontainsapathstforallvertices letubeavertexforwhichthereisnopathsut showthattheremustexistamaximum owfingsuchthatf forallvertices chapter maximumflow letfbea owinanetwork andlet bearealnumber thescalar owproduct denoted isafunctionfromvvtorde nedby provethatthe owsinanetworkformaconvexset thatis showthatiff andf ows thensois forall intherange statethemaximum owproblemasalinear programmingproblem professoradamhastwochildrenwho unfortunately dislikeeachother theprob lemissoseverethatnotonlydotheyrefusetowalktoschooltogether butinfact eachonerefusestowalkonanyblockthattheotherchildhassteppedonthatday thechildrenhavenoproblemwiththeirpathscrossingatacorner fortunately boththeprofessor shouseandtheschoolareoncorners butbeyondthatheisnot sureifitisgoingtobepossibletosendbothofhischildrentothesameschool theprofessorhasamapofhistown showhowtoformulatetheproblemofde terminingwhetherbothhischildrencangotothesameschoolasamaximum supposethat inadditiontoedgecapacities ownetworkhasvertexcapacities thatiseachvertexhasalimitl onhowmuch owcanpassthough showhowtotransforma ownetworkgd withvertexcapacitiesintoanequiv alent ownetworkg withoutvertexcapacities suchthatamaximum owing hasthesamevalueasamaximum owing howmanyverticesandedgesdoesg theford fulkersonmethodthissectionpresentstheford fulkersonmethodforsolvingthemaximum owproblem wecallita ratherthanan algorithm becauseitencompasses severalimplementationswithdifferingrunningtimes theford fulkersonmethod dependsonthreeimportantideasthattranscendthemethodandarerelevantto owalgorithmsandproblems residualnetworks augmentingpaths cuts theseideasareessentialtotheimportantmax owmin cuttheorem orem whichcharacterizesthevalueofamaximum owintermsofcutsof theford fulkersonmethod ownetwork weendthissectionbypresentingonespeci cimplementationoftheford fulkersonmethodandanalyzingitsrunningtime theford fulkersonmethoditerativelyincreasesthevalueofthe westartwithf forallu givinganinitial owofvalue ateachiteration weincreasethe owvalueingby ndingan augmentingpath inanassociated residualnetwork onceweknowtheedgesofanaugmentingpathingf wecaneasilyidentifyspeci cedgesingforwhichwecanchangethe owsothatweincreasethevalueofthe althougheachiterationoftheford fulkersonmethodincreasesthevalueofthe weshallseethatthe owonanyparticularedgeofgmayincreaseordecrease decreasingthe owonsomeedgesmaybenecessaryinordertoenableanalgorithmtosendmore owfromthe sourcetothesink werepeatedlyaugmentthe owuntiltheresidualnetworkhas nomoreaugmentingpaths themax owmin cuttheoremwillshowthatupon termination thisprocessyieldsamaximum ford fulkerson initialize owfto whilethereexistsanaugmentingpathpintheresidualnetworkgf augment owfalongp returnfinordertoimplementandanalyzetheford fulkersonmethod weneedtointro duceseveraladditionalconcepts residualnetworksintuitively givena ownetworkganda owf theresidualnetworkgfconsistsofedgeswithcapacitiesthatrepresenthowwecanchangethe owonedgesofg anedgeofthe ownetworkcanadmitanamountofadditional owequaltothe scapacityminusthe owonthatedge ifthatvalueispositive weplace thatedgeintogfwitha residualcapacity ofcf theonlyedgesofgthatareingfarethosethatcanadmitmore thoseedges owequalstheircapacityhavecf andtheyarenotingf theresidualnetworkgfmayalsocontainedgesthatarenoting however asanalgorithmmanipulatesthe withthegoalofincreasingthetotal mightneedtodecreasethe owonaparticularedge inordertorepresentapos sibledecreaseofapositive owf onanedgeing weplaceanedge intogfwithresidualcapacitycf thatis anedgethatcanadmit owintheoppositedirectionto atmostcancelingoutthe owon thesereverseedgesintheresidualnetworkallowanalgorithmtosendback chapter maximumflowithasalreadysentalonganedge sending owbackalonganedgeisequiva lenttodecreasingthe owontheedge whichisanecessaryoperationinmanyalgorithms moreformally supposethatwehavea ownetworkgd withsourcesandsinkt letfbea owing andconsiderapairofverticesu wede netheresidualcapacitycf bycf otherwise becauseofourassumptionthat eimplies exactlyonecaseinequation appliestoeachorderedpairofvertices asanexampleofequation ifc andf thenwecanincreasef byuptocf unitsbeforeweexceedthecapacityconstraintonedge wealsowishtoallowanalgorithmtoreturnupto unitsof owfromtou andhencecf givena ownetworkgd anda owf theresidualnetworkofginducedbyfisgfd whereefdf vvwcf thatis aspromisedabove eachedgeoftheresidualnetwork orresidualedge canadmita owthatisgreaterthan repeatsthe ownetworkgand owfoffigure andfigure showsthecorrespondingresidualnetworkgf theedgesinefareeitheredgesineortheirreversals andthusjefj jej observethattheresidualnetworkgfissimilartoa ownetworkwithcapacitiesgivenbycf itdoesnotsatisfyourde nitionofa ownetworkbecauseitmaycontainbothanedge anditsreversal otherthanthisdifference aresidualnetworkhasthesamepropertiesasa ownetwork andwecande nea owintheresidualnetworkasonethatsatis esthede nitionofa butwithrespecttocapacitiescfinthenetworkgf owinaresidualnetworkprovidesaroadmapforadding owtotheoriginal ownetwork iffisa owingandf isa owinthecorrespondingresidualnetworkgf wede nef theaugmentationof owfbyf tobeafunctionfromvvtor nedby otherwise theford fulkersonmethod ownetworkgand owfoffigure theresidualnetworkgfwithaugmentingpathpshaded itsresidualcapacityiscf dcf edgeswithresidualcapacityequalto suchas arenotshown aconventionwefollowintheremainderofthissection owingthatresultsfromaugmentingalongpathpbyitsresidualcapacity edgescarryingno suchas arelabeledonlybytheircapacity anotherconventionwefollowthroughout theresidualnetworkinducedbythe owin theintuitionbehindthisde nitionfollowsthede nitionoftheresidualnetwork weincreasethe owon byf butdecreaseitbyf becausepushing owonthereverseedgeintheresidualnetworksigni esdecreasingthe owintheoriginalnetwork pushing owonthereverseedgeintheresidual networkisalsoknownascancellation forexample ifwesend cratesofhockeypucksfromutoandsend cratesfromtou wecouldequivalently fromtheperspectiveofthe nalresult justsend createsfromutoandnonefromtou cancellationofthistypeiscrucialforanymaximum owalgorithm lemma letgd bea ownetworkwithsourcesandsinkt andletfbea owing letgfbetheresidualnetworkofginducedbyf andletf bea owingf thenthefunctionf nedinequation isa owingwithvaluejf jdjfjcjf proofwe rstverifythatf obeysthecapacityconstraintforeachedgeineand owconservationateachvertexinvfs chapter maximumflowforthecapacityconstraint rstobservethatif thencf therefore wehavef andhence byequation becausef inaddition byequation because owsarenonnegative ccf capacityconstraint nitionofcf owconservation becausebothfandf obey owconservation wehavethatforallu vfs wherethethirdlinefollowsfromthesecondby owconservation finally wecomputethevalueoff recallthatwedisallowantiparalleledgesing butnotingf andhenceforeachvertex weknowthattherecanbeanedge butneverboth wede nev dfw egtobethesetofverticeswithedgesfroms andv dfw egtobethesetofverticeswithedgestos wehavev vand becausewedisallowantiparalleledges wenowcomputejf jdx theford fulkersonmethod wherethesecondlinefollowsbecause wenowapplythede nitionoff toequation andthenreorderandgrouptermstoobtainjf jdx inequation wecanextendallfoursummationstosumoverv sinceeachadditionaltermhasvalue asksyoutoprovethisformally wethushavejf jdx djfjcjf augmentingpathsgivena ownetworkgd anda owf anaugmentingpathpisasimplepathfromstotintheresidualnetworkgf bythede nitionoftheresid ualnetwork wemayincreasethe owonanedge ofanaugmentingpathbyuptocf withoutviolatingthecapacityconstraintonwhicheverof isintheoriginal ownetworkg theshadedpathinfigure isanaugmentingpath treatingtheresidualnetworkgfinthe gureasa ownetwork wecanincreasethe owthrougheachedgeofthispathbyupto unitswithoutviolatingacapacityconstraint sincethesmallestresidualcapacityonthispathiscf wecallthemaximumamountbywhichwecanincreasethe owoneachedgeinanaugmentingpathptheresidualcapacityofp givenbycf dminfcf isonpg chapter maximumflowthefollowinglemma whoseproofweleaveasexercise makestheaboveargumentmoreprecise lemma letgd bea ownetwork letfbea owing andletpbeanaugmentingpathingf neafunctionfpwvv rbyfp isonp otherwise fpisa owingfwithvaluejfpjdcf thefollowingcorollaryshowsthatifweaugmentfbyfp wegetanother owingwhosevalueisclosertothemaximum showstheresultofaugmentingthe owffromfigure bythe owfpinfigure andfigure showstheensuingresidualnetwork corollary letgd bea ownetwork letfbea owing andletpbeanaugmentingpathingf letfpbede nedasinequation andsupposethatweaugmentfbyfp thenthefunctionf fpisa owingwithvaluejf fpjdjfjcjfpj jfj proofimmediatefromlemmas cutsof ownetworkstheford fulkersonmethodrepeatedlyaugmentsthe owalongaugmentingpathsuntilithasfoundamaximum howdoweknowthatwhenthealgorithm terminates wehaveactuallyfoundamaximum themax owmin cuttheo rem whichweshallproveshortly tellsusthata owismaximumifandonlyifits residualnetworkcontainsnoaugmentingpath toprovethistheorem rstexplorethenotionofacutofa ownetwork acut ownetworkgd isapartitionofvintosandtdvssuchthats sandt thisde nitionissimilartothedef initionof thatweusedforminimumspanningtreesinchapter thatherewearecuttingadirectedgraphratherthananundirectedgraph andwe insistthats sandt iffisa thenthenet owf acrossthecut isde nedtobef dxu theford fulkersonmethod stv acut inthe ownetworkoffigure wheresdfs gandtdf theverticesinsareblack andtheverticesintarewhite thenet owacross isf andthecapacityisc thecapacityofthecut isc dxu aminimumcutofanetworkisacutwhosecapacityisminimumoverallcutsofthenetwork theasymmetrybetweenthede nitionsof owandcapacityofacutisinten tionalandimportant forcapacity wecountonlythecapacitiesofedgesgoing fromstot ignoringedgesinthereversedirection weconsiderthe owgoingfromstotminusthe owgoinginthereversedirectionfromttos thereasonforthisdifferencewillbecomeclearlaterinthissection showsthecut inthe ownetworkoffig ure thenet owacrossthiscutisf andthecapacityofthiscutisc thefollowinglemmashowsthat foragiven owf thenet owacrossanycutisthesame anditequalsjfj thevalueofthe lemma letfbea owina ownetworkgwithsourcesandsinkt andlet beanycutofg thenthenet owacross isf djfj chapter maximumflowproofwecanrewritethe conservationconditionforanynodeu vfs tgasx takingthede nitionofjfjfromequation andaddingtheleft handsideofequation whichequals summedoverallverticesinsfsg givesjfjdx cxu ssg expandingtheright handsummationandregroupingtermsyieldsjfjdx cxu ssgx ssgx cxu ssgf cxu ssgf vxu vxu becausevds tands wecanspliteachsummationovervintosummationsoversandttoobtainjfjdx sxu txu sxu txu txu txu sxu sxu thetwosummationswithintheparenthesesareactuallythesame sinceforallverticesx thetermf appearsonceineachsummation hence thesesummationscancel andwehavejfjdxu acorollarytolemma showshowwecanusecutcapacitiestoboundthevalueofa theford fulkersonmethod corollary thevalueofany owfina ownetworkgisboundedfromabovebythecapacityofanycutofg prooflet beanycutofgandletfbeany bylemma andthecapacityconstraint jfjdf dxu corollary yieldstheimmediateconsequencethatthevalueofamaximum owinanetworkisboundedfromabovebythecapacityofaminimumcutof thenetwork theimportantmax owmin cuttheorem whichwenowstateand saysthatthevalueofamaximum owisinfactequaltothecapacityofaminimumcut theorem max owmin cuttheorem iffisa owina ownetworkgd withsourcesandsinkt thenthefollowingconditionsareequivalent fisamaximum owing theresidualnetworkgfcontainsnoaugmentingpaths jfjdc forsomecut ofg proof supposeforthesakeofcontradictionthatfisamaximum owingbutthatgfhasanaugmentingpathp bycorollary owfoundbyaugmentingfbyfp wherefpisgivenbyequation isa owingwithvaluestrictlygreaterthanjfj contradictingtheassumptionthatfisamaximum supposethatgfhasnoaugmentingpath thatis thatgfcontainsnopathfromstot nesdf vwthereexistsapathfromstoingfgandtdvs thepartition isacut wehaves striviallyandt sbecausethereisnopathfromstotingf nowconsiderapairofvertices chapter maximumflowu wemusthavef sinceotherwise whichwouldplaceinsets wemusthavef becauseotherwisecf wouldbepositiveandwewouldhave whichwouldplaceins ofcourse ifneither isine thenf wethushavef dxu txu dxu txu bylemma therefore jfjdf bycorollary jfjc forallcuts theconditionjfjdc thusimpliesthatfisamaximum thebasicford fulkersonalgorithmineachiterationoftheford fulkersonmethod ndsomeaugmentingpathpanduseptomodifythe owf aslemma andcorollary wereplacefbyf obtaininganew owwhosevalueisjfjcjfpj thefollow ingimplementationofthemethodcomputesthemaximum owina ownetwork byupdatingthe owattribute fforeachedge weassumeimplicitlythat wealsoassumethatwearegiventhecapacitiesc alongwiththe ownetwork andc wecomputetheresidualcapacitycf inaccordancewiththeformula theexpressioncf inthecodeisjustatemporaryvariablethatstorestheresidualcapacityofthepathp ford fulkerson foreachedge whilethereexistsapathpfromstotintheresidualnetworkgf dminfcf isinpg foreachedge inp fccf fcf recallfromsection thatwerepresentanattributefforedge withthesamestyleofnotation thatweuseforanattributeofanyotherobject theford fulkersonmethod theford fulkersonalgorithmsimplyexpandsontheford fulkerson methodpseudocodegivenearlier showstheresultofeachiterationinasamplerun lines initializethe owfto thewhileloopoflines repeatedly ndsanaugmentingpathpingfandaugments owfalongpbytheresidualcapacitycf eachresidualedgeinpathpiseitheranedgeintheoriginalnetworkorthereversalofanedgeintheoriginalnetwork lines updatethe owineachcaseappropriately adding owwhentheresidualedgeis anoriginaledgeandsubtractingitotherwise whennoaugmentingpathsexist owfisamaximum analysisofford fulkersontherunningtimeofford fulkersondependsonhowwe ndtheaugmentingpathpinline ifwechooseitpoorly thealgorithmmightnoteventerminate thevalueofthe owwillincreasewithsuccessiveaugmentations butitneednoteven convergetothemaximum owvalue ifwe ndtheaugmentingpathbyusingabreadth rstsearch whichwesawinsection however thealgorithmrunsin polynomialtime beforeprovingthisresult weobtainasimpleboundforthecase inwhichwechoosetheaugmentingpatharbitrarilyandallcapacitiesareintegers inpractice themaximum owproblemoftenariseswithintegralcapacities ifthecapacitiesarerationalnumbers wecanapplyanappropriatescalingtransfor mationtomakethemallintegral iffdenotesamaximum owinthetransformednetwork thenastraightforwardimplementationofford fulkersonexecutesthewhileloopoflines atmostjfjtimes sincethe owvalueincreasesbyatleastoneunitineachiteration wecanperformtheworkdonewithinthewhileloopef cientlyifweimplementthe ownetworkgd withtherightdatastructureand ndanaugmentingpathbyalinear timealgorithm letusassumethatwekeepadatastructurecor respondingtoadirectedgraphg wheree eor edgesinthenetworkgarealsoedgesing andthereforewecaneasilymaintaincapacitiesand owsinthisdatastructure givena owfong theedgesintheresidualnetworkgfconsistofalledges ofg suchthatcf wherecfconformstoequation thetimeto ndapathinaresidualnetworkisthereforeo vce ifweuseeitherdepth rstsearchorbreadth rstsearch eachiterationofthewhileloopthustakeso asdoestheinitializationinlines makingthetotalrunningtimeoftheford fulkersonalgorithmo ejfj theford fulkersonmethodmightfailtoterminateonlyifedgecapacitiesareirrationalnumbers chapter maximumflow theexecutionofthebasicford fulkersonalgorithm successiveiterationsofthewhileloop theleftsideofeachpartshowstheresidualnetworkgffromline withashadedaugmentingpathp therightsideofeachpartshowsthenew owfthatresultsfromaugmentingfbyfp theresidualnetworkin istheinputnetworkg whenthecapacitiesareintegralandtheoptimal owvaluejfjissmall therunningtimeoftheford fulkersonalgorithmisgood showsanex ampleofwhatcanhappenonasimple ownetworkforwhichjfjislarge amax imum owinthisnetworkhasvalue unitsof owtraverse thepaths andanother unitstraversethepaths ifthe rstaugmentingpathfoundbyford fulkersoniss showninfigure owhasvalue afterthe rstiteration theresultingresid ualnetworkappearsinfigure iftheseconditeration ndstheaugment ingpaths asshowninfigure owthenhasvalue showstheresultingresidualnetwork wecancontinue choosing theaugmentingpaths tintheodd numberediterationsandtheaug mentingpaths tintheeven numberediterations wewouldperformatotalof augmentations increasingthe owvaluebyonly unitineach theford fulkersonmethod continued theresidualnetworkatthelastwhilelooptest ithasnoaugmentingpaths andthe owfshownin isthereforeamaximum thevalueofthemaximum owfoundis theedmonds karpalgorithmwecanimprovetheboundonford fulkersonby ndingtheaugmentingpathpinline withabreadth rstsearch thatis wechoosetheaugmentingpathasashortestpathfromstotintheresidualnetwork whereeachedgehasunitdistance wecalltheford fulkersonmethodsoimplementedthe edmonds karpalgorithm wenowprovethattheedmonds karpalgorithmrunsino theanalysisdependsonthedistancestoverticesintheresidualnetworkgf thefollowinglemmausesthenotation fortheshortest pathdistancefromutoingf whereeachedgehasunitdistance lemma iftheedmonds karpalgorithmisrunona ownetworkgd withsourcesandsinkt thenforallvertices vfs theshortest pathdistance intheresidualnetworkgfincreasesmonotonicallywitheach owaugmentation chapter maximumflow uvst ownetworkforwhichford fulkersoncantake ejfj wherefisamaximum shownherewithjfjd theshadedpathisanaug mentingpathwithresidualcapacity theresultingresidualnetwork withanotheraugmentingpathwhoseresidualcapacityis theresultingresidualnetwork proofwewillsupposethatforsomevertex vfs thereisa owaug mentationthatcausestheshortest pathdistancefromstotodecrease andthenwewillderiveacontradiction letfbethe owjustbeforethe rstaugmentationthatdecreasessomeshortest pathdistance andletf bethe owjustafterward letbethevertexwiththeminimum whosedistancewasdecreasedbytheaugmentation sothat letpdsu beashortestpathfromstoingf sothat becauseofhowwechose weknowthatthedistanceofvertexufromthesourcesdidnotdecrease weclaimthat ifwehad thenwewouldalsohave bylemma thetriangleinequality byinequality byequation whichcontradictsourassumptionthat howcanwehave efand theaugmentationmusthaveincreasedthe owfromtou theedmonds karpalgorithmalwaysaug ments owalongshortestpaths andthereforetheshortestpathfromstouingfhas asitslastedge therefore byinequality byequation theford fulkersonmethod whichcontradictsourassumptionthat weconcludethatourassumptionthatsuchavertexexistsisincorrect thenexttheoremboundsthenumberofiterationsoftheedmonds karpalgo rithm theorem iftheedmonds karpalgorithmisrunona ownetworkgd withsourcesandsinkt thenthetotalnumberof owaugmentationsperformedbythealgorithmiso proofwesaythatanedge inaresidualnetworkgfiscriticalonanaug mentingpathpiftheresidualcapacityofpistheresidualcapacityof thatis ifcf dcf afterwehaveaugmented owalonganaugmentingpath anycriticaledgeonthepathdisappearsfromtheresidualnetwork moreover leastoneedgeonanyaugmentingpathmustbecritical wewillshowthateachof thejejedgescanbecomecriticalatmostjvj times letuandbeverticesinvthatareconnectedbyanedgeine sinceaugment ingpathsareshortestpaths iscriticalforthe rsttime wehave oncethe owisaugmented theedge disappearsfromtheresidualnetwork itcannotreappearlateronanotheraugmentingpathuntilafterthe owfromutoisdecreased whichoccursonlyif appearsonanaugmentingpath iff isthe owingwhenthiseventoccurs thenwehave bylemma wehave consequently fromthetime becomescriticaltothetimewhenitnextbecomescritical thedistanceofufromthesourceincreasesbyatleast thedistanceofufromthesourceisinitiallyatleast theintermediateverticesonashortestpathfromstoucannotcontains ort onanaugmentingpathimpliesthatu therefore untilubecomesunreachablefromthesource ifever itsdistanceisatmostjvj afterthe rsttimethat becomescritical itcanbecomecriticalatmost jvj djvj timesmore foratotalofatmostjvj times sincethereareo pairsofverticesthatcanhaveanedgebetweentheminaresidualnetwork thetotalnumberofcriticaledgesduring chapter maximumflowtheentireexecutionoftheedmonds karpalgorithmiso eachaugmentingpathhasatleastonecriticaledge andhencethetheoremfollows becausewecanimplementeachiterationofford fulkersonino timewhenwe ndtheaugmentingpathbybreadth rstsearch thetotalrunningtimeof theedmonds karpalgorithmiso weshallseethatpush relabelalgorithmscanyieldevenbetterbounds thealgorithmofsection givesamethodfor achievingano runningtime whichformsthebasisfortheo timealgorithmofsection exercises provethatthesummationsinequation equalthesummationsinequa tion infigure whatisthe owacrossthecut whatisthecapacityofthiscut showtheexecutionoftheedmonds karpalgorithmonthe ownetworkoffig ure intheexampleoffigure whatistheminimumcutcorrespondingtothemax imum owshown oftheaugmentingpathsappearingintheexample whichonecancels recallthattheconstructioninsection thatconvertsa ownetworkwithmul tiplesourcesandsinksintoasingle source sinknetworkaddsedgeswith nitecapacity provethatany owintheresultingnetworkhasa nitevalue iftheedgesoftheoriginalnetworkwithmultiplesourcesandsinkshave nite capacity supposethateachsourcesiina ownetworkwithmultiplesourcesandsinksproducesexactlypiunitsof sothatp dpi supposealsothateachsinktjconsumesexactlyqjunits sothatp dqj wherepipidpjqj showhowtoconverttheproblemof ndinga owfthatobeys theford fulkersonmethod theseadditionalconstraintsintotheproblemof ndingamaximum owinasingle source sink ownetwork provelemma supposethatwerede netheresidualnetworktodisallowedgesintos arguethattheprocedureford fulkersonstillcorrectlycomputesamaximum supposethatbothfandf owsinanetworkgandwecompute owf doestheaugmented owsatisfythe owconservationproperty doesitsatisfythecapacityconstraint showhowto ndamaximum owinanetworkgd byasequenceofatmostjejaugmentingpaths hint determinethepathsafter ndingthemaximum theedgeconnectivityofanundirectedgraphistheminimumnumberkofedgesthatmustberemovedtodisconnectthegraph forexample theedgeconnectivity ofatreeis andtheedgeconnectivityofacyclicchainofverticesis showhowtodeterminetheedgeconnectivityofanundirectedgraphgd byrunningamaximum owalgorithmonatmostjvj ownetworks eachhavingo verticesando edges supposethatyouaregivena ownetworkg andghasedgesenteringthesources letfbea owinginwhichoneoftheedges enteringthesourcehasf provethattheremustexistanother owf withf suchthatjfjdjf giveano timealgorithmtocomputef givenf andassumingthatalledgecapacitiesareintegers supposethatyouwishto amongallminimumcutsina ownetworkgwithintegralcapacities onethatcontainsthesmallestnumberofedges showhowto modifythecapacitiesofgtocreateanew ownetworkg inwhichanyminimumcuting isaminimumcutwiththesmallestnumberofedgesing chapter maximumflow maximumbipartitematchingsomecombinatorialproblemscaneasilybecastasmaximum owproblems themultiple source multiple sinkmaximum owproblemfromsection gaveus oneexample someothercombinatorialproblemsseemonthesurfacetohavelittle todowith ownetworks butcaninfactbereducedtomaximum owproblems thissectionpresentsonesuchproblem ndingamaximummatchinginabipartitegraph inordertosolvethisproblem weshalltakeadvantageofanintegrality propertyprovidedbytheford fulkersonmethod weshallalsoseehowtouse theford fulkersonmethodtosolvethemaximum bipartite matchingproblemon agraphgd ino themaximum bipartite matchingproblemgivenanundirectedgraphgd amatchingisasubsetofedgesmesuchthatforallvertices atmostoneedgeofmisincidenton wesaythatavertex vismatchedbythematchingmifsomeedgeinmisincidenton otherwise isunmatched amaximummatchingisamatchingofmaximumcardinality thatis amatchingmsuchthatforanymatchingm wehavejmjjm inthissection weshallrestrictourattentionto ndingmaximummatchingsinbipartitegraphs graphsinwhichthevertexsetcanbepartitionedintovdl wherelandraredisjointandalledgesinegobetweenlandr wefurtherassumethateveryvertexinvhasatleastoneincidentedge illustratesthenotionofamatchinginabipartitegraph theproblemof ndingamaximummatchinginabipartitegraphhasmanypracticalapplications asanexample wemightconsidermatchingasetlofma chineswithasetroftaskstobeperformedsimultaneously wetakethepresenceofedge inetomeanthataparticularmachineu liscapableofper formingaparticulartask amaximummatchingprovidesworkforasmanymachinesaspossible findingamaximumbipartitematchingwecanusetheford fulkersonmethodto ndamaximummatchinginanundi rectedbipartitegraphgd intimepolynomialinjvjandjej thetrickistoconstructa ownetworkinwhich owscorrespondtomatchings asshownin wede nethecorresponding ownetworkg forthebipartitegraphgasfollows weletthesourcesandsinktbenewverticesnotinv andweletv ifthevertexpartitionofgisvdl maximumbipartitematching lrlrst abipartitegraphgd withvertexpartitionvdl amatchingwithcardinality indicatedbyshadededges amaximummatchingwithcardinality thecorresponding ownetworkg withamaximum owshown eachedgehasunitcapacity shadededgeshavea owof andallotheredgescarryno theshadededgesfromltorcorrespondtothoseinthemaximummatchingfrom directededgesofg aretheedgesofe directedfromltor alongwithjvjnewdirectededges tocompletetheconstruction weassignunitcapacitytoeachedgeine sinceeachvertexinvhasatleastoneincidentedge jejjvj jejje jdjejcjvj jej andsoje thefollowinglemmashowsthatamatchingingcorrespondsdirectlytoa owing scorresponding ownetworkg wesaythata owfona ownetworkgd isinteger valuediff isanintegerforall lemma letgd beabipartitegraphwithvertexpartitionvdl andletg beitscorresponding ownetwork ifmisamatchinging thenthereisaninteger valued owfing withvaluejfjdjmj conversely iffisaninteger valued owing thenthereisamatchingmingwithcardinalityjmjdjfj proofwe rstshowthatamatchingmingcorrespondstoaninteger valued owfing nefasfollows thenf forallotheredges wede nef itissimpletoverifythatfsatis esthecapacityconstraintand owconservation chapter maximumflowintuitively eachedge mcorrespondstooneunitof owing thattraversesthepaths moreover thepathsinducedbyedgesinmarevertex disjoint exceptforsandt thenet owacrosscut fsg ftg isequaltojmj bylemma thevalueofthe owisjfjdjmj toprovetheconverse letfbeaninteger valued owing andletmdf andf eachvertexu lhasonlyoneenteringedge namely anditscapacityis eachu lhasatmostoneunitof owenteringit andifoneunitof owdoesenter owconservation oneunitof owmustleave furthermore sincefisinteger valued foreachu theoneunitof owcanenteronatmostoneedgeandcanleaveonatmostoneedge oneunitof owentersuifandonlyifthereisexactlyonevertex rsuchthatf andatmostoneedgeleavingeachu lcarriespositive asymmetricargumentappliestoeach thesetmisthereforeamatching toseethatjmjdjfj observethatforeverymatchedvertexu wehavef andforeveryedge wehavef conse quently fsg ftg thenet owacrosscut fsg ftg isequaltojmj applyinglemma wehavethatjfjdf fsg ftg djmj basedonlemma wewouldliketoconcludethatamaximummatchinginabipartitegraphgcorrespondstoamaximum owinitscorresponding ownetworkg andwecanthereforecomputeamaximummatchingingbyrunningamaximum owalgorithmong theonlyhitchinthisreasoningisthatthemaximum owalgorithmmightreturna owing forwhichsomef isnotaninteger eventhoughthe owvaluejfjmustbeaninteger thefollowingtheoremshowsthatifweusetheford fulkersonmethod thisdif cultycannot arise theorem integralitytheorem ifthecapacityfunctionctakesononlyintegralvalues thenthemaximum owfproducedbytheford fulkersonmethodhasthepropertythatjfjisaninteger moreover forallverticesuand thevalueoff isaninteger prooftheproofisbyinductiononthenumberofiterations weleaveitasexercise wecannowprovethefollowingcorollarytolemma maximumbipartitematching corollary thecardinalityofamaximummatchingminabipartitegraphgequalsthevalueofamaximum owfinitscorresponding ownetworkg proofweusethenomenclaturefromlemma supposethatmisamax imummatchingingandthatthecorresponding owfing isnotmaximum thenthereisamaximum owf ing suchthatjf jfj sincetheca pacitiesing areinteger valued bytheorem wecanassumethatf isinteger valued correspondstoamatchingm ingwithcardinalityjm jdjf jfjdjmj contradictingourassumptionthatmisamaximummatching inasimilarmanner wecanshowthatiffisamaximum owing itscorrespondingmatchingisamaximummatchingong givenabipartiteundirectedgraphg wecan ndamaximummatchingbycreatingthe ownetworkg runningtheford fulkersonmethod anddirectlyob tainingamaximummatchingmfromtheinteger valuedmaximum owffound sinceanymatchinginabipartitegraphhascardinalityatmostmin thevalueofthemaximum owing iso wecantherefore ndamaximummatchinginabipartitegraphintimeo sinceje exercises runtheford fulkersonalgorithmonthe ownetworkinfigure andshow theresidualnetworkaftereach owaugmentation numbertheverticesinltoptobottomfrom andinrtoptobottomfrom foreachiteration picktheaugmentingpaththatislexicographicallysmallest provetheorem letgd beabipartitegraphwithvertexpartitionvdl andletg beitscorresponding ownetwork giveagoodupperboundonthelengthofanyaugmentingpathfounding duringtheexecutionofford fulkerson aperfectmatchingisamatchinginwhicheveryvertexismatched letgd beanundirectedbipartitegraphwithvertexpartitionvdl wherejljdjrj foranyxv netheneighborhoodofxasn dfy eforsomex chapter maximumflowthatis thesetofverticesadjacenttosomememberofx provehall stheorem thereexistsaperfectmatchingingifandonlyifjajjn jforeverysubsetal wesaythatabipartitegraphgd wherevdl isd regularifeveryvertex vhasdegreeexactlyd everyd regularbipartitegraphhasjljdjrj provethateveryd regularbipartitegraphhasamatchingofcardinalityjljbyarguingthataminimumcutofthecorresponding ownetworkhascapacityjlj relabelalgorithmsinthissection wepresentthe relabel approachtocomputingmaximum ows todate manyoftheasymptoticallyfastestmaximum owalgorithmsarepush relabelalgorithms andthefastestactualimplementationsofmaximum owalgorithmsarebasedonthepush relabelmethod relabelmethodsalsoef cientlysolveother owproblems suchastheminimum owproblem sectionintroducesgoldberg generic maximum owalgorithm whichhasa simpleimplementationthatrunsino therebyimprovingupontheo boundoftheedmonds karpalgorithm nesthegenericalgorithmtoobtainanotherpush relabelalgorithmthatrunsino relabelalgorithmsworkinamorelocalizedmannerthantheford fulkersonmethod ratherthanexaminetheentireresidualnetworkto ndanaug mentingpath relabelalgorithmsworkononevertexatatime lookingonly atthevertex sneighborsintheresidualnetwork furthermore unliketheford fulkersonmethod relabelalgorithmsdonotmaintainthe conservation propertythroughouttheirexecution theydo however maintainapre whichisafunctionfwvv rthatsatis esthecapacityconstraintandthefollowingrelaxationof owconservation forallverticesu vfsg thatis owintoavertexmayexceedthe owout wecallthequantitye theexcess owintovertexu theexcessatavertexistheamountbywhichthe owinexceedsthe owout wesaythatavertexu vfs tgisover owingife relabelalgorithms weshallbeginthissectionbydescribingtheintuitionbehindthepush relabelmethod weshalltheninvestigatethetwooperationsemployedbythemethod pushing pre owand relabeling avertex finally weshallpresentageneric relabelalgorithmandanalyzeitscorrectnessandrunningtime intuitionyoucanunderstandtheintuitionbehindthepush relabelmethodintermsof uid ows weconsidera ownetworkgd tobeasystemofinterconnectedpipesofgivencapacities applyingthisanalogytotheford fulkersonmethod wemightsaythateachaugmentingpathinthenetworkgivesrisetoanadditional streamof uid withnobranchpoints owingfromthesourcetothesink ford fulkersonmethoditerativelyaddsmorestreamsof owuntilnomorecanbeadded thegenericpush relabelalgorithmhasaratherdifferentintuition asbefore directededgescorrespondtopipes vertices whicharepipejunctions havetwo interestingproperties toaccommodateexcess eachvertexhasanout owpipeleadingtoanarbitrarilylargereservoirthatcanaccumulate uid eachvertex itsreservoir andallitspipeconnectionssitonaplatformwhoseheight increasesasthealgorithmprogresses vertexheightsdeterminehow owispushed wepush owonlydownhill thatis fromahighervertextoalowervertex owfromalowervertextoahighervertexmaybepositive butoperationsthatpush owpushitonlydownhill xtheheightofthesourceatjvjandtheheightofthesinkat allothervertexheightsstartat andincreasewithtime thealgorithm rstsendsasmuch owaspossibledownhillfromthesourcetowardthesink theamountitsendsisexactly enoughto lleachoutgoingpipefromthesourcetocapacity thatis itsendsthecapacityofthecut vfsg rstentersanintermediatevertex itcollectsinthevertex sreservoir fromthere weeventuallypushitdownhill wemayeventually ndthattheonlypipesthatleaveavertexuandarenotalreadysaturatedwith owconnecttoverticesthatareonthesamelevelasuorareuphillfromu inthiscase toridanover owingvertexuofitsexcess wemustincreaseitsheight anoperationcalled relabeling vertexu weincreaseitsheighttooneunitmorethantheheightofthelowestofitsneighborstowhich ithasanunsaturatedpipe afteravertexisrelabeled therefore ithasatleastone outgoingpipethroughwhichwecanpushmore eventually allthe owthatcanpossiblygetthroughtothesinkhasarrivedthere nomorecanarrive becausethepipesobeythecapacityconstraints theamountof owacrossanycutisstilllimitedbythecapacityofthecut tomakethepre legal thealgorithmthensendstheexcesscollectedinthereservoirsof owingverticesbacktothesourcebycontinuingtorelabelverticestoabove chapter maximumflowthe xedheightjvjofthesource asweshallsee oncewehaveemptiedallthereservoirs thepre owisnotonlya legal itisalsoamaximum thebasicoperationsfromtheprecedingdiscussion weseethatapush relabelalgorithmperformstwobasicoperations pushing owexcessfromavertextooneofitsneighborsand relabelingavertex thesituationsinwhichtheseoperationsapplydependonthe heightsofvertices whichwenowde neprecisely letgd bea ownetworkwithsourcesandsinkt andletfbeapre owing afunctionhwv nisaheightfunction ifh djvj andh foreveryresidualedge weimmediatelyobtainthefollowinglemma lemma letgd bea ownetwork letfbeapre owing andlethbeaheightfunctiononv foranytwoverticesu ifh isnotanedgeintheresidualnetwork thepushoperation thebasicoperationpush appliesifuisanover owingvertex andh thepseudocodebelowupdatesthepre owfandtheexcess owsforuand itassumesthatwecancomputeresidualcapacitycf inconstanttimegivencandf wemaintaintheexcess owstoredatavertexuastheattributeu eandtheheightofuastheattributeu theexpressionf isatemporaryvariablethatstorestheamountof owthatwecanpushfromuto intheliterature aheightfunctionistypicallycalleda distancefunction andtheheightofavertexiscalleda distancelabel weusetheterm height becauseitismoresuggestiveoftheintuition behindthealgorithm weretaintheuseoftheterm relabel torefertotheoperationthatincreasestheheightofavertex theheightofavertexisrelatedtoitsdistancefromthesinkt aswouldbefoundinabreadth rstsearchofthetransposegt relabelalgorithms applieswhen uisover owing andu hdhc action pushf dmin unitsof owfromuto dmin fcf edu edecf thecodeforpushoperatesasfollows becausevertexuhasapositiveexcessu eandtheresidualcapacityof ispositive wecanincreasethe owfromutobyf dmin withoutcausingu etobecomenegativeorthecapacityc tobeexceeded computesthevaluef andlines updatef increasesthe owonedge becausewearepushing owoveraresidualedgethatisalsoanoriginaledge decreasesthe owon becausetheresidualedgeisactuallythereverseofanedgeintheoriginalnetwork finally lines updatetheexcess owsintoverticesuand iffisapre owbeforepushiscalled itremainsapre owafterward observethatnothinginthecodeforpushdependsontheheightsofuand yetweprohibititfrombeinginvokedunlessu hdhc wepushexcess owdownhillonlybyaheightdifferentialof bylemma noresidualedgesexistbetweentwoverticeswhoseheightsdifferbymorethan andthus aslongastheattributehisindeedaheightfunction wewouldgainnothingbyallowing owtobepusheddownhillbyaheightdifferentialofmorethan wecalltheoperationpush apushfromuto ifapushoperationap pliestosomeedge leavingavertexu wealsosaythatthepushoperationappliestou itisasaturatingpushifedge intheresidualnetworkbecomessaturated afterward otherwise itisanonsaturatingpush ifanedgebecomessaturated itdisappearsfromtheresidualnetwork asimplelemma characterizesoneresultofanonsaturatingpush lemma afteranonsaturatingpushfromuto thevertexuisnolongerover owing proofsincethepushwasnonsaturating theamountof owf actuallypushedmustequalu epriortothepush sinceu eisreducedbythisamount itbecomes afterthepush chapter maximumflowtherelabeloperationthebasicoperationrelabel appliesifuisover owingandifu hhforalledges inotherwords wecanrelabelanover owingvertexuifforeveryvertexforwhichthereisresidualcapacityfromuto owcannotbepushedfromutobecauseisnotdownhillfromu recallthatbyde nition neitherthesourcesnorthesinktcanbeover owing andsosandtareineligibleforrelabeling relabel applieswhen uisover owingandforall vsuchthat wehaveu action increasetheheightofu cminfhw efgwhenwecalltheoperationrelabel wesaythatvertexuisrelabeled notethatwhenuisrelabeled efmustcontainatleastoneedgethatleavesu sothattheminimizationinthecodeisoveranonemptyset thispropertyfollowsfrom theassumptionthatuisover owing whichinturntellsusthatu edx sinceall owsarenonnegative wemustthereforehaveatleastonevertexsuchthat butthen whichimpliesthat theoperationrelabel thusgivesuthegreatestheightallowedbytheconstraintsonheightfunctions thegenericalgorithmthegenericpush relabelalgorithmusesthefollowingsubroutinetocreateanini tialpre owinthe ownetwork initialize preflow foreachvertex foreachedge hdjg foreachvertex adj fdc edc eds relabelalgorithms initialize preflowcreatesaninitialpre owfde nedby ifuds otherwise thatis lltocapacityeachedgeleavingthesources andallotheredgescarryno foreachvertexadjacenttothesource weinitiallyhaveedc andweinitializes etothenegativeofthesumofthesecapacities thegenericalgorithmalsobeginswithaninitialheightfunctionh givenbyu jvjifuds otherwise equation nesaheightfunctionbecausetheonlyedges forwhichu arethoseforwhichuds andthoseedgesaresaturated whichmeansthattheyarenotintheresidualnetwork initialization followedbyasequenceofpushandrelabeloperations executedinnoparticularorder yieldsthegeneric relabelalgorithm generic relabel initialize preflow whilethereexistsanapplicablepushorrelabeloperation selectanapplicablepushorrelabeloperationandperformitthefollowinglemmatellsusthataslongasanover owingvertexexists atleastoneofthetwobasicoperationsapplies lemma anover owingvertexcanbeeitherpushedorrelabeled letgd bea ownetworkwithsourcesandsinkt letfbeapre andlethbeanyheightfunctionforf ifuisanyover owingvertex theneitherapushorrelabeloperationappliestoit proofforanyresidualedge wehaveh becausehisaheightfunction ifapushoperationdoesnotapplytoanover owingvertexu thenforallresidualedges wemusthaveh whichimpliesh arelabeloperationappliestou correctnessofthepush relabelmethodtoshowthatthegenericpush relabelalgorithmsolvesthemaximum owprob lem weshall rstprovethatifitterminates thepre owfisamaximum weshalllaterprovethatitterminates westartwithsomeobservationsaboutthe heightfunctionh chapter maximumflowlemma vertexheightsneverdecrease duringtheexecutionofthegeneric relabelprocedureona ownet workgd foreachvertexu theheightu hneverdecreases wheneverarelabeloperationisappliedtoavertexu itsheightu hincreasesbyatleast proofbecausevertexheightschangeonlyduringrelabeloperations itsuf cestoprovethesecondstatementofthelemma ifvertexuisabouttoberela beled thenforallverticessuchthat wehaveu cminfhw efg andsotheoperationmustincreaseu lemma letgd bea ownetworkwithsourcesandsinkt thentheexecutionofgeneric relabelongmaintainstheattributehasaheightfunction prooftheproofisbyinductiononthenumberofbasicoperationsperformed initially hisaheightfunction aswehavealreadyobserved weclaimthatifhisaheightfunction thenanoperationrelabel leaveshaheightfunction ifwelookataresidualedge efthatleavesu thentheoperationrelabel ensuresthatu hhc afterward nowconsideraresidualedge thatentersu bylemma beforetheoperationrelabel impliesw afterward theoperationrelabel leaveshaheightfunction consideranoperationpush thisoperationmayaddtheedge toef anditmayremove fromef intheformercase wehavehdu andsohremainsaheightfunction inthelattercase removing fromtheresidualnetworkremovesthecorrespondingconstraint andhagainremainsaheightfunction thefollowinglemmagivesanimportantpropertyofheightfunctions lemma letgd bea ownetworkwithsourcesandsinkt letfbeapre owing andlethbeaheightfunctiononv thenthereisnopathfromthesourcestothesinktintheresidualnetworkgf proofassumeforthesakeofcontradictionthatgfcontainsapathpfromstot wherepdh andkdt withoutlossofgenerality pisasimplepath andsok jvj forid edgeiic becausehisaheightfunction forid com biningtheseinequalitiesoverpathpyieldsh butbecauseh relabelalgorithms wehaveh jvj whichcontradictstherequirementthath djvjinaheightfunction wearenowreadytoshowthatifthegenericpush relabelalgorithmterminates thepre owitcomputesisamaximum theorem correctnessofthegenericpush relabelalgorithm ifthealgorithmgeneric relabelterminateswhenrunona ownet workgd withsourcesandsinkt thenthepre owfitcomputesisamaximum owforg proofweusethefollowingloopinvariant eachtimethewhilelooptestinline ingeneric relabelisexecuted fisapre initialization initialize preflowmakesfapre maintenance theonlyoperationswithinthewhileloopoflines arepushandrelabel relabeloperationsaffectonlyheightattributesandnotthe owvalues hencetheydonotaffectwhetherfisapre asarguedonpage iffisapre owpriortoapushoperation itremainsapre owafterward termination attermination eachvertexinvfs tgmusthaveanexcessof becausebylemma andtheinvariantthatfisalwaysapre therearenoover owingvertices therefore fisa lemma showsthathisaheightfunctionattermination andthuslemma tellsusthatthereisno pathfromstotintheresidualnetworkgf bythemax owmin cuttheorem theorem therefore fisamaximum analysisofthepush relabelmethodtoshowthatthegenericpush relabelalgorithmindeedterminates weshallboundthenumberofoperationsitperforms weboundseparatelyeachofthethreetypes ofoperations relabels saturatingpushes andnonsaturatingpushes withknowl edgeofthesebounds itisastraightforwardproblemtoconstructanalgorithmthatrunsino beforebeginningtheanalysis however weproveanim portantlemma recallthatweallowedgesintothesourceintheresidualnetwork lemma letgd bea ownetworkwithsourcesandsinkt andletfbeapre owing foranyover owingvertexx thereisasimplepathfromxtosintheresidualnetworkgf chapter maximumflowproofforanover owingvertexx letudfwthereexistsasimplepathfromxtoingfg andsupposeforthesakeofcontradictionthats letudvu wetakethede nitionofexcessfromequation sumoverallverticesinu andnotethatvdu toobtainxu dxu dxu dxu cxu dxu weknowthatthequantitypu mustbepositivebecausee allverticesotherthanshavenonnegativeexcess byassumption wehavexu alledge owsarenonnegative andsoforequation tohold wemusthavepu hence theremustexistatleastonepairofverticesu uand uwithf iff theremustbearesidualedge whichmeansthatthereisasimplepathfromxto thepathxu thuscontradictingthede nitionofu thenextlemmaboundstheheightsofvertices anditscorollaryboundsthenumberofrelabeloperationsthatareperformedintotal lemma letgd bea ownetworkwithsourcesandsinkt atanytimeduringtheexecutionofgeneric relabelong wehaveu jvj forallverticesu prooftheheightsofthesourcesandthesinktneverchangebecausetheseverticesarebyde nitionnotover owing wealwayshaves hdjvjandt bothofwhicharenogreaterthan jvj nowconsideranyvertexu vfs initially jvj weshallshowthataftereachrelabelingoperation westillhaveu jvj whenuis relabelalgorithms relabeled itisover owing andlemma tellsusthatthereisasimplepathpfromutosingf letpdh kds andkjvj becausepissimple forid wehaveiic andtherefore bylemma hic expandingtheseinequalitiesoverpathpyieldsu hcks jvj jvj corollary boundonrelabeloperations letgd bea ownetworkwithsourcesandsinkt duringtheexecutionofgeneric relabelong thenumberofrelabeloperationsisatmost jvj pervertexandatmost jvj jvj jvj overall proofonlythejvj verticesinvfs tgmayberelabeled letu vfs theoperationrelabel increasesu thevalueofu hisinitially andbylemma itgrowstoatmost jvj eachvertexu vfs tgisrelabeledatmost jvj times andthetotalnumberofrelabeloperationsperformedisatmost jvj jvj jvj lemma alsohelpsustoboundthenumberofsaturatingpushes lemma boundonsaturatingpushes duringtheexecutionofgeneric relabelonany ownetworkgd thenumberofsaturatingpushesislessthan jvjjej proofforanypairofverticesu wewillcountthesaturatingpushesfromutoandfromtoutogether callingthemthesaturatingpushesbetweenuand ifthereareanysuchpushes atleastoneof isactuallyanedgeine supposethatasaturatingpushfromutohasoccurred atthattime hdu inorderforanotherpushfromutotooccurlater thealgorithmmust rstpush owfromtou whichcannothappenuntilhdu sinceu hneverdecreases inorderforhdu thevalueofhmustincreasebyatleast likewise hmustincreasebyatleast betweensaturatingpushesfromtou heightsstartat bylemma neverexceed jvj whichimpliesthatthenumberoftimesanyvertexcanhaveitsheightincreaseby islessthanjvj sinceatleastoneofu handhmustincreaseby betweenanytwosaturatingpushesbetweenuand therearefewerthan jvjsaturatingpushesbetweenuand multiplyingbythenumberofedgesgivesaboundoflessthan jvjjejonthetotalnumberofsaturatingpushes thefollowinglemmaboundsthenumberofnonsaturatingpushesinthegenericpush relabelalgorithm chapter maximumflowlemma boundonnonsaturatingpushes duringtheexecutionofgeneric relabelonany ownetworkgd thenumberofnonsaturatingpushesislessthan jvj jvjcjej proofde neapotentialfunction dpwe initially andthevalueof maychangeaftereachrelabeling saturatingpush andnonsaturatingpush wewillboundtheamountthatsaturatingpushesandrelabelingscancon tributetotheincreaseof thenwewillshowthateachnonsaturatingpushmustdecrease byatleast andwillusetheseboundstoderiveanupperboundonthenumberofnonsaturatingpushes letusexaminethetwowaysinwhich mightincrease relabelingavertexuincreases bylessthan jvj sincethesetoverwhichthesumistakenisthesameandtherelabelingcannotincreaseu sheightbymorethanitsmaximumpossibleheight bylemma isatmost jvj asaturatingpushfromavertexutoavertexincreases bylessthan jvj sincenoheightschangeandonlyvertex whoseheightisatmost jvj canpossiblybecomeover owing nowweshowthatanonsaturatingpushfromutodecreases byatleast beforethenonsaturatingpush uwasover owing andmayormaynothavebeenover owing bylemma uisnolongerover owingafterthepush inaddition unlessisthesource itmayormaynotbeover owingafterthepush therefore thepotentialfunction hasdecreasedbyexactlyu andithasincreasedbyeither orh sinceu hhd theneteffectisthatthepotentialfunctionhasdecreasedbyatleast duringthecourseofthealgorithm thetotalamountofincreasein isduetorelabelingsandsaturatedpushes andcorollary andlemma constraintheincreasetobelessthan jvj jvj jvj jvjjej jvj jvjcjej thetotalamountofdecrease andthereforethetotalnumberofnonsaturatingpushes islessthan jvj jvjcjej havingboundedthenumberofrelabelings saturatingpushes andnonsatu ratingpush wehavesetthestageforthefollowinganalysisofthegeneric relabelprocedure andhenceofanyalgorithmbasedonthepush relabelmethod theorem duringtheexecutionofgeneric relabelonany ownetworkgd thenumberofbasicoperationsiso proofimmediatefromcorollary andlemmas relabelalgorithms thealgorithmterminatesaftero operations allthatremainsistogiveanef cientmethodforimplementingeachoperationandforchoosingan appropriateoperationtoexecute corollary thereisanimplementationofthegenericpush relabelalgorithmthatrunsin timeonany ownetworkgd proofexercise asksyoutoshowhowtoimplementthegenericalgorithmwithanoverheadofo perrelabeloperationando perpush italsoasksyoutodesignadatastructurethatallowsyoutopickanapplicableoperationin thecorollarythenfollows exercises provethat aftertheprocedureinitialize preflow terminates wehaves ejfj wherefisamaximum owforg showhowtoimplementthegenericpush relabelalgorithmusingo timeperrelabeloperation timeperpush ando timetoselectanapplicableoper ation foratotaltimeofo provethatthegenericpush relabelalgorithmspendsatotalofonlyo timeinperformingalltheo relabeloperations supposethatwehavefoundamaximum owina ownetworkgd usingapush relabelalgorithm giveafastalgorithmto ndaminimumcuting giveanef cientpush relabelalgorithmto ndamaximummatchinginabipartite graph analyzeyouralgorithm supposethatalledgecapacitiesina ownetworkgd areinthesetf analyzetherunningtimeofthegenericpush relabelalgorithmintermsofjvj jej andk hint howmanytimescaneachedgesupportanonsat uratingpushbeforeitbecomessaturated chapter maximumflow showthatwecouldchangeline ofinitialize preflowto hdjg withoutaffectingthecorrectnessorasymptoticperformanceofthegenericpush relabelalgorithm bethedistance numberofedges fromutointheresidualnet workgf showthatthegeneric relabelproceduremaintainsthepropertiesthatu jvjimpliesu andthatu hjvjimpliesu hjvj asinthepreviousexercise bethedistancefromutointheresidualnetworkgf showhowtomodifythegenericpush relabelalgorithmtomaintainthepropertythatu jvjimpliesu andthatu hjvjimpliesu hjvjd thetotaltimethatyourimplementationdedicatestomain tainingthispropertyshouldbeo showthatthenumberofnonsaturatingpushesexecutedbythegeneric relabelprocedureona ownetworkgd isatmost jvj jejforjvj therelabel frontalgorithmthepush relabelmethodallowsustoapplythebasicoperationsinanyorderatall bychoosingtheordercarefullyandmanagingthenetworkdatastructureef ciently however wecansolvethemaximum owproblemfasterthantheo boundgivenbycorollary weshallnowexaminetherelabel frontalgo rithm apush relabelalgorithmwhoserunningtimeiso whichisasymptot icallyatleastasgoodaso andevenbetterfordensenetworks therelabel frontalgorithmmaintainsalistoftheverticesinthenetwork beginningatthefront thealgorithmscansthelist repeatedlyselectinganover owingvertexuandthen discharging thatis performingpushandrelabeloperationsuntilunolongerhasapositiveexcess wheneverwerelabelaver tex wemoveittothefrontofthelist hencethename relabel andthe algorithmbeginsitsscananew therelabel frontalgorithm thecorrectnessandanalysisoftherelabel frontalgorithmdependonthenotionof admissible edges thoseedgesintheresidualnetworkthroughwhich owcanbepushed afterprovingsomepropertiesaboutthenetworkofadmissible edges weshallinvestigatethedischargeoperationandthenpresentandanalyzethe relabel frontalgorithmitself admissibleedgesandnetworksifgd isa ownetworkwithsourcesandsinkt fisapre owing andhisaheightfunction thenwesaythat isanadmissibleedgeifcf andh otherwise isinadmissible theadmissiblenetworkisgf whereef histhesetofadmissibleedges theadmissiblenetworkconsistsofthoseedgesthroughwhichwecanpush thefollowinglemmashowsthatthisnetworkisadirectedacyclicgraph dag lemma theadmissiblenetworkisacyclic ifgd isa ownetwork fisapre owing andhisaheightfunctionong thentheadmissiblenetworkgf isacyclic prooftheproofisbycontradiction supposethatgf hcontainsacyclepdh dkandk sinceeachedgeinpisadmissible wehaveh forid summingaroundthecyclegiveskxid dkxid dkxid becauseeachvertexincyclepappearsonceineachofthesummations wederivethecontradictionthat thenexttwolemmasshowhowpushandrelabeloperationschangetheadmis siblenetwork lemma letgd bea ownetwork letfbeapre owing andsupposethattheattributehisaheightfunction ifavertexuisover owingand isanad missibleedge thenpush applies theoperationdoesnotcreateanynewadmissibleedges butitmaycause tobecomeinadmissible chapter maximumflowproofbythede nitionofanadmissibleedge wecanpush owfromuto sinceuisover owing theoperationpush applies theonlynewresidualedgethatpushing owfromutocancreateis sincehdu cannotbecomeadmissible iftheoperationisasaturatingpush thencf afterwardand becomesinadmissible lemma letgd bea ownetwork letfbeapre owing andsupposethattheattributehisaheightfunction ifavertexuisover owingandtherearenoadmissibleedgesleavingu thenrelabel applies aftertherelabeloperation thereisatleastoneadmissibleedgeleavingu buttherearenoadmissibleedgesenteringu proofifuisover owing thenbylemma eitherapushorarelabelop erationappliestoit iftherearenoadmissibleedgesleavingu thenno owcanbepushedfromuandsorelabel applies aftertherelabeloperation cminfhw efg ifisavertexthatrealizesthemini muminthisset theedge becomesadmissible hence aftertherelabel thereisatleastoneadmissibleedgeleavingu toshowthatnoadmissibleedgesenteruafterarelabeloperation supposethatthereisavertexsuchthat isadmissible hdu aftertherelabel andsoh justbeforetherelabel butbylemma noresidualedgesexistbetweenverticeswhoseheightsdifferbymorethan relabelingavertexdoesnotchangetheresidualnetwork isnotintheresidualnetwork andhenceitcannotbeintheadmissiblenetwork neighborlistsedgesintherelabel frontalgorithmareorganizedinto neighborlists givena ownetworkgd theneighborlistu nforavertexu visasinglylinkedlistoftheneighborsofuing vertexappearsinthelistu nif eor theneighborlistu ncontainsexactlythoseverticesforwhichtheremaybearesidualedge theattributeu headpointstothe rstvertexinu andnext neighborpointstothevertexfollowinginaneighborlist thispointerisnilifisthelastvertexintheneighborlist therelabel frontalgorithmcyclesthrougheachneighborlistinanarbitraryorderthatis xedthroughouttheexecutionofthealgorithm foreachvertexu theattributeu currentpointstothevertexcurrentlyunderconsiderationinu initially currentissettou therelabel frontalgorithm discharginganover owingvertexanover owingvertexuisdischargedbypushingallofitsexcess owthroughadmissibleedgestoneighboringvertices relabelinguasnecessarytocauseedgesleavingutobecomeadmissible thepseudocodegoesasfollows discharge whileu nil relabel currentdu elseifcf andu elseu currentdnext neighborfigure stepsthroughseveraliterationsofthewhileloopoflines whichexecutesaslongasvertexuhaspositiveexcess eachiterationperformsexactlyoneofthreeactions dependingonthecurrentvertexintheneighborlistu ifisnil thenwehaverunofftheendofu relabelsvertexu andthenline resetsthecurrentneighborofutobethe rstoneinu lemma belowstatesthattherelabeloperationappliesinthissituation ifisnon niland isanadmissibleedge determinedbythetestinline thenline pushessome orpossiblyall ofu sexcesstovertex ifisnon nilbut isinadmissible thenline advancesu currentonepositionfurtherintheneighborlistu observethatifdischargeiscalledonanover owingvertexu thenthelastactionperformedbydischargemustbeapushfromu theprocedureterminatesonlywhenu ebecomeszero andneithertherelabeloperationnorad vancingthepointeru currentaffectsthevalueofu wemustbesurethatwhenpushorrelabeliscalledbydischarge theoperationapplies thenextlemmaprovesthisfact lemma ifdischargecallspush inline thenapushoperationappliesto ifdischargecallsrelabel inline thenarelabeloperationappliestou proofthetestsinlines ensurethatapushoperationoccursonlyiftheoperationapplies whichprovesthe rststatementinthelemma chapter maximumflows sxzs sxzsxz sxz dischargingavertexy ittakes iterationsofthewhileloopofdischargetopushalltheexcess owfromy onlytheneighborsofyandedgesofthe ownetworkthatenterorleaveyareshown ineachpartofthe gure thenumberinsideeachvertexisitsexcessatthebeginningofthe rstiterationshowninthepart andeachvertexisshownatitsheightthroughoutthepart theneighborlisty natthebeginningofeachiterationappearsontheright withtheiterationnumberontop theshadedneighborisy initially thereare unitsofexcesstopushfromy andy currentds iterations justadvancey sincetherearenoadmissibleedgesleavingy initeration currentdnil shownbytheshadingbeingbelowtheneighborlist andsoyisrelabeledandy currentisresettotheheadoftheneighborlist afterrelabeling vertexyhasheight initerations edges arefoundtobeinadmissible butiteration pushes unitsofexcess owfromyto becauseofthepush currentdoesnotadvanceinthisiteration becausethepushiniteration saturatededge itisfoundinadmissibleiniteration initeration currentdnil andsovertexyisagainrelabeledandy currentisreset therelabel frontalgorithm continued initeration isinadmissible butiteration pushes unitsofexcess owfromytox becausey currentdidnotadvanceiniteration iteration nds tobeinadmissible iteration nds inadmissible anditeration relabelsver texyandresetsy iteration pushes unitsofexcess owfromytos vertexynowhasnoexcess anddischargeterminates inthisexample dischargebothstartsand nisheswiththecurrentpointerattheheadoftheneighborlist butingeneralthisneednotbethecase chapter maximumflowtoprovethesecondstatement accordingtothetestinline andlemma weneedonlyshowthatalledgesleavinguareinadmissible ifacalltodischarge startswiththepointeru currentattheheadofu sneighborlistand nisheswithitofftheendofthelist thenallofu soutgoingedgesarein admissibleandarelabeloperationapplies itispossible however thatduringa calltodischarge thepointeru currenttraversesonlypartofthelistbe foretheprocedurereturns callstodischargeonotherverticesmaythenoc cur butu currentwillcontinuemovingthroughthelistduringthenextcalltodischarge wenowconsiderwhathappensduringacompletepassthroughthelist whichbeginsattheheadofu nand nisheswithu currentdnil onceu currentreachestheendofthelist theprocedurerelabelsuandbeginsanewpass fortheu currentpointertoadvancepastavertex nduringapass theedge mustbedeemedinadmissiblebythetestinline bythetimethepasscompletes everyedgeleavinguhasbeendeterminedtobeinadmissibleatsometimeduringthepass thekeyobservationisthatattheendofthepass everyedgeleavinguisstillinadmissible bylemma pushescannotcreateanyadmissibleedges regardlessofwhichvertexthe owispushedfrom anyadmissibleedgemustbecreatedbyarelabeloperation butthevertexuisnotrelabeledduringthepass andbylemma anyothervertexthatisrelabeledduringthepass resultingfromacallofdischarge hasnoenteringadmissibleedgesafterrelabeling attheendofthepass alledgesleavinguremaininadmissible whichcompletestheproof therelabel frontalgorithmintherelabel frontalgorithm wemaintainalinkedlistlconsistingofallver ticesinvfs akeypropertyisthattheverticesinlaretopologicallysortedaccordingtotheadmissiblenetwork asweshallseeintheloopinvariantthatfol lows recallfromlemma thattheadmissiblenetworkisadag thepseudocodefortherelabel frontalgorithmassumesthattheneighborlistsu nhavealreadybeencreatedforeachvertexu italsoassumesthatu nextpointstothevertexthatfollowsuinlistlandthat asusual nextdnilifuisthelastvertexinthelist therelabel frontalgorithm relabel initialize preflow ldg vfs inanyorder foreachvertexu vfs currentdu udl whileu nil heightdu discharge ifu height moveutothefrontoflistl udu nexttherelabel frontalgorithmworksasfollows initializesthepre owandheightstothesamevaluesasinthegenericpush relabelalgorithm initializesthelistltocontainallpotentiallyover owingvertices inanyorder lines initializethecurrentpointerofeachvertexutothe rstvertexinu sneighborlist asfigure illustrates thewhileloopoflines runsthroughthelistl dischargingvertices makesitstartwiththe rstvertexinthelist timethroughtheloop dischargesavertexu ifuwasrelabeledbythedischargeprocedure movesittothefrontoflistl wecandeterminewhetheruwasrelabeledbycomparingitsheightbeforethedischargeoperation savedintothevariableold heightinline withitsheightafterward inline makesthenextiterationofthewhileloopusethevertexfollowinguinlistl ifline movedutothefrontofthelist thevertexusedinthenextiterationistheonefollowinguinitsnewpositioninthelist toshowthatrelabel frontcomputesamaximum weshallshowthatitisanimplementationofthegenericpush relabelalgorithm servethatitperformspushandrelabeloperationsonlywhentheyapply lemma guaranteesthatdischargeperformsthemonlywhentheyapply itremainstoshowthatwhenrelabel frontterminates nobasicopera tionsapply theremainderofthecorrectnessargumentreliesonthefollowing loopinvariant ateachtestinline ofrelabel listlisatopologicalsortoftheverticesintheadmissiblenetworkgf andnovertexbeforeuinthelisthasexcess initialization immediatelyafterinitialize preflowhasbeenrun hdjvjandhd forall vfsg sincejvj becausevcontainsat chapter maximumflows xyzn syztsx zxyt xyzn syztsx zxyt xyzn ztsxzxyt theactionofrelabel ownetworkjustbeforethe rstiterationofthewhileloop initially unitsof owleavesources ontherightisshowntheinitiallistldhx whereinitiallyudx undereachvertexinlistlisitsneighborlist withthecurrentneighborshaded vertexxisdischarged itisrelabeledtoheight unitsofexcess owarepushedtoy andthe remainingunitsofexcessarepushedtothesinkt becausexisrelabeled itmovestotheheadofl whichinthiscasedoesnotchangethestructureofl afterx thenextvertexinlthatisdischargedisy showsthedetailedactionofdischargingyinthissituation becauseyisrelabeled itismovedtotheheadofl vertexxnowfollowsyinl andsoitisagaindischarged pushingall unitsofexcess owtot becausevertexxisnotrelabeledinthisdischargeoperation itremainsinplaceinlistl therelabel frontalgorithm xyzn syztsx zxyt xyzn ztsxzxyt continued sincevertex followsvertexxinl itisdischarged itisrelabeledtoheight andall unitsofexcess owarepushedtot because isrelabeled itmovestothefrontofl vertexynowfollowsvertex inlandisthereforedischarged butbecauseyhasnoexcess dischargeimmediatelyreturns andyremainsinplaceinl vertexxisthendischarged becauseit hasnoexcess dischargeagainreturns andxremainsinplaceinl relabel fronthasreachedtheendoflistlandterminates therearenoover owingvertices andthepre owisamaximum leastsandt noedgecanbeadmissible andanyorderingofvfs tgisatopologicalsortofgf becauseuisinitiallytheheadofthelistl therearenoverticesbeforeitandsotherearenonebeforeitwithexcess maintenance toseethateachiterationofthewhileloopmaintainsthetopolog icalsort westartbyobservingthattheadmissiblenetworkischangedonlybypushandrelabeloperations bylemma pushoperationsdonotcauseedgestobecomeadmissible onlyrelabeloperationscancreateadmissi bleedges afteravertexuisrelabeled however lemma statesthattherearenoadmissibleedgesenteringubuttheremaybeadmissibleedgesleavingu bymovingutothefrontofl thealgorithmensuresthatanyadmissibleedgesleavingusatisfythetopologicalsortordering chapter maximumflowtoseethatnovertexprecedinguinlhasexcess wedenotethevertexthatwillbeuinthenextiterationbyu theverticesthatwillprecedeu inthenextiterationincludethecurrentu duetoline andeithernoothervertices ifuisrelabeled orthesameverticesasbefore ifuisnotrelabeled whenuisdischarged ithasnoexcess owafterward ifuisrelabeledduringthedischarge noverticesprecedingu haveexcess ifuisnotrelabeledduringthedischarge noverticesbeforeitonthelistacquiredexcess owduring thisdischarge becauselremainedtopologicallysortedatalltimesduringthedischarge asjustpointedout admissibleedgesarecreatedonlybyrelabeling notpushing andsoeachpushoperationcausesexcess owtomoveonlyto verticesfurtherdownthelist ortosort noverticesprecedingu haveexcess termination whentheloopterminates uisjustpasttheendofl andsotheloopinvariantensuresthattheexcessofeveryvertexis nobasicoper ationsapply analysisweshallnowshowthatrelabel frontrunsino timeonany ownetworkgd sincethealgorithmisanimplementationofthegenericpush relabelalgorithm weshalltakeadvantageofcorollary whichpro videsano boundonthenumberofrelabeloperationsexecutedpervertexandano boundonthetotalnumberofrelabeloperationsoverall inaddition ercise providesano boundonthetotaltimespentperformingrelabeloperations andlemma providesano boundonthetotalnumberofsaturatingpushoperations theorem therunningtimeofrelabel frontonany ownetworkgd iso proofletusconsidera phase oftherelabel frontalgorithmtobethetimebetweentwoconsecutiverelabeloperations thereareo phases sincethereareo relabeloperations eachphaseconsistsofatmostjvjcallstodis whichwecanseeasfollows ifdischargedoesnotperformare labeloperation thenthenextcalltodischargeisfurtherdownthelistl andthelengthoflislessthanjvj ifdischargedoesperformarelabel thenextcalltodischargebelongstoadifferentphase sinceeachphasecontainsatmostjvjcallstodischargeandthereareo phases thenumberoftimesdischargeiscalledinline ofrelabel frontiso thetotal therelabel frontalgorithm workperformedbythewhileloopinrelabel excludingtheworkperformedwithindischarge isatmosto wemustnowboundtheworkperformedwithindischargeduringtheex ecutionofthealgorithm eachiterationofthewhileloopwithindischargeperformsoneofthreeactions weshallanalyzethetotalamountofworkinvolvedinperformingeachoftheseactions westartwithrelabeloperations lines providesano timeboundonalltheo relabelsthatareperformed supposethattheactionupdatestheu currentpointerinline thisactionoccurso timeseachtimeavertexuisrelabeled ando vdegree timesoverallforthevertex forallvertices therefore thetotalamountofwork doneinadvancingpointersinneighborlistsiso bythehandshakinglemma exerciseb thethirdtypeofactionperformedbydischargeisapushoperation wealreadyknowthatthetotalnumberofsaturatingpushoperationsiso observethatifanonsaturatingpushisexecuted dischargeimmediatelyreturns sincethepushreducestheexcessto therecanbeatmostonenonsaturatingpushpercalltodischarge aswehaveobserved dischargeiscalledo times andthusthetotaltimespentperformingnonsaturatingpushesiso therunningtimeofrelabel frontisthereforeo cve whichiso exercises illustratetheexecutionofrelabel frontinthemanneroffigure forthe ownetworkinfigure assumethattheinitialorderingofverticesinlish iandthattheneighborlistsare ndhs ndhs ndh ndh wewouldliketoimplementapush relabelalgorithminwhichwemaintaina rst rst outqueueofover owingvertices thealgorithmrepeatedlydischargesthe vertexattheheadofthequeue andanyverticesthatwerenotover owingbefore thedischargebutareover owingafterwardareplacedattheendofthequeue afterthevertexattheheadofthequeueisdischarged itisremoved whenthe chapter maximumflowqueueisempty thealgorithmterminates showhowtoimplementthisalgorithmtocomputeamaximum owino showthatthegenericalgorithmstillworksifrelabelupdatesu hbysim plycomputingu hdu howwouldthischangeaffecttheanalysisofrelabel showthatifwealwaysdischargeahighestover owingvertex wecanmakethepush relabelmethodrunino supposethatatsomepointintheexecutionofapush relabelalgorithm thereexists aninteger kjvj forwhichnovertexhashdk showthatallverticeswithh kareonthesourcesideofaminimumcut ifsuchakexists thegapheuristicupdateseveryvertex vfsgforwhichh tosethdmax jvjc showthattheresultingattributehisaheightfunction thegapheuristiciscrucialinmakingimplementationsofthepush relabelmethod performwellinpractice problems escapeproblem annngridisanundirectedgraphconsistingofnrowsandncolumnsofvertices asshowninfigure wedenotethevertexintheithrowandthejthcolumnby allverticesinagridhaveexactlyfourneighbors exceptfortheboundaryvertices whicharethepoints forwhichid idn orjdn givenmn startingpoints inthegrid theescapeproblemistodeterminewhetherornottherearemvertex disjointpathsfromthestartingpointstoanymdifferentpointsontheboundary forexample thegridinfigure hasanescape butthegridinfigure doesnot considera ownetworkinwhichvertices aswellasedges havecapacities thatis thetotalpositive owenteringanygivenvertexissubjecttoacapacityconstraint showthatdeterminingthemaximum owinanetworkwithedgeandvertexcapacitiescanbereducedtoanordinarymaximum owproblemon ownetworkofcomparablesize problemsforchapter gridsfortheescapeproblem startingpointsareblack andothergridverticesarewhite agridwithanescape shownbyshadedpaths agridwithnoescape describeanef cientalgorithmtosolvetheescapeproblem andanalyzeitsrunningtime minimumpathcoverapathcoverofadirectedgraphgd isasetpofvertex disjointpathssuchthateveryvertexinvisincludedinexactlyonepathinp pathsmaystartandendanywhere andtheymaybeofanylength including aminimumpathcoverofgisapathcovercontainingthefewestpossiblepaths giveanef cientalgorithmto ndaminimumpathcoverofadirectedacyclicgraphgd hint assumingthatvdf constructthegraphg wherev dfx xng yng andrunamaximum owalgorithm doesyouralgorithmworkfordirectedgraphsthatcontaincycles explain algorithmicconsultingprofessorgorewantstoopenupanalgorithmicconsultingcompany hehasiden ednimportantsubareasofalgorithms roughlycorrespondingtodifferentpor tionsofthistextbook whichherepresentsbythesetadfa ang ineachsubareaak hecanhireanexpertinthatareaforckdollars theconsultingcompanyhaslinedupasetjdfj jmgofpotentialjobs inordertoperformjobji thecompanyneedstohavehiredexpertsinasubsetriaof chapter maximumflowsubareas eachexpertcanworkonmultiplejobssimultaneously ifthecompanychoosestoacceptjobji itmusthavehiredexpertsinallsubareasinri anditwilltakeinrevenueofpidollars professorgore sjobistodeterminewhichsubareastohireexpertsinandwhichjobstoacceptinordertomaximizethenetrevenue whichisthetotalincomefrom jobsacceptedminusthetotalcostofemployingtheexperts considerthefollowing ownetworkg itcontainsasourcevertexs verticesa verticesj andasinkvertext forkd ownetworkcontainsanedge withcapacityc dck andforid ownetworkcontainsanedge withcapacityc dpi forkd nandid ifak thengcontainsanedge withcapacityc showthatifji tfora nite capacitycut ofg thenak tforeachak showhowtodeterminethemaximumnetrevenuefromthecapacityofamini mumcutofgandthegivenpivalues giveanef cientalgorithmtodeterminewhichjobstoacceptandwhichexpertstohire analyzetherunningtimeofyouralgorithmintermsofm andrdpmid jrij updatingmaximum owletgd bea ownetworkwithsources sinkt andintegercapacities supposethatwearegivenamaximum owing supposethatweincreasethecapacityofasingleedge eby giveano vce timealgorithmtoupdatethemaximum supposethatwedecreasethecapacityofasingleedge eby giveano vce timealgorithmtoupdatethemaximum maximum owbyscalingletgd bea ownetworkwithsources sinkt andanintegercapac ityc oneachedge letcdmax arguethataminimumcutofghascapacityatmostcjej foragivennumberk showhowto ndanaugmentingpathofcapacityatleastkino ifsuchapathexists problemsforchapter wecanusethefollowingmodi cationofford fulkerson methodtocom puteamaximum owing max scaling cdmax initialize owfto blgcc whilek whilethereexistsanaugmentingpathpofcapacityatleastk augment owfalongp kdk returnfc arguethatmax scalingreturnsamaximum showthatthecapacityofaminimumcutoftheresidualnetworkgfisatmost kjejeachtimeline isexecuted arguethattheinnerwhileloopoflines executeso timesforeachvalueofk concludethatmax scalingcanbeimplementedsothatitrunsino lgc thehopcroft karpbipartitematchingalgorithminthisproblem wedescribeafasteralgorithm duetohopcroftandkarp ndingamaximummatchinginabipartitegraph thealgorithmrunsino pve givenanundirected bipartitegraphgd wherevdl randalledgeshaveexactlyoneendpointinl letmbeamatchinging wesaythatasimplepathpingisanaugmentingpathwithrespecttomifitstartsatanunmatchedvertexinl endsatanunmatchedvertexinr anditsedgesbelongalternatelytomandem thisde nitionofanaugmentingpathisrelatedto butdifferentfrom anaugmentingpathina ownetwork inthisproblem wetreatapathasasequenceofedges ratherthanasasequenceofvertices shortestaugmentingpathwithrespecttoamatchingmisanaugmentingpathwithaminimumnumberofedges giventwosetsaandb thesymmetricdifferencea bisde nedas thatis theelementsthatareinexactlyoneofthetwosets chapter maximumflowa showthatifmisamatchingandpisanaugmentingpathwithrespecttom thenthesymmetricdifferencem pisamatchingandjm pjdjmjc showthatifp pkarevertex disjointaugmentingpathswithrespecttom thenthesymmetricdifferencem isamatchingwithcardinalityjmjck thegeneralstructureofouralgorithmisthefollowing hopcroft karp letpdfp pkgbeamaximalsetofvertex disjointshortestaugmentingpathswithrespecttom mdm untilp returnmtheremainderofthisproblemasksyoutoanalyzethenumberofiterationsinthealgorithm thatis thenumberofiterationsintherepeatloop andtodescribeanimplementationofline giventwomatchingsmandming showthateveryvertexinthegraphg hasdegreeatmost concludethatg isadisjointunionofsimplepathsorcycles arguethatedgesineachsuchsimplepathorcyclebelongalternatelytomorm provethatifjmjjmj thenm mcontainsatleastjmjjmjvertex disjointaugmentingpathswithrespecttom letlbethelengthofashortestaugmentingpathwithrespecttoamatchingm andletp pkbeamaximalsetofvertex disjointaugmentingpathsoflengthlwithrespecttom letm andsupposethatpisashortestaugmentingpathwithrespecttom showthatifpisvertex disjointfromp thenphasmorethanledges nowsupposethatpisnotvertex disjointfromp letabethesetofedges showthatad pandthatjaj concludethatphasmorethanledges provethatifashortestaugmentingpathwithrespecttomhasledges thesizeofthemaximummatchingisatmostjmjcjvj notesforchapter showthatthenumberofrepeatloopiterationsinthealgorithmisatmost pjvj hint byhowmuchcanmgrowafteriterationnumberpjvj giveanalgorithmthatrunsino timeto ndamaximalsetofvertex disjointshortestaugmentingpathsp pkforagivenmatchingm concludethatthetotalrunningtimeofhopcroft karpiso pve chapternotesahuja magnanti andorlin lawler papadimitriouandstei glitz andtarjan aregoodreferencesfornetwork owandrelatedalgo rithms goldberg tardos andtarjan alsoprovideanicesurveyofalgorithms fornetwork owproblems andschrijver haswrittenaninterestingreview ofhistoricaldevelopmentsinthe eldofnetwork ows theford fulkersonmethodisduetofordandfulkerson whooriginatedtheformalstudyofmanyoftheproblemsintheareaofnetwork including themaximum owandbipartite matchingproblems manyearlyimplementations oftheford fulkersonmethodfoundaugmentingpathsusingbreadth rstsearch edmondsandkarp andindependentlydinic provedthatthisstrategy yieldsapolynomial timealgorithm arelatedidea thatofusing blocking ows wasalso rstdevelopedbydinic karzanov rstdevelopedtheideaof pre ows thepush relabelmethodisduetogoldberg andgoldbergandtar jan goldbergandtarjangaveano timealgorithmthatusesaqueuetomaintainthesetofover owingvertices aswellasanalgorithmthatusesdynamictreestoachievearunningtimeofo velg severalotherresearchershavedevelopedpush relabelmaximum owalgorithms ahujaandorlin ahuja orlin andtarjan gavealgorithmsthatusedscaling cheriyanand maheshwari proposedpushing owfromtheover owingvertexofmaximum height cheriyanandhagerup suggestedrandomlypermutingtheneighbor lists andseveralresearchers developedcleverderandomizationsof thisidea leadingtoasequenceoffasteralgorithms thealgorithmofking rao andtarjan isthefastestsuchalgorithmandrunsino veloge vlgv theasymptoticallyfastestalgorithmtodateforthemaximum owproblem bygoldbergandrao runsintimeo min elg lgc wherecdmax thisalgorithmdoesnotusethepush relabelmethodbutinsteadisbasedon ndingblocking ows allpreviousmaximum owalgorithms includingtheonesinthischapter usesomenotionofdistance thepush relabelalgorithmsusetheanalogousnotionofheight withalengthof chapter maximumflowassignedimplicitlytoeachedge thisnewalgorithmtakesadifferentapproachandassignsalengthof tohigh capacityedgesandalengthof tolow capacityedges informally withrespecttotheselengths shortestpathsfromthesourcetothesink tendhavehighcapacity whichmeansthatfeweriterationsneedbeperformed inpractice relabelalgorithmscurrentlydominateaugmenting pathorlinear programmingbasedalgorithmsforthemaximum owproblem astudy bycherkasskyandgoldberg underscorestheimportanceofusingtwoheuris ticswhenimplementingapush relabelalgorithm rstheuristicistoperi odicallyperformabreadth rstsearchoftheresidualnetworkinordertoobtainmoreaccurateheightvalues thesecondheuristicisthegapheuristic describedin cherkasskyandgoldbergconcludethatthebestchoiceofpush relabelvariantsistheonethatchoosestodischargetheover owingvertexwiththe maximumheight thebestalgorithmtodateformaximumbipartitematching discoveredbyhopcroftandkarp runsino pve timeandisdescribedinproblem thebookbylov aszandplummer isanexcellentreferenceonmatchingproblems viiselectedtopics introductionthispartcontainsaselectionofalgorithmictopicsthatextendandcomplementearliermaterialinthisbook somechaptersintroducenewmodelsofcomputationsuchascircuitsorparallelcomputers otherscoverspecializeddomainssuchas computationalgeometryornumbertheory thelasttwochaptersdiscusssomeof theknownlimitationstothedesignofef cientalgorithmsandintroducetechniques forcopingwiththoselimitations chapter presentsanalgorithmicmodelforparallelcomputingbasedondy namicmultithreading thechapterintroducesthebasicsofthemodel showinghowtoquantifyparallelismintermsofthemeasuresofworkandspan ittheninvestigatesseveralinterestingmultithreadedalgorithms includingalgorithmsformatrixmultiplicationandmergesorting chapter studiesef cientalgorithmsforoperatingonmatrices itpresentstwogeneralmethods ludecompositionandlupdecomposition forsolving linearequationsbygaussianeliminationino italsoshowsthatmatrixinversionandmatrixmultiplicationcanbeperformedequallyfast thechapterconcludesbyshowinghowtocomputealeast squaresapproximatesolutionwhenasetoflinearequationshasnoexactsolution chapter studieslinearprogramming inwhichwewishtomaximizeormini mizeanobjective givenlimitedresourcesandcompetingconstraints linearpro grammingarisesinavarietyofpracticalapplicationareas thischaptercovershow toformulateandsolvelinearprograms thesolutionmethodcoveredisthesim plexalgorithm whichistheoldestalgorithmforlinearprogramming incontrast tomanyalgorithmsinthisbook thesimplexalgorithmdoesnotruninpolynomial timeintheworstcase butitisfairlyef cientandwidelyusedinpractice partviiselectedtopicschapter studiesoperationsonpolynomialsandshowshowtouseawell knownsignal processingtechnique thefastfouriertransform fft tomulti plytwodegree npolynomialsino nlgn italsoinvestigatesef cientim plementationsofthefft includingaparallelcircuit chapter presentsnumber theoreticalgorithms afterreviewingelementarynumbertheory itpresentseuclid salgorithmforcomputinggreatestcommondi visors itstudiesalgorithmsforsolvingmodularlinearequationsandfor raisingonenumbertoapowermoduloanothernumber itexploresanimpor tantapplicationofnumber theoreticalgorithms thersapublic keycryptosystem thiscryptosystemcanbeusednotonlytoencryptmessagessothatanadversary cannotreadthem butalsotoprovidedigitalsignatures thechapterthenpresents themiller rabinrandomizedprimalitytest withwhichwecan ndlargeprimes ciently anessentialrequirementforthersasystem finally thechaptercov erspollard rho heuristicforfactoringintegersanddiscussesthestateoftheart ofintegerfactorization chapter studiestheproblemof ndingalloccurrencesofagivenpatternstringinagiventextstring aproblemthatarisesfrequentlyintext editingpro grams afterexaminingthenaiveapproach thechapterpresentsanelegantap proachduetorabinandkarp aftershowinganef cientsolutionbased niteautomata thechapterpresentstheknuth morris prattalgorithm modi estheautomaton basedalgorithmtosavespacebycleverlypreprocessing thepattern chapter considersafewproblemsincomputationalgeometry afterdis cussingbasicprimitivesofcomputationalgeometry thechaptershowshowtouse sweeping methodtoef cientlydeterminewhetherasetoflinesegmentscon tainsanyintersections twocleveralgorithmsfor ndingtheconvexhullofasetof points graham sscanandjarvis smarch alsoillustratethepowerofsweeping methods thechaptercloseswithanef cientalgorithmfor ndingtheclosestpair fromamongagivensetofpointsintheplane chapter concernsnp completeproblems manyinterestingcomputationalproblemsarenp butnopolynomial timealgorithmisknownforsolving anyofthem thischapterpresentstechniquesfordeterminingwhenaproblemis severalclassicproblemsareprovedtobenp determining whetheragraphhasahamiltoniancycle determiningwhetherabooleanformula issatis anddeterminingwhetheragivensetofnumbershasasubsetthat addsuptoagiventargetvalue thechapteralsoprovesthatthefamoustraveling salesmanproblemisnp chapter showshowto ndapproximatesolutionstonp completeproblemsef cientlybyusingapproximationalgorithms forsomenp completeproblems approximatesolutionsthatarenearoptimalarequiteeasytoproduce butforothers eventhebestapproximationalgorithmsknownworkprogressivelymorepoorlyas partviiselectedtopics theproblemsizeincreases therearesomeproblemsforwhichwecaninvestincreasingamountsofcomputationtimeinreturnforincreasinglybetterapprox imatesolutions thischapterillustratesthesepossibilitieswiththevertex unweightedandweightedversions anoptimizationversionof cnf satis ability thetraveling salesmanproblem theset coveringproblem andthe subset sumproblem multithreadedalgorithmsthevastmajorityofalgorithmsinthisbookareserialalgorithmssuitableforrunningonauniprocessorcomputerinwhichonlyoneinstructionexecutesata inthischapter weshallextendouralgorithmicmodeltoencompassparallelalgorithms whichcanrunonamultiprocessorcomputerthatpermitsmultipleinstructionstoexecuteconcurrently inparticular weshallexploretheelegant modelofdynamicmultithreadedalgorithms whichareamenabletoalgorithmic designandanalysis aswellastoef cientimplementationinpractice parallelcomputers computerswithmultipleprocessingunits havebecomeincreasinglycommon andtheyspanawiderangeofpricesandperformance rela tivelyinexpensivedesktopandlaptopchipmultiprocessorscontainasinglemulti coreintegrated circuitchipthathousesmultipleprocessing cores eachofwhichisafull edgedprocessorthatcanaccessacommonmemory atanintermedi ateprice performancepointareclustersbuiltfromindividualcomputers simplepc classmachines withadedicatednetworkinterconnectingthem thehighest pricedmachinesaresupercomputers whichoftenuseacombinationofcustomarchitecturesandcustomnetworkstodeliverthehighestperformancein termsofinstructionsexecutedpersecond multiprocessorcomputershavebeenaround inoneformoranother fordecades althoughthecomputingcommunitysettledontherandom accessma chinemodelforserialcomputingearlyoninthehistoryofcomputerscience singlemodelforparallelcomputinghasgainedaswideacceptance amajorrea sonisthatvendorshavenotagreedonasinglearchitecturalmodelforparallel computers forexample someparallelcomputersfeaturesharedmemory whereeachprocessorcandirectlyaccessanylocationofmemory otherparallelcom putersemploydistributedmemory whereeachprocessor smemoryisprivate andanexplicitmessagemustbesentbetweenprocessorsinorderforoneprocessorto accessthememoryofanother withtheadventofmulticoretechnology however everynewlaptopanddesktopmachineisnowashared memoryparallelcomputer chapter multithreadedalgorithms andthetrendappearstobetowardshared memorymultiprocessing althoughtimewilltell thatistheapproachweshalltakeinthischapter onecommonmeansofprogrammingchipmultiprocessorsandothershared memoryparallelcomputersisbyusingstaticthreading whichprovidesasoftwareabstractionof virtualprocessors orthreads sharingacommonmemory eachthreadmaintainsanassociatedprogramcounterandcanexecutecodeindepen dentlyoftheotherthreads theoperatingsystemloadsathreadontoaprocessor forexecutionandswitchesitoutwhenanotherthreadneedstorun althoughtheoperatingsystemallowsprogrammerstocreateanddestroythreads theseopera tionsarecomparativelyslow formostapplications threadspersistforthe durationofacomputation whichiswhywecallthem static unfortunately programmingashared memoryparallelcomputerdirectlyusingstaticthreadsisdif cultanderror prone onereasonisthatdynamicallyparti tioningtheworkamongthethreadssothateachthreadreceivesapproximately thesameloadturnsouttobeacomplicatedundertaking foranybutthesim plestofapplications theprogrammermustusecomplexcommunicationprotocols toimplementaschedulertoload balancethework thisstateofaffairshasled towardthecreationofconcurrencyplatforms whichprovidealayerofsoftwarethatcoordinates schedules andmanagestheparallel computingresources concurrencyplatformsarebuiltasruntimelibraries butothersprovidefull edged parallellanguageswithcompilerandruntimesupport dynamicmultithreadedprogrammingoneimportantclassofconcurrencyplatformisdynamicmultithreading whichisthemodelweshalladoptinthischapter dynamicmultithreadingallowsprogram merstospecifyparallelisminapplicationswithoutworryingaboutcommunicationprotocols loadbalancing andothervagariesofstatic threadprogramming theconcurrencyplatformcontainsascheduler whichload balancesthecomputation automatically therebygreatlysimplifyingtheprogrammer schore althoughthe functionalityofdynamic multithreadingenvironmentsisstillevolving almostall supporttwofeatures nestedparallelismandparallelloops nestedparallelism allowsasubroutinetobe spawned allowingthecallertoproceedwhilethe spawnedsubroutineiscomputingitsresult aparallelloopislikeanordinary forloop exceptthattheiterationsoftheloopcanexecuteconcurrently thesetwofeaturesformthebasisofthemodelfordynamicmultithreadingthatweshallstudyinthischapter akeyaspectofthismodelisthattheprogrammer needstospecifyonlythelogicalparallelismwithinacomputation andthethreads withintheunderlyingconcurrencyplatformscheduleandload balancethecompu tationamongthemselves weshallinvestigatemultithreadedalgorithmswrittenfor chapter multithreadedalgorithmsthismodel aswellhowtheunderlyingconcurrencyplatformcanschedulecompu tationsef ciently ourmodelfordynamicmultithreadingoffersseveralimportantadvantages itisasimpleextensionofourserialprogrammingmodel wecandescribea multithreadedalgorithmbyaddingtoourpseudocodejustthree concurrency keywords parallel spawn andsync moreover ifwedeletetheseconcur rencykeywordsfromthemultithreadedpseudocode theresultingtextisserial pseudocodeforthesameproblem whichwecallthe serialization ofthemul tithreadedalgorithm itprovidesatheoreticallycleanwaytoquantifyparallelismbasedontheno tionsof span manymultithreadedalgorithmsinvolvingnestedparallelismfollownaturally fromthedivide conquerparadigm moreover justasserialdivide conqueralgorithmslendthemselvestoanalysisbysolvingrecurrences sodomultithreadedalgorithms themodelisfaithfultohowparallel computingpracticeisevolving agrow ingnumberofconcurrencyplatformssupportonevariantoranotherofdynamic multithreading includingcilk cilk openmp taskpar allellibrary andthreadingbuildingblocks introducesthedynamicmultithreadingmodelandpresentsthemet ricsofwork span andparallelism whichweshallusetoanalyzemultithreaded algorithms investigateshowtomultiplymatriceswithmultithread ing andsection tacklesthetougherproblemofmultithreadingmergesort thebasicsofdynamicmultithreadingweshallbeginourexplorationofdynamicmultithreadingusingtheexampleof computingfibonaccinumbersrecursively recallthatthefibonaccinumbersare nedbyrecurrence fidfi cfi fori hereisasimple recursive serialalgorithmtocomputethenthfibonaccinumber thebasicsofdynamicmultithreading fib fib fib fib fib fib fib fib fib fib fib fib fib fib fib fib fib fib fib fib fib fib fib fib fib thetreeofrecursiveprocedureinstanceswhencomputingfib eachinstanceoffibwiththesameargumentdoesthesameworktoproducethesameresult providinganinef cientbutinterestingwaytocomputefibonaccinumbers fib ifn returnn elsexdfib ydfib returnxcyyouwouldnotreallywanttocomputelargefibonaccinumbersthisway causethiscomputationdoesmuchrepeatedwork showsthetreeof recursiveprocedureinstancesthatarecreatedwhencomputingf forexample acalltofib recursivelycallsfib andthenfib thecalltofib alsoresultsinacalltofib bothinstancesoffib returnthesameresult sincethefibproceduredoesnotmemoize thesecondcalltofib replicatestheworkthatthe rstcallperforms lett denotetherunningtimeoffib sincefib containstworecur sivecallsplusaconstantamountofextrawork weobtaintherecurrencet thisrecurrencehassolutiont whichwecanshowusingthesubsti tutionmethod foraninductivehypothesis assumethatt afnb wherea andb areconstants substituting weobtain chapter multithreadedalgorithmst afn afn cfn dafnb afnbifwechooseblargeenoughtodominatetheconstantinthe wecanthenchoosealargeenoughtosatisfytheinitialcondition theanalyticalboundt whered isthegoldenratio nowfollowsfromequation sincefngrowsexponentiallyinn thisprocedureisaparticularlyslowwaytocomputefibonaccinumbers seeproblem formuchfasterways althoughthefibprocedureisapoorwaytocomputefibonaccinumbers itmakesagoodexampleforillustratingkeyconceptsintheanalysisofmultithreaded algorithms observethatwithinfib thetworecursivecallsinlines tofib andfib respectively areindependentofeachother theycouldbecalledineitherorder andthecomputationperformedbyoneinnowayaffects theother therefore thetworecursivecallscanruninparallel weaugmentourpseudocodetoindicateparallelismbyaddingtheconcurrencykeywordsspawnandsync hereishowwecanrewritethefibproceduretousedynamicmultithreading fib ifn returnn elsexdspawnp fib ydp fib sync returnxcynoticethatifwedeletetheconcurrencykeywordsspawnandsyncfromp fib theresultingpseudocodetextisidenticaltofib otherthanrenamingtheprocedureintheheaderandinthetworecursivecalls wede netheserializationofamul tithreadedalgorithmtobetheserialalgorithmthatresultsfromdeletingthemulti threadedkeywords spawn sync andwhenweexamineparallelloops parallel indeed ourmultithreadedpseudocodehasthenicepropertythataserializationis alwaysordinaryserialpseudocodetosolvethesameproblem nestedparallelismoccurswhenthekeywordspawnprecedesaprocedurecall asinline thesemanticsofaspawndiffersfromanordinaryprocedurecallin thattheprocedureinstancethatexecutesthespawn theparent maycontinuetoexecuteinparallelwiththespawnedsubroutine itschild insteadofwaiting thebasicsofdynamicmultithreading forthechildtocomplete aswouldnormallyhappeninaserialexecution inthiscase whilethespawnedchildiscomputingp fib theparentmaygoontocomputep fib inline inparallelwiththespawnedchild sincethep fibprocedureisrecursive thesetwosubroutinecallsthemselvescreatenestedparallelism asdotheirchildren therebycreatingapotentiallyvasttreeofsubcom putations allexecutinginparallel thekeywordspawndoesnotsay however thataproceduremustexecutecon currentlywithitsspawnedchildren onlythatitmay theconcurrencykeywordsexpressthelogicalparallelismofthecomputation indicatingwhichpartsofthecomputationmayproceedinparallel atruntime itisuptoaschedulertodeter minewhichsubcomputationsactuallyrunconcurrentlybyassigningthemtoavail ableprocessorsasthecomputationunfolds weshalldiscussthetheorybehind schedulersshortly aprocedurecannotsafelyusethevaluesreturnedbyitsspawnedchildrenuntilafteritexecutesasyncstatement asinline thekeywordsyncindicatesthattheproceduremustwaitasnecessaryforallitsspawnedchildrentocompletebe foreproceedingtothestatementafterthesync inthep fibprocedure asyncisrequiredbeforethereturnstatementinline toavoidtheanomalythatwouldoccurifxandyweresummedbeforexwascomputed inadditiontoexplicitsynchronizationprovidedbythesyncstatement everyprocedureexecutesasyncimplicitlybeforeitreturns thusensuringthatallitschildrenterminatebeforeit amodelformultithreadedexecutionithelpstothinkofamultithreadedcomputation thesetofruntimeinstruc tionsexecutedbyaprocessoronbehalfofamultithreadedprogram asadirectedacyclicgraphgd calledacomputationdag asanexample showsthecomputationdagthatresultsfromcomputingp fib conceptually theverticesinvareinstructions andtheedgesinerepresentdependenciesbe tweeninstructions emeansthatinstructionumustexecutebeforeinstruction forconvenience however ifachainofinstructionscontainsnoparallelcontrol nospawn sync orreturnfromaspawn viaeitheranexplicitreturnstatementorthereturnthathappensimplicitlyuponreachingtheendofaprocedure wemaygroupthemintoasinglestrand eachofwhichrepresentsoneormoreinstructions instructionsinvolvingparallelcontrolarenotincluded instrands butarerepresentedinthestructureofthedag forexample ifastrand hastwosuccessors oneofthemmusthavebeenspawned andastrandwithmul tiplepredecessorsindicatesthepredecessorsjoinedbecauseofasyncstatement inthegeneralcase thesetvformsthesetofstrands andtheseteofdi rectededgesrepresentsdependenciesbetweenstrandsinducedbyparallelcontrol chapter multithreadedalgorithmsp fib fib fib fib fib fib fib fib fib adirectedacyclicgraphrepresentingthecomputationofp fib eachcirclerep resentsonestrand withblackcirclesrepresentingeitherbasecasesorthepartoftheprocedure instance uptothespawnofp fib inline shadedcirclesrepresentingthepartofthepro cedurethatcallsp fib inline uptothesyncinline whereitsuspendsuntilthespawnofp fib returns andwhitecirclesrepresentingthepartoftheprocedureafterthesyncwhereitsumsxandyuptothepointwhereitreturnstheresult eachgroupofstrandsbelongingtothesameprocedureissurroundedbyaroundedrectangle lightlyshadedforspawnedproceduresandheavilyshadedforcalledprocedures spawnedgesandcalledgespointdownward continuationedgespointhorizontallytotheright andreturnedgespointupward assumingthateachstrandtakes unittime theworkequals timeunits sincethereare strands andthespanis timeunits sincethecriticalpath shownwithshadededges contains strands ifghasadirectedpathfromstrandutostrand wesaythatthetwostrandsare logically inseries otherwise strandsuandare logically inparallel wecanpictureamultithreadedcomputationasadagofstrandsembeddedinatreeofprocedureinstances forexample showsthetreeofprocedure instancesforp fib withoutthedetailedstructureshowingstrands zoomsinonasectionofthattree showingthestrandsthatconstituteeachproce dure alldirectededgesconnectingstrandsruneitherwithinaprocedureoralong undirectededgesintheproceduretree wecanclassifytheedgesofacomputationdagtoindicatethekindofdependen ciesbetweenthevariousstrands acontinuationedge drawnhorizontallyinfigure connectsastrandutoitssuccessoru withinthesameprocedureinstance whenastranduspawnsastrand thedagcontainsaspawnedge whichpointsdownwardinthe gure calledges representingnormalprocedurecalls alsopointdownward stranduspawningstranddiffersfromucallinginthataspawninducesahorizontalcontinuationedgefromutothestrandu fol thebasicsofdynamicmultithreading lowinguinitsprocedure indicatingthatu isfreetoexecuteatthesametimeas whereasacallinducesnosuchedge whenastrandureturnstoitscallingprocedureandxisthestrandimmediatelyfollowingthenextsyncinthecallingprocedure thecomputationdagcontainsreturnedge whichpointsupward acomputationstartswithasingleinitialstrand theblackvertexintheprocedurelabeledp fib infigure andendswithasingle nalstrand thewhitevertexintheprocedurelabeledp fib weshallstudytheexecutionofmultithreadedalgorithmsonanidealparal lelcomputer whichconsistsofasetofprocessorsandasequentiallyconsistentsharedmemory sequentialconsistencymeansthatthesharedmemory whichmay inrealitybeperformingmanyloadsandstoresfromtheprocessorsatthesame producesthesameresultsasifateachstep exactlyoneinstructionfromone oftheprocessorsisexecuted thatis thememorybehavesasiftheinstructions wereexecutedsequentiallyaccordingtosomegloballinearorderthatpreservesthe individualordersinwhicheachprocessorissuesitsowninstructions fordynamic multithreadedcomputations whicharescheduledontoprocessorsautomatically bytheconcurrencyplatform thesharedmemorybehavesasifthemultithreaded computation sinstructionswereinterleavedtoproducealinearorderthatpreserves thepartialorderofthecomputationdag dependingonscheduling theordering coulddifferfromonerunoftheprogramtoanother butthebehaviorofanyexe cutioncanbeunderstoodbyassumingthattheinstructionsareexecutedinsome linearorderconsistentwiththecomputationdag inadditiontomakingassumptionsaboutsemantics theideal parallel computermodelmakessomeperformanceassumptions speci cally itassumesthateach processorinthemachinehasequalcomputingpower anditignoresthecostof scheduling althoughthislastassumptionmaysoundoptimistic itturnsoutthat foralgorithmswithsuf cient parallelism atermweshallde nepreciselyina theoverheadofschedulingisgenerallyminimalinpractice performancemeasureswecangaugethetheoreticalef ciencyofamultithreadedalgorithmbyusingtwometrics span theworkofamultithreadedcomputationisthetotaltimetoexecutetheentirecomputationononeprocessor inotherwords thework isthesumofthetimestakenbyeachofthestrands foracomputationdagin whicheachstrandtakesunittime theworkisjustthenumberofverticesinthe dag thespanisthelongesttimetoexecutethestrandsalonganypathinthedag foradaginwhicheachstrandtakesunittime thespanequalsthenumberof verticesonalongestorcriticalpathinthedag recallfromsection thatwecan ndacriticalpathinadaggd vce forexample thecomputationdagoffigure verticesinalland verticesonitscritical chapter multithreadedalgorithmspath sothatifeachstrandtakesunittime itsworkis timeunitsanditsspanis timeunits theactualrunningtimeofamultithreadedcomputationdependsnotonlyonitsworkanditsspan butalsoonhowmanyprocessorsareavailableandhow theschedulerallocatesstrandstoprocessors todenotetherunningtimeofa multithreadedcomputationonpprocessors weshallsubscriptbyp forexample wemightdenotetherunningtimeofanalgorithmonpprocessorsbytp theworkistherunningtimeonasingleprocessor ort thespanistherunningtimeifwecouldruneachstrandonitsownprocessor inotherwords ifwehadanunlimitednumberofprocessors andsowedenotethespanbyt theworkandspanprovidelowerboundsontherunningtimetpofamulti threadedcomputationonpprocessors inonestep anidealparallelcomputerwithpprocessorscandoatmostpunitsofwork andthusintptime itcanperformatmostptpwork sincethetotalworktodoist wehaveptpt dividingbypyieldstheworklaw tpt processoridealparallelcomputercannotrunanyfasterthanamachinewithanunlimitednumberofprocessors lookedatanotherway amachinewithanunlimitednumberofprocessorscanemulateap processormachinebyusingjustpofitsprocessors thespanlawfollows tpt wede nethespeedupofacomputationonpprocessorsbytheratiot whichsayshowmanytimesfasterthecomputationisonpprocessorsthanon processor bytheworklaw wehavetpt whichimpliesthatt tpp thespeeduponpprocessorscanbeatmostp whenthespeedupislinearinthenumberofprocessors thatis whent tpd thecomputationexhibitslinearspeedup andwhent tpdp wehaveperfectlinearspeedup theratiot oftheworktothespangivestheparallelismofthemulti threadedcomputation wecanviewtheparallelismfromthreeperspectives asa ratio theparallelismdenotestheaverageamountofworkthatcanbeperformedin parallelforeachstepalongthecriticalpath asanupperbound theparallelism givesthemaximumpossiblespeedupthatcanbeachievedonanynumberofpro cessors finally andperhapsmostimportant theparallelismprovidesalimiton thepossibilityofattainingperfectlinearspeedup speci cally oncethenumberof processorsexceedstheparallelism thecomputationcannotpossiblyachieveper fectlinearspeedup toseethislastpoint supposethatp inwhichcase thebasicsofdynamicmultithreading thespanlawimpliesthatthespeedupsatis est tpt moreover ifthenumberpofprocessorsintheidealparallelcomputergreatlyexceedstheparallelism thatis ifpt thent tpp sothatthespeedupismuchlessthanthenumberofprocessors inotherwords themoreprocessorswe usebeyondtheparallelism thelessperfectthespeedup asanexample considerthecomputationp fib infigure andassumethateachstrandtakesunittime sincetheworkist andthespanist theparallelismist consequently achievingmuchmorethandoublethespeedupisimpossible nomatterhowmanyprocessorsweem ploytoexecutethecomputation forlargerinputsizes however weshallseethatp fib exhibitssubstantialparallelism wede nethe parallel slacknessofamultithreadedcomputationexecutedonanidealparallelcomputerwithpprocessorstobetheratio pdt whichisthefactorbywhichtheparallelismofthecomputationex ceedsthenumberofprocessorsinthemachine iftheslacknessislessthan wecannothopetoachieveperfectlinearspeedup becauset andthespanlawimplythatthespeeduponpprocessorssatis est tpt indeed astheslacknessdecreasesfrom thespeedupofthecomputationdivergesfurtherandfurtherfromperfectlinearspeedup iftheslacknessisgreater however theworkperprocessoristhelimitingconstraint asweshallsee astheslacknessincreasesfrom agoodschedulercanachievecloserandclosertoperfectlinearspeedup schedulinggoodperformancedependsonmorethanjustminimizingtheworkandspan thestrandsmustalsobescheduledef cientlyontotheprocessorsoftheparallelma chine ourmultithreadedprogrammingmodelprovidesnowaytospecifywhichstrandstoexecuteonwhichprocessors instead werelyontheconcurrencyplat sschedulertomapthedynamicallyunfoldingcomputationtoindividualpro cessors inpractice theschedulermapsthestrandstostaticthreads andtheop eratingsystemschedulesthethreadsontheprocessorsthemselves butthisextra levelofindirectionisunnecessaryforourunderstandingofscheduling wecan justimaginethattheconcurrencyplatform sschedulermapsstrandstoprocessors directly amultithreadedschedulermustschedulethecomputationwithnoadvanceknowledgeofwhenstrandswillbespawnedorwhentheywillcomplete itmust operateon moreover agoodscheduleroperatesinadistributedfashion wherethethreadsimplementingtheschedulercooperatetoload balancethecom putation provablygoodon distributedschedulersexist butanalyzingthem iscomplicated chapter multithreadedalgorithmsinstead tokeepouranalysissimple weshallinvestigateanon linecentralizedscheduler whichknowstheglobalstateofthecomputationatanygiventime weshallanalyzegreedyschedulers whichassignasmanystrandstoprocessorsaspossibleineachtimestep ifatleastpstrandsarereadytoexecuteduringatimestep wesaythatthestepisacompletestep andagreedyschedulerassignsanypofthereadystrandstoprocessors otherwise fewerthanpstrandsarereadytoexecute inwhichcasewesaythatthestepisanincompletestep andtheschedulerassignseachreadystrandtoitsownprocessor fromtheworklaw thebestrunningtimewecanhopeforonpprocessorsistpdt andfromthespanlawthebestwecanhopeforistpdt thefollowingtheoremshowsthatgreedyschedulingisprovablygoodinthatit achievesthesumofthesetwolowerboundsasanupperbound theorem onanidealparallelcomputerwithpprocessors agreedyschedulerexecutesamultithreadedcomputationwithworkt andspant intimetpt pct proofwestartbyconsideringthecompletesteps ineachcompletestep thepprocessorstogetherperformatotalofpwork supposeforthepurposeofcontradictionthatthenumberofcompletestepsisstrictlygreaterthanbt thetotalworkofthecompletestepsisatleastp pcc dpbt pccpdt modp byequation byinequality weobtainthecontradictionthatthepprocessorswouldperformmoreworkthanthecomputationrequires whichallowsustoconcludethatthenumberof completestepsisatmostbt consideranincompletestep letgbethedagrepresentingtheentirecomputation andwithoutlossofgenerality assumethateachstrandtakesunit wecanreplaceeachlongerstrandbyachainofunit timestrands letg bethesubgraphofgthathasyettobeexecutedatthestartoftheincompletestep andletg bethesubgraphremainingtobeexecutedaftertheincompletestep alongestpathinadagmustnecessarilystartatavertexwithin sinceanincompletestepofagreedyschedulerexecutesallstrandswithin ing thelengthofalongestpathing mustbe lessthanthelengthofalongestpathing inotherwords anincompletestepdecreasesthespanoftheunexecuteddagby hence thenumberofincompletestepsisatmostt sinceeachstepiseithercompleteorincomplete thetheoremfollows thebasicsofdynamicmultithreading thefollowingcorollarytotheorem showsthatagreedyscheduleralwaysperformswell corollary therunningtimetpofanymultithreadedcomputationscheduledbyagreedyscheduleronanidealparallelcomputerwithpprocessorsiswithinafactorof ofoptimal prooflettpbetherunningtimeproducedbyanoptimalscheduleronamachinewithpprocessors andlett andt betheworkandspanofthecomputation respectively sincetheworkandspanlaws inequalities ustpmax theorem impliesthattpt pct max thenextcorollaryshowsthat infact agreedyschedulerachievesnear perfectlinearspeeduponanymultithreadedcomputationastheslacknessgrows corollary lettpbetherunningtimeofamultithreadedcomputationproducedbyagreedyscheduleronanidealparallelcomputerwithpprocessors andlett andt betheworkandspanofthecomputation respectively ifpt wehavetpt orequivalently aspeedupofapproximatelyp proofifwesupposethatpt thenwealsohavet andhencetheorem givesustpt pct sincetheworklaw dictatesthattpt weconcludethattpt orequiva lently thatthespeedupist tpp thesymboldenotes muchless buthowmuchis muchless asaruleofthumb aslacknessofatleast thatis timesmoreparallelismthanpro cessors generallysuf cestoachievegoodspeedup thespanterminthe greedybound inequality islessthan ofthework per processorterm whichisgoodenoughformostengineeringsituations forexample ifacomputa tionrunsononly processors itdoesn tmakesensetovalueparallelismof overparallelismof evenwiththefactorof ence asproblem shows sometimesbyreducingextremeparallelism canobtainalgorithmsthatarebetterwithrespecttootherconcernsandwhichstill scaleupwellonreasonablenumbersofprocessors chapter multithreadedalgorithmsa babwork span span dmax theworkandspanofcomposedsubcomputations whentwosubcomputationsarejoinedinseries theworkofthecompositionisthesumoftheirwork andthespanofthecompositionisthesumoftheirspans whentwosubcomputationsarejoinedinparallel theworkofthecompositionremainsthesumoftheirwork butthespanofthecompositionisonlythe maximumoftheirspans analyzingmultithreadedalgorithmswenowhaveallthetoolsweneedtoanalyzemultithreadedalgorithmsandprovidegoodboundsontheirrunningtimesonvariousnumbersofprocessors analyzing theworkisrelativelystraightforward sinceitamountstonothingmorethanana lyzingtherunningtimeofanordinaryserialalgorithm namely theserialization ofthemultithreadedalgorithm whichyoushouldalreadybefamiliarwith thatiswhatmostofthistextbookisabout analyzingthespanismoreinteresting butgenerallynoharderonceyougetthehangofit weshallinvestigatethebasic ideasusingthep fibprogram analyzingtheworkt ofp fib posesnohurdles becausewe vealreadydoneit theoriginalfibprocedureisessentiallytheserializationofp fib andhencet fromequation illustrateshowtoanalyzethespan iftwosubcomputationsarejoinedinseries theirspansaddtoformthespanoftheircomposition whereasiftheyarejoinedinparallel thespanoftheircompositionisthemaximumofthespansofthetwosubcomputations forp fib thespawnedcalltop fib inline runsinparallelwiththecalltop fib inline hence wecanexpressthespanofp fib astherecurrencet dmax whichhassolutiont theparallelismofp fib ist whichgrowsdra maticallyasngetslarge oneventhelargestparallelcomputers amodest thebasicsofdynamicmultithreading valuefornsuf cestoachievenearperfectlinearspeedupforp fib becausethisprocedureexhibitsconsiderableparallelslackness parallelloopsmanyalgorithmscontainloopsallofwhoseiterationscanoperateinparallel asweshallsee wecanparallelizesuchloopsusingthespawnandsynckeywords butitismuchmoreconvenienttospecifydirectlythattheiterationsofsuchloops canrunconcurrently ourpseudocodeprovidesthisfunctionalityviatheparallelconcurrencykeyword whichprecedestheforkeywordinaforloopstatement asanexample considertheproblemofmultiplyingannnmatrixad aij byann vectorxd theresultingn vectoryd isgivenbytheequationyidnxjd aijxj forid wecanperformmatrix vectormultiplicationbycomputingalltheentriesofyinparallelasfollows mat vec nda rows letybeanewvectoroflengthn parallelforid ton yid parallelforid ton forjd ton yidyicaijxj returnyinthiscode theparallelforkeywordsinlines indicatethattheitera tionsoftherespectiveloopsmayberunconcurrently acompilercanimplement eachparallelforloopasadivide conquersubroutineusingnestedparallelism forexample theparallelforloopinlines canbeimplementedwiththecallmat vec loop wherethecompilerproducestheauxil iarysubroutinemat vec loopasfollows chapter multithreadedalgorithms adagrepresentingthecomputationofmat vec loop thetwonumberswithineachroundedrectanglegivethevaluesofthelasttwoparameters iandi intheprocedureheader intheinvocation spawnorcall oftheprocedure theblackcirclesrepre sentstrandscorrespondingtoeitherthebasecaseorthepartoftheprocedureuptothespawnofmat vec loopinline theshadedcirclesrepresentstrandscorrespondingtothepartoftheprocedurethatcallsmat vec loopinline uptothesyncinline whereitsuspendsuntilthespawnedsubroutineinline returns andthewhitecirclesrepresentstrandscorrespondingtothe negligible partoftheprocedureafterthesyncuptothepointwhereitreturns mat vec loop ifi forjd ton yidyicaijxj elsemiddb ici spawnmat vec loop mid mat vec loop midc syncthiscoderecursivelyspawnsthe rsthalfoftheiterationsofthelooptoexecuteinparallelwiththesecondhalfoftheiterationsandthenexecutesasync therebycreatingabinarytreeofexecutionwheretheleavesareindividualloopiterations asshowninfigure tocalculatetheworkt ofmat veconannnmatrix wesimplycomputetherunningtimeofitsserialization whichweobtainbyreplacingtheparallelforloopswithordinaryforloops wehavet becausethequa draticrunningtimeofthedoublynestedloopsinlines dominates thisanalysis thebasicsofdynamicmultithreading seemstoignoretheoverheadforrecursivespawninginimplementingtheparallelloops however infact theoverheadofrecursivespawningdoesincreasethework ofaparallelloopcomparedwiththatofitsserialization butnotasymptotically toseewhy observethatsincethetreeofrecursiveprocedureinstancesisafull binarytree thenumberofinternalnodesis fewerthanthenumberofleaves seeexerciseb eachinternalnodeperformsconstantworktodividetheiteration andeachleafcorrespondstoaniterationoftheloop whichtakesatleast constanttime timeinthiscase wecanamortizetheoverheadofre cursivespawningagainsttheworkoftheiterations contributingatmostaconstantfactortotheoverallwork asapracticalmatter dynamic multithreadingconcurrencyplatformssometimescoarsentheleavesoftherecursionbyexecutingseveraliterationsinasingleleaf eitherautomaticallyorunderprogrammercontrol therebyreducingtheoverhead ofrecursivespawning thisreducedoverheadcomesattheexpenseofalsoreduc ingtheparallelism however butifthecomputationhassuf cientparallelslack ness perfectlinearspeedupneednotbesacri ced wemustalsoaccountfortheoverheadofrecursivespawningwhenanalyzingthespanofaparallel loopconstruct sincethedepthofrecursivecallingislogarithmicinthenumberofiterations foraparallelloopwithniterationsinwhichtheithiterationhasspaniter thespanist lgn cmax initer forexample format veconannnmatrix theparallelinitializationloopinlines hasspan lgn becausetherecursivespawningdominatestheconstant timeworkofeachiteration thespanofthedoublynestedloopsinlines becauseeachiterationoftheouterparallelforloopcontainsniterationsoftheinner serial forloop thespanoftheremainingcodeintheprocedureisconstant andthusthespanisdominatedbythedoublynestedloops yielding anoverallspanof forthewholeprocedure sincetheworkis theparallelismis asksyoutoprovideanimplementationwithevenmoreparallelism raceconditionsamultithreadedalgorithmisdeterministicifitalwaysdoesthesamethingonthesameinput nomatterhowtheinstructionsarescheduledonthemulticorecom puter itisnondeterministicifitsbehaviormightvaryfromruntorun amultithreadedalgorithmthatisintendedtobedeterministicfailstobe becauseit containsa determinacyrace raceconditionsarethebaneofconcurrency famousracebugsincludethetherac radiationtherapymachine whichkilledthreepeopleandinjuredsev chapter multithreadedalgorithmseralothers andthenorthamericanblackoutof whichleftover millionpeoplewithoutpower theseperniciousbugsarenotoriouslyhardto youcan runtestsinthelabfordayswithoutafailureonlytodiscoverthatyoursoftware sporadicallycrashesinthe eld adeterminacyraceoccurswhentwologicallyparallelinstructionsaccessthesamememorylocationandatleastoneoftheinstructionsperformsawrite followingprocedureillustratesaracecondition parallelforid xdxc printxafterinitializingxto inline examplecreatestwoparallelstrands eachofwhichincrementsxinline althoughitmightseemthatrace exampleshouldalwaysprintthevalue itsserializationcertainlydoes itcouldinsteadprintthevalue sseehowthisanomalymightoccur whenaprocessorincrementsx theoperationisnotindivisible butiscomposedofasequenceofinstructions readxfrommemoryintooneoftheprocessor sregisters incrementthevalueintheregister writethevalueintheregisterbackintoxinmemory illustratesacomputationdagrepresentingtheexecutionofrace withthestrandsbrokendowntoindividualinstructions recallthatsinceanidealparallelcomputersupportssequentialconsistency wecanviewthe parallelexecutionofamultithreadedalgorithmasaninterleavingofinstructions thatrespectsthedependenciesinthedag ofthe gureshowsthevalues inanexecutionofthecomputationthatelicitstheanomaly thevaluexisstoredinmemory andr andr areprocessorregisters instep oneoftheprocessorssetsxto insteps processor readsxfrommemoryintoitsregisterr andincrementsit producingthevalue inr atthatpoint processor comesintothepicture executinginstructions processor readsxfrommemoryintoregisterr incrementsit producingthevalue inr andthenstoresthisvalueintox settingxto processor resumeswithstep storingthevalue inr intox whichleavesthevalueofxunchanged therefore printsthevalue ratherthan astheserializationwouldprint wecanseewhathashappened iftheeffectoftheparallelexecutionwerethatprocessor executedallitsinstructionsbeforeprocessor thevalue wouldbe thebasicsofdynamicmultithreading incrr incrr printx stepxr illustrationofthedeterminacyraceinrace acomputationdagshow ingthedependenciesamongindividualinstructions theprocessorregistersarer andr instruc tionsunrelatedtotherace suchastheimplementationofloopcontrol areomitted anexecutionsequencethatelicitsthebug showingthevaluesofxinmemoryandregistersr andr foreachstepintheexecutionsequence printed conversely iftheeffectwerethatprocessor executedallitsinstructionsbeforeprocessor thevalue wouldstillbeprinted whentheinstructionsofthetwoprocessorsexecuteatthesametime however itispossible asinthisexample execution thatoneoftheupdatestoxislost ofcourse manyexecutionsdonotelicitthebug forexample iftheexecutionorderwereh iorh wewouldgetthecor rectresult stheproblemwithdeterminacyraces generally mostorderingsproducecorrectresults suchasanyinwhichtheinstructionsontheleftexecute beforetheinstructionsontheright orviceversa butsomeorderingsgenerate improperresultswhentheinstructionsinterleave consequently racescanbeex tremelyhardtotestfor youcanruntestsfordaysandneverseethebug onlytoexperienceacatastrophicsystemcrashinthe eldwhentheoutcomeiscritical althoughwecancopewithracesinavarietyofways includingusingmutual exclusionlocksandothermethodsofsynchronization forourpurposes weshall simplyensurethatstrandsthatoperateinparallelareindependent theyhavenodeterminacyracesamongthem inaparallelforconstruct alltheiterationsshouldbeindependent betweenaspawnandthecorrespondingsync thecodeofthespawnedchildshouldbeindependentofthecodeoftheparent includingcodeexecutedbyadditionalspawnedorcalledchildren notethatargumentstoa spawnedchildareevaluatedintheparentbeforetheactualspawnoccurs andthus theevaluationofargumentstoaspawnedsubroutineisinserieswithanyaccesses tothoseargumentsafterthespawn chapter multithreadedalgorithmsasanexampleofhoweasyitistogeneratecodewithraces hereisafaultyimplementationofmultithreadedmatrix vectormultiplicationthatachievesaspan lgn byparallelizingtheinnerforloop mat vec nda rows letybeanewvectoroflengthn parallelforid ton yid parallelforid ton parallelforjd ton yidyicaijxj returnythisprocedureis unfortunately incorrectduetoracesonupdatingyiinline whichexecutesconcurrentlyforallnvaluesofj asksyoutogiveacorrectimplementationwith lgn span amultithreadedalgorithmwithracescansometimesbecorrect asanexam ple twoparallelthreadsmightstorethesamevalueintoasharedvariable andit wouldn tmatterwhichstoredthevalue rst generally however weshallconsider codewithracestobeillegal achesslessonweclosethissectionwithatruestorythatoccurredduringthedevelopmentoftheworld classmultithreadedchess playingprogram socrates althoughthetimingsbelowhavebeensimpli edforexposition theprogramwasprototyped ona processorcomputerbutwasultimatelytorunonasupercomputerwith processors atonepoint thedevelopersincorporatedanoptimizationintothepro gramthatreduceditsrunningtimeonanimportantbenchmarkonthe processormachinefromt secondstot seconds thedevelopersusedtheworkandspanperformancemeasurestoconcludethattheoptimizedversion whichwasfasteron processors wouldactuallybeslowerthantheoriginalver sionon processsors asaresult theyabandonedthe optimization hereistheiranalysis theoriginalversionoftheprogramhadworkt secondsandspant ifwetreatinequality asanequation tpdt pct anduseitasanapproximationtotherunningtimeonppro cessors weseethatindeedt withtheoptimization theworkbecamet secondsandthespanbecamet seconds againusingourapproximation wegett therelativespeedsofthetwoversionsswitchwhenwecalculatetherunningtimeson processors however inparticular wehavet thebasicsofdynamicmultithreading seconds andt seconds theoptimizationthatspeduptheprogramon processorswouldhavemadetheprogramtwiceasslowon processors theoptimizedversion sspanof whichwasnotthedominanttermintherunningtimeon processors becamethedominanttermon processors nullifyingtheadvantagefromusingmoreprocessors themoralofthestoryisthatworkandspancanprovideabettermeansofextrapolatingperformancethancanmeasuredrunningtimes exercises supposethatwespawnp fib inline ofp fib ratherthancallingitasisdoneinthecode whatistheimpactontheasymptoticwork span parallelism drawthecomputationdagthatresultsfromexecutingp fib assumingthateachstrandinthecomputationtakesunittime whatarethework span andpar allelismofthecomputation showhowtoschedulethedagon processorsusinggreedyschedulingbylabelingeachstrandwiththetimestepinwhichitisexecuted provethatagreedyschedulerachievesthefollowingtimebound whichisslightly strongerthantheboundprovenintheorem tpt pct constructacomputationdagforwhichoneexecutionofagreedyschedulercan takenearlytwicethetimeofanotherexecutionofagreedyscheduleronthesame numberofprocessors describehowthetwoexecutionswouldproceed professorkaranmeasuresherdeterministicmultithreadedalgorithmon processorsofanidealparallelcomputerusingagreedyscheduler sheclaimsthatthethreerunsyieldedt seconds seconds andt seconds arguethattheprofessoriseitherlyingorincompetent hint usetheworklaw thespanlaw andinequality fromexer cise chapter multithreadedalgorithms giveamultithreadedalgorithmtomultiplyannnmatrixbyann vectorthatachieves lgn parallelismwhilemaintaining considerthefollowingmultithreadedpseudocodefortransposingannnmatrixainplace transpose nda rows parallelforjd ton parallelforid toj exchangeaijwithajianalyzethework span andparallelismofthisalgorithm supposethatwereplacetheparallelforloopinline ofp transpose seeex ercise withanordinaryforloop analyzethework span andparallelismoftheresultingalgorithm forhowmanyprocessorsdothetwoversionsofthechessprogramsrunequallyfast assumingthattpdt pct multithreadedmatrixmultiplicationinthissection weexaminehowtomultithreadmatrixmultiplication aproblemwhoseserialrunningtimewestudiedinsection lllookatmultithreadedalgorithmsbasedonthestandardtriplynestedloop aswellasdivide conqueralgorithms multithreadedmatrixmultiplicationthe rstalgorithmwestudyisthestraighforwardalgorithmbasedonparallelizingtheloopsintheproceduresquare matrix multiplyonpage multithreadedmatrixmultiplication matrix nda rows letcbeanewnnmatrix parallelforid ton parallelforjd ton cijd forkd ton cijdcijcaikbkj returnctoanalyzethisalgorithm observethatsincetheserializationofthealgorithmisjustsquare matrix theworkisthereforesimplyt thesameastherunningtimeofsquare matrix thespanist becauseitfollowsapathdownthetreeofrecursionfortheparallelforloopstartinginline thendownthetreeofrecursionfortheparallelforloopstartinginline andthenexecutesallniterationsoftheordinaryforloopstartinginline resultinginatotalspanof lgn lgn theparallelismis asksyoutopar allelizetheinnerlooptoobtainaparallelismof lgn whichyoucannotdostraightforwardlyusingparallelfor becauseyouwouldcreateraces adivide conquermultithreadedalgorithmformatrixmultiplicationaswelearnedinsection wecanmultiplynnmatricesseriallyintime nlg usingstrassen sdivide conquerstrategy whichmotivatesustolookatmultithreadingsuchanalgorithm webegin aswedidinsection withmultithreadingasimplerdivide conqueralgorithm recallfrompage thatthesquare matrix recursiveproce dure whichmultipliestwonnmatricesaandbtoproducethennmatrixc reliesonpartitioningeachofthethreematricesintofourn submatrices ada bdb cdc wecanwritethematrixproductasc tomultiplytwonnmatrices weperformeightmultiplicationsofn matricesandoneadditionofnnmatrices thefollowingpseudocodeimplements chapter multithreadedalgorithmsthisdivide conquerstrategyusingnestedparallelism unlikethesquare matrix recursiveprocedureonwhichitisbased matrix recursivetakestheoutputmatrixasaparametertoavoidallocatingmatricesunnecessarily matrix recursive nda rows ifn elselettbeanewnnmatrix partitiona andtinton submatricesa andt respectively spawnp matrix recursive spawnp matrix recursive spawnp matrix recursive spawnp matrix recursive spawnp matrix recursive spawnp matrix recursive spawnp matrix recursive matrix recursive sync parallelforid ton parallelforjd ton cijdcijctijline handlesthebasecase wherewearemultiplying matrices wehandletherecursivecaseinlines weallocateatemporarymatrixtinline andline partitionseachofthematricesa andtinton submatrices aswithsquare matrix recursiveonpage weglossovertheminorissueofhowtouseindexcalculationstorepresentsubmatrixsections ofamatrix therecursivecallinline setsthesubmatrixc tothesubmatrixproducta sothatc equalsthe rstofthetwotermsthatformitssuminequation similarly lines setc andc tothe rstofthetwotermsthatequaltheirsumsinequation setsthesubmatrixt tothesubmatrixproducta sothatt equalsthesecondofthetwotermsthatformc ssum lines sett andt tothesecondofthetwotermsthatformthesumsofc andc respectively rstsevenrecursivecallsarespawned andthelastonerunsinthemainstrand thesyncstatementinline ensuresthatallthesubmatrixproductsinlines havebeencomputed multithreadedmatrixmultiplication afterwhichweaddtheproductsfromtintocinusingthedoublynestedparallelforloopsinlines rstanalyzetheworkm ofthep matrix recursiveprocedure echoingtheserialrunning timeanalysisofitsprogenitorsquare matrix recursive intherecursivecase wepartitionin performeightrecursivemultiplicationsofn matrices nishupwiththe workfromaddingtwonnmatrices therecurrencefortheworkm ism bycase ofthemastertheorem inotherwords theworkofourmultithreadedal gorithmisasymptoticallythesameastherunningtimeoftheproceduresquare matrix multiplyinsection withitstriplynestedloops todeterminethespanm ofp matrix recursive rstobservethatthespanforpartitioningis whichisdominatedbythe lgn spanofthedoublynestedparallelforloopsinlines becausetheeightparallelrecursivecallsallexecuteonmatricesofthesamesize themaximumspanforanyrecursivecallisjustthespanofanyone hence therecurrenceforthespanm ofp matrix recursiveism lgn thisrecurrencedoesnotfallunderanyofthecasesofthemastertheorem butitdoesmeettheconditionofexercise byexercise therefore solutiontorecurrence ism nowthatweknowtheworkandspanofp matrix recursive wecancomputeitsparallelismasm whichisveryhigh multithreadingstrassen smethodtomultithreadstrassen salgorithm wefollowthesamegeneraloutlineasonpage onlyusingnestedparallelism dividetheinputmatricesaandbandoutputmatrixcinton sub matrices asinequation thissteptakes workandspanbyindexcalculation matricess eachofwhichisn andisthesumordifferenceoftwomatricescreatedinstep wecancreateall matriceswith workand lgn spanbyusingdoublynestedparallelforloops chapter multithreadedalgorithms usingthesubmatricescreatedinstep andthe matricescreatedinstep recursivelyspawnthecomputationofsevenn matrixproductsp computethedesiredsubmatricesc oftheresultmatrixcbyaddingandsubtractingvariouscombinationsofthepimatrices onceagainusingdoublynestedparallelforloops wecancomputeallfoursubmatriceswith workand lgn span toanalyzethisalgorithm rstobservethatsincetheserializationisthesameastheoriginalserialalgorithm theworkisjusttherunningtimeofthe serialization namely nlg asforp matrix recursive wecandevisearecurrenceforthespan inthiscase sevenrecursivecallsexe cuteinparallel butsincetheyalloperateonmatricesofthesamesize weob tainthesamerecurrence aswedidforp matrix recursive whichhassolution theparallelismofmultithreadedstrassen smethodis nlg whichishigh thoughslightlylessthantheparallelismofp matrix recursive exercises drawthecomputationdagforcomputingp matrix multiplyon matrices labelinghowtheverticesinyourdiagramcorrespondtostrandsintheexecutionofthealgorithm usetheconventionthatspawnandcalledgespointdownward continuationedgespointhorizontallytotheright andreturnedges pointupward assumingthateachstrandtakesunittime analyzethework span andparallelismofthiscomputation repeatexercise forp matrix recursive givepseudocodeforamultithreadedalgorithmthatmultipliestwonnmatriceswithwork butspanonly lgn analyzeyouralgorithm givepseudocodeforanef cientmultithreadedalgorithmthatmultipliesapqmatrixbyaqrmatrix youralgorithmshouldbehighlyparallelevenifanyofp andrare analyzeyouralgorithm multithreadedmergesort givepseudocodeforanef cientmultithreadedalgorithmthattransposesannnmatrixinplacebyusingdivide conquertodividethematrixrecursivelyinto fourn submatrices analyzeyouralgorithm givepseudocodeforanef cientmultithreadedimplementationofthefloyd warshallalgorithm seesection whichcomputesshortestpathsbetweenall pairsofverticesinanedge weightedgraph analyzeyouralgorithm multithreadedmergesortwe rstsawserialmergesortinsection andinsection weanalyzedits runningtimeandshowedittobe nlgn becausemergesortalreadyusesthedivide conquerparadigm itseemslikeaterri ccandidateformultithreading usingnestedparallelism wecaneasilymodifythepseudocodesothatthe rst recursivecallisspawned merge sort ifp qdb pcr spawnmerge sort merge sort sync merge likeitsserialcounterpart merge sort sortsthesubarraya afterthetworecursivesubroutinesinlines havecompleted whichisensuredbythe syncstatementinline merge sort callsthesamemergeprocedureasonpage letusanalyzemerge sort todoso rstneedtoanalyzemerge callthatitsserialrunningtimetomergenelementsis becausemergeisserial bothitsworkanditsspanare thefollowingrecurrencecharac terizestheworkms ofmerge sort onnelements nlgn chapter multithreadedalgorithms mergemergecopyp atxxxx xxxxfigure theideabehindthemultithreadedmergingoftwosortedsubarrayst andt intothesubarraya lettingxdt bethemedianoft andq betheplaceint suchthatxwouldfallbetweent andt everyelementinsubarrayst andt lightlyshaded islessthanorequaltox andeveryelementinthesubarrayst andt heavilyshaded isatleastx tomerge wecomputetheindexq wherexbelongsina copyxintoa andthenrecursivelymerget witht intoa andt witht intoa whichisthesameastheserialrunningtimeofmergesort sincethetworecursivecallsofmerge sort canruninparallel thespanms isgivenbytherecurrencems dms theparallelismofmerge sort comestoms lgn whichisanunimpressiveamountofparallelism tosort millionelements itmightachievelinearspeeduponafewprocessors butitwouldnot scaleupeffectivelytohundredsofprocessors youprobablyhavealready guredoutwheretheparallelismbottleneckisinthismultithreadedmergesort theserialmergeprocedure althoughmergingmightinitiallyseemtobeinherentlyserial wecan infact fashionamultithreadedversionofitbyusingnestedparallelism ourdivide conquerstrategyformultithreadedmerging whichisillus tratedinfigure operatesonsubarraysofanarrayt supposethatwearemergingthetwosortedsubarrayst oflengthn andt oflengthn intoanothersubarraya oflengthn withoutlossofgenerality wemakethesim plifyingassumptionthatn rst ndthemiddleelementxdt ofthesubarrayt whereq becausethesubarrayissorted xisamedianoft everyelementint isnomorethanx andeveryel ementint isnolessthanx wethenusebinarysearchto ndthe multithreadedmergesort indexq inthesubarrayt sothatthesubarraywouldstillbesortedifweinsertedxbetweent andt wenextmergetheoriginalsubarrayst andt intoa asfollows setq copyxintoa recursivelymerget witht andplacetheresultintothesubarraya recursivelymerget witht andplacetheresultintothesubarraya whenwecomputeq thequantityq isthenumberofelementsinthesubarrayt andthequantityq isthenumberofelementsinthesubarrayt theirsumisthenumberofelementsthatendupbeforexinthesubarraya thebasecaseoccurswhenn inwhichcasewehavenoworktodotomergethetwoemptysubarrays sincewehaveassumedthatthesub arrayt isatleastaslongast thatis wecancheckforthebasecasebyjustcheckingwhethern wemustalsoensurethattherecursionproperlyhandlesthecasewhenonlyoneofthetwosubarraysisempty byourassumptionthatn mustbethesubarrayt sputtheseideasintopseudocode westartwiththebinarysearch whichweexpressserially theprocedurebinary takesakeyxandasubarrayt anditreturnsoneofthefollowing ift risempty thenitreturnstheindexp ifxt andhencelessthanorequaltoalltheelementsoft thenitreturnstheindexp ifx thenitreturnsthelargestindexqintherangep qrc suchthatt hereisthepseudocode binary lowdp highdmax whilelow middb lowchigh ifxt mid highdmid elselowdmidc returnhigh chapter multithreadedalgorithmsthecallbinary takes lgn serialtimeintheworstcase wherendrpc isthesizeofthesubarrayonwhichitruns seeexer cise sincebinary searchisaserialprocedure itsworst caseworkandspanareboth lgn wearenowpreparedtowritepseudocodeforthemultithreadedmergingpro cedureitself likethemergeprocedureonpage thep mergeprocedureassumesthatthetwosubarraystobemergedliewithinthesamearray likemerge however mergedoesnotassumethatthetwosubarraystobemergedareadjacentwithinthearray thatis mergedoesnotrequirethatp anotherdifferencebetweenmergeandp mergeisthatp mergetakesasanargumentanoutputsubarrayaintowhichthemergedval uesshouldbestored thecallp merge mergesthesortedsubarrayst andt intothesubarraya wherer andisnotprovidedasaninput merge ifn ensurethatn exchangep withp exchanger withr exchangen withn ifn bothempty return elseq dbinary spawnp merge merge syncthep mergeprocedureworksasfollows lines computethelengthsn andn ofthesubarrayst andt respectively lines forcetheassumptionthatn testsforthebasecase wherethesubarrayt isempty andhencesoist inwhichcasewesim plyreturn lines implementthedivide conquerstrategy com putesthemidpointoft andline ndsthepointq int suchthatallelementsint arelessthant whichcorrespondstox andalltheelementsint areatleastaslargeast com multithreadedmergesort putestheindexq oftheelementthatdividestheoutputsubarraya intoa anda andthenline copiest directlyintoa werecurseusingnestedparallelism spawnsthe rstsubproblem whileline callsthesecondsubprobleminparallel thesyncstatementinline ensuresthatthesubproblemshavecompletedbeforetheprocedurereturns everyprocedureimplicitlyexecutesasyncbeforereturning wecouldhaveomittedthesyncstatementinline butincludingitisgoodcodingpractice thereissomeclevernessinthecodingtoensurethatwhenthesubarrayt isempty thecodeoperatescorrectly thewayitworksisthatoneachrecursivecall amedianelementoft isplacedintotheoutputsubarray untilt itself nallybecomesempty triggeringthebasecase analysisofmultithreadedmergingwe rstderivearecurrenceforthespanpm ofp merge wherethetwosubarrayscontainatotalofndn elements becausethespawninline andthecallinline operatelogicallyinparallel weneedexamineonlythecostlierof thetwocalls thekeyistounderstandthatintheworstcase themaximumnumber ofelementsineitheroftherecursivecallscanbeatmost whichweseeasfollows becauselines ensurethatn itfollowsthatn intheworstcase oneofthetworecursivecallsmergesbn celementsoft withalln elementsoft andhencethenumberofelementsinvolvedinthecallisbn ccn addinginthe lgn costofthecalltobinary searchinline weobtainthefollowingrecurrencefortheworst casespan dpm lgn forthebasecase thespanis sincelines executeinconstanttime thisrecurrencedoesnotfallunderanyofthecasesofthemastertheorem butit meetstheconditionofexercise therefore thesolutiontorecurrence ispm wenowanalyzetheworkpm ofp mergeonnelements whichturnsouttobe sinceeachofthenelementsmustbecopiedfromarrayttoarraya wehavepm itremainsonlytoshowthatpm weshall rstderivearecurrencefortheworst casework thebinarysearchinline costs lgn intheworstcase whichdominatestheotherworkoutside chapter multithreadedalgorithmsoftherecursivecalls fortherecursivecalls observethatalthoughtherecursivecallsinlines mightmergedifferentnumbersofelements togetherthe tworecursivecallsmergeatmostnelements actuallyn elements sincet doesnotparticipateineitherrecursivecall moreover aswesawinanalyzingthe span arecursivecalloperatesonatmost elements wethereforeobtaintherecurrencepm dpm cpm lgn liesintherange andwhereweunderstandthattheactualvalueof mayvaryforeachlevelofrecursion weprovethatrecurrence hassolutionpm viathesubstitutionmethod assumethatpm lgnforsomepositiveconstantsc andc substitutinggivesuspm lgn clg lgn clgnclg clgn lgn lgn lgnclg lgn lgn sincewecanchoosec largeenoughthatc lgnclg dominatesthe lgn furthermore wecanchoosec largeenoughtosatisfythebaseconditionsoftherecurrence sincetheworkpm ofp mergeisboth ando wehavepm theparallelismofp mergeispm multithreadedmergesortnowthatwehaveanicelyparallelizedmultithreadedmergingprocedure wecanincorporateitintoamultithreadedmergesort thisversionofmergesortissimilar tothemerge sort procedurewesawearlier butunlikemerge sort ittakesasanargumentanoutputsubarrayb whichwillholdthesortedresult inpar ticular thecallp merge sort sortstheelementsina randstorestheminb scr multithreadedmergesort merge sort ndrpc ifn sda elselett nbeanewarray qdb pcr dqpc spawnp merge sort merge sort sync merge afterline computesthenumbernofelementsintheinputsubarraya lines handlethebasecasewhenthearrayhasonly lines setupfortherecursivespawninline andcallinline whichoperateinparallel inparticular allocatesatemporaryarraytwithnelementstostoretheresultsoftherecursivemergesorting calculatestheindexqofa rtodividetheelementsintothetwosubarraysa qanda rthatwillbesortedrecursively andline goesontocomputethenumberq ofelementsinthe rstsubarraya whichline usestodeterminethestartingindexintofwheretostorethesortedresultofa atthatpoint thespawnandrecursivecallaremade followedbythesyncinline whichforcestheproceduretowaituntilthespawnedprocedureisdone finally callsp mergetomergethesortedsubarrays nowint andt intotheoutputsubarrayb scr analysisofmultithreadedmergesortwestartbyanalyzingtheworkpms ofp merge sort whichisconsider ablyeasierthananalyzingtheworkofp merge indeed theworkisgivenbytherecurrencepms pms cpm pms thisrecurrenceisthesameastherecurrence forordinarymerge sortfromsection andhassolutionpms nlgn bycase ofthemastertheorem wenowderiveandanalyzearecurrencefortheworst casespanpms causethetworecursivecallstop merge sortonlines operatelogicallyinparallel wecanignoreoneofthem obtainingtherecurrence chapter multithreadedalgorithmspms dpms cpm dpms asforrecurrence themastertheoremdoesnotapplytorecurrence butexercise thesolutionispms andsothespanofp merge sortis parallelmerginggivesp merge sortasigni cantparallelismadvantageovermerge sort recallthattheparallelismofmerge sort whichcallsthese rialmergeprocedure isonly lgn forp merge sort theparallelismispms pms nlgn whichismuchbetterbothintheoryandinpractice agoodimplementationinpracticewouldsacri cesomeparallelismbycoarseningthebasecaseinordertoreducetheconstantshiddenbytheasymptoticnotation thestraightforwardwaytocoarsenthebasecaseistoswitchtoanordinaryserialsort perhapsquicksort whenthesizeofthearrayissuf cientlysmall exercises explainhowtocoarsenthebasecaseofp merge insteadof ndingamedianelementinthelargersubarray asp mergedoes con sideravariantthat ndsamedianelementofalltheelementsinthetwosorted subarraysusingtheresultofexercise givepseudocodeforanef cient multithreadedmergingprocedurethatusesthismedian ndingprocedure ana lyzeyouralgorithm giveanef cientmultithreadedalgorithmforpartitioninganarrayaroundapivot asisdonebythepartitionprocedureonpage youneednotpartitionthear rayinplace makeyouralgorithmasparallelaspossible analyzeyouralgorithm hint youmayneedanauxiliaryarrayandmayneedtomakemorethanonepassovertheinputelements giveamultithreadedversionofrecursive fftonpage makeyourimple mentationasparallelaspossible analyzeyouralgorithm problemsforchapter giveamultithreadedversionofrandomized selectonpage makeyourimplementationasparallelaspossible analyzeyouralgorithm hint usethepartitioningalgorithmfromexercise showhowtomultithreadselectfromsection makeyourimplementationasparallelaspossible analyzeyouralgorithm problems implementingparallelloopsusingnestedparallelism considerthefollowingmultithreadedalgorithmforperformingpairwiseaddition onn elementarraysa nandb storingthesumsinc sum arrays parallelforid toa ida icb rewritetheparallelloopinsum arraysusingnestedparallelism spawnandsync inthemannerofmat vec loop analyzetheparallelismofyourimplementation considerthefollowingalternativeimplementationoftheparallelloop whichcontainsavaluegrain sizetobespeci sum arrays nda grain sized tobedetermined rddn grain sizee forkd tor spawnadd subarray kgrain sizec min grain syncadd subarray forkditoj kda kcb chapter multithreadedalgorithmsb supposethatwesetgrain sized whatistheparallelismofthisimplemen tation giveaformulaforthespanofsum arrays intermsofnandgrain derivethebestvalueforgrain sizetomaximizeparallelism savingtemporaryspaceinmatrixmultiplicationthep matrix recursiveprocedurehasthedisadvantagethatitmustallocateatemporarymatrixtofsizenn whichcanadverselyaffecttheconstantshiddenbythe notation thep matrix recursivepro ceduredoeshavehighparallelism however forexample ignoringtheconstants inthe notation theparallelismformultiplying matricescomestoapproximately sincelg mostparallelcomputershavefarfewerthan millionprocessors describearecursivemultithreadedalgorithmthateliminatestheneedforthetemporarymatrixtatthecostofincreasingthespanto hint com putecdccabfollowingthegeneralstrategyofp matrix recursive butinitializecinparallelandinsertasyncinajudiciouslycho senlocation giveandsolverecurrencesfortheworkandspanofyourimplementation analyzetheparallelismofyourimplementation ignoringtheconstantsinthe notation estimatetheparallelismon matrices comparewiththeparallelismofp matrix recursive multithreadedmatrixalgorithmsa parallelizethelu decompositionprocedureonpage bygivingpseu docodeforamultithreadedversionofthisalgorithm makeyourimplementa tionasparallelaspossible andanalyzeitswork span andparallelism dothesameforlup decompositiononpage dothesameforlup solveonpage dothesameforamultithreadedalgorithmbasedonequation forin vertingasymmetricpositive nitematrix problemsforchapter multithreadingreductionsandpre xcomputationsa reductionofanarrayx isanassociativeoperator isthevalueydx thefollowingprocedurecomputesthe reductionofasubarrayx jserially reduce ydx forkdic toj ydy returnya usenestedparallelismtoimplementamultithreadedalgorithmp reduce whichperformsthesamefunctionwith workand lgn span analyzeyouralgorithm arelatedproblemisthatofcomputinga pre xcomputation sometimescalleda scan onanarrayx isonceagainanassociativeop erator scanproducesthearrayy ngivenbyy ndx thatis allpre xesofthearrayx summed usingthe operator thefollowingserialprocedurescanperformsa pre xcomputation scan ndx lety nbeanewarray forid ton idy returnyunfortunately multithreadingscanisnotstraightforward forexample changingtheforlooptoaparallelforloopwouldcreateraces sinceeachiterationoftheloopbodydependsonthepreviousiteration thefollowingprocedurep scan performsthe pre xcomputationinparallel albeitinef ciently chapter multithreadedalgorithmsp scan ndx lety nbeanewarray scan aux returnyp scan aux parallelforlditoj ldp reduce analyzethework span andparallelismofp scan byusingnestedparallelism wecanobtainamoreef cient pre xcomputa tion scan ndx lety nbeanewarray scan aux returnyp scan aux ifi idx elsekdb icj spawnp scan aux scan aux sync parallelforldkc toj ldy arguethatp scan iscorrect andanalyzeitswork span andparallelism wecanimproveonbothp scan andp scan byperformingthe pre xcomputationintwodistinctpassesoverthedata onthe rstpass wegatherthetermsforvariouscontiguoussubarraysofxintoatemporaryarrayt andonthesecondpassweusethetermsinttocomputethe nalresulty thefollowingpseudocodeimplementsthisstrategy butcertainexpressionshavebeenomitted problemsforchapter scan ndx lety nandt nbenewarrays ifn scan scan returnyp scan ifi returnx kdb icj kdspawnp scan rightdp scan sync return llintheblankp scan ifi kdb icj spawnp scan llintheblank scan llintheblank syncd fillinthethreemissingexpressionsinline ofp scan upandlines ofp scan arguethatwithexpressionsyousupplied scan iscorrect hint provethatthevaluepassedtop scan satis esdx analyzethework span andparallelismofp scan multithreadingasimplestencilcalculationcomputationalscienceisrepletewithalgorithmsthatrequiretheentriesofanarray tobe lledinwithvaluesthatdependonthevaluesofcertainalreadycomputed neighboringentries alongwithotherinformationthatdoesnotchangeoverthe courseofthecomputation thepatternofneighboringentriesdoesnotchange duringthecomputationandiscalledastencil forexample presents chapter multithreadedalgorithmsastencilalgorithmtocomputealongestcommonsubsequence wherethevalueinentryc jdependsonlyonthevaluesinc andc aswellastheelementsxiandyjwithinthetwosequencesgivenasinputs theinputsequencesare xed butthealgorithm llsinthetwo dimensionalarraycsothatitcomputesentryc jaftercomputingallthreeentriesc andc inthisproblem weexaminehowtousenestedparallelismtomultithreadasimplestencilcalculationonannnarrayainwhich ofthevaluesina thevalueplacedintoentrya jdependsonlyonvaluesina wherei iandj andofcourse iorj inotherwords thevalueinanentrydependsonlyonvaluesinentriesthatareaboveitand ortoitsleft along withstaticinformationoutsideofthearray furthermore weassumethroughout thisproblemthatoncewehave lledintheentriesuponwhicha jdepends wecan llina jin asinthelcs lengthprocedureofsection wecanpartitionthennarrayaintofourn subarraysasfollows ada observenowthatwecan llinsubarraya recursively sinceitdoesnotdependontheentriesoftheotherthreesubarrays oncea iscomplete wecancontinueto llina anda recursivelyinparallel becausealthoughtheybothdependona theydonotdependoneachother finally wecan llina recursively givemultithreadedpseudocodethatperformsthissimplestencilcalculationusingadivide conqueralgorithmsimple stencilbasedonthedecom andthediscussionabove don tworryaboutthedetailsofthebasecase whichdependsonthespeci cstencil giveandsolverecurrences fortheworkandspanofthisalgorithmintermsofn whatistheparallelism modifyyoursolutiontopart todivideannnarrayintoninen subarrays againrecursingwithasmuchparallelismaspossible analyzethisalgorithm howmuchmoreorlessparallelismdoesthisalgorithmhavecom paredwiththealgorithmfrompart generalizeyoursolutionstoparts asfollows chooseanintegerb divideannnarrayintob subarrays eachofsizen recursingwithasmuchparallelismaspossible intermsofnandb whatarethework span andparallelismofyouralgorithm arguethat usingthisapproach parallelismmustbeo foranychoiceofb hint forthislastargument showthattheexponentofnintheparallelismisstrictlylessthan foranychoiceofb notesforchapter givepseudocodeforamultithreadedalgorithmforthissimplestencilcalcu lationthatachieves lgn parallelism argueusingnotionsofworkandspanthattheproblem infact inherentparallelism asitturnsout thedivide conquernatureofourmultithreadedpseudocodedoesnotletus achievethismaximalparallelism randomizedmultithreadedalgorithmsjustaswithordinaryserialalgorithms wesometimeswanttoimplementrandom izedmultithreadedalgorithms thisproblemexploreshowtoadaptthevarious performancemeasuresinordertohandletheexpectedbehaviorofsuchalgorithms italsoasksyoutodesignandanalyzeamultithreadedalgorithmforrandomized quicksort explainhowtomodifytheworklaw spanlaw andgreedysched ulerbound toworkwithexpectationswhentp andt areallran domvariables considerarandomizedmultithreadedalgorithmforwhich ofthetimewehavet andt butfor ofthetimewehavet arguethatthespeedupofarandomizedmultithreadedalgo rithmshouldbede nedase ratherthane arguethattheparallelismofarandomizedmultithreadedalgorithmshouldbede nedastheratioe multithreadtherandomized quicksortalgorithmonpage byusingnestedparallelism donotparallelizerandomized partition givethepseudocodeforyourp randomized quicksortalgorithm analyzeyourmultithreadedalgorithmforrandomizedquicksort hint viewtheanalysisofrandomized selectonpage chapternotesparallelcomputers modelsforparallelcomputers andalgorithmicmodelsforpar allelprogramminghavebeenaroundinvariousformsforyears prioreditionsof thisbookincludedmaterialonsortingnetworksandthepram parallelrandom accessmachine model thedata parallelmodel isanotherpopularal gorithmicprogrammingmodel whichfeaturesoperationsonvectorsandmatrices asprimitives chapter multithreadedalgorithmsgraham andbrent showedthatthereexistschedulersachievingtheboundoftheorem eager zahorjan andlazowska showedthatany greedyschedulerachievesthisboundandproposedthemethodologyofusingwork andspan althoughnotbythosenames toanalyzeparallelalgorithms blelloch developedanalgorithmicprogrammingmodelbasedonworkandspan hecalledthe depth ofthecomputation fordata parallelprogramming blumofe andleiserson gaveadistributedschedulingalgorithmfordynamicmulti threadingbasedonrandomized stealing andshowedthatitachievesthebounde tpt pco arora blumofe andplaxton andblelloch gibbons andmatias alsoprovidedprovablygoodalgorithmsforscheduling dynamicmultithreadedcomputations themultithreadedpseudocodeandprogrammingmodelwereheavilyin uencedbythecilk projectatmitandthecilk extensionstoc dis tributedbycilkarts inc manyofthemultithreadedalgorithmsinthischapter appearedinunpublishedlecturenotesbyc leisersonandh prokopandhave beenimplementedincilkorcilk themultithreadedmerge sortingalgorithm wasinspiredbyanalgorithmofakl thenotionofsequentialconsistencyisduetolamport matrixoperationsbecauseoperationsonmatriceslieattheheartofscienti ccomputing ciental gorithmsforworkingwithmatriceshavemanypracticalapplications thischapter focusesonhowtomultiplymatricesandsolvesetsofsimultaneouslinearequa tions appendixdreviewsthebasicsofmatrices showshowtosolveasetoflinearequationsusinglupdecomposi tions exploresthecloserelationshipbetweenmultiplyingand invertingmatrices finally discussestheimportantclassofsymmetric positive nitematricesandshowshowwecanusethemto ndaleast squares solutiontoanoverdeterminedsetoflinearequations oneimportantissuethatarisesinpracticeisnumericalstability duetothelimitedprecisionof oating pointrepresentationsinactualcomputers offerrorsinnumericalcomputationsmaybecomeampli edoverthecourseofacom putation leadingtoincorrectresults wecallsuchcomputationsnumericallyun stable althoughweshallbrie yconsidernumericalstabilityonoccasion wedonotfocusonitinthischapter wereferyoutotheexcellentbookbygolubandvanloan forathoroughdiscussionofstabilityissues solvingsystemsoflinearequationsnumerousapplicationsneedtosolvesetsofsimultaneouslinearequations canformulatealinearsystemasamatrixequationinwhicheachmatrixorvector elementbelongstoa eld typicallytherealnumbersr thissectiondiscusseshowtosolveasystemoflinearequationsusingamethodcalledlupdecomposition westartwithasetoflinearequationsinnunknownsx chapter matrixoperationsa cca nxndb cca nxndb ccannxndbn asolutiontotheequations isasetofvaluesforx xnthatsatisfyalloftheequationssimultaneously inthissection wetreatonlythecaseinwhich thereareexactlynequationsinnunknowns wecanconvenientlyrewriteequations asthematrix vectorequation annx xnd bnor equivalently lettingad aij andbd asaxdb ifaisnonsingular itpossessesaninversea andxda isthesolutionvector wecanprovethatxistheuniquesolutiontoequation asfollows iftherearetwosolutions xandx thenaxdax dband lettingidenoteanidentitymatrix xdixd xda inthissection weshallbeconcernedpredominantlywiththecaseinwhichaisnonsingularor equivalently bytheoremd therankofaisequaltothenumbernofunknowns thereareotherpossibilities however whichmeritabriefdiscussion ifthenumberofequationsislessthanthenumbernofunknowns moregenerally iftherankofaislessthann thenthesystemisunderdeter mined anunderdeterminedsystemtypicallyhasin nitelymanysolutions thoughitmayhavenosolutionsatalliftheequationsareinconsistent ifthe numberofequationsexceedsthenumbernofunknowns thesystemisoverdeter mined andtheremaynotexistanysolutions addressestheimportant solvingsystemsoflinearequations problemof ndinggoodapproximatesolutionstooverdeterminedsystemsoflinearequations letusreturntoourproblemofsolvingthesystemaxdbofnequationsinnunknowns wecouldcomputea andthen usingequation multiplybbya yieldingxda thisapproachsuffersinpracticefromnumericalinstability fortunately anotherapproach lupdecomposition isnumerically stableandhasthefurtheradvantageofbeingfasterinpractice overviewoflupdecompositiontheideabehindlupdecompositionisto ndthreennmatricesl andpsuchthatpadlu wherelisaunitlower triangularmatrix uisanupper triangularmatrix andpisapermutationmatrix wecallmatricesl andpsatisfyingequation anlupdecompositionofthematrixa weshallshowthateverynonsingularmatrixapossessessuchadecomposition computinganlupdecompositionforthematrixahastheadvantagethatwecanmoreeasilysolvelinearsystemswhentheyaretriangular asisthecaseforbothmatriceslandu oncewehavefoundanlupdecompositionfora wecansolveequation axdb bysolvingonlytriangularlinearsystems asfollows multiplyingbothsidesofaxdbbypyieldstheequivalentequationpaxdpb byexercised amountstopermutingtheequations usingourdecomposition weobtainluxdpb wecannowsolvethisequationbysolvingtwotriangularlinearsystems letusde neydux wherexisthedesiredsolutionvector wesolvethelower triangularsystemlydpb fortheunknownvectorybyamethodcalled forwardsubstitution havingsolvedfory wethensolvetheupper triangularsystemuxdy chapter matrixoperationsfortheunknownxbyamethodcalled backsubstitution becausethepermu tationmatrixpisinvertible exercised multiplyingbothsidesofequa tion byp givesp padp sothatadp hence thevectorxisoursolutiontoaxdb axdp lux byequation byequation byequation ournextstepistoshowhowforwardandbacksubstitutionworkandthenattacktheproblemofcomputingthelupdecompositionitself forwardandbacksubstitutionforwardsubstitutioncansolvethelower triangularsystem givenl andb forconvenience werepresentthepermutationpcompactlybyanarray forid theentryiindicatesthatpi andpijd forj pahasai jinrowiandcolumnj andpbhasbiasitsithelement sincelisunitlower triangular wecanrewriteequa tion asy cln cln ccyndbn rstequationtellsusthaty knowingthevalueofy wecansubstituteitintothesecondequation yieldingy wecansubstitutebothy andy intothethirdequation obtainingy ingeneral wesubstitutey intotheithequationtosolveforyi solvingsystemsoflinearequations yidbii xjd lijyj havingsolvedfory wesolveforxinequation usingbacksubstitution whichissimilartoforwardsubstitution wesolvethenthequation rstandworkbackwardtothe rstequation likeforwardsubstitution thisprocessruns sinceuisupper triangular wecanrewritethesystem asu ccu nxndy ccu nxndy cun cun nxndyn cun nxndyn nxndyn wecansolveforxn successivelyasfollows xndyn nxn cun nxn ingeneral xid yinxjdic uijxj uii givenp andb theprocedurelup solvesolvesforxbycombiningforwardandbacksubstitution thepseudocodeassumesthatthedimensionnap pearsintheattributel rowsandthatthepermutationmatrixpisrepresentedbythearray lup ndl rows letxbeanewvectoroflengthn forid ton yidbipi lijyj foridndownto xidyipnjdic uijxj uii returnx chapter matrixoperationsprocedurelup solvesolvesforyusingforwardsubstitutioninlines andthenitsolvesforxusingbackwardsubstitutioninlines sincethesummationwithineachoftheforloopsincludesanimplicitloop therunningtimeis asanexampleofthesemethods considerthesystemoflinearequationsde nedby wheread andwewishtosolvefortheunknownx thelupdecompositionisld youmightwanttoverifythatpadlu usingforwardsubstitution wesolvelydpbfory obtainingyd bycomputing rsty theny nallyy usingbacksubstitution wesolveuxdyforx solvingsystemsoflinearequations therebyobtainingthedesiredanswerxd bycomputing rstx thenx nallyx computinganludecompositionwehavenowshownthatifwecancreateanlupdecompositionforanonsingularmatrixa thenforwardandbacksubstitutioncansolvethesystemaxdboflinearequations nowweshowhowtoef cientlycomputeanlupdecomposition fora westartwiththecaseinwhichaisannnnonsingularmatrixandpisabsent equivalently pdin inthiscase wefactoradlu wecallthetwomatriceslanduanludecompositionofa weuseaprocessknownasgaussianeliminationtocreateanludecomposi tion westartbysubtractingmultiplesofthe rstequationfromtheotherequations inordertoremovethe rstvariablefromthoseequations wesubtractmul tiplesofthesecondequationfromthethirdandsubsequentequationssothatnow rstandsecondvariablesareremovedfromthem wecontinuethisprocess untilthesystemthatremainshasanupper triangularform infact itisthema trixu thematrixlismadeupoftherowmultipliersthatcausevariablestobeeliminated ouralgorithmtoimplementthisstrategyisrecursive wewishtoconstructanludecompositionforannnnonsingularmatrixa ifnd thenwearedone sincewecanchooseldi anduda forn webreakaintofourparts annda whereisacolumn vector wtisarow vector anda isan matrix usingmatrixalgebra verifytheequationsby chapter matrixoperationssimplymultiplyingthrough wecanfactoraasada sinthe rstandsecondmatricesofequation arerowandcol umn vectors respectively thetermt formedbytakingtheouterproductofandwanddividingeachelementoftheresultbya isan matrix whichconformsinsizetothematrixa fromwhichitissubtracted theresulting matrixa iscalledtheschurcomplementofawithrespecttoa weclaimthatifaisnonsingular thentheschurcomplementisnonsingular supposethattheschurcomplement whichis issingular thenbytheoremd ithasrowrankstrictlylessthann becausethebottomn entriesinthe rstcolumnofthematrixa areall thebottomn rowsofthismatrixmusthaverowrankstrictlylessthann therowrankoftheentirematrix therefore isstrictlylessthann applyingexercised toequation ahasrankstrictlylessthann andfromtheoremd wederivethecontradictionthataissingular becausetheschurcomplementisnonsingular wecannowrecursively ndanludecompositionforit letussaythata wherel isunitlower triangularandu isupper triangular usingmatrixalgebra wehavead dlu therebyprovidingourludecomposition notethatbecausel isunitlower triangular soisl andbecauseu isupper triangular soisu solvingsystemsoflinearequations ofcourse ifa thismethoddoesn twork becauseitdividesby italsodoesn tworkiftheupperleftmostentryoftheschurcomplementa sincewedividebyitinthenextstepoftherecursion theelementsbywhichwedivideduringludecompositionarecalledpivots andtheyoccupythediagonalelementsofthematrixu thereasonweincludeapermutationmatrixpduringlupdecompositionisthatitallowsustoavoiddividingby whenweusepermutationstoavoiddivisionby orbysmallnumbers whichwouldcontributetonumericalinstability wearepivoting animportantclassofmatricesforwhichludecompositionalwaysworkscor rectlyistheclassofsymmetricpositive nitematrices suchmatricesrequire nopivoting andthuswecanemploytherecursivestrategyoutlinedabovewith outfearofdividingby weshallprovethisresult aswellasseveralothers insection ourcodeforludecompositionofamatrixafollowstherecursivestrategy ceptthataniterationloopreplacestherecursion thistransformationisastandard optimizationfora recursive procedure onewhoselastoperationisarecur sivecalltoitself seeproblem itassumesthattheattributea rowsgivesthedimensionofa weinitializethematrixuwith sbelowthediagonalandmatrixlwith sonitsdiagonaland sabovethediagonal decomposition nda rows letlandubenewnnmatrices initializeuwith sbelowthediagonal initializelwith sonthediagonaland sabovethediagonal forkd ton ukkdakk foridkc ton likdaik ukk likholdsi ukidaki ukiholdswti foridkc ton forjdkc ton aijdaijlikukj returnlandutheouterforloopbeginninginline iteratesonceforeachrecursivestep withinthisloop determinesthepivottobeukkdakk theforloopinlines whichdoesnotexecutewhenkdn usestheandwtvectorstoupdatelandu determinestheelementsofthevector storingiinlik andline computestheelementsofthewtvector storingwtiinuki finally lines computetheelementsoftheschurcomplementandstorethembackintothema chapter matrixoperations alufigure theoperationoflu decomposition thematrixa theelementa intheblackcircleisthepivot theshadedcolumnisa andtheshadedrowiswt theelementsofucomputedthusfarareabovethehorizontalline andtheelementsoflaretotheleftoftheverticalline theschurcomplementmatrixa occupiesthelowerright wenowoperateontheschurcomplementmatrixproducedfrompart theelementa intheblackcircleisthepivot andtheshadedcolumnandrowarea andwt inthepartitioningoftheschurcomplement respectively linesdividethematrixintotheelementsofucomputedsofar theelementsoflcomputedsofar andthenewschurcomplement lowerright afterthenextstep thematrixaisfactored theelement inthenewschurcomplementbecomespartofuwhentherecursionterminates thefactorizationadlu trixa wedon tneedtodividebyakkinline becausewealreadydidsowhenwecomputedlikinline becauseline istriplynested decompositionrunsintime illustratestheoperationoflu decomposition itshowsastan dardoptimizationoftheprocedureinwhichwestorethesigni cantelementsoflanduinplaceinthematrixa thatis wecansetupacorrespondencebetweeneachelementaijandeitherlij ifi oruij ifij andupdatethema trixasothatitholdsbothlanduwhentheprocedureterminates toobtainthepseudocodeforthisoptimizationfromtheabovepseudocode justreplaceeachreferencetolorubya youcaneasilyverifythatthistransformationpreservescorrectness computinganlupdecompositiongenerally insolvingasystemoflinearequationsaxdb wemustpivotonoff diagonalelementsofatoavoiddividingby dividingby ofcourse bedisastrous butwealsowanttoavoiddividingbyasmallvalue evenifais solvingsystemsoflinearequations nonsingular becausenumericalinstabilitiescanresult wethereforetrytopivotonalargevalue themathematicsbehindlupdecompositionissimilartothatofludecom recallthatwearegivenannnnonsingularmatrixa andwewishto ndapermutationmatrixp aunitlower triangularmatrixl andanupper triangularmatrixusuchthatpadlu beforewepartitionthematrixa aswedidforludecomposition wemoveanonzeroelement sayak fromsomewhereinthe rstcolumntothe positionofthematrix fornumericalstability wechooseak astheelementinthe rstcolumnwiththegreatestabsolutevalue rstcolumncannotcontainonly forthenawouldbesingular becauseitsde terminantwouldbe bytheoremsd andd inordertopreservethesetofequations weexchangerow withrowk whichisequivalenttomultiplyingabyapermutationmatrixqontheleft exercised wecanwriteqaasqadak whered exceptthata replacesak wtd akn anda isan matrix sinceak wecannowperformmuchthesamelinearalgebraasforludecomposition butnowguaranteeingthat wedonotdivideby qadak aswesawforludecomposition ifaisnonsingular thentheschurcomple menta isnonsingular therefore wecanrecursively ndanlupdecompositionforit withunitlower triangularmatrixl upper triangularmatrixu andpermutationmatrixp suchthatp nepd whichisapermutationmatrix sinceitistheproductoftwopermutationmatrices exercised wenowhave chapter matrixoperationspad qad dlu yieldingthelupdecomposition becausel isunitlower triangular soisl andbecauseu isupper triangular soisu noticethatinthisderivation unliketheoneforludecomposition wemustmultiplyboththecolumnvectorak andtheschurcomplementa bythepermutationmatrixp hereisthepseudocodeforlupdecomposition lup decomposition nda rows nbeanewarray forid ton idi forkd ton foridkton ifjaikj pdjaikj ifp error singularmatrix exchangekwithk forid ton exchangeakiwithak foridkc ton aikdaik akk forjdkc ton aijdaijaikakj solvingsystemsoflinearequations likelu decomposition ourlup decompositionprocedurereplacestherecursionwithaniterationloop asanimprovementoveradirectimplemen tationoftherecursion wedynamicallymaintainthepermutationmatrixpasanarray whereidjmeansthattheithrowofpcontainsa incolumnj wealsoimplementthecodetocomputelandu inplace inthematrixa whentheprocedureterminates aijd lijifi uijifij illustrateshowlup decompositionfactorsamatrix lines initializethearraytorepresenttheidentitypermutation theouterforloopbeginninginline implementstherecursion eachtimethroughtheouterloop lines determinetheelementak kwithlargestabsolutevalueofthoseinthecurrent rstcolumn columnk ofthe nkc nkc matrixwhoselupdecompositionweare nding ifallelementsinthecurrent rstcolumnare zero lines reportthatthematrixissingular topivot weexchangek withkinline andexchangethekthandk throwsofainlines therebymakingthepivotelementakk theentirerowsareswappedbecauseinthederivationofthemethodabove notonlyisa multipliedbyp butsoisak finally theschurcomplementiscomputedbylines inmuchthesamewayasitiscomputedbylines oflu decomposition exceptthatheretheoperationiswrittentoworkinplace becauseofitstriplynestedloopstructure lup decompositionhasarun ningtimeof whichisthesameasthatoflu decomposition pivotingcostsusatmostaconstantfactorintime exercises solvetheequation byusingforwardsubstitution findanludecompositionofthematrix chapter matrixoperations palufigure theoperationoflup decomposition theinputmatrixawiththeidentitypermutationoftherowsontheleft rststepofthealgorithmdeterminesthattheelement intheblackcircleinthethirdrowisthepivotforthe rstcolumn rows areswappedandthepermutationisupdated theshadedcolumnandrowrepresentandwt thevectorisreplacedby andthelowerrightofthematrixisupdatedwiththeschurcomplement linesdividethematrixintothreeregions elementsofu elementsofl andelementsoftheschurcomplement lowerright thesecondstep thethirdstep nofurtherchangesoccuronthefourth nal thelupdecompositionpadlu invertingmatrices solvetheequation byusinganlupdecomposition describethelupdecompositionofadiagonalmatrix describethelupdecompositionofapermutationmatrixa andprovethatitisunique showthatforalln thereexistsasingularnnmatrixthathasanludecom inlu decomposition isitnecessarytoperformtheoutermostforloopitera tionwhenkdn howaboutinlup decomposition invertingmatricesalthoughinpracticewedonotgenerallyusematrixinversestosolvesystemsoflinearequations preferringinsteadtousemorenumericallystabletechniquessuch aslupdecomposition sometimesweneedtocomputeamatrixinverse inthis weshowhowtouselupdecompositiontocomputeamatrixinverse wealsoprovethatmatrixmultiplicationandcomputingtheinverseofamatrixareequivalentlyhardproblems inthat subjecttotechnicalconditions wecanuseanalgorithmforonetosolvetheotherinthesameasymptoticrunningtime wecanusestrassen salgorithm seesection formatrixmultiplication toinvertamatrix indeed strassen soriginalpaperwasmotivatedbytheproblem ofshowingthatasetofalinearequationscouldbesolvedmorequicklythanby theusualmethod chapter matrixoperationscomputingamatrixinversefromanlupdecompositionsupposethatwehaveanlupdecompositionofamatrixaintheformofthreematricesl andpsuchthatpadlu usinglup wecansolveanequationoftheformaxdbintime sincethelupdecompositiondependsonabutnotb wecanrunlup solveonasecondsetofequationsoftheformaxdb inadditionaltime ingeneral oncewehavethelupdecompositionofa wecansolve intime kversionsoftheequationaxdbthatdifferonlyinb wecanthinkoftheequationaxdin whichde nesthematrixx theinverseofa asasetofndistinctequationsoftheformaxdb tobeprecise letxidenotetheithcolumnofx andrecallthattheunitvectoreiistheithcolumnofin wecanthensolveequation forxbyusingthelupdecompositionforatosolveeachequationaxideiseparatelyforxi oncewehavethelupdecomposition wecancomputeeachofthencolumnsxiintime andsowecancomputexfromthelupdecom positionofaintime sincewecandeterminethelupdecompositionofaintime wecancomputetheinversea ofamatrixaintime matrixmultiplicationandmatrixinversionwenowshowthatthetheoreticalspeedupsobtainedformatrixmultiplicationtranslatetospeedupsformatrixinversion infact weprovesomethingstronger matrixinversionisequivalenttomatrixmultiplication inthefollowingsense ifm denotesthetimetomultiplytwonnmatrices thenwecaninvertanonsingularnnmatrixintimeo moreover ifi denotesthetimetoinvertanonsingularnnmatrix thenwecanmultiplytwonnmatricesintimeo weprovetheseresultsastwoseparatetheorems theorem multiplicationisnoharderthaninversion ifwecaninvertannnmatrixintimei wherei andi satis estheregularityconditioni thenwecanmultiplytwonnmatricesintimeo proofletaandbbennmatriceswhosematrixproductcwewishtocom pute wede nethe nmatrixdby invertingmatrices ddina inb theinverseofdisd dinaab inb andthuswecancomputetheproductabbytakingtheupperrightnnsubmatrixofd wecanconstructmatrixdin whichiso becauseweassumethati andwecaninvertdino bytheregularityconditiononi wethushavem notethati satis estheregularityconditionwheneveri nclgdn foranyconstantsc andd theproofthatmatrixinversionisnoharderthanmatrixmultiplicationreliesonsomepropertiesofsymmetricpositive nitematricesthatwewillprovein theorem inversionisnoharderthanmultiplication supposewecanmultiplytwonnrealmatricesintimem wherem andm satis esthetworegularityconditionsm nck foranykintherange knandm forsomeconstantc thenwecancomputetheinverseofanyrealnonsingularnnmatrixintimeo proofweprovethetheoremhereforrealmatrices asksyoutogeneralizetheproofformatriceswhoseentriesarecomplexnumbers wecanassumethatnisanexactpowerof sincewehavea ikforanyk bychoosingksuchthatnckisapowerof weenlargethematrixtoasizethatisthenextpowerof andobtainthedesiredanswera fromtheanswertotheenlargedproblem rstregularityconditiononm ensuresthatthisenlargementdoesnotcausetherunningtimetoincreasebymorethanaconstantfactor forthemoment letusassumethatthennmatrixaissymmetricandpositive nite wepartitioneachofaanditsinversea intofourn submatri ces chapter matrixoperationsadbctcdanda drtuv ifweletsddcb betheschurcomplementofawithrespecttob weshallseemoreaboutthisformofschurcomplementinsection wehavea drtuvdb cts cts sinceaa din asyoucanverifybyperformingthematrixmultiplication causeaissymmetricandpositive nite lemmas insection implythatbandsarebothsymmetricandpositive nite bylemma insection therefore theinversesb ands exist andbyexercised ands aresymmetric sothat tdb tds fore wecancomputethesubmatricesr andvofa asfollows whereallmatricesmentionedaren formthesubmatricesb anddofa recursivelycomputetheinverseb ofb computethematrixproductwdcb andthencomputeitstransposewt whichequalsb byexercised tdb computethematrixproductxdwct whichequalscb andthencomputethematrixsddxddcb recursivelycomputetheinverses ofs andsetvtos computethematrixproductyds whichequalss andthencomputeitstransposeyt whichequalsb cts byexercised tdb tds setttoytandutoy computethematrixproductzdwty whichequalsb cts andsetrtob wecaninvertannnsymmetricpositive nitematrixbyinvertingtwon matricesinsteps performingfourmultiplicationsofn matricesinsteps plusanadditionalcostofo forextractingsubmatricesfroma insertingsubmatricesintoa andperformingaconstantnumberofadditions subtractions andtransposesonn matrices wegettherecurrencei invertingmatrices thesecondlineholdsbecausethesecondregularityconditioninthestatementofthetheoremimpliesthat andbecauseweassumethatm thethirdlinefollowsbecausethesecondregularityconditionallowsustoapplycase ofthemastertheorem theorem itremainstoprovethatwecanobtainthesameasymptoticrunningtimeforma trixmultiplicationasformatrixinversionwhenaisinvertiblebutnotsymmetricandpositive nite thebasicideaisthatforanynonsingularmatrixa thema trixataissymmetric byexercised andpositive nite bytheoremd thetrick istoreducetheproblemofinvertingatotheproblemofinvert ingata thereductionisbasedontheobservationthatwhenaisannnnonsingularmatrix wehavea ata ata ata ata dinandamatrixinverseisunique therefore wecancomputea rstmultiplyingatbyatoobtainata theninvertingthesymmetricpositive nitematrixatausingtheabovedivide conqueralgorithm nallymultiplyingtheresultbyat eachofthesethreestepstakeso andthuswecaninvertanynonsingularmatrixwithrealentriesino theproofoftheorem suggestsameansofsolvingtheequationaxdbbyusingludecompositionwithoutpivoting solongasaisnonsingular wemultiplybothsidesoftheequationbyat yielding ata xdatb thistrans formationdoesn taffectthesolutionx sinceatisinvertible andsowecanfac torthesymmetricpositive nitematrixatabycomputinganludecomposi tion wethenuseforwardandbacksubstitutiontosolveforxwiththeright handsideatb althoughthismethodistheoreticallycorrect inpracticetheprocedurelup decompositionworksmuchbetter lupdecompositionrequiresfewerarithmeticoperationsbyaconstantfactor andithassomewhatbetternumericalproperties exercises letm bethetimetomultiplytwonnmatrices andlets denotethetimerequiredtosquareannnmatrix showthatmultiplyingandsquaringmatri ceshaveessentiallythesamedif culty anm timematrix multiplicational gorithmimpliesano timesquaringalgorithm andans timesquaringalgorithmimpliesano timematrix multiplicationalgorithm chapter matrixoperations letm bethetimetomultiplytwonnmatrices andletl bethetimetocomputethelupdecompositionofannnmatrix showthatmultiplyingmatri cesandcomputinglupdecompositionsofmatriceshaveessentiallythesamedif culty anm timematrix multiplicationalgorithmimpliesano timelup decompositionalgorithm andanl timelup decompositionalgorithmimpliesano timematrix multiplicationalgorithm letm bethetimetomultiplytwonnmatrices andletd denotethetimerequiredto ndthedeterminantofannnmatrix showthatmultiply ingmatricesandcomputingthedeterminanthaveessentiallythesamedif culty anm timematrix multiplicationalgorithmimpliesano timedetermi nantalgorithm andad timedeterminantalgorithmimpliesano timematrix multiplicationalgorithm letm bethetimetomultiplytwonnbooleanmatrices andlett bethetimeto ndthetransitiveclosureofannnbooleanmatrix seesection showthatanm timebooleanmatrix multiplicationalgorithmimpliesano lgn timetransitive closurealgorithm andat timetransitive closurealgorithmimpliesano timebooleanmatrix multiplicationalgorithm doesthematrix inversionalgorithmbasedontheorem workwhenmatrix elementsaredrawnfromthe eldofintegersmodulo explain generalizethematrix inversionalgorithmoftheorem tohandlematricesof complexnumbers andprovethatyourgeneralizationworkscorrectly hint steadofthetransposeofa usetheconjugatetransposea whichyouobtainfromthetransposeofabyreplacingeveryentrywithitscomplexconjugate insteadofsymmetricmatrices considerhermitianmatrices whicharematricesasuchthatada symmetricpositive nitematricesandleast squaresapproximationsymmetricpositive nitematriceshavemanyinterestinganddesirableproper ties forexample theyarenonsingular andwecanperformludecomposition onthemwithouthavingtoworryaboutdividingby inthissection weshall symmetricpositive nitematricesandleast squaresapproximation proveseveralotherimportantpropertiesofsymmetricpositive nitematricesandshowaninterestingapplicationtocurve ttingbyaleast squaresapproxima tion rstpropertyweproveisperhapsthemostbasic lemma anypositive nitematrixisnonsingular proofsupposethatamatrixaissingular thenbycorollaryd thereexistsanonzerovectorxsuchthataxd hence xtaxd andacannotbepositive nite theproofthatwecanperformludecompositiononasymmetricpositive nitematrixawithoutdividingby ismoreinvolved webeginbyprovingpropertiesaboutcertainsubmatricesofa nethekthleadingsubmatrixofatobethematrixakconsistingoftheintersectionofthe rstkrowsand rstkcolumnsofa lemma ifaisasymmetricpositive nitematrix theneveryleadingsubmatrixofaissymmetricandpositive nite proofthateachleadingsubmatrixakissymmetricisobvious toprovethatakispositive nite weassumethatitisnotandderiveacontradiction ifakisnotpositive nite thenthereexistsak vectorxk suchthatxtkakxk letabenn andadakbtbc forsubmatricesb whichis andc whichis nethen vectorxd xtk wherenk sfollowxk thenwehavextaxd xtk akbtbcxk xtk akxkbxkdxtkakxk whichcontradictsabeingpositive nite chapter matrixoperationswenowturntosomeessentialpropertiesoftheschurcomplement letabeasymmetricpositive nitematrix andletakbealeadingkksubmatrixofa partitionaonceagainaccordingtoequation wegeneralizeequa tion tode netheschurcomplementsofawithrespecttoakassdcba kbt bylemma akissymmetricandpositive nite therefore kexistsbylemma andsiswellde ned notethatourearlierde nition oftheschurcomplementisconsistentwithequation bylettingkd thenextlemmashowsthattheschur complementmatricesofsymmetricposi tive nitematricesarethemselvessymmetricandpositive nite weusedthis resultintheorem andweneeditscorollarytoprovethecorrectnessoflu decompositionforsymmetricpositive nitematrices lemma schurcomplementlemma ifaisasymmetricpositive nitematrixandakisaleadingkksubmatrixofa thentheschurcomplementsofawithrespecttoakissymmetricandpositive nite proofbecauseaissymmetric soisthesubmatrixc byexercised theproductba kbtissymmetric andbyexercised sissymmetric itremainstoshowthatsispositive nite considerthepartitionofagiveninequation foranynonzerovectorx wehavextax bytheassumptionthataispositive nite letusbreakxintotwosubvectorsyand compatiblewithakandc respectively becausea kexists wehavextaxd akbtbcy akycbt bycc dytakycytbt tbyc yca kbt tak yca kbt cba kbt bymatrixmagic verifybymultiplyingthrough thislastequationamountsto completingthesquare ofthequadraticform seeexercise sincextax holdsforanynonzerox letuspickanynonzero andthenchooseya kbt whichcausesthe rstterminequation tovanish leaving cba kbt asthevalueoftheexpression forany wethereforehave dxtax andthussispositive nite symmetricpositive nitematricesandleast squaresapproximation corollary ludecompositionofasymmetricpositive nitematrixnevercausesadivision proofletabeasymmetricpositive nitematrix weshallprovesomethingstrongerthanthestatementofthecorollary everypivotisstrictlypositive rst pivotisa lete bethe rstunitvector fromwhichweobtaina det sincethe rststepofludecompositionproducestheschurcomplementofawithrespecttoa lemma impliesbyinductionthatallpivotsarepositive squaresapproximationoneimportantapplicationofsymmetricpositive nitematricesarisesin ttingcurvestogivensetsofdatapoints supposethatwearegivenasetofmdatapoints whereweknowthattheyiaresubjecttomeasurementerrors wewouldliketodetermineafunctionf suchthattheapproximationerrorsidf aresmallforid theformofthefunctionfdependsontheproblemathand weassumethatithastheformofalinearlyweightedsum dnxjd cjfj wherethenumberofsummandsnandthespeci cbasisfunctionsfjarechosenbasedonknowledgeoftheproblemathand acommonchoiceisfj dxj whichmeansthatf xcc cccnxn isapolynomialofdegreen inx givenmdatapoints wewishtocalculatencoef cientsc cnthatminimizetheapproximationerrors bychoosingndm wecancalculateeachyiexactlyinequation suchahigh degreef tsthenoise aswellasthedata however andgenerallygivespoorresultswhenusedtopredictyforpreviouslyunseenvaluesofx itisusu allybettertochoosensigni cantlysmallerthanmandhopethatbychoosingthecoef cientscjwell wecanobtainafunctionfthat ndsthesigni cantpatternsinthedatapointswithoutpayingundueattentiontothenoise sometheoretical chapter matrixoperationsprinciplesexistforchoosingn buttheyarebeyondthescopeofthistext inanycase oncewechooseavalueofnthatislessthanm weendupwithanoverde terminedsetofequationswhosesolutionwewishtoapproximate wenowshow howtodoso letad denotethematrixofvaluesofthebasisfunctionsatthegivenpoints thatis aijdfj letcd denotethedesiredn vectorofcoef cients acd cnd isthem vectorof predictedvalues fory dacyisthem vectorofapproximationerrors tominimizeapproximationerrors wechoosetominimizethenormoftheerrorvector whichgivesusaleast squaressolution sincekkd mxid becausekk dkacyk dmxid nxjd aijcjyi wecanminimizekkbydifferentiatingkk withrespecttoeachckandthensettingtheresultto symmetricpositive nitematricesandleast squaresapproximation dkk dckdmxid nxjd aijcjyi aikd thenequations forkd nareequivalenttothesinglematrixequation acy tad equivalently usingexercised toat acy whichimpliesatacdaty instatistics thisiscalledthenormalequation thematrixataissymmetricbyexercised andifahasfullcolumnrank thenbytheoremd ataispositive niteaswell hence ata exists andthesolutiontoequa tion iscd ata atydacy wherethematrixacd ata isthepseudoinverseofthematrixa thepseudoinversenaturallygeneralizesthenotionofamatrixinversetothecasein whichaisnotsquare compareequation astheapproximatesolutiontoacdywiththesolutiona bastheexactsolutiontoaxdb asanexampleofproducingaleast squares supposethatwehave vedatapoints shownasblackdotsinfigure wewishto tthesepointswithaquadraticpolynomialf xcc westartwiththematrixofbasis functionvalues chapter matrixoperations xyf theleast squares tofaquadraticpolynomialtothesetof vedatapointsf theblackdotsarethedatapoints andthewhitedotsaretheirestimatedvaluespredictedbythepolynomialf thequadraticpoly nomialthatminimizesthesumofthesquarederrors eachshadedlineshowstheerrorforonedatapoint whosepseudoinverseisacd multiplyingybyac weobtainthecoef cientvectorcd whichcorrespondstothequadraticpolynomial symmetricpositive nitematricesandleast squaresapproximation astheclosest ttingquadratictothegivendata inaleast squaressense asapracticalmatter wesolvethenormalequation bymultiplyingybyatandthen ndinganludecompositionofata ifahasfullrank thematrixataisguaranteedtobenonsingular becauseitissymmetricandpositive nite seeexercised andtheoremd exercises provethateverydiagonalelementofasymmetricpositive nitematrixisposi tive letadabbcbea symmetricpositive nitematrix provethatitsdeterminantacb ispositiveby completingthesquare inamannersimilartothatusedintheproofoflemma provethatthemaximumelementinasymmetricpositive nitematrixlieson thediagonal provethatthedeterminantofeachleadingsubmatrixofasymmetricpositive nitematrixispositive letakdenotethekthleadingsubmatrixofasymmetricpositive nitematrixa provethatdet det isthekthpivotduringludecomposition byconvention det findthefunctionoftheformf xlgxcc exthatisthebestleast squares ttothedatapoints chapter matrixoperations showthatthepseudoinverseacsatis esthefollowingfourequations aacada acaacdac aac tdaac aca tdaca problems tridiagonalsystemsoflinearequationsconsiderthetridiagonalmatrixad findanludecompositionofa solvetheequationaxd tbyusingforwardandbacksub stitution findtheinverseofa showhow foranynnsymmetricpositive nite tridiagonalmatrixaandanyn vectorb tosolvetheequationaxdbino timebyperforminganludecomposition arguethatanymethodbasedonforminga isasymptot icallymoreexpensiveintheworstcase showhow foranynnnonsingular tridiagonalmatrixaandanyn vectorb tosolvetheequationaxdbino timebyperforminganlupdecomposition splinesapracticalmethodforinterpolatingasetofpointswithacurveistousecu bicsplines wearegivenasetf wid ngofnc valuepairs wherex wewishto tapiecewise cubiccurve spline tothepoints thatis thecurvef ismadeupofncubicpolyno mialsfi daicbixccix cdix forid whereifxfallsin problemsforchapter therangexixxic thenthevalueofthecurveisgivenbyf dfi xxi thepointsxiatwhichthecubicpolynomialsare pasted togetherarecalledknots forsimplicity weshallassumethatxidiforid toensurecontinuityoff werequirethatf dfi dyi xic dfi dyic forid toensurethatf issuf cientlysmooth wealsoinsistthatthe rstderivativebecontinuousateachknot xic forid supposethatforid wearegivennotonlythepoint valuepairsf gbutalsothe rstderivativesdidf ateachknot expresseachcoef cientai anddiintermsofthevaluesyi yic anddic rememberthatxidi howquicklycanwecomputethe ncoef cientsfromthepoint valuepairsand rstderivatives thequestionremainsofhowtochoosethe rstderivativesoff attheknots onemethodistorequirethesecondderivativestobecontinuousattheknots xic forid atthe rstandlastknots weassumethatf andf theseassumptionsmakef anaturalcubicspline usethecontinuityconstraintsonthesecondderivativetoshowthatforid dicdic yic showthat dnd ynyn rewriteequations asamatrixequationinvolvingthevectorddhd dniofunknowns whatattributesdoesthematrixinyourequationhave arguethatanaturalcubicsplinecaninterpolateasetofnc valuepairsino seeproblem chapter matrixoperationsf showhowtodetermineanaturalcubicsplinethatinterpolatesasetofnc points satisfyingx evenwhenxiisnotnecessarilyequaltoi whatmatrixequationmustyourmethodsolve andhowquicklydoesyouralgorithmrun chapternotesmanyexcellenttextsdescribenumericalandscienti ccomputationinmuchgreater detailthanwehaveroomforhere thefollowingareespeciallyreadable george andliu golubandvanloan teukolsky vetterling andflan nery andstrang golubandvanloan discussnumericalstability theyshowwhydet isnotnecessarilyagoodindicatorofthestabilityofamatrixa proposinginsteadtousekak wherekak dmax inpnjd jaijj theyalsoaddressthequestionofhowtocomputethisvaluewithoutactuallycomputinga gaussianelimination uponwhichtheluandlupdecompositionsarebased wasthe rstsystematicmethodforsolvinglinearsystemsofequations itwasalso oneoftheearliestnumericalalgorithms althoughitwasknownearlier itsdis coveryiscommonlyattributedtoc gauss inhisfamouspaper strassenshowedthatannnmatrixcanbeinvertedino nlg wino grad originallyprovedthatmatrixmultiplicationisnoharderthanmatrix inversion andtheconverseisduetoaho hopcroft andullman anotherimportantmatrixdecompositionisthesingularvaluedecomposition orsvd thesvdfactorsanmnmatrixaintoadq isanmnmatrixwithnonzerovaluesonlyonthediagonal ismmwithmutuallyorthonormalcolumns andq isnn alsowithmutuallyorthonormalcolumns twovectorsareorthonormaliftheirinnerproductis andeachvectorhasanormof thebooksbystrang andgolubandvanloan containgoodtreatmentsofthesvd strang hasanexcellentpresentationofsymmetricpositive nitematri cesandoflinearalgebraingeneral linearprogrammingmanyproblemstaketheformofmaximizingorminimizinganobjective givenlimitedresourcesandcompetingconstraints ifwecanspecifytheobjectiveas alinearfunctionofcertainvariables andifwecanspecifytheconstraintson resourcesasequalitiesorinequalitiesonthosevariables thenwehavealinear programmingproblem linearprogramsariseinavarietyofpracticalapplica tions webeginbystudyinganapplicationinelectoralpolitics apoliticalproblemsupposethatyouareapoliticiantryingtowinanelection yourdistricthasthreedifferenttypesofareas urban suburban andrural theseareashave respec tively registeredvoters althoughnotallthereg isteredvotersactuallygotothepolls youdecidethattogoverneffectively wouldlikeatleasthalftheregisteredvotersineachofthethreeregionstovotefor youarehonorableandwouldneverconsidersupportingpoliciesinwhichyou donotbelieve yourealize however thatcertainissuesmaybemoreeffectivein winningvotesincertainplaces yourprimaryissuesarebuildingmoreroads guncontrol farmsubsidies andagasolinetaxdedicatedtoimprovedpublictransit accordingtoyourcampaignstaff sresearch youcanestimatehowmanyvotesyouwinorlosefromeachpopulationsegmentbyspending onadvertisingoneachissue thisinformationappearsinthetableoffigure inthistable eachentryindicatesthenumberofthousandsofeitherurban suburban orrural voterswhowouldbewonoverbyspending onadvertisinginsupportofa particularissue negativeentriesdenotevotesthatwouldbelost yourtaskisto gureouttheminimumamountofmoneythatyouneedtospendinordertowin urbanvotes suburbanvotes ruralvotes youcould bytrialanderror deviseastrategythatwinstherequirednumberofvotes butthestrategyyoucomeupwithmightnotbetheleastexpensiveone forexample youcoulddevote ofadvertisingtobuildingroads togun tofarmsubsidies toagasolinetax inthiscase chapter linearprogrammingpolicyurbansuburbanruralbuildroads guncontrol farmsubsidies gasolinetax theeffectsofpoliciesonvoters eachentrydescribesthenumberofthousandsofurban suburban orruralvoterswhocouldbewonoverbyspending onadvertisingsupportofapolicyonaparticularissue negativeentriesdenotevotesthatwouldbelost wouldwin thousandurbanvotes thousandsuburbanvotes thousandruralvotes youwouldwintheexactnumberofvotesdesiredintheurbanandsuburbanareasandmorethanenoughvotesintheruralarea infact intheruralarea youwouldreceivemorevotesthantherearevoters inorderto garnerthesevotes youwouldhavepaidfor thousanddollarsofadvertising naturally youmaywonderwhetherthisstrategyisthebestpossible thatis couldyouachieveyourgoalswhilespendinglessonadvertising additionaltrialanderrormighthelpyoutoanswerthisquestion butwouldn tyouratherhaveasystematicmethodforansweringsuchquestions inordertodevelopone weshallformulatethisquestionmathematically weintroduce variables isthenumberofthousandsofdollarsspentonadvertisingonbuildingroads isthenumberofthousandsofdollarsspentonadvertisingonguncontrol isthenumberofthousandsofdollarsspentonadvertisingonfarmsubsidies andx isthenumberofthousandsofdollarsspentonadvertisingonagasolinetax wecanwritetherequirementthatwewinatleast urbanvotesas similarly wecanwritetherequirementsthatwewinatleast suburbanvotesand ruralvotesas anysettingofthevariablesx thatsatis esinequalities yieldsastrategythatwinsasuf cientnumberofeachtypeofvote inorderto chapter linearprogramming keepcostsassmallaspossible youwouldliketominimizetheamountspentonadvertising thatis youwanttominimizetheexpressionx althoughnegativeadvertisingoftenoccursinpoliticalcampaigns thereisnosuchthingasnegative costadvertising consequently werequirethatx andx combininginequalities withtheobjectiveofminimiz ing weobtainwhatisknownasa linearprogram weformatthisproblem asminimizex subjectto thesolutionofthislinearprogramyieldsyouroptimalstrategy generallinearprogramsinthegenerallinear programmingproblem wewishtooptimizealinearfunctionsubjecttoasetoflinearinequalities givenasetofrealnumbersa anandasetofvariablesx wede nealinearfunctionfonthosevariablesbyf ccanxndnxjd ajxj ifbisarealnumberandfisalinearfunction thentheequationf dbisalinearequalityandtheinequalitiesf bandf chapter linearprogrammingarelinearinequalities weusethegeneraltermlinearconstraintstodenoteeitherlinearequalitiesorlinearinequalities inlinearprogramming wedonotallow strictinequalities formally alinear programmingproblemistheproblemofeitherminimizingormaximizingalinearfunctionsubjecttoa nitesetoflinear constraints ifwearetominimize thenwecallthelinearprogramaminimizationlinearprogram andifwearetomaximize thenwecallthelinearprogramamaximizationlinearprogram theremainderofthischaptercovershowtoformulateandsolvelinearpro grams althoughseveralpolynomial timealgorithmsforlinearprogramminghavebeendeveloped wewillnotstudytheminthischapter instead weshallstudythe simplexalgorithm whichistheoldestlinear programmingalgorithm thesimplex algorithmdoesnotruninpolynomialtimeintheworstcase butitisfairlyef cient andwidelyusedinpractice anoverviewoflinearprogramminginordertodescribepropertiesofandalgorithmsforlinearprograms nditconvenienttoexpressthemincanonicalforms weshallusetwoforms standardandslack inthischapter wewillde nethempreciselyinsection infor mally alinearprograminstandardformisthemaximizationofalinearfunctionsubjecttolinearinequalities whereasalinearprograminslackformisthemax imizationofalinearfunctionsubjecttolinearequalities weshalltypicallyusestandardformforexpressinglinearprograms butwe nditmoreconvenientto useslackformwhenwedescribethedetailsofthesimplexalgorithm fornow restrictourattentiontomaximizingalinearfunctiononnvariablessubjecttoasetofmlinearinequalities letus rstconsiderthefollowinglinearprogramwithtwovariables maximizex subjectto wecallanysettingofthevariablesx andx thatsatis esalltheconstraints afeasiblesolutiontothelinearprogram ifwegraphthecon straintsinthe cartesiancoordinatesystem asinfigure wesee chapter linearprogramming thelinearprogramgivenin eachconstraintisrepresentedbyalineandadirection theintersectionoftheconstraints whichisthefeasibleregion isshaded thedottedlinesshow respectively thepointsforwhichtheobjectivevalueis theoptimalsolutiontothelinearprogramisx andx withobjectivevalue thatthesetoffeasiblesolutions shadedinthe gure formsaconvexregion inthetwo dimensionalspace wecallthisconvexregionthefeasibleregionandthefunctionwewishtomaximizetheobjectivefunction conceptually wecouldeval uatetheobjectivefunctionx ateachpointinthefeasibleregion wecallthevalueoftheobjectivefunctionataparticularpointtheobjectivevalue wecouldthenidentifyapointthathasthemaximumobjectivevalueasanoptimalsolution forthisexample andformostlinearprograms thefeasibleregioncontainsan nitenumberofpoints andsoweneedtodetermineanef cientwayto nda pointthatachievesthemaximumobjectivevaluewithoutexplicitlyevaluatingthe objectivefunctionateverypointinthefeasibleregion intwodimensions wecanoptimizeviaagraphicalprocedure thesetofpointsforwhichx forany isalinewithaslopeof ifweplotx weobtainthelinewithslope throughtheorigin asinfigure theintersectionofthislineandthefeasibleregionisthesetoffeasiblesolutionsthat haveanobjectivevalueof inthiscase thatintersectionofthelinewiththefeasibleregionisthesinglepoint moregenerally forany theintersection anintuitivede nitionofaconvexregionisthatitful llstherequirementthatforanytwopointsintheregion allpointsonalinesegmentbetweenthemarealsointheregion chapter linearprogrammingofthelinex andthefeasibleregionisthesetoffeasiblesolutionsthathaveobjectivevalue showsthelinesx andx becausethefeasibleregioninfigure isbounded theremustbesomemaximumvalue forwhichtheintersectionofthelinex andthefeasibleregionisnonempty anypointatwhichthisoccursisanoptimal solutiontothelinearprogram whichinthiscaseisthepointx andx withobjectivevalue itisnoaccidentthatanoptimalsolutiontothelinearprogramoccursatavertexofthefeasibleregion themaximumvalueof forwhichthelinex intersectsthefeasibleregionmustbeontheboundaryofthefeasibleregion thustheintersectionofthislinewiththeboundaryofthefeasibleregioniseithera singlevertexoralinesegment iftheintersectionisasinglevertex thenthereis justoneoptimalsolution anditisthatvertex iftheintersectionisalinesegment everypointonthatlinesegmentmusthavethesameobjectivevalue inparticular bothendpointsofthelinesegmentareoptimalsolutions sinceeachendpointofa linesegmentisavertex thereisanoptimalsolutionatavertexinthiscaseaswell althoughwecannoteasilygraphlinearprogramswithmorethantwovariables thesameintuitionholds ifwehavethreevariables theneachconstraintcorre spondstoahalf spaceinthree dimensionalspace theintersectionofthesehalf spacesformsthefeasibleregion thesetofpointsforwhichtheobjectivefunction obtainsagivenvalue isnowaplane assumingnodegenerateconditions ifallcoef cientsoftheobjectivefunctionarenonnegative andiftheoriginisafeasiblesolutiontothelinearprogram thenaswemovethisplaneawayfromtheorigin inadirectionnormaltotheobjectivefunction ndpointsofincreasingobjective iftheoriginisnotfeasibleorifsomecoef cientsintheobjectivefunction arenegative theintuitivepicturebecomesslightlymorecomplicated asintwo dimensions becausethefeasibleregionisconvex thesetofpointsthatachieve theoptimalobjectivevaluemustincludeavertexofthefeasibleregion simi larly ifwehavenvariables eachconstraintde nesahalf spaceinn dimensionalspace wecallthefeasibleregionformedbytheintersectionofthesehalf spacesasimplex theobjectivefunctionisnowahyperplaneand becauseofconvexity anoptimalsolutionstilloccursatavertexofthesimplex thesimplexalgorithmtakesasinputalinearprogramandreturnsanoptimalsolution itstartsatsomevertexofthesimplexandperformsasequenceofitera tions ineachiteration itmovesalonganedgeofthesimplexfromacurrentvertex toaneighboringvertexwhoseobjectivevalueisnosmallerthanthatofthecurrentvertex andusuallyislarger thesimplexalgorithmterminateswhenitreachesalocalmaximum whichisavertexfromwhichallneighboringverticeshavea smallerobjectivevalue becausethefeasibleregionisconvexandtheobjective functionislinear thislocaloptimumisactuallyaglobaloptimum insection chapter linearprogramming weshalluseaconceptcalled duality toshowthatthesolutionreturnedbythesimplexalgorithmisindeedoptimal althoughthegeometricviewgivesagoodintuitiveviewoftheoperationsofthesimplexalgorithm weshallnotrefertoitexplicitlywhendevelopingthedetails ofthesimplexalgorithminsection instead wetakeanalgebraicview rstwritethegivenlinearprograminslackform whichisasetoflinearequalities theselinearequalitiesexpresssomeofthevariables called basicvariables termsofothervariables called nonbasicvariables wemovefromonevertextoanotherbymakingabasicvariablebecomenonbasicandmakinganonbasicvariablebecomebasic wecallthisoperationa pivot viewedalgebraically itisnothingmorethanrewritingthelinearprograminanequivalentslackform thetwo variableexampledescribedabovewasparticularlysimple weshallneedtoaddressseveralmoredetailsinthischapter theseissuesincludeiden tifyinglinearprogramsthathavenosolutions linearprogramsthathaveno nite optimalsolution andlinearprogramsforwhichtheoriginisnotafeasiblesolution applicationsoflinearprogramminglinearprogramminghasalargenumberofapplications anytextbookonopera tionsresearchis lledwithexamplesoflinearprogramming andlinearprogram minghasbecomeastandardtooltaughttostudentsinmostbusinessschools theelectionscenarioisonetypicalexample twomoreexamplesoflinearprogram mingarethefollowing anairlinewishestoscheduleits ightcrews thefederalaviationadminis trationimposesmanyconstraints suchaslimitingthenumberofconsecutive hoursthateachcrewmembercanworkandinsistingthataparticularcrewwork onlyononemodelofaircraftduringeachmonth theairlinewantstoschedule crewsonallofits ightsusingasfewcrewmembersaspossible anoilcompanywantstodecidewheretodrillforoil sitingadrillataparticu larlocationhasanassociatedcostand basedongeologicalsurveys anexpected payoffofsomenumberofbarrelsofoil thecompanyhasalimitedbudgetfor locatingnewdrillsandwantstomaximizetheamountofoilitexpectsto giventhisbudget withlinearprograms wealsomodelandsolvegraphandcombinatorialprob lems suchasthoseappearinginthistextbook wehavealreadyseenaspecial caseoflinearprogrammingusedtosolvesystemsofdifferenceconstraintsinsec tion insection weshallstudyhowtoformulateseveralgraphand network owproblemsaslinearprograms insection weshalluselinear programmingasatoolto ndanapproximatesolutiontoanothergraphproblem chapter linearprogrammingalgorithmsforlinearprogrammingthischapterstudiesthesimplexalgorithm thisalgorithm whenimplementedcarefully oftensolvesgenerallinearprogramsquicklyinpractice withsome carefullycontrivedinputs however thesimplexalgorithmcanrequireexponential rstpolynomial timealgorithmforlinearprogrammingwastheellipsoidalgorithm whichrunsslowlyinpractice asecondclassofpolynomial timealgo rithmsareknownasinterior pointmethods incontrasttothesimplexalgorithm whichmovesalongtheexteriorofthefeasibleregionandmaintainsafeasiblesolu tionthatisavertexofthesimplexateachiteration thesealgorithmsmovethrough theinteriorofthefeasibleregion theintermediatesolutions whilefeasible notnecessarilyverticesofthesimplex butthe nalsolutionisavertex forlarge inputs interior pointalgorithmscanrunasfastas andsometimesfasterthan simplexalgorithm thechapternotespointyoutomoreinformationaboutthese algorithms ifweaddtoalinearprogramtheadditionalrequirementthatallvariablestakeonintegervalues wehaveanintegerlinearprogram asksyoutoshowthatjust ndingafeasiblesolutiontothisproblemisnp nopolynomial timealgorithmsareknownforanynp hardproblems thereisno knownpolynomial timealgorithmforintegerlinearprogramming incontrast cansolveagenerallinear programmingprobleminpolynomialtime inthischapter ifwehavealinearprogramwithvariablesxd andwishtorefertoaparticularsettingofthevariables weshallusethenotationnxd nxn standardandslackformsthissectiondescribestwoformats standardformandslackform thatareuse fulwhenwespecifyandworkwithlinearprograms instandardform allthe constraintsareinequalities whereasinslackform allconstraintsareequalities exceptforthosethatrequirethevariablestobenonnegative standardforminstandardform wearegivennrealnumbersc mrealnumbersb andmnrealnumbersaijforid mandjd wewishto ndnrealnumbersx xnthat standardandslackforms maximizenxjd cjxj subjecttonxjd aijxjbiforid forjd generalizingtheterminologyweintroducedforthetwo variablelinearprogram wecallexpression theobjectivefunctionandthencminequalitiesinlines theconstraints thenconstraintsinline arethenonnegativityconstraints anarbitrarylinearprogramneednothavenonnegativ ityconstraints butstandardformrequiresthem sometimeswe nditconvenienttoexpressalinearprograminamorecompactform ifwecreateanmnmatrixad aij anm vectorbd ann vectorcd andann vectorxd thenwecanrewritethelinearprogramde nedin asmaximizectx subjecttoaxb inline ctxistheinnerproductoftwovectors ininequality axisamatrix vectorproduct andininequality meansthateachentryofthevectorxmustbenonnegative weseethatwecanspecifyalinearprograminstandardformbyatuple andweshalladopttheconventionthata andcalwayshavethedimensionsgivenabove wenowintroduceterminologytodescribesolutionstolinearprograms weusedsomeofthisterminologyintheearlierexampleofatwo variablelinearprogram wecallasettingofthevariablesnxthatsatis esalltheconstraintsafeasiblesolu tion whereasasettingofthevariablesnxthatfailstosatisfyatleastoneconstraintisaninfeasiblesolution wesaythatasolutionnxhasobjectivevaluectnx afea siblesolutionnxwhoseobjectivevalueismaximumoverallfeasiblesolutionsisanoptimalsolution andwecallitsobjectivevaluectnxtheoptimalobjectivevalue ifalinearprogramhasnofeasiblesolutions wesaythatthelinearprogramisin feasible otherwiseitisfeasible ifalinearprogramhassomefeasiblesolutionsbutdoesnothavea niteoptimalobjectivevalue wesaythatthelinearprogramisunbounded asksyoutoshowthatalinearprogramcanhavea niteoptimalobjectivevalueevenifthefeasibleregionisnotbounded chapter linearprogrammingconvertinglinearprogramsintostandardformitisalwayspossibletoconvertalinearprogram givenasminimizingormaxi mizingalinearfunctionsubjecttolinearconstraints intostandardform alinear programmightnotbeinstandardformforanyoffourpossiblereasons theobjectivefunctionmightbeaminimizationratherthanamaximization theremightbevariableswithoutnonnegativityconstraints theremightbeequalityconstraints whichhaveanequalsignratherthanaless tosign theremightbeinequalityconstraints butinsteadofhavingaless tosign theyhaveagreater tosign whenconvertingonelinearprogramlintoanotherlinearprograml wewouldlikethepropertythatanoptimalsolutiontol yieldsanoptimalsolutiontol tocapturethisidea wesaythattwomaximizationlinearprogramslandl areequivalentifforeachfeasiblesolutionnxtolwithobjectivevalue thereisacorrespondingfeasiblesolutionnx tol withobjectivevalue andforeachfeasiblesolutionnx tol withobjectivevalue thereisacorrespondingfeasiblesolutionnxtolwithobjectivevalue thisde nitiondoesnotimplyaone onecorrespondencebetweenfeasiblesolutions aminimizationlinearprogramlandamaximizationlinearprograml areequivalentifforeachfeasiblesolutionnxtolwithobjectivevalue thereisacorrespondingfeasiblesolutionnx tol withobjectivevalue andforeachfeasiblesolutionnx tol withobjectivevalue thereisacorrespondingfeasiblesolutionnxtolwithobjectivevalue wenowshowhowtoremove onebyone eachofthepossibleproblemsinthelistabove afterremovingeachone weshallarguethatthenewlinearprogramis equivalenttotheoldone toconvertaminimizationlinearprogramlintoanequivalentmaximizationlin earprograml wesimplynegatethecoef cientsintheobjectivefunction sincelandl haveidenticalsetsoffeasiblesolutionsand foranyfeasiblesolution theobjectivevalueinlisthenegativeoftheobjectivevalueinl thesetwolinearprogramsareequivalent forexample ifwehavethelinearprogramminimize subjecttox andwenegatethecoef cientsoftheobjectivefunction weobtain standardandslackforms maximize subjecttox weshowhowtoconvertalinearprograminwhichsomeofthevariablesdonothavenonnegativityconstraintsintooneinwhicheachvariablehasanon negativityconstraint supposethatsomevariablexjdoesnothaveanonnegativityconstraint wereplaceeachoccurrenceofxjbyx andaddthenon negativityconstraintsx andx iftheobjectivefunctionhasatermcjxj wereplaceitbycjx jcjx andifconstraintihasatermaijxj wereplaceitbyaijx jaijx anyfeasiblesolutionyxtothenewlinearprogramcor respondstoafeasiblesolutionnxtotheoriginallinearprogramwithnxjdyx jandwiththesameobjectivevalue anyfeasiblesolutionnxtotheoriginallinearprogramcorrespondstoafeasiblesolutionyxtothenewlinearprogramwithyx jdnxjandyx ifnxj orwithyx jdnxjandyx ifnxj thetwolinearprogramshavethesameobjectivevalueregardlessofthesignofnxj thetwolinearprogramsareequivalent weapplythisconversionschemetoeach variablethatdoesnothaveanonnegativityconstrainttoyieldanequivalentlinear programinwhichallvariableshavenonnegativityconstraints continuingtheexample wewanttoensurethateachvariablehasacorrespond ingnonnegativityconstraint variablex hassuchaconstraint butvariablex doesnot therefore wereplacex bytwovariablesx andx andwemodifythelinearprogramtoobtainmaximize subjecttox weconvertequalityconstraintsintoinequalityconstraints supposethatalinearprogramhasanequalityconstraintf sincexdyifandonlyifbothxyandxy wecanreplacethisequalityconstraintbythepairofinequalityconstraintsf bandf repeatingthisconversionforeachequalityconstraintyieldsalinearprogramin whichallconstraintsareinequalities finally wecanconvertthegreater toconstraintstoless toconstraintsbymultiplyingtheseconstraintsthroughby thatis anyinequalityoftheform chapter linearprogrammingnxjd aijxjbiisequivalenttonxjd aijxjbi byreplacingeachcoef cientaijbyaijandeachvaluebibybi weobtainanequivalentless toconstraint finishingourexample wereplacetheequalityinconstraint bytwoin equalities obtainingmaximize subjecttox finally wenegateconstraint forconsistencyinvariablenames namex tox andx tox obtainingthestandardformmaximize subjecttox convertinglinearprogramsintoslackformtoef cientlysolvealinearprogramwiththesimplexalgorithm weprefertoex pressitinaforminwhichsomeoftheconstraintsareequalityconstraints moreprecisely weshallconvertitintoaforminwhichthenonnegativityconstraintsare theonlyinequalityconstraints andtheremainingconstraintsareequalities letnxjd aijxjbi standardandslackforms beaninequalityconstraint weintroduceanewvariablesandrewriteinequal ity asthetwoconstraintssdbinxjd aijxj wecallsaslackvariablebecauseitmeasurestheslack ordifference betweentheleft handandright handsidesofequation weshallsoonseewhywe nditconvenienttowritetheconstraintwithonlytheslackvariableontheleft handside becauseinequality istrueifandonlyifbothequation andinequality aretrue wecanconverteachinequalityconstraintofalin earprograminthiswaytoobtainanequivalentlinearprograminwhichtheonly inequalityconstraintsarethenonnegativityconstraints whenconvertingfrom standardtoslackform weshallusexnci insteadofs todenotetheslackvariableassociatedwiththeithinequality theithconstraintisthereforexncidbinxjd aijxj alongwiththenonnegativityconstraintxnci byconvertingeachconstraintofalinearprograminstandardform weobtainalinearprograminadifferentform forexample forthelinearprogramdescribedin weintroduceslackvariablesx andx obtainingmaximize subjecttox inthislinearprogram alltheconstraintsexceptforthenonnegativityconstraintsareequalities andeachvariableissubjecttoanonnegativityconstraint wewrite eachequalityconstraintwithoneofthevariablesontheleft handsideoftheequal ityandallothersontheright handside furthermore eachequationhasthesame setofvariablesontheright handside andthesevariablesarealsotheonlyones thatappearintheobjectivefunction wecallthevariablesontheleft handsideof theequalitiesbasicvariablesandthoseontheright handsidenonbasicvariables forlinearprogramsthatsatisfytheseconditions weshallsometimesomitthewords maximize subjectto aswellastheexplicitnonnegativitycon straints weshallalsousethevariable todenotethevalueoftheobjectivefunc chapter linearprogrammingtion wecalltheresultingformatslackform ifwewritethelinearprogramgivenin inslackform weobtain aswithstandardform nditconvenienttohaveamoreconcisenotationfordescribingaslackform asweshallseeinsection thesetsofbasicand nonbasicvariableswillchangeasthesimplexalgorithmruns weusentodenotethesetofindicesofthenonbasicvariablesandbtodenotethesetofindicesofthebasicvariables wealwayshavethatjnjdn jbjdm andn bdf ncmg theequationsareindexedbytheentriesofb andthevariablesontheright handsidesareindexedbytheentriesofn asinstandardform weusebi andaijtodenoteconstanttermsandcoef cients wealsousetodenoteanoptionalconstanttermintheobjectivefunction weshallseealittlelaterthatincludingtheconstanttermintheobjectivefunctionmakesiteasytodeterminethevalueoftheobjectivefunction thuswecanconciselyde neaslackformbyatuple denotingtheslackform dcxj ncjxj xidbixj naijxjfori inwhichallvariablesxareconstrainedtobenonnegative becausewesubtractthesumpj naijxjin thevaluesaijareactuallythenegativesofthecoef cientsasthey intheslackform forexample intheslackform wehavebdf ndf standardandslackforms ada bdb cdc andd notethattheindicesintoa andcarenotnecessarilysetsofcontiguousintegers theydependontheindexsetsbandn asanexampleoftheentriesofabeingthenegativesofthecoef cientsastheyappearintheslackform observethattheequationforx includesthetermx yetthecoef cienta isactually ratherthanc exercises ifweexpressthelinearprogramin inthecompactnotationof whataren andc givethreefeasiblesolutionstothelinearprogramin whatisthe objectivevalueofeachone fortheslackformin whataren convertthefollowinglinearprogramintostandardform minimize subjecttox chapter linearprogramming convertthefollowinglinearprogramintoslackform maximize subjecttox whatarethebasicandnonbasicvariables showthatthefollowinglinearprogramisinfeasible maximize subjecttox showthatthefollowinglinearprogramisunbounded maximizex subjectto supposethatwehaveagenerallinearprogramwithnvariablesandmconstraints andsupposethatweconvertitintostandardform giveanupperboundonthe numberofvariablesandconstraintsintheresultinglinearprogram giveanexampleofalinearprogramforwhichthefeasibleregionisnotbounded buttheoptimalobjectivevalueis nite formulatingproblemsaslinearprograms formulatingproblemsaslinearprogramsalthoughweshallfocusonthesimplexalgorithminthischapter itisalsoimpor tanttobeabletorecognizewhenwecanformulateaproblemasalinearprogram oncewecastaproblemasapolynomial sizedlinearprogram wecansolveit inpolynomialtimebytheellipsoidalgorithmorinterior pointmethods severallinear programmingsoftwarepackagescansolveproblemsef ciently sothatoncetheproblemisintheformofalinearprogram suchapackagecansolveit weshalllookatseveralconcreteexamplesoflinear programmingproblems westartwithtwoproblemsthatwehavealreadystudied thesingle sourceshortest pathsproblem seechapter andthemaximum owproblem seechapter wethendescribetheminimum owproblem althoughtheminimum owproblemhasapolynomial timealgorithmthatisnotbasedonlinearprogram ming wewon tdescribethealgorithm finally wedescribethemulticommodity owproblem forwhichtheonlyknownpolynomial timealgorithmisbasedon linearprogramming whenwesolvedgraphproblemsinpartvi weusedattributenotation suchasdand linearprogramstypicallyusesubscriptedvariablesratherthanobjectswithattachedattributes however therefore whenweexpressvari ablesinlinearprograms weshallindicateverticesandedgesthroughsubscripts forexample wedenotetheshortest pathweightforvertexnotbydbutbyd similarly wedenotethe owfromvertexutovertexnotby fbutbyf forquantitiesthataregivenasinputstoproblems suchasedgeweightsorcapac ities weshallcontinuetousenotationssuchasw andc shortestpathswecanformulatethesingle sourceshortest pathsproblemasalinearprogram inthissection weshallfocusonhowtoformulatethesingle pairshortest leavingtheextensiontothemoregeneralsingle sourceshortest paths problemasexercise inthesingle pairshortest pathproblem wearegivenaweighted directedgraphgd withweightfunctionwwe rmappingedgestoreal valuedweights asourcevertexs anddestinationvertext wewishtocomputethevaluedt whichistheweightofashortestpathfromstot toexpressthisprob lemasalinearprogram weneedtodetermineasetofvariablesandconstraintsthat newhenwehaveashortestpathfromstot fortunately thebellman fordal gorithmdoesexactlythis whenthebellman fordalgorithmterminates ithas computed foreachvertex avalued usingsubscriptnotationhereratherthanattributenotation suchthatforeachedge wehavedducw chapter linearprogrammingthesourcevertexinitiallyreceivesavaluedsd whichneverchanges thusweobtainthefollowinglinearprogramtocomputetheshortest pathweightfromstot maximizedt subjecttodducw foreachedge dsd youmightbesurprisedthatthislinearprogrammaximizesanobjectivefunctionwhenitissupposedtocomputeshortestpaths wedonotwanttominimizethe objectivefunction sincethensettingndd forall vwouldyieldanoptimalsolutiontothelinearprogramwithoutsolvingtheshortest pathsproblem wemaximizebecauseanoptimalsolutiontotheshortest pathsproblemsetseachndtominuw nducw sothatndisthelargestvaluethatislessthanorequaltoallofthevaluesintheset nducw wewanttomaximizedforallverticesonashortestpathfromstotsubjecttotheseconstraintsonallvertices andmaximizingdtachievesthisgoal thislinearprogramhasjvjvariablesd oneforeachvertex italsohasjejc constraints oneforeachedge plustheadditionalconstraintthatthesourcevertex sshortest pathweightalwayshasthevalue maximum ownext weexpressthemaximum owproblemasalinearprogram recallthatwearegivenadirectedgraphgd inwhicheachedge ehasanonnegativecapacityc andtwodistinguishedvertices asourcesandasinkt asde nedinsection owisanonnegativereal valuedfunctionfwvv rthatsatis esthecapacityconstraintand owconservation amaximum owisa owthatsatis estheseconstraintsandmaximizesthe whichisthetotal owcomingoutofthesourceminusthetotal owintothe source therefore satis eslinearconstraints andthevalueofa owisa linearfunction recallingalsothatweassumethatc eandthattherearenoantiparalleledges wecanexpressthemaximum owproblemas alinearprogram maximizex vfx subjecttofc foreachu vfdx vfforeachu vfs foreachu formulatingproblemsaslinearprograms thislinearprogramhasjvj variables correspondingtothe owbetweeneachpairofvertices andithas jvj cjvj constraints itisusuallymoreef cienttosolveasmaller sizedlinearprogram thelinearprogramin foreaseofnotation owandcapacityof foreachpairofverticesu itwouldbemoreef cienttorewritethelinearprogramsothatithaso vce constraints asksyoutodoso minimum owinthissection wehaveusedlinearprogrammingtosolveproblemsforwhichwealreadyknewef cientalgorithms infact anef cientalgorithmdesignedspecif icallyforaproblem suchasdijkstra salgorithmforthesingle sourceshortest pathsproblem orthepush relabelmethodformaximum willoftenbemoreef cientthanlinearprogramming bothintheoryandinpractice therealpoweroflinearprogrammingcomesfromtheabilitytosolvenewprob lems recalltheproblemfacedbythepoliticianinthebeginningofthischapter theproblemofobtainingasuf cientnumberofvotes whilenotspendingtoo muchmoney isnotsolvedbyanyofthealgorithmsthatwehavestudiedinthis yetwecansolveitbylinearprogramming booksaboundwithsuchreal worldproblemsthatlinearprogrammingcansolve linearprogrammingisalso particularlyusefulforsolvingvariantsofproblemsforwhichwemaynotalready knowofanef cientalgorithm forexample thefollowinggeneralizationofthemaximum owprob lem supposethat inadditiontoacapacityc foreachedge wearegivenareal valuedcosta asinthemaximum owproblem weassumethatc andthattherearenoantiparalleledges ifwesendfunitsof owoveredge weincuracostofa wearealsogivena owdemandd wewishtosenddunitsof owfromstotwhileminimizingthetotalcostp fincurredbythe thisproblemisknownastheminimum owproblem showsanexampleoftheminimum owproblem wewishtosend unitsof owfromstotwhileincurringtheminimumtotalcost anyparticularlegal thatis afunctionfsatisfyingconstraints incursatotalcostofp wewishto ndtheparticular owthatminimizesthiscost showsanoptimalsolution withtotal costp therearepolynomial timealgorithmsspeci callydesignedfortheminimum owproblem buttheyarebeyondthescopeofthisbook wecan however expresstheminimum owproblemasalinearprogram thelinearprogram lookssimilartotheoneforthemaximum owproblemwiththeadditionalcon chapter linearprogrammingsxty sxty anexampleofaminimum owproblem wedenotethecapacitiesbycandthecostsbya vertexsisthesourceandvertextisthesink andwewishtosend unitsof owfromstot asolutiontotheminimum owprobleminwhich unitsof owaresentfromstot foreachedge owandcapacityarewrittenas capacity straintthatthevalueofthe owbeexactlydunits andwiththenewobjectivefunctionofminimizingthecost minimizex subjecttofc foreachu vfx vfd foreachu vfs vfx vfdd foreachu multicommodity owasa nalexample weconsideranother owproblem supposethattheluckypuckcompanyfromsection decidestodiversifyitsproductlineandship notonlyhockeypucks butalsohockeysticksandhockeyhelmets eachpieceof equipmentismanufacturedinitsownfactory hasitsownwarehouse andmust beshipped eachday fromfactorytowarehouse thesticksaremanufacturedin vancouverandmustbeshippedtosaskatoon andthehelmetsaremanufacturedinedmontonandmustbeshippedtoregina thecapacityoftheshippingnetworkdoesnotchange however andthedifferentitems orcommodities mustsharethesamenetwork thisexampleisaninstanceofamulticommodity owproblem inthisproblem weareagaingivenadirectedgraphgd inwhicheachedge ehasanonnegativecapacityc asinthemaximum owproblem weim plicitlyassumethatc andthatthegraphhasnoantipar formulatingproblemsaslinearprograms alleledges inaddition wearegivenkdifferentcommodities wherewespecifycommodityibythetriplekid vertexsiisthesourceofcommodityi vertextiisthesinkofcommodityi anddiisthede mandforcommodityi whichisthedesired owvalueforthecommodityfromsitoti wede nea owforcommodityi denotedbyfi sothatfiuisthe owofcommodityifromvertexutovertex tobeareal valuedfunctionthatsatis esthe conservationandcapacityconstraints wenowde nef theaggregate tobethesumofthevariouscommodity ows sothatfdpkid fiu theaggregate owonedge mustbenomorethanthecapacityofedge wearenottryingtominimizeanyobjectivefunctioninthisproblem weneed onlydeterminewhethersucha owexists wewritealinearprogramwitha null objectivefunction minimize subjecttokxid fiuc foreachu vfiux vfud foreachid kandforeachu vfsi tig vfi vfi siddiforeachid fiu foreachu vandforeachid theonlyknownpolynomial timealgorithmforthisproblemexpressesitasalinearprogramandthensolvesitwithapolynomial timelinear programmingalgorithm exercises putthesingle pairshortest pathlinearprogramfrom intostandardform writeoutexplicitlythelinearprogramcorrespondingto ndingtheshortestpath fromnodestonodeyinfigure inthesingle sourceshortest pathsproblem wewantto ndtheshortest weightsfromasourcevertexstoallvertices givenagraphg writea chapter linearprogramminglinearprogramforwhichthesolutionhasthepropertythatdistheshortest pathweightfromstoforeachvertex writeoutexplicitlythelinearprogramcorrespondingto ndingthemaximum infigure rewritethelinearprogramformaximum sothatitusesonly vce constraints writealinearprogramthat givenabipartitegraphgd solvesthemaxi mum bipartite matchingproblem intheminimum costmulticommodity owproblem wearegivendirectedgraphgd inwhicheachedge ehasanonnegativecapacityc andacosta asinthemulticommodity owproblem wearegivenkdif ferentcommodities wherewespecifycommodityibythetriplekid wede nethe owfiforcommodityiandtheaggregate owfonedge asinthemulticommodity owproblem afeasible owisoneinwhichtheaggregate owoneachedge isnomorethanthecapacityofedge thecostofa owisp andthegoalisto ndthefeasible owofminimumcost expressthisproblemasalinearprogram thesimplexalgorithmthesimplexalgorithmistheclassicalmethodforsolvinglinearprograms incon trasttomostoftheotheralgorithmsinthisbook itsrunningtimeisnotpolynomial intheworstcase itdoesyieldinsightintolinearprograms however andisoften remarkablyfastinpractice inadditiontohavingageometricinterpretation describedearlierinthischapter thesimplexalgorithmbearssomesimilaritytogaussianelimination discussedin gaussianeliminationbeginswithasystemoflinearequalitieswhosesolutionisunknown ineachiteration werewritethissysteminanequivalentformthathassomeadditionalstructure aftersomenumberofiterations wehave rewrittenthesystemsothatthesolutionissimpletoobtain thesimplexalgo rithmproceedsinasimilarmanner andwecanviewitasgaussianeliminationfor inequalities thesimplexalgorithm wenowdescribethemainideabehindaniterationofthesimplexalgorithm associatedwitheachiterationwillbea basicsolution thatwecaneasilyobtain fromtheslackformofthelinearprogram seteachnonbasicvariableto andcomputethevaluesofthebasicvariablesfromtheequalityconstraints aniteration convertsoneslackformintoanequivalentslackform theobjectivevalueofthe associatedbasicfeasiblesolutionwillbenolessthanthatatthepreviousiteration andusuallygreater toachievethisincreaseintheobjectivevalue wechoosea nonbasicvariablesuchthatifweweretoincreasethatvariable svaluefrom thentheobjectivevaluewouldincrease theamountbywhichwecanincreasethevariableislimitedbytheotherconstraints inparticular weraiseituntilsome basicvariablebecomes wethenrewritetheslackform exchangingtherolesofthatbasicvariableandthechosennonbasicvariable althoughwehaveuseda particularsettingofthevariablestoguidethealgorithm andweshalluseitinour proofs thealgorithmdoesnotexplicitlymaintainthissolution itsimplyrewrites thelinearprogramuntilanoptimalsolutionbecomes obvious anexampleofthesimplexalgorithmwebeginwithanextendedexample considerthefollowinglinearprograminstandardform maximize subjecttox inordertousethesimplexalgorithm wemustconvertthelinearprogramintoslackform wesawhowtodosoinsection inadditiontobeinganalgebraic manipulation slackisausefulalgorithmicconcept recallingfromsection thateachvariablehasacorrespondingnonnegativityconstraint wesaythatan equalityconstraintistightforaparticularsettingofitsnonbasicvariablesiftheycausetheconstraint sbasicvariabletobecome similarly asettingofthenon basicvariablesthatwouldmakeabasicvariablebecomenegativeviolatesthatconstraint theslackvariablesexplicitlymaintainhowfareachconstraintisfrombeingtight andsotheyhelptodeterminehowmuchwecanincreasevaluesofnonbasicvariableswithoutviolatinganyconstraints associatingtheslackvariablesx andx withinequalities respectively andputtingthelinearprogramintoslackform weobtain chapter linearprogramming thesystemofconstraints equationsand variables anysettingofthevariablesx andx nesvaluesforx andx therefore wehaveanin nitenumberofsolutionstothissystemofequations asolutionis feasibleifallofx arenonnegative andtherecanbeanin nitenum beroffeasiblesolutionsaswell thein nitenumberofpossiblesolutionstoa systemsuchasthisonewillbeusefulinlaterproofs wefocusonthebasicsolu tion setallthe nonbasic variablesontheright handsideto andthencomputethevaluesofthe variablesontheleft handside inthisexample theba sicsolutionis andithasobjectivevalue observethatthisbasicsolutionsetsnxidbiforeachi aniterationofthesimplexalgorithmrewritesthesetofequationsandtheobjectivefunctionsoastoputadifferentsetofvariablesontheright handside adifferentbasicsolutionisassociatedwiththerewrittenproblem weemphasizethattherewritedoesnotinanywaychangetheunderlyinglinear programmingproblem theproblematoneiterationhastheidenticalsetoffeasiblesolutionsastheproblematthepreviousiteration theproblemdoes however haveadifferentbasicsolutionthanthatofthepreviousiteration ifabasicsolutionisalsofeasible wecallitabasicfeasiblesolution aswerunthesimplexalgorithm thebasicsolutionisalmostalwaysabasicfeasiblesolution weshallseeinsection however thatforthe rstfewiterationsofthesimplex algorithm thebasicsolutionmightnotbefeasible ourgoal ineachiteration istoreformulatethelinearprogramsothatthebasicsolutionhasagreaterobjectivevalue weselectanonbasicvariablexewhosecoef cientintheobjectivefunctionispositive andweincreasethevalueofxeasmuchaspossiblewithoutviolatinganyoftheconstraints thevariablexebecomesbasic andsomeothervariablexlbecomesnonbasic thevaluesofotherbasicvariablesandoftheobjectivefunctionmayalsochange tocontinuetheexample sthinkaboutincreasingthevalueofx asweincreasex thevaluesofx andx alldecrease becausewehaveanonnega tivityconstraintforeachvariable wecannotallowanyofthemtobecomenegative ifx increasesabove thenx becomesnegative andx andx becomenega tivewhenx increasesabove respectively thethirdconstraint isthetightestconstraint anditlimitshowmuchwecanincreasex therefore weswitchtherolesofx andx wesolveequation forx andobtainx thesimplexalgorithm torewritetheotherequationswithx ontheright handside wesubstituteforx usingequation doingsoforequation weobtainx similarly wecombineequation withconstraint andwithobjectivefunction torewriteourlinearprograminthefollowingform wecallthisoperationapivot asdemonstratedabove apivotchoosesanonbasicvariablexe calledtheenteringvariable andabasicvariablexl calledtheleavingvariable andexchangestheirroles thelinearprogramdescribedinequations isequivalenttothelinearprogramdescribedinequations weperformtwooperationsinthesimplexalgorithm rewriteequationssothatvariablesmovebetweentheleft handsideandtheright handside andsubstituteoneequationintoanother rst operationtriviallycreatesanequivalentproblem andthesecond byelementary linearalgebra alsocreatesanequivalentproblem seeexercise todemonstratethisequivalence observethatouroriginalbasicsolution satis esthenewequations andhasobjectivevalue thebasicsolutionassociatedwiththenewlinearprogramsetsthenonbasicvaluesto andis withob jectivevalue simplearithmeticveri esthatthissolutionalsosatis esequations whenpluggedintoobjectivefunction objectivevalue continuingtheexample wewishto ndanewvariablewhosevaluewewishtoincrease wedonotwanttoincreasex sinceasitsvalueincreases theobjectivevaluedecreases wecanattempttoincreaseeitherx orx letuschoosex howfarcanweincreasex withoutviolatinganyoftheconstraints constraint limitsitto constraint limitsitto andconstraint limitsitto thethirdconstraintisagainthetightestone andthereforewerewritethethirdconstraintsothatx isontheleft handsideandx isontheright chapter linearprogrammingside wethensubstitutethisnewequation intoequations andobtainthenew butequivalent thissystemhastheassociatedbasicsolution withob jectivevalue nowtheonlywaytoincreasetheobjectivevalueistoin creasex thethreeconstraintsgiveupperboundsof respectively wegetanupperboundof fromconstraint because asweincreasex thevalueofthebasicvariablex increasesalso thisconstraint therefore placesnorestrictiononhowmuchwecanincreasex weincreasex anditbe comesnonbasic thenwesolveequation forx andsubstituteintheotherequationstoobtain atthispoint allcoef cientsintheobjectivefunctionarenegative asweshallseelaterinthischapter thissituationoccursonlywhenwehaverewrittenthelinear programsothatthebasicsolutionisanoptimalsolution forthisproblem thesolution withobjectivevalue isoptimal wecannowreturntoouroriginallinearprogramgivenin theonlyvariables intheoriginallinearprogramarex andx andsooursolutionisx andx withobjectivevalue notethatthevaluesoftheslackvariablesinthe nalsolutionmeasurehowmuchslack remainsineachinequality slackvariablex andininequality theleft handside withvalue lessthantheright handsideof slackvariablesx andx andindeed ininequalities theleft handandright handsidesareequal observealsothateventhoughthecoef cientsintheoriginalslackformareintegral thecoef cientsintheotherlinearprogramsarenotnecessarilyintegral andtheintermediatesolutionsarenot thesimplexalgorithm necessarilyintegral furthermore nalsolutiontoalinearprogramneednotbeintegral itispurelycoincidentalthatthisexamplehasanintegralsolution pivotingwenowformalizetheprocedureforpivoting theprocedurepivottakesasin putaslackform givenbythetuple theindexloftheleav ingvariablexl andtheindexeoftheenteringvariablexe itreturnsthetuple ydescribingthenewslackform recallagainthattheentriesofthemnmatricesaandyaareactuallythenegativesofthecoef cientsthatappearintheslackform pivot computethecoef cientsoftheequationfornewbasicvariablexe letyabeanewmnmatrix ybedbl ale foreachj nfeg yaejdalj ale yaeld ale computethecoef cientsoftheremainingconstraints foreachi bflg ybidbiaieybe foreachj nfeg yaijdaijaieyaej yailaieyael computetheobjectivefunction ydcceybe foreachj nfeg ycjdcjceyaej yclceyael computenewsetsofbasicandnonbasicvariables yndnfeg flg ybdbflg feg return ypivotworksasfollows lines computethecoef cientsinthenewequationforxebyrewritingtheequationthathasxlontheleft handsidetoinsteadhavexeontheleft handside lines updatetheremainingequationsbysubstitutingtheright handsideofthisnewequationforeachoccurrenceofxe lines dothesamesubstitutionfortheobjectivefunction andlines updatethe chapter linearprogrammingsetsofnonbasicandbasicvariables returnsthenewslackform asgiven ifaled pivotwouldcauseanerrorbydividingby butasweshallseeintheproofsoflemmas wecallpivotonlywhenale wenowsummarizetheeffectthatpivothasonthevaluesofthevariablesinthebasicsolution lemma consideracalltopivot inwhichale letthevaluesreturnedfromthecallbe andletnxdenotethebasicsolutionafterthecall nxjd foreachj nxedbl ale nxidbiaieybeforeachi ybfeg proofthe rststatementistruebecausethebasicsolutionalwayssetsallnon basicvariablesto whenweseteachnonbasicvariableto inaconstraintxidybixj ynyaijxj wehavethatnxidybiforeachi sincee ofpivotgivesnxedybedbl ale whichprovesthesecondstatement similarly usingline foreachi ybfeg wehavenxidybidbiaieybe whichprovesthethirdstatement theformalsimplexalgorithmwearenowreadytoformalizethesimplexalgorithm whichwedemonstratedbyexample thatexamplewasaparticularlyniceone andwecouldhavehadseveral otherissuestoaddress howdowedeterminewhetheralinearprogramisfeasible whatdowedoifthelinearprogramisfeasible buttheinitialbasicsolutionis notfeasible howdowedeterminewhetheralinearprogramisunbounded howdowechoosetheenteringandleavingvariables thesimplexalgorithm insection weshallshowhowtodeterminewhetheraproblemisfeasible andifso howto ndaslackforminwhichtheinitialbasicsolutionisfeasible therefore letusassumethatwehaveaprocedureinitialize simplex thattakesasinputalinearprograminstandardform thatis anmnmatrixad aij anm vectorbd andann vectorcd iftheproblemisinfeasible theprocedurereturnsamessagethattheprogramisinfeasibleandthen terminates otherwise theprocedurereturnsaslackformforwhichtheinitial basicsolutionisfeasible theproceduresimplextakesasinputalinearprograminstandardform asjustdescribed itreturnsann vectornxd nxj thatisanoptimalsolutiontothelinearprogramdescribedin simplex dinitialize simplex letbeanewvectoroflengthn whilesomeindexj nhascj chooseanindexe nforwhichce foreachindexi ifaie idbi aie elseid chooseanindexl bthatminimizesi ifl return unbounded dpivot forid ton ifi nxidbi elsenxid return nxn thesimplexprocedureworksasfollows inline itcallstheprocedureinitialize simplex describedabove whicheitherdeterminesthatthelinearprogramisinfeasibleorreturnsaslackformforwhichthebasicsolutionis feasible thewhileloopoflines formsthemainpartofthealgorithm ifallcoef cientsintheobjectivefunctionarenegative thenthewhileloopterminates otherwise selectsavariablexe whosecoef cientintheobjectivefunctionispositive astheenteringvariable althoughwemaychooseanysuchvariableastheenteringvariable weassumethatweusesomeprespeci eddeterministicrule lines checkeachconstraintandpicktheonethatmostseverelylimitstheamountbywhichwecanincreasexewithoutviolatinganyofthenonnegativ chapter linearprogrammingityconstraints thebasicvariableassociatedwiththisconstraintisxl wearefreetochooseoneofseveralvariablesastheleavingvariable butweassume thatweusesomeprespeci eddeterministicrule ifnoneoftheconstraintslim itstheamountbywhichtheenteringvariablecanincrease thealgorithmreturns unbounded inline otherwise exchangestherolesoftheentering andleavingvariablesbycallingpivot asdescribedabove lines computeasolutionnx nxnfortheoriginallinear programmingvariablesbysettingallthenonbasicvariablesto andeachbasicvariablenxitobi andline returnsthesevalues toshowthatsimplexiscorrect rstshowthatifsimplexhasaninitialfeasiblesolutionandeventuallyterminates theniteitherreturnsafeasiblesolution ordeterminesthatthelinearprogramisunbounded weshowthatsimplexterminates finally insection theorem weshowthatthesolution returnedisoptimal lemma givenalinearprogram supposethatthecalltoinitialize simplexinline ofsimplexreturnsaslackformforwhichthebasicsolutionisfeasible thenifsimplexreturnsasolutioninline thatsolutionisafeasiblesolutiontothelinearprogram ifsimplexreturns unbounded inline thelinearprogramisunbounded proofweusethefollowingthree partloopinvariant atthestartofeachiterationofthewhileloopoflines theslackformisequivalenttotheslackformreturnedbythecallofinitialize simplex foreachi wehavebi thebasicsolutionassociatedwiththeslackformisfeasible initialization theequivalenceoftheslackformsistrivialforthe rstitera tion weassume inthestatementofthelemma thatthecalltoinitialize simplexinline ofsimplexreturnsaslackformforwhichthebasicsolutionisfeasible thethirdpartoftheinvariantistrue becausethebasicso lutionisfeasible eachbasicvariablexiisnonnegative furthermore sincethebasicsolutionsetseachbasicvariablexitobi wehavethatbi foralli thesecondpartoftheinvariantholds maintenance weshallshowthateachiterationofthewhileloopmaintainstheloopinvariant assumingthatthereturnstatementinline doesnotexecute weshallhandlethecaseinwhichline executeswhenwediscusstermination thesimplexalgorithm aniterationofthewhileloopexchangestheroleofabasicandanonbasicvariablebycallingthepivotprocedure byexercise theslackformisequivalenttotheonefromthepreviousiterationwhich bytheloopinvariant isequivalenttotheinitialslackform wenowdemonstratethesecondpartoftheloopinvariant weassumethatatthestartofeachiterationofthewhileloop foreachi andweshallshowthattheseinequalitiesremaintrueafterthecalltopivotinline sincetheonlychangestothevariablesbiandthesetbofbasicvariablesoccurinthisassignment itsuf cestoshowthatline maintainsthispartoftheinvariant weletbi aij andbrefertovaluesbeforethecallofpivot andybirefertovaluesreturnedfrompivot weobservethatybe becausebl bytheloopinvariant ale bylines ofsimplex andybedbl alebyline ofpivot fortheremainingindicesi bflg wehavethatybidbiaieybe byline ofpivot dbiaie ale byline ofpivot wehavetwocasestoconsider dependingonwhetheraie oraie ifaie thensincewechoselsuchthatbl alebi aieforalli wehaveybidbiaie ale byequation biaie aie byinequality dbibid andthusybi ifaie thenbecauseale andblareallnonnegative equation impliesthatybimustbenonnegative wenowarguethatthebasicsolutionisfeasible thatallvariableshavenon negativevalues thenonbasicvariablesaresetto andthusarenonnegative eachbasicvariablexiisde nedbytheequationxidbixj naijxj thebasicsolutionsetsnxidbi usingthesecondpartoftheloopinvariant weconcludethateachbasicvariablenxiisnonnegative chapter linearprogrammingtermination thewhileloopcanterminateinoneoftwoways ifitterminatesbecauseoftheconditioninline thenthecurrentbasicsolutionisfeasibleand returnsthissolution theotherwayitterminatesisbyreturning bounded inline inthiscase foreachiterationoftheforloopinlines whenline isexecuted ndthataie considerthesolutionnxde nedasnxid ifide ifi nfeg bipj naijnxjifi wenowshowthatthissolutionisfeasible thatallvariablesarenonneg ative thenonbasicvariablesotherthannxeare andnxed thusallnonbasicvariablesarenonnegative foreachbasicvariablenxi wehavenxidbixj naijnxjdbiaienxe theloopinvariantimpliesthatbi andwehaveaie andnxed nxi nowweshowthattheobjectivevalueforthesolutionnxisunbounded fromequation theobjectivevalueis dcxj ncjnxjdccenxe sincece byline ofsimplex andnxed theobjectivevalueis andthusthelinearprogramisunbounded itremainstoshowthatsimplexterminates andwhenitdoesterminate thesolutionitreturnsisoptimal willaddressoptimality wenowdiscuss termination terminationintheexamplegiveninthebeginningofthissection eachiterationofthesimplexalgorithmincreasedtheobjectivevalueassociatedwiththebasicsolution asex ercise asksyoutoshow noiterationofsimplexcandecreasetheobjectivevalueassociatedwiththebasicsolution unfortunately itispossiblethatanitera tionleavestheobjectivevalueunchanged thisphenomenoniscalleddegeneracy andweshallnowstudyitingreaterdetail thesimplexalgorithm theassignmentinline ofpivot ydcceybe changestheobjectivevalue sincesimplexcallspivotonlywhence theonlywayfortheobjectivevaluetoremainunchanged isforybetobe thisvalueisassignedasybedbl aleinline ofpivot sincewealwayscallpivotwithale weseethatforybetoequal andhencetheobjectivevaluetobeunchanged wemusthavebld indeed thissituationcanoccur considerthelinearprogram supposethatwechoosex astheenteringvariableandx astheleavingvariable afterpivoting weobtain atthispoint ouronlychoiceistopivotwithx enteringandx leaving sinceb theobjectivevalueof remainsunchangedafterpivoting theobjectivevaluehasnotchanged butourslackformhas fortunately ifwepivotagain withx enteringandx leaving theobjectivevalueincreases andthesimplexalgorithmcancontinue degeneracycanpreventthesimplexalgorithmfromterminating becauseitcanleadtoaphenomenonknownascycling theslackformsattwodifferentitera tionsofsimplexareidentical becauseofdegeneracy simplexcouldchooseasequenceofpivotoperationsthatleavetheobjectivevalueunchangedbutrepeataslackformwithinthesequence sincesimplexisadeterministicalgorithm ifitcycles thenitwillcyclethroughthesameseriesofslackformsforever neverterminating cyclingistheonlyreasonthatsimplexmightnotterminate toshowthisfact wemust rstdevelopsomeadditionalmachinery ateachiteration simplexmaintainsa andinadditiontothesetsnandb althoughweneedtoexplicitlymaintaina andinordertoimplementthesimplexalgorithmef ciently wecangetbywithoutmaintainingthem inotherwords thesetsofbasicandnonbasicvariablessuf cetouniquelydeterminetheslackform beforeprovingthisfact weproveausefulalgebraic lemma chapter linearprogramminglemma letibeasetofindices foreachj jand jberealnumbers andletxjbeareal valuedvariable letbeanyrealnumber supposethatforanysettingsofthexj wehavexj jxjdcxj jxj jforeachj andd proofsinceequation holdsforanyvaluesofthexj wecanuseparticularvaluestodrawconclusionsabout ifweletxjd foreachj weconcludethatd nowpickanarbitraryindexj andsetxjd andxkd forallk thenwemusthave sincewepickedjasanyindexini weconcludethat jforeachj aparticularlinearprogramhasmanydifferentslackforms recallthateachslackformhasthesamesetoffeasibleandoptimalsolutionsastheoriginallinearpro gram wenowshowthattheslackformofalinearprogramisuniquelydetermined bythesetofbasicvariables thatis giventhesetofbasicvariables auniqueslack uniquesetofcoef cientsandright handsides isassociatedwiththosebasic variables lemma bealinearprograminstandardform givenasetbofbasicvariables theassociatedslackformisuniquelydetermined proofassumeforthepurposeofcontradictionthattherearetwodifferentslackformswiththesamesetbofbasicvariables theslackformsmustalsohaveidenticalsetsndf ncmgbofnonbasicvariables wewritethe rstslackformas dcxj ncjxj xidbixj naijxjfori andthesecondas cxj jxj xidb ixj ijxjfori thesimplexalgorithm considerthesystemofequationsformedbysubtractingeachequationinline fromthecorrespondingequationinline theresultingsys temis bib aija xjfori bor equivalently naijxjd bib cxj ijxjfori foreachi applylemma jdaij jda dbib andidn wehavethataijda ijforeachj andsinced wehavethatbidb forthetwoslackforms aandbareidenticaltoa andb usingasimilarargument showsthatitmustalsobethecasethatcdc andd andhencethattheslackformsmustbeidentical wecannowshowthatcyclingistheonlypossiblereasonthatsimplexmightnotterminate lemma ifsimplexfailstoterminateinatmostncmmiterations thenitcycles proofbylemma thesetbofbasicvariablesuniquelydeterminesaslackform therearencmvariablesandjbjdm andtherefore thereareatmostncmmwaystochooseb thereareonlyatmostncmmuniqueslackforms therefore ifsimplexrunsformorethanncmmiterations itmustcycle cyclingistheoreticallypossible butextremelyrare wecanpreventitbychoos ingtheenteringandleavingvariablessomewhatmorecarefully oneoptionisto perturbtheinputslightlysothatitisimpossibletohavetwosolutionswiththe sameobjectivevalue anotheroptionistobreaktiesbyalwayschoosingthevari ablewiththesmallestindex astrategyknownasbland srule weomittheproofthatthesestrategiesavoidcycling lemma iflines ofsimplexalwaysbreaktiesbychoosingthevariablewiththesmallestindex thensimplexmustterminate weconcludethissectionwiththefollowinglemma chapter linearprogramminglemma assumingthatinitialize simplexreturnsaslackformforwhichthebasicso lutionisfeasible simplexeitherreportsthatalinearprogramisunbounded oritterminateswithafeasiblesolutioninatmostncmmiterations prooflemmas showthatifinitialize simplexreturnsaslackformforwhichthebasicsolutionisfeasible simplexeitherreportsthatalinearprogramisunbounded oritterminateswithafeasiblesolution bythecontra positiveoflemma ifsimplexterminateswithafeasiblesolution thenitterminatesinatmostncmmiterations exercises completetheproofoflemma byshowingthatitmustbethecasethatcdc andd showthatthecalltopivotinline ofsimplexneverdecreasesthevalueof provethattheslackformgiventothepivotprocedureandtheslackformthattheprocedurereturnsareequivalent supposeweconvertalinearprogram instandardformtoslackform showthatthebasicsolutionisfeasibleifandonlyifbi forid solvethefollowinglinearprogramusingsimplex maximize subjecttox duality solvethefollowinglinearprogramusingsimplex maximize subjecttox solvethefollowinglinearprogramusingsimplex minimizex subjectto intheproofoflemma wearguedthatthereareatmostmcnnwaystochooseasetbofbasicvariables giveanexampleofalinearprograminwhichtherearestrictlyfewerthanmcnnwaystochoosethesetb dualitywehaveproventhat undercertainassumptions simplexterminates wehavenotyetshownthatitactually ndsanoptimalsolutiontoalinearprogram however inordertodoso weintroduceapowerfulconceptcalledlinear programmingduality dualityenablesustoprovethatasolutionisindeedoptimal wesawanexam pleofdualityinchapter withtheorem themax owmin cuttheorem supposethat givenaninstanceofamaximum owproblem nda owfwithvaluejfj howdoweknowwhetherfisamaximum bythemax owmin cuttheorem ifwecan ndacutwhosevalueisalsojfj thenwehavever edthatfisindeedamaximum thisrelationshipprovidesanexampleofduality givenamaximizationproblem wede nearelatedminimizationproblem suchthatthetwoproblemshavethesameoptimalobjectivevalues givenalinearprograminwhichtheobjectiveistomaximize weshalldescribehowtoformulateaduallinearprograminwhichtheobjectiveistominimizeand chapter linearprogrammingwhoseoptimalvalueisidenticaltothatoftheoriginallinearprogram whenrefer ringtoduallinearprograms wecalltheoriginallinearprogramtheprimal givenaprimallinearprograminstandardform asin wede netheduallinearprogramasminimizemxid biyi subjecttomxid aijyicjforjd forid toformthedual wechangethemaximizationtoaminimization exchangetherolesofcoef cientsontheright handsidesandtheobjectivefunction andreplace eachless tobyagreater eachofthemconstraintsintheprimalhasanassociatedvariableyiinthedual andeachofthenconstraintsinthedualhasanassociatedvariablexjintheprimal forexample considerthelinearprogramgivenin thedualofthislinearprogramisminimize subjecttoy weshallshowintheorem thattheoptimalvalueoftheduallinearpro gramisalwaysequaltotheoptimalvalueoftheprimallinearprogram further thesimplexalgorithmactuallyimplicitlysolvesboththeprimalandtheduallinearprogramssimultaneously therebyprovidingaproofofoptimality webeginbydemonstratingweakduality whichstatesthatanyfeasiblesolu tiontotheprimallinearprogramhasavaluenogreaterthanthatofanyfeasiblesolutiontotheduallinearprogram lemma weaklinear programmingduality letnxbeanyfeasiblesolutiontotheprimallinearprogramin andletnybeanyfeasiblesolutiontotheduallinearprogramin wehavenxjd cjnxjmxid binyi duality proofwehavenxjd cjnxjnxjd mxid aijnyi nxj byinequalities dmxid nxjd aijnxj nyimxid binyi byinequalities corollary letnxbeafeasiblesolutiontoaprimallinearprogram andletnybeafeasiblesolutiontothecorrespondingduallinearprogram ifnxjd cjnxjdmxid binyi thennxandnyareoptimalsolutionstotheprimalandduallinearprograms respec tively proofbylemma theobjectivevalueofafeasiblesolutiontotheprimalcannotexceedthatofafeasiblesolutiontothedual theprimallinearprogramis amaximizationproblemandthedualisaminimizationproblem iffeasible solutionsnxandnyhavethesameobjectivevalue neithercanbeimproved beforeprovingthattherealwaysisadualsolutionwhosevalueisequaltothatofanoptimalprimalsolution wedescribehowto ndsuchasolution weranthesimplexalgorithmonthelinearprogramin nal iterationyieldedtheslackform withobjective bdf andndf asweshallshowbelow thebasicsolutionassociatedwiththe nalslackformisindeedanoptimalsolutiontothe linearprogram anoptimalsolutiontolinearprogram istherefore withobjectivevalue aswealsoshowbelow wecanreadoffanoptimaldualsolution thenegativesofthe coef cientsoftheprimalobjectivefunctionarethevaluesofthedualvariables moreprecisely supposethatthelastslackformoftheprimalis cxj jxjxidb ixj ijxjfori chapter linearprogrammingthen toproduceanoptimaldualsolution wesetnyid nciif nci otherwise anoptimalsolutiontotheduallinearprogramde nedin isny sincenc andny evaluatingthedualobjectivefunction weobtainanobjectivevalueof whichcon rmsthattheobjectivevalueoftheprimalisindeedequaltotheobjectivevalueofthedual combiningthese calculationswithlemma yieldsaproofthattheoptimalobjectivevalueoftheprimallinearprogramis wenowshowthatthisapproachappliesingeneral wecan ndanoptimalsolutiontothedualandsimultaneouslyprovethatasolution totheprimalisoptimal theorem linear programmingduality supposethatsimplexreturnsvaluesnxd nxn fortheprimallin earprogram letnandbdenotethenonbasicandbasicvariablesforthe nalslackform letc denotethecoef cientsinthe nalslackform andletnyd nym bede nedbyequation thennxisanoptimalso lutiontotheprimallinearprogram nyisanoptimalsolutiontotheduallinearprogram andnxjd cjnxjdmxid binyi proofbycorollary ifwecan ndfeasiblesolutionsnxandnythatsatisfyequation thennxandnymustbeoptimalprimalanddualsolutions weshallnowshowthatthesolutionsnxandnydescribedinthestatementofthetheoremsatisfyequation supposethatwerunsimplexonaprimallinearprogram asgiveninlines thealgorithmproceedsthroughaseriesofslackformsuntilit terminateswitha nalslackformwithobjectivefunction cxj jxj sincesimplexterminatedwithasolution bytheconditioninline weknowthatc forallj duality ifwede nec forallj wecanrewriteequation cxj jxjd cxj jxjcxj jxj becausec ifj cncmxjd jxj becausen bdf ncmg forthebasicsolutionnxassociatedwiththis nalslackform nxjd forallj sinceallslackformsareequivalent ifweevaluatetheoriginalobjec tivefunctiononnx wemustobtainthesameobjectivevalue nxjd cjnxjd cncmxjd jnxj cxj jnxjcxj jnxjd cxj cxj weshallnowshowthatny nedbyequation isfeasiblefortheduallinearprogramandthatitsobjectivevaluepmid binyiequalspnjd cjnxj equa tion saysthatthe rstandlastslackforms evaluatedatnx areequal moregenerally theequivalenceofallslackformsimpliesthatforanysetofvaluesxd wehavenxjd cjxjd cncmxjd jxj therefore foranyparticularsetofvaluesnxd nxn wehave chapter linearprogrammingnxjd cjnxjd cncmxjd jnxjd cnxjd jnxjcncmxjdnc jnxjd cnxjd jnxjcmxid ncinxncid cnxjd jnxjcmxid nxnci byequations cnxjd jnxjcmxid binxjd aijnxj byequation cnxjd jnxjmxid binyicmxid nxjd aijnxj nyid cnxjd jnxjmxid binyicnxjd mxid aijnyi nxjd mxid binyi cnxjd jcmxid aijnyi nxj sothatnxjd cjnxjd mxid binyi cnxjd jcmxid aijnyi nxj applyinglemma toequation weobtain mxid binyid jcmxid aijnyidcjforjd byequation wehavethatpmid binyid andhencetheobjectivevalueofthedualpmid binyiisequaltothatoftheprimal itremainstoshow duality thatthesolutionnyisfeasibleforthedualproblem frominequalities andequations wehavethatc foralljd ncm hence foranyjd equations implythatcjdc jcmxid aijnyimxid aijnyi whichsatis estheconstraints ofthedual finally sincec foreachj whenwesetnyaccordingtoequation wehavethateachnyi andsothenonnegativityconstraintsaresatis edaswell wehaveshownthat givenafeasiblelinearprogram ifinitialize simplexreturnsafeasiblesolution andifsimplexterminateswithoutreturning bounded thenthesolutionreturnedisindeedanoptimalsolution wehavealsoshownhowtoconstructanoptimalsolutiontotheduallinearprogram exercises formulatethedualofthelinearprogramgiveninexercise supposethatwehavealinearprogramthatisnotinstandardform wecould producethedualby rstconvertingittostandardform andthentakingthedual itwouldbemoreconvenient however tobeabletoproducethedualdirectly explainhowwecandirectlytakethedualofanarbitrarylinearprogram writedownthedualofthemaximum owlinearprogram asgiveninlines onpage explainhowtointerpretthisformulationasa minimum cutproblem writedownthedualoftheminimum owlinearprogram asgiveninlines onpage explainhowtointerpretthisproblemintermsof graphsand ows showthatthedualofthedualofalinearprogramistheprimallinearprogram chapter linearprogramming whichresultfromchapter canbeinterpretedasweakdualityforthemaximum owproblem theinitialbasicfeasiblesolutioninthissection rstdescribehowtotestwhetheralinearprogramisfeasible andifitis howtoproduceaslackformforwhichthebasicsolutionisfeasible weconcludebyprovingthefundamentaltheoremoflinearprogramming saysthatthesimplexprocedurealwaysproducesthecorrectresult findinganinitialsolutioninsection weassumedthatwehadaprocedureinitialize simplexthatdetermineswhetheralinearprogramhasanyfeasiblesolutions andifitdoes gives aslackformforwhichthebasicsolutionisfeasible wedescribethisprocedure alinearprogramcanbefeasible yettheinitialbasicsolutionmightnotbefeasible forexample thefollowinglinearprogram maximize subjectto ifweweretoconvertthislinearprogramtoslackform thebasicsolutionwouldsetx andx thissolutionviolatesconstraint andsoitisnotafeasiblesolution initialize simplexcannotjustreturntheobviousslackform inordertodeterminewhetheralinearprogramhasanyfeasiblesolutions wewillformulateanauxiliarylinearprogram forthisauxiliarylinearprogram wecan withalittlework aslackformforwhichthebasicsolutionisfeasible furthermore thesolutionofthisauxiliarylinearprogramdetermineswhethertheinitiallinearprogramisfeasibleandifso itprovidesafeasiblesolutionwithwhich wecaninitializesimplex lemma letlbealinearprograminstandardform givenasin letx beanewvariable andletlauxbethefollowinglinearprogramwithnc variables theinitialbasicfeasiblesolution maximizex subjecttonxjd aijxjx biforid forjd thenlisfeasibleifandonlyiftheoptimalobjectivevalueoflauxis proofsupposethatlhasafeasiblesolutionnxd nxn thenthesolutionnx combinedwithnxisafeasiblesolutiontolauxwithobjectivevalue sincex isaconstraintoflauxandtheobjectivefunctionistomaximizex thissolutionmustbeoptimalforlaux conversely supposethattheoptimalobjectivevalueoflauxis thennx andtheremainingsolutionvaluesofnxsatisfytheconstraintsofl wenowdescribeourstrategyto ndaninitialbasicfeasiblesolutionforalinearprogramlinstandardform initialize simplex letkbetheindexoftheminimumbi ifbk istheinitialbasicsolutionfeasible return fnc ncmg formlauxbyaddingx totheleft handsideofeachconstraintandsettingtheobjectivefunctiontox betheresultingslackformforlaux ldnck lauxhasnc nonbasicvariablesandmbasicvariables dpivot thebasicsolutionisnowfeasibleforlaux iteratethewhileloopoflines ofsimplexuntilanoptimalsolutiontolauxisfound iftheoptimalsolutiontolauxsetsnx ifnx isbasic performone degenerate pivottomakeitnonbasic fromthe nalslackformoflaux removex fromtheconstraintsandrestoretheoriginalobjectivefunctionofl butreplaceeachbasicvariableinthisobjectivefunctionbytheright handsideofitsassociatedconstraint returnthemodi nalslackform elsereturn infeasible chapter linearprogramminginitialize simplexworksasfollows inlines weimplicitlytestthebasicsolutiontotheinitialslackformforlgivenbyndf bdfnc ncmg nxidbiforalli andnxjd forallj creatingtheslackformrequiresnoexpliciteffort asthevaluesofa andcarethesameinbothslackandstandardforms ifline ndsthisbasicsolutiontobe feasible thatis nxi foralli thenline returnstheslackform otherwise inline weformtheauxiliarylinearprogramlauxasinlemma sincetheinitialbasicsolutiontolisnotfeasible theinitialbasicsolutiontotheslackformforlauxcannotbefeasibleeither ndabasicfeasiblesolution weperformasinglepivotoperation selectsldnckastheindexofthebasicvariablethatwillbetheleavingvariableintheupcomingpivotoperation sincethebasicvariablesarexnc xnc xncm theleavingvariablexlwillbetheonewiththemostnegativevalue performsthatcallofpivot withx enteringandxlleaving weshallseeshortlythatthebasicsolutionresultingfromthiscallofpivotwillbefeasible nowthatwehaveaslackformforwhichthebasicsolutionisfeasible wecan inline repeatedlycallpivottofullysolvetheauxiliarylinearprogram asthetestinline demonstrates ifwe anoptimalsolutiontolauxwithobjectivevalue theninlines wecreateaslackformforlforwhichthebasicsolutionisfeasible todoso rst inlines handlethedegeneratecaseinwhichx maystillbebasicwithvaluenx inthiscase weperformapivotsteptoremovex fromthebasis usinganye nsuchthata astheenteringvariable thenewbasicsolutionremainsfeasible thedegeneratepivotdoesnotchangethevalueofanyvariable nextwedeleteallx termsfromtheconstraintsandrestoretheoriginalobjectivefunctionforl theoriginalobjectivefunctionmaycontainbothbasicandnonbasicvariables therefore intheobjectivefunctionwereplaceeachbasic variablebytheright handsideofitsassociatedconstraint thenreturns thismodi edslackform ontheotherhand discoversthattheoriginal linearprogramlisinfeasible thenline returnsthisinformation wenowdemonstratetheoperationofinitialize simplexonthelinearpro gram thislinearprogramisfeasibleifwecan ndnonneg ativevaluesforx andx thatsatisfyinequalities usinglemma weformulatetheauxiliarylinearprogrammaximizex subjectto bylemma iftheoptimalobjectivevalueofthisauxiliarylinearprogramis thentheoriginallinearprogramhasafeasiblesolution iftheoptimalobjective theinitialbasicfeasiblesolution valueofthisauxiliarylinearprogramisnegative thentheoriginallinearprogramdoesnothaveafeasiblesolution wewritethislinearprograminslackform obtaining wearenotoutofthewoodsyet becausethebasicsolution whichwouldsetx isnotfeasibleforthisauxiliarylinearprogram wecan however withonecalltopivot convertthisslackformintooneinwhichthebasicsolutionisfeasible asline indicates wechoosex tobetheenteringvariable inline wechooseastheleavingvariablex whichisthebasicvariablewhosevalueinthebasicsolutionismostnegative afterpivoting wehavetheslackform theassociatedbasicsolutionis whichisfeasi ble wenowrepeatedlycallpivotuntilweobtainanoptimalsolutiontolaux inthiscase onecalltopivotwithx enteringandx leavingyields thisslackformisthe nalsolutiontotheauxiliaryproblem sincethissolutionhasx weknowthatourinitialproblemwasfeasible furthermore sincex wecanjustremoveitfromthesetofconstraints wethenrestoretheoriginalobjectivefunction withappropriatesubstitutionsmadetoincludeonly nonbasicvariables inourexample wegettheobjectivefunction settingx andsimplifying wegettheobjectivefunction andtheslackform chapter linearprogramming thisslackformhasafeasiblebasicsolution andwecanreturnittoproceduresimplex wenowformallyshowthecorrectnessofinitialize simplex lemma ifalinearprogramlhasnofeasiblesolution theninitialize simplexreturns infeasible otherwise itreturnsavalidslackformforwhichthebasicsolution isfeasible prooffirstsupposethatthelinearprogramlhasnofeasiblesolution thenbylemma theoptimalobjectivevalueoflaux nedin isnonzero andbythenonnegativityconstraintonx theoptimalobjectivevaluemustbenegative furthermore thisobjectivevaluemustbe nite sincesetting xid forid andx djminmid fbigjisfeasible andthissolutionhasobjectivevaluejminmid fbigj therefore ofinitialize simplex ndsasolutionwithanonpositiveobjectivevalue letnxbethebasicsolutionassociatedwiththe nalslackform wecannothavenx becausethenlauxwouldhaveobjectivevalue whichcontradictsthattheobjectivevalueisnegative thusthetestinline resultsinline returning infeasible supposenowthatthelinearprogramldoeshaveafeasiblesolution fromexercise weknowthatifbi forid thenthebasicsolutionassociatedwiththeinitialslackformisfeasible inthiscase lines returnthe slackformassociatedwiththeinput convertingthestandardformtoslackform iseasy sincea andcarethesameinboth intheremainderoftheproof wehandlethecaseinwhichthelinearprogramisfeasiblebutwedonotreturninline wearguethatinthiscase lines nda feasiblesolutiontolauxwithobjectivevalue bylines wemusthavebk andbkbiforeachi inline weperformonepivotoperationinwhichtheleavingvariablexl recallthatldnck sothatbl istheleft handsideoftheequationwithmini mumbi andtheenteringvariableisx theextraaddedvariable wenowshow theinitialbasicfeasiblesolution thatafterthispivot allentriesofbarenonnegative andhencethebasicsolutiontolauxisfeasible lettingnxbethebasicsolutionafterthecalltopivot andlettingybandybbevaluesreturnedbypivot lemma impliesthatnxid biaieybeifi ybfeg aleifide thecalltopivotinline hased ifwerewriteinequalities toincludecoef cientsai nxjd aijxjbiforid thenai daie foreachi notethatai isthecoef cientofx asitappearsininequalities notthenegationofthecoef cient becauselauxisinstandardratherthanslackform sincel wealsohavethatale ale andsonxe fortheremainingbasicvariables wehavenxidbiaieybe byequation dbiaie ale byline ofpivot dbibl byequation andale byinequality whichimpliesthateachbasicvariableisnownonnegative hencethebasicsolu tionafterthecalltopivotinline isfeasible wenextexecuteline whichsolveslaux sincewehaveassumedthatlhasafeasiblesolution lemma impliesthatlauxhasanoptimalsolutionwithobjectivevalue sincealltheslackformsareequivalent nalbasicsolutiontolauxmusthavenx andafterremovingx fromthelinearprogram weobtainaslackformthatisfeasibleforl thenreturnsthisslackform fundamentaltheoremoflinearprogrammingweconcludethischapterbyshowingthatthesimplexprocedureworks inpar ticular anylinearprogrameitherisinfeasible isunbounded orhasanoptimal solutionwitha niteobjectivevalue ineachcase simplexactsappropriately chapter linearprogrammingtheorem fundamentaltheoremoflinearprogramming anylinearprograml giveninstandardform hasanoptimalsolutionwitha niteobjectivevalue isinfeasible isunbounded iflisinfeasible simplexreturns infeasible iflisunbounded simplexreturns unbounded otherwise simplexreturnsanoptimalsolutionwitha niteobjectivevalue proofbylemma iflinearprogramlisinfeasible thensimplexreturns infeasible nowsupposethatthelinearprogramlisfeasible bylemma initialize simplexreturnsaslackformforwhichthebasicsolutionisfeasible bylemma therefore simplexeitherreturns unbounded orterminateswithafeasiblesolution ifitterminateswitha nitesolution thentheorem tellsusthatthissolutionisoptimal ontheotherhand ifsimplexreturns bounded lemma tellsusthelinearprogramlisindeedunbounded sincesimplexalwaysterminatesinoneoftheseways theproofiscomplete exercises givedetailedpseudocodetoimplementlines ofinitialize simplex showthatwhenthemainloopofsimplexisrunbyinitialize simplex itcanneverreturn unbounded supposethatwearegivenalinearprogramlinstandardform andsupposethatforbothlandthedualofl thebasicsolutionsassociatedwiththeinitialslackformsarefeasible showthattheoptimalobjectivevalueoflis supposethatweallowstrictinequalitiesinalinearprogram showthatinthiscase thefundamentaltheoremoflinearprogrammingdoesnothold theinitialbasicfeasiblesolution solvethefollowinglinearprogramusingsimplex maximizex subjecttox solvethefollowinglinearprogramusingsimplex maximizex subjecttox solvethefollowinglinearprogramusingsimplex maximizex subjecttox solvethelinearprogramgivenin considerthefollowing variablelinearprogram whichwecallp maximizetxsubjecttorxsx wherer andtarearbitraryrealnumbers letdbethedualofp chapter linearprogrammingstateforwhichvaluesofr andtyoucanassertthat bothpanddhaveoptimalsolutionswith niteobjectivevalues pisfeasible butdisinfeasible disfeasible butpisinfeasible neitherpnordisfeasible problems linear inequalityfeasibilitygivenasetofmlinearinequalitiesonnvariablesx thelinear inequalityfeasibilityproblemaskswhetherthereisasettingofthevariablesthatsimultaneouslysatis eseachoftheinequalities showthatifwehaveanalgorithmforlinearprogramming wecanuseittosolvealinear inequalityfeasibilityproblem thenumberofvariablesandcon straintsthatyouuseinthelinear programmingproblemshouldbepolynomial innandm showthatifwehaveanalgorithmforthelinear inequalityfeasibilityproblem wecanuseittosolvealinear programmingproblem thenumberofvariablesandlinearinequalitiesthatyouuseinthelinear inequalityfeasibilityproblem shouldbepolynomialinnandm thenumberofvariablesandconstraintsinthelinearprogram complementaryslacknesscomplementaryslacknessdescribesarelationshipbetweenthevaluesofprimalvariablesanddualconstraintsandbetweenthevaluesofdualvariablesandpri malconstraints letnxbeafeasiblesolutiontotheprimallinearprogramgivenin andletnybeafeasiblesolutiontotheduallinearprogramgivenin complementaryslacknessstatesthatthefollowingconditions arenecessaryandsuf cientfornxandnytobeoptimal mxid aijnyidcjornxjd forjd nandnxjd aijnxjdbiornyid forid problemsforchapter verifythatcomplementaryslacknessholdsforthelinearprograminlines provethatcomplementaryslacknessholdsforanyprimallinearprogramanditscorrespondingdual provethatafeasiblesolutionnxtoaprimallinearprogramgiveninlines isoptimalifandonlyifthereexistvaluesnyd nym suchthat nyisafeasiblesolutiontotheduallinearprogramgivenin pmid aijnyidcjforalljsuchthatnxj nyid forallisuchthatpnjd aijnxj integerlinearprogramminganintegerlinear programmingproblemisalinear programmingproblemwiththeadditionalconstraintthatthevariablesxmusttakeonintegralvalues exer cise showsthatjustdeterminingwhetheranintegerlinearprogramhasa feasiblesolutionisnp whichmeansthatthereisnoknownpolynomial algorithmforthisproblem showthatweakduality lemma holdsforanintegerlinearprogram showthatduality theorem doesnotalwaysholdforanintegerlinearprogram givenaprimallinearprograminstandardform letusde neptobetheopti malobjectivevaluefortheprimallinearprogram dtobetheoptimalobjectivevalueforitsdual iptobetheoptimalobjectivevaluefortheintegerversionoftheprimal thatis theprimalwiththeaddedconstraintthatthevariablestake onintegervalues andidtobetheoptimalobjectivevaluefortheintegerver sionofthedual assumingthatboththeprimalintegerprogramandthedual integerprogramarefeasibleandbounded showthatippddid farkas slemmaletabeanmnmatrixandcbeann vector thenfarkas slemmastatesthatexactlyoneofthesystems chapter linearprogrammingax ctx andatydc issolvable wherexisann vectorandyisanm vector provefarkas slemma minimum costcirculationinthisproblem weconsideravariantoftheminimum owproblemfromsection inwhichwearenotgivenademand asource orasink instead wearegiven asbefore ownetworkandedgecostsa owisfeasibleifitsatis esthecapacityconstraintoneveryedgeand owconservationateveryvertex thegoalisto amongallfeasible ows theoneofminimumcost callthisproblemtheminimum circulationproblem formulatetheminimum circulationproblemasalinearprogram supposethatforalledges wehavea characterizeanoptimalsolutiontotheminimum circulationproblem formulatethemaximum owproblemasaminimum circulationproblemlinearprogram thatisgivenamaximum owprobleminstancegd withsources sinktandedgecapacitiesc createaminimum circulationproblembygivinga possiblydifferent networkg withedgecapacitiesc andedgecostsa suchthatyoucandiscernasolutiontothemaximum owproblemfromasolutiontotheminimum circulationprob lem formulatethesingle sourceshortest pathproblemasaminimum circu lationproblemlinearprogram chapternotesthischapteronlybeginstostudythewide eldoflinearprogramming anum berofbooksaredevotedexclusivelytolinearprogramming includingthoseby chv atal gass karloff schrijver andvanderbei manyotherbooksgiveagoodcoverageoflinearprogramming includingthose bypapadimitriouandsteiglitz andahuja magnanti andorlin coverageinthischapterdrawsontheapproachtakenbychv atal notesforchapter thesimplexalgorithmforlinearprogrammingwasinventedbyg dantzigin shortlyafter researchersdiscoveredhowtoformulateanumberofprob lemsinavarietyof eldsaslinearprogramsandsolvethemwiththesimplex algorithm asaresult applicationsoflinearprogramming ourished alongwith severalalgorithms variantsofthesimplexalgorithmremainthemostpopular methodsforsolvinglinear programmingproblems thishistoryappearsinanum berofplaces includingthenotesin theellipsoidalgorithmwasthe rstpolynomial timealgorithmforlinearpro grammingandisduetol khachianin itwasbasedonearlierworkbyn shor judin anda nemirovskii otschel lov asz andschrijver describehowtousetheellipsoidalgorithmtosolveavarietyofproblemsin combinatorialoptimization todate theellipsoidalgorithmdoesnotappeartobe competitivewiththesimplexalgorithminpractice karmarkar spaper includesadescriptionofthe rstinterior pointalgo rithm manysubsequentresearchersdesignedinterior pointalgorithms goodsur veysappearinthearticleofgoldfarbandtodd andthebookbyye analysisofthesimplexalgorithmremainsanactiveareaofresearch kleeandg mintyconstructedanexampleonwhichthesimplexalgorithmrunsthrough iterations thesimplexalgorithmusuallyperformsverywellinpracticeandmanyresearchershavetriedtogivetheoreticaljusti cationforthis empiricalobservation alineofresearchbegunbyk borgwardt andcarried onbymanyothers showsthatundercertainprobabilisticassumptionsonthein thesimplexalgorithmconvergesinexpectedpolynomialtime spielmanandteng madeprogressinthisarea introducingthe smoothedanalysisofalgo rithms andapplyingittothesimplexalgorithm thesimplexalgorithmisknowntorunef cientlyincertainspecialcases par ticularlynoteworthyisthenetwork simplexalgorithm whichisthesimplexal gorithm specializedtonetwork owproblems forcertainnetworkproblems includingtheshortest paths maximum andminimum owproblems variantsofthenetwork simplexalgorithmruninpolynomialtime forexam ple thearticlebyorlin andthecitationstherein polynomialsandthefftthestraightforwardmethodofaddingtwopolynomialsofdegreentakes butthestraightforwardmethodofmultiplyingthemtakes inthischapter weshallshowhowthefastfouriertransform orfft canreducethetime tomultiplypolynomialsto nlgn themostcommonuseforfouriertransforms andhencethefft isinsignalprocessing asignalisgiveninthetimedomain asafunctionmappingtimetoamplitude fourieranalysisallowsustoexpressthesignalasaweightedsumof phase shiftedsinusoidsofvaryingfrequencies theweightsandphasesassociated withthefrequenciescharacterizethesignalinthefrequencydomain amongthemanyeverydayapplicationsoffft sarecompressiontechniquesusedtoencodedigitalvideoandaudioinformation includingmp les nebooksdelveintotherichareaofsignalprocessing thechapternotesreferenceafewofthem polynomialsapolynomialinthevariablexoveranalgebraic eldfrepresentsafunctiona asaformalsum xjd ajxj wecallthevaluesa thecoef cientsofthepolynomial theco cientsaredrawnfroma eldf typicallythesetcofcomplexnumbers apolynomiala hasdegreekifitshighestnonzerocoef cientisak wewritethatdegree anyintegerstrictlygreaterthanthedegreeofapolynomialisadegree boundofthatpolynomial therefore thedegreeofapolynomialofdegree boundnmaybeanyintegerbetween andn inclusive wecande neavarietyofoperationsonpolynomials forpolynomialaddi tion ifa andb arepolynomialsofdegree boundn theirsumisapolyno chapter polynomialsandthefft mialc alsoofdegree boundn suchthatc forallxintheunderlying eld thatis ifa xjd ajxjandb xjd bjxj thenc xjd cjxj wherecjdajcbjforjd forexample ifwehavethepolynomialsa andb thenc forpolynomialmultiplication ifa andb arepolynomialsofdegree boundn theirproductc isapolynomialofdegree bound suchthatc forallxintheunderlying eld youprobablyhavemulti pliedpolynomialsbefore bymultiplyingeachtermina byeachterminb andthencombiningtermswithequalpowers forexample wecanmultiply andb asfollows anotherwaytoexpresstheproductc isc xjd cjxj wherecjdjxkd akbjk chapter polynomialsandthefftnotethatdegree ddegree cdegree implyingthatifaisapolyno mialofdegree boundnaandbisapolynomialofdegree boundnb thencisapolynomialofdegree boundnacnb sinceapolynomialofdegree boundkisalsoapolynomialofdegree boundkc wewillnormallysaythattheproductpolynomialcisapolynomialofdegree boundnacnb chapteroutlinesection presentstwowaystorepresentpolynomials thecoef cientrepresen tationandthepoint valuerepresentation thestraightforwardmethodsformulti plyingpolynomials equations timewhenwerep resentpolynomialsincoef cientform butonly timewhenwerepresenttheminpoint valueform wecan however multiplypolynomialsusingthecoef cientrepresentationinonly nlgn timebyconvertingbetweenthetworepresenta tions toseewhythisapproachworks wemust rststudycomplexrootsofunity whichwedoinsection weusethefftanditsinverse alsodescribed insection toperformtheconversions showshowtoimplement thefftquicklyinbothserialandparallelmodels thischapterusescomplexnumbersextensively andwithinthischapterweusethesymboliexclusivelytodenotep representingpolynomialsthecoef cientandpoint valuerepresentationsofpolynomialsareinasenseequiv alent thatis apolynomialinpoint valueformhasauniquecounterpartinco cientform inthissection weintroducethetworepresentationsandshow howtocombinethemsothatwecanmultiplytwodegree boundnpolynomialsin nlgn coef cientrepresentationacoef cientrepresentationofapolynomiala dpn ajxjofdegree boundnisavectorofcoef cientsad inmatrixequationsinthischapter weshallgenerallytreatvectorsascolumnvectors thecoef cientrepresentationisconvenientforcertainoperationsonpolyno mials forexample theoperationofevaluatingthepolynomiala atagivenpointx consistsofcomputingthevalueofa wecanevaluateapolynomialin timeusinghorner srule ccx representingpolynomials similarly addingtwopolynomialsrepresentedbythecoef cientvectorsad andbd takes wejustproducethecoef cientvectorcd wherecjdajcbjforjd considermultiplyingtwodegree boundnpolynomialsa andb rep resentedincoef cientform ifweusethemethoddescribedbyequations multiplyingpolynomialstakestime sincewemustmultiplyeachcoef cientinthevectorabyeachcoef cientinthevectorb theoperationofmultiplyingpolynomialsincoef cientformseemstobeconsiderablymoredif cultthanthatofevaluatingapolynomialoraddingtwopolynomials theresulting coef cientvectorc givenbyequation isalsocalledtheconvolutionoftheinputvectorsaandb denotedcda sincemultiplyingpolynomialsandcomputingconvolutionsarefundamentalcomputationalproblemsofconsiderable practicalimportance thischapterconcentratesonef cientalgorithmsforthem valuerepresentationapoint valuerepresentationofapolynomiala ofdegree boundnisasetofnpoint valuepairsf gsuchthatallofthexkaredistinctandykda forkd apolynomialhasmanydifferentpoint valuerepresenta tions sincewecanuseanysetofndistinctpointsx asabasisfortherepresentation computingapoint valuerepresentationforapolynomialgivenincoef cientformisinprinciplestraightforward sinceallwehavetodoisselectndistinctpointsx andthenevaluatea forkd withhorner smethod evaluatingapolynomialatnpointstakestime weshallseelaterthatifwechoosethepointsxkcleverly wecanacceleratethiscomputationtorunintime nlgn theinverseofevaluation determiningthecoef cientformofapolynomialfromapoint valuerepresentation isinterpolation thefollowingtheoremshowsthatinterpolationiswellde nedwhenthedesiredinterpolatingpolynomialmust haveadegree boundequaltothegivennumberofpoint valuepairs theorem uniquenessofaninterpolatingpolynomial foranysetf gofnpoint valuepairssuchthatallthexkvaluesaredistinct thereisauniquepolynomiala ofdegree boundnsuchthatykda forkd chapter polynomialsandthefftprooftheproofreliesontheexistenceoftheinverseofacertainmatrix equa tion isequivalenttothematrixequation thematrixontheleftisdenotedv andisknownasavander mondematrix byproblemd thismatrixhasdeterminanty xkxj andtherefore bytheoremd itisinvertible thatis nonsingular ifthexkaredistinct wecansolveforthecoef cientsajuniquelygiventhepoint valuerepresentation adv theproofoftheorem describesanalgorithmforinterpolationbasedonsolvingtheset oflinearequations usingtheludecompositionalgorithms ofchapter wecansolvetheseequationsintimeo afasteralgorithmforn pointinterpolationisbasedonlagrange sformula xkd ykyj xxj xkxj youmaywishtoverifythattheright handsideofequation isapolynomialofdegree boundnthatsatis esa dykforallk asksyouhowtocomputethecoef cientsofausinglagrange sformulaintime pointevaluationandinterpolationarewell nedinverseoperationsthattransformbetweenthecoef cientrepresentationofapolynomialandapoint valuerepresentation thealgorithmsdescribedabovefortheseproblemstaketime thepoint valuerepresentationisquiteconvenientformanyoperationsonpoly nomials foraddition ifc thenc foranypointxk moreprecisely ifwehaveapoint valuerepresentationfora interpolationisanotoriouslytrickyproblemfromthepointofviewofnumericalstability althoughtheapproachesdescribedherearemathematicallycorrect smalldifferencesintheinputsorround offerrorsduringcomputationcancauselargedifferencesintheresult representingpolynomials andforb notethataandbareevaluatedatthesamenpoints thenapoint valuerepre sentationforcisf thetimetoaddtwopolynomialsofdegree boundninpoint valueformis similarly thepoint valuerepresentationisconvenientformultiplyingpolyno mials ifc thenc foranypointxk andwecanpointwisemultiplyapoint valuerepresentationforabyapoint valuerep resentationforbtoobtainapoint valuerepresentationforc wemustfacetheproblem however thatdegree ddegree cdegree ifaandbareofdegree boundn thencisofdegree bound astandardpoint valuerepresen tationforaandbconsistsofnpoint valuepairsforeachpolynomial whenwemultiplythesetogether wegetnpoint valuepairs butweneed npairstointerpo lateauniquepolynomialcofdegree bound seeexercise wemustthereforebeginwith extended valuerepresentationsforaandforbcon sistingof npoint valuepairseach givenanextendedpoint valuerepresentationfora andacorrespondingextendedpoint valuerepresentationforb thenapoint valuerepresentationforcisf giventwoinputpolynomialsinextendedpoint valueform weseethatthetimetomultiplythemtoobtainthepoint valueformoftheresultis muchlessthanthetimerequiredtomultiplypolynomialsincoef cientform finally weconsiderhowtoevaluateapolynomialgiveninpoint valueformatanewpoint forthisproblem weknowofnosimplerapproachthanconvertingthepolynomialtocoef cientform rst andthenevaluatingitatthenewpoint fastmultiplicationofpolynomialsincoef cientformcanweusethelinear timemultiplicationmethodforpolynomialsinpoint valueformtoexpeditepolynomialmultiplicationincoef cientform theanswerhinges chapter polynomialsandtheffta ordinarymultiplicationtime evaluationtime nlgn nlgn interpolationpointwisemultiplicationtime coef cientpoint valuerepresentationsrepresentationsfigure agraphicaloutlineofanef cientpolynomial multiplicationprocess representationsonthetopareincoef cientform whilethoseonthebottomareinpoint valueform thearrowsfromlefttorightcorrespondtothemultiplicationoperation ntermsarecomplex throotsofunity onwhetherwecanconvertapolynomialquicklyfromcoef cientformtopoint valueform evaluate andviceversa interpolate wecanuseanypointswewantasevaluationpoints butbychoosingtheeval uationpointscarefully wecanconvertbetweenrepresentationsinonly nlgn asweshallseeinsection ifwechoose complexrootsofunity astheevaluationpoints wecanproduceapoint valuerepresentationbytakingthediscretefouriertransform ordft ofacoef cientvector wecanperformtheinverseoperation interpolation bytakingthe inversedft ofpoint valuepairs yieldingacoef cientvector willshowhowthefftaccomplishes thedftandinversedftoperationsin nlgn showsthisstrategygraphically oneminordetailconcernsdegree bounds theproductoftwopolynomialsofdegree boundnisapolynomialofdegree bound beforeevaluatingtheinputpolynomialsaandb therefore rstdoubletheirdegree boundsto nbyaddingnhigh ordercoef cientsof becausethevectorshave nelements weuse complex throotsofunity whicharedenotedbythe ntermsinfigure giventhefft wehavethefollowing nlgn timeprocedureformultiplyingtwopolynomialsa andb ofdegree boundn wheretheinputandoutputrepresentationsareincoef cientform weassumethatnisapowerof wecanalwaysmeetthisrequirementbyaddinghigh orderzerocoef cients doubledegree bound createcoef cientrepresentationsofa andb asdegree bound npolynomialsbyaddingnhigh orderzerocoef cientstoeach representingpolynomials evaluate computepoint valuerepresentationsofa andb oflength nbyapplyingthefftoforder noneachpolynomial theserepresentationscontainthevaluesofthetwopolynomialsatthe throotsofunity pointwisemultiply computeapoint valuerepresentationforthepolynomialc bymultiplyingthesevaluestogetherpointwise thisrepre sentationcontainsthevalueofc ateach throotofunity interpolate createthecoef cientrepresentationofthepolynomialc byapplyingtheffton npoint valuepairstocomputetheinversedft steps taketime andsteps taketime nlgn onceweshowhowtousethefft wewillhaveproventhefollowing theorem wecanmultiplytwopolynomialsofdegree boundnintime nlgn withboththeinputandoutputrepresentationsincoef cientform exercises multiplythepolynomialsa andb usingequations anotherwaytoevaluateapolynomiala ofdegree boundnatagivenpointx istodividea bythepolynomial obtainingaquotientpolynomialq ofdegree boundn andaremainderr suchthata clearly showhowtocomputetheremainderrandthecoef cientsofq intime fromx andthecoef cientsofa deriveapoint valuerepresentationforarev dpn jxjfromapoint valuerepresentationfora dpn ajxj assumingthatnoneofthepointsis provethatndistinctpoint valuepairsarenecessarytouniquelyspecifyapolyno mialofdegree boundn thatis iffewerthanndistinctpoint valuepairsaregiven theyfailtospecifyauniquepolynomialofdegree boundn hint usingtheo rem whatcanyousayaboutasetofn valuepairstowhichyouaddonemorearbitrarilychosenpoint valuepair chapter polynomialsandthefft showhowtouseequation tointerpolateintime hint firstcomputethecoef cientrepresentationofthepolynomialqj xxj andthendivideby xxk asnecessaryforthenumeratorofeachterm seeexercise youcancomputeeachofthendenominatorsintimeo explainwhatiswrongwiththe obvious approachtopolynomialdivisionusing apoint valuerepresentation dividingthecorrespondingyvalues discussseparatelythecaseinwhichthedivisioncomesoutexactlyandthecaseinwhichitdoesn considertwosetsaandb eachhavingnintegersintherangefrom wewishtocomputethecartesiansumofaandb nedbycdfxcywx aandy notethattheintegersincareintherangefrom wewantto ndtheelementsofcandthenumberoftimeseachelementofcisrealizedasasumofelementsinaandb showhowtosolvetheproblemino nlgn hint representaandbaspolynomialsofdegreeatmost thedftandfftinsection weclaimedthatifweusecomplexrootsofunity wecanevaluateandinterpolatepolynomialsin nlgn inthissection wede necomplexrootsofunityandstudytheirproperties nethedft andthenshowhowthe fftcomputesthedftanditsinversein nlgn complexrootsofunityacomplexnthrootofunityisacomplexnumber suchthat thereareexactlyncomplexnthrootsofunity eik nforkd tointerpretthisformula weusethede nitionoftheexponentialofacomplex eiudcos cisin showsthatthencomplexrootsofunityareequallyspacedaroundthecircleofunitradiuscenteredattheoriginofthecomplexplane thevalue thedftandfft thevaluesof inthecomplexplane dei istheprin cipal throotofunity ndei istheprincipalnthrootofunity allothercomplexnthrootsofunityarepowersof thencomplexnthrootsofunity formagroupundermultiplication seesection thisgrouphasthesamestructureastheadditivegroup modulon nnd impliesthat knd jcknd jck modnn similarly thefollowinglemmasfurnishsomeessentialpropertiesofthecomplexnthrootsofunity lemma cancellationlemma foranyintegersn andd dkdnd proofthelemmafollowsdirectlyfromequation dkdndei dndkdei nkd manyotherauthorsde ndifferently ndei thisalternativede nitiontendstobeusedforsignal processingapplications theunderlyingmathematicsissubstantiallythesamewitheitherde nitionof chapter polynomialsandthefftcorollary foranyevenintegern prooftheproofisleftasexercise lemma halvinglemma ifn iseven thenthesquaresofthencomplexnthrootsofunityarethen complex throotsofunity proofbythecancellationlemma wehave foranynonnegativeintegerk notethatifwesquareallofthecomplexnthrootsofunity thenweobtaineach throotofunityexactlytwice kcn kcnnd nnd knd knand kcn nhavethesamesquare wecouldalsohaveusedcorol lary toprovethisproperty implies kcn andthus kcn asweshallsee thehalvinglemmaisessentialtoourdivide conquerap proachforconvertingbetweencoef cientandpoint valuerepresentationsofpoly nomials sinceitguaranteesthattherecursivesubproblemsareonlyhalfaslarge lemma summationlemma foranyintegern andnonzerointegerknotdivisiblebyn xjd knjd proofequation appliestocomplexvaluesaswellastoreals andsowehave thedftandfft xjd knjd becausewerequirethatkisnotdivisiblebyn andbecause knd onlywhenkisdivisiblebyn weensurethatthedenominatorisnot thedftrecallthatwewishtoevaluateapolynomiala xjd ajxjofdegree boundnat thatis atthencomplexnthrootsofunity weassumethataisgivenincoef cientform letusde netheresultsyk forkd byykda xjd kjn thevectoryd isthediscretefouriertransform dft ofthecoef cientvectorad wealsowriteyddftn thefftbyusingamethodknownasthefastfouriertransform fft whichtakesad vantageofthespecialpropertiesofthecomplexrootsofunity wecancompute dftn intime nlgn asopposedtothe timeofthestraightforwardmethod weassumethroughoutthatnisanexactpowerof althoughstrategies thelengthnisactuallywhatwereferredtoas ninsection sincewedoublethedegree boundofthegivenpolynomialspriortoevaluation inthecontextofpolynomialmultiplication therefore weareactuallyworkingwithcomplex throotsofunity chapter polynomialsandthefftfordealingwithnon sizesareknown theyarebeyondthescopeofthisbook thefftmethodemploysadivide conquerstrategy usingtheeven indexedandodd indexedcoef cientsofa separatelytode nethetwonewpolynomialsa anda ofdegree boundn xca ccan xca ccan notethatacontainsalltheeven indexedcoef cientsofa thebinaryrepresen tationoftheindexendsin andacontainsalltheodd indexedcoef cients thebinaryrepresentationoftheindexendsin itfollowsthata cxa sothattheproblemofevaluatinga nreducesto evaluatingthedegree boundn polynomialsa anda atthepoints andthen combiningtheresultsaccordingtoequation bythehalvinglemma thelistofvalues consistsnotofndistinctval uesbutonlyofthen complex throotsofunity witheachrootoccurringexactlytwice therefore werecursivelyevaluatethepolynomialsaandaofdegree boundn atthen complex throotsofunity thesesubprob lemshaveexactlythesameformastheoriginalproblem butarehalfthesize wehavenowsuccessfullydividedann elementdftncomputationintotwon elementdftn computations thisdecompositionisthebasisforthefollow ingrecursivefftalgorithm whichcomputesthedftofann elementvectorad wherenisapowerof thedftandfft recursive fft nda nisapowerof ifn returna ndei ydrecursive fft ydrecursive fft forkd ton ykdykc ykc dyk returny yisassumedtobeacolumnvectortherecursive fftprocedureworksasfollows lines representthebasisoftherecursion thedftofoneelementistheelementitself sinceinthiscasey lines nethecoef cientvectorsforthepolynomialsaanda lines guaranteethat isupdatedproperlysothatwheneverlines areexecuted wehave keepingarunningvalueof fromiterationtoiterationsavestimeovercomputing knfromscratcheachtimethroughtheforloop lines performtherecursivedftn computations setting forkd ykda ykda knbythecancellationlemma ykda ykda chapter polynomialsandthefftlines combinetheresultsoftherecursivedftn calculations fory yieldsykdykc knykda kna byequation foryn lettingkd yieldsykc dyk knykdykc nyk kcnn kcnn kcnnd byequation thevectoryreturnedbyrecursive fftisindeedthedftoftheinputvectora lines multiplyeachvalueykby forkd addsthisproducttoyk andline subtractsit becauseweuseeachfactor kninbothitspositiveandnegativeforms wecallthefactors kntwiddlefactors todeterminetherunningtimeofprocedurerecursive fft wenotethatexclusiveoftherecursivecalls eachinvocationtakestime wherenisthelengthoftheinputvector therecurrencefortherunningtimeisthereforet nlgn wecanevaluateapolynomialofdegree boundnatthecomplexnthrootsofunityintime nlgn usingthefastfouriertransform interpolationatthecomplexrootsofunitywenowcompletethepolynomialmultiplicationschemebyshowinghowtoin terpolatethecomplexrootsofunitybyapolynomial whichenablesustoconvert frompoint valueformbacktocoef cientform weinterpolatebywritingthedft asamatrixequationandthenlookingattheformofthematrixinverse fromequation wecanwritethedftasthematrixproductydvna wherevnisavandermondematrixcontainingtheappropriatepowersof thedftandfft entryofvnis kjn forj theexponentsoftheentriesofvnformamultiplicationtable fortheinverseoperation whichwewriteasaddft weproceedbymultiplyingybythematrixv theinverseofvn theorem forj entryofv nis kjn proofweshowthatv nvndin thennidentitymatrix considerthe entryofv nvn nvnjj xkd kjn xkd thissummationequals ifj anditis otherwisebythesummationlemma lemma notethatwerelyon sothatj jisnotdivisiblebyn inorderforthesummationlemmatoapply giventheinversematrixv wehavethatdft isgivenbyajd xkd kjn forjd bycomparingequations weseethatbymodifyingthefftalgorithmtoswitchtherolesofaandy replace nby anddivideeachelementoftheresultbyn wecomputetheinversedft seeex ercise wecancomputedft nin nlgn timeaswell weseethat byusingthefftandtheinversefft wecantransformapoly nomialofdegree boundnbackandforthbetweenitscoef cientrepresentationandapoint valuerepresentationintime nlgn inthecontextofpolynomialmultiplication wehaveshownthefollowing chapter polynomialsandtheffttheorem convolutiontheorem foranytwovectorsaandboflengthn wherenisapowerof bddft dft dft wherethevectorsaandbarepaddedwith stolength nanddenotesthecom ponentwiseproductoftwo elementvectors exercises provecorollary computethedftofthevector doexercise byusingthe nlgn timescheme writepseudocodetocomputedft nin nlgn describethegeneralizationofthefftproceduretothecaseinwhichnisapowerof givearecurrencefortherunningtime andsolvetherecurrence supposethatinsteadofperformingann elementfftoverthe eldofcomplexnumbers whereniseven weusetheringzmofintegersmodulom wheremd andtisanarbitrarypositiveinteger tinsteadof nasaprincipalnthrootofunity modulom provethatthedftandtheinversedftarewellde nedinthissystem givenalistofvalues possiblywithrepetitions showhowto ndthecoef cientsofapolynomialp ofdegree boundnc thathaszerosonlyat possiblywithrepetitions yourprocedureshouldrunintimeo nlg hint thepolynomialp hasazeroat jifandonlyifp isamultipleof thechirptransformofavectorad isthevectoryd whereykdpn kjand isanycomplexnumber cientfftimplementations dftisthereforeaspecialcaseofthechirptransform obtainedbytaking showhowtoevaluatethechirptransformintimeo nlgn foranycomplexnum ber hint usetheequationykd xjd toviewthechirptransformasaconvolution cientfftimplementationssincethepracticalapplicationsofthedft suchassignalprocessing demandtheutmostspeed thissectionexaminestwoef cientfftimplementations weshallexamineaniterativeversionofthefftalgorithmthatrunsin nlgn timebutcanhavealowerconstanthiddeninthe notationthantherecursiveversioninsection dependingontheexactimplementation therecursiveversion mayusethehardwarecachemoreef ciently weshallusetheinsightsthat ledustotheiterativeimplementationtodesignanef cientparallelfftcircuit aniterativefftimplementationwe rstnotethattheforloopoflines ofrecursive fftinvolvescom putingthevalue knyktwice incompilerterminology wecallsuchavalueacommonsubexpression wecanchangethelooptocomputeitonlyonce storingitinatemporaryvariablet forkd ton ykykdykctykc dykt ntheoperationinthisloop multiplyingthetwiddlefactor knbyyk storingtheproductintot andaddingandsubtractingtfromyk isknownasabutter yoperationandisshownschematicallyinfigure wenowshowhowtomakethefftalgorithmiterativeratherthanrecursiveinstructure infigure wehavearrangedtheinputvectorstotherecursive callsinaninvocationofrecursive fftinatreestructure wheretheinitialcallisfornd thetreehasonenodeforeachcalloftheprocedure labeled chapter polynomialsandthefft ykykykyk knykc knykykc knykyk knykyk knykfigure abutter yoperation thetwoinputvaluesenterfromtheleft thetwiddlefac tor knismultipliedbyyk andthesumanddifferenceareoutputontheright asimpli eddrawingofabutter yoperation wewillusethisrepresentationinaparallelfftcircuit thetreeofinputvectorstotherecursivecallsoftherecursive fftprocedure theinitialinvocationisfornd bythecorrespondinginputvector eachrecursive fftinvocationmakestworecursivecalls unlessithasreceiveda elementvector rstcallappearsintheleftchild andthesecondcallappearsintherightchild lookingatthetree weobservethatifwecouldarrangetheelementsoftheinitialvectoraintotheorderinwhichtheyappearintheleaves wecouldtracetheexecutionoftherecursive fftprocedure butbottomupinsteadoftopdown wetaketheelementsinpairs computethedftofeachpairusing onebutter yoperation andreplacethepairwithitsdft thevectorthenholds elementdfts wetakethesen dftsinpairsandcomputethedftofthefourvectorelementstheycomefrombyexecutingtwobutter yoper ations replacingtwo elementdftswithone elementdft thevectorthenholdsn elementdfts wecontinueinthismanneruntilthevectorholdstwo elementdfts whichwecombineusingn butter yoperationsintothe naln elementdft toturnthisbottom upapproachintocode weuseanarraya nthatinitiallyholdstheelementsoftheinputvectoraintheorderinwhichtheyappear cientfftimplementations intheleavesofthetreeoffigure weshallshowlaterhowtodeterminethisorder whichisknownasabit reversalpermutation becausewehavetocombine dftsoneachlevelofthetree weintroduceavariablestocountthelevels rangingfrom atthebottom whenwearecombiningpairstoform elementdfts tolgn atthetop whenwearecombiningtwo elementdftstoproducethe nalresult thealgorithmthereforehasthefollowingstructure forsd tolgn forkd ton combinethetwo elementdftsina anda sintoone elementdftina swecanexpressthebodyoftheloop asmoreprecisepseudocode wecopytheforloopfromtherecursive fftprocedure identifyingywitha andywitha thetwiddlefac torusedineachbutter yoperationdependsonthevalueofs itisapowerof wheremd weintroducethevariablemsolelyforthesakeofreadability weintroduceanothertemporaryvariableuthatallowsustoperformthebutter yoperationinplace whenwereplaceline oftheoverallstructurebytheloopbody wegetthefollowingpseudocode whichformsthebasisoftheparallelim plementationweshallpresentlater thecode rstcallstheauxiliaryprocedurebit reverse tocopyvectoraintoarrayaintheinitialorderinwhichweneedthevalues iterative fft reverse nda nisapowerof forsd tolgn mdei forkd ton bym forjd tom kcjcm uda kcduct kcjcm dut returnahowdoesbit reverse copygettheelementsoftheinputvectoraintothedesiredorderinthearraya theorderinwhichtheleavesappearinfigure chapter polynomialsandthefftisabit reversalpermutation thatis ifweletrev bethelgn bitintegerformedbyreversingthebitsofthebinaryrepresentationofk thenwewanttoplacevectorelementakinarraypositiona rev infigure forexam ple theleavesappearintheorder thissequenceinbinaryis andwhenwereversethebitsofeachvaluewegetthesequence toseethatwewantabit reversalpermutationingeneral wenotethatatthetoplevelofthetree indices whoselow orderbitis gointotheleftsubtreeandindiceswhoselow orderbitis gointotherightsubtree strippingoffthelow orderbitateachlevel wecon tinuethisprocessdownthetree untilwegettheordergivenbythebit reversal permutationattheleaves sincewecaneasilycomputethefunctionrev thebit reverse copypro cedureissimple reverse nda forkd ton rev kdaktheiterativefftimplementationrunsintime nlgn thecalltobit reverse certainlyrunsino nlgn sinceweiteratentimesandcanreverseanintegerbetween andn withlgnbits ino lgn inpractice becauseweusuallyknowtheinitialvalueofninadvance wewouldprobablycodeatablemappingktorev makingbit reverse copyrunin timewithalowhiddenconstant alternatively wecouldusethecleveramor tizedreversebinarycounterschemedescribedinproblem tocompletetheproofthatiterative fftrunsintime nlgn weshowthatl thenumberoftimesthebodyoftheinnermostloop lines executes nlgn theforloopoflines iteratesn mdn stimesforeachvalueofs andtheinnermostloopoflines iteratesm times dlgnxsd dlgnxsd nlgn cientfftimplementations stagesd stagesd stagesd acircuitthatcomputesthefftinparallel hereshownonnd inputs eachbutter yoperationtakesasinputthevaluesontwowires alongwithatwiddlefactor anditproducesasoutputsthevaluesontwowires thestagesofbutter iesarelabeledtocorrespondtoiterationsoftheoutermostloopoftheiterative fftprocedure onlythetopandbottomwirespassingthroughabutter yinteractwithit wiresthatpassthroughthemiddleofabutter ydonotaffectthatbutter noraretheirvalueschangedbythatbutter forexample thetopbutter yinstage hasnothingtodowithwire thewirewhoseoutputislabeledy itsinputsandoutputsareonlyonwires labeledy andy respectively thiscircuithasdepth lgn andperforms nlgn butter yoperationsaltogether aparallelfftcircuitwecanexploitmanyofthepropertiesthatallowedustoimplementanef cientiterativefftalgorithmtoproduceanef cientparallelalgorithmforthefft wewillexpresstheparallelfftalgorithmasacircuit showsaparallel fftcircuit whichcomputesthefftonninputs fornd thecircuitbeginswithabit reversepermutationoftheinputs followedbylgnstages eachstageconsistingofn butter iesexecutedinparallel thedepthofthecircuit themaximumnumberofcomputationalelementsbetweenanyoutputandanyinputthatcanreachit istherefore lgn theleftmostpartoftheparallelfftcircuitperformsthebit reversepermuta tion andtheremaindermimicstheiterativeiterative fftprocedure becauseeachiterationoftheoutermostforloopperformsn independentbutter yopera tions thecircuitperformstheminparallel thevalueofsineachiterationwithin chapter polynomialsandthefftiterative fftcorrespondstoastageofbutter iesshowninfigure forsd lgn stagesconsistsofn sgroupsofbutter ies correspondingtoeachvalueofkiniterative fft butter iespergroup correspondingtoeachvalueofjiniterative fft thebutter iesshowninfigure corre spondtothebutter yoperationsoftheinnermostloop lines ofiterative fft notealsothatthetwiddlefactorsusedinthebutter iescorrespondtothoseusediniterative fft instages weuse wheremd exercises showhowiterative fftcomputesthedftoftheinputvector showhowtoimplementanfftalgorithmwiththebit reversalpermutationoccur ringattheend ratherthanatthebeginning ofthecomputation hint considertheinversedft howmanytimesdoesiterative fftcomputetwiddlefactorsineachstage rewriteiterative ffttocomputetwiddlefactorsonly timesinstages supposethattheadderswithinthebutter yoperationsofthefftcircuitsome timesfailinsuchamannerthattheyalwaysproduceazerooutput independent oftheirinputs supposethatexactlyoneadderhasfailed butthatyoudon tknow whichone describehowyoucanidentifythefailedadderbysupplyinginputsto theoverallfftcircuitandobservingtheoutputs howef cientisyourmethod problems conquermultiplication showhowtomultiplytwolinearpolynomialsaxcbandcxcdusingonlythreemultiplications hint oneofthemultiplicationsis acb ccd givetwodivide conqueralgorithmsformultiplyingtwopolynomialsofdegree boundnin nlg rstalgorithmshoulddividetheinputpolynomialcoef cientsintoahighhalfandalowhalf andthesecondalgorithm shoulddividethemaccordingtowhethertheirindexisoddoreven problemsforchapter showhowtomultiplytwon bitintegersino nlg steps whereeachstepoperatesonatmostaconstantnumberof bitvalues toeplitzmatricesatoeplitzmatrixisannnmatrixad aij suchthataijdai forid nandjd isthesumoftwotoeplitzmatricesnecessarilytoeplitz whatabouttheprod uct describehowtorepresentatoeplitzmatrixsothatyoucanaddtwonntoeplitzmatricesino giveano nlgn timealgorithmformultiplyingannntoeplitzmatrixbyavectoroflengthn useyourrepresentationfrompart giveanef cientalgorithmformultiplyingtwonntoeplitzmatrices analyzeitsrunningtime multidimensionalfastfouriertransformwecangeneralizethe dimensionaldiscretefouriertransformde nedbyequa tion toddimensions theinputisad dimensionalarrayad whosedimensionsaren wheren nddn wede nethed dimensionaldiscretefouriertransformbytheequationyk kddn xjdd jdkdndfor showthatwecancomputead dimensionaldftbycomputing dimensionaldftsoneachdimensioninturn thatis rstcomputen dimensionaldftsalongdimension usingtheresultofthedftsalongdimension astheinput wecomputen dimensionaldftsalongdimension usingthisresultastheinput wecomputen dimensionaldftsalongdimension andsoon throughdimensiond showthattheorderingofdimensionsdoesnotmatter sothatwecancomputead dimensionaldftbycomputingthe dimensionaldftsinanyorderoftheddimensions chapter polynomialsandthefftc showthatifwecomputeeach dimensionaldftbycomputingthefastfour iertransform thetotaltimetocomputead dimensionaldftiso nlgn independentofd evaluatingallderivativesofapolynomialatapointgivenapolynomiala ofdegree boundn wede neitstthderivativebya iftd ddxa iftn fromthecoef cientrepresentation ofa andagivenpointx wewishtodeterminea fortd givencoef cientsb suchthata xjd showhowtocomputea fortd ino explainhowto ndb ino nlgn givena forkd provethata xrd krnr xjd wheref dajj andg explainhowtoevaluatea forkd ino nlgn concludethatwecanevaluateallnontrivialderivativesofa atx ino nlgn problemsforchapter polynomialevaluationatmultiplepointswehaveseenhowtoevaluateapolynomialofdegree boundnatasinglepointino timeusinghorner srule wehavealsodiscoveredhowtoevaluatesuchapolynomialatallncomplexrootsofunityino nlgn timeusingthefft weshallnowshowhowtoevaluateapolynomialofdegree boundnatnarbitrarypointsino nlg todoso weshallassumethatwecancomputethepolynomialremainderwhenonesuchpolynomialisdividedbyanotherino nlgn aresultthatwestatewithoutproof forexample theremainderof whendividedbyx cxc mod cxc giventhecoef cientrepresentationofapolynomiala dpn akxkandnpointsx wewishtocomputethenvaluesa ijn nethepolynomialspij dqjkdi xxk andqij modpij notethatqij hasdegreeatmostji provethata mod foranypoint provethatqkk andthatq provethatforikj wehaveqik dqij modpik andqkj dqij modpkj giveano nlg timealgorithmtoevaluatea fftusingmodulararithmeticasde ned thediscretefouriertransformrequiresustocomputewithcomplex numbers whichcanresultinalossofprecisionduetoround offerrors forsome problems theanswerisknowntocontainonlyintegers andbyusingavariantof thefftbasedonmodulararithmetic wecanguaranteethattheansweriscalcu latedexactly anexampleofsuchaproblemisthatofmultiplyingtwopolynomials withintegercoef cients givesoneapproach usingamodulusof bitstohandleadftonnpoints thisproblemgivesanotherap proach whichusesamodulusofthemorereasonablelengtho lgn itrequiresthatyouunderstandthematerialofchapter letnbeapowerof supposethatwesearchforthesmallestksuchthatpdknc isprime giveasimpleheuristicargumentwhywemightexpectktobeapproximatelylnn thevalueofkmightbemuchlargerorsmaller butwecanreasonablyexpecttoexamineo lgn candidatevaluesofkonaverage howdoestheexpectedlengthofpcomparetothelengthofn chapter polynomialsandthefftletgbeageneratorofzp andletwdgkmodp arguethatthedftandtheinversedftarewell nedinverseoperationsmodulop wherewisusedasaprincipalnthrootofunity showhowtomakethefftanditsinverseworkmodulopintimeo nlgn whereoperationsonwordsofo lgn bitstakeunittime assumethatthealgorithmisgivenpandw computethedftmodulopd ofthevector notethatgd isageneratorofz chapternotesvanloan sbook providesanoutstandingtreatmentofthefastfouriertrans teukolsky vetterling andflannery haveagooddescrip tionofthefastfouriertransformanditsapplications foranexcellentintroductiontosignalprocessing apopularfftapplicationarea seethetextsbyoppenheimandschafer andoppenheimandwillsky theoppenheimandschafer bookalsoshowshowtohandlecasesinwhichnisnotanintegerpowerof fourieranalysisisnotlimitedto dimensionaldata itiswidelyusedinimageprocessingtoanalyzedatain ormoredimensions thebooksbygonzalezandwoods andpratt discussmultidimensionalfouriertransformsandtheiruseinimageprocessing andbooksbytolimieri andlu andvanloan discussthemathematicsofmultidimensionalfastfouriertransforms cooleyandtukey arewidelycreditedwithdevisingthefftinthe theffthadinfactbeendiscoveredmanytimespreviously butitsimportancewas notfullyrealizedbeforetheadventofmoderndigitalcomputers althoughpress teukolsky vetterling andflanneryattributetheoriginsofthemethodtorunge andk onigin anarticlebyheideman johnson andburrus tracesthehistoryofthefftasfarbackasc gaussin frigoandjohnson developedafastand exibleimplementationofthefft calledfftw fastestfouriertransforminthewest fftwisdesignedfor situationsrequiringmultipledftcomputationsonthesameproblemsize actuallycomputingthedfts fftwexecutesa planner byaseriesof trialruns determineshowbesttodecomposethefftcomputationforthegiven problemsizeonthehostmachine fftwadaptstousethehardwarecacheef ciently andoncesubproblemsaresmallenough fftwsolvesthemwithopti mized linecode furthermore fftwhastheunusualadvantageoftaking nlgn timeforanyproblemsizen evenwhennisalargeprime notesforchapter althoughthestandardfouriertransformassumesthattheinputrepresentspointsthatareuniformlyspacedinthetimedomain othertechniquescanapproximatethe ffton nonequispaced data thearticlebyware providesanoverview theoreticalgorithmsnumbertheorywasonceviewedasabeautifulbutlargelyuselesssubjectinpuremathematics todaynumber theoreticalgorithmsareusedwidely dueinlargepart totheinventionofcryptographicschemesbasedonlargeprimenumbers schemesarefeasiblebecausewecan ndlargeprimeseasily andtheyaresecure becausewedonotknowhowtofactortheproductoflargeprimes orsolverelated problems suchascomputingdiscretelogarithms ciently thischapterpresents someofthenumbertheoryandrelatedalgorithmsthatunderliesuchapplications introducesbasicconceptsofnumbertheory suchasdivisibility modularequivalence anduniquefactorization studiesoneofthe soldestalgorithms euclid salgorithmforcomputingthegreatestcommon divisoroftwointegers reviewsconceptsofmodulararithmetic sec tion thenstudiesthesetofmultiplesofagivennumbera modulon andshowshowto ndallsolutionstotheequationaxb modn byusingeuclid salgo rithm thechineseremaindertheoremispresentedinsection considerspowersofagivennumbera modulon andpresentsarepeated squaringalgorithmforef cientlycomputingabmodn givena andn thisoperationisattheheartofef cientprimalitytestingandofmuchmoderncryptography sec tion thendescribesthersapublic keycryptosystem examines arandomizedprimalitytest wecanusethistestto ndlargeprimesef ciently whichweneedtodoinordertocreatekeysforthersacryptosystem finally reviewsasimplebuteffectiveheuristicforfactoringsmallintegers isacuriousfactthatfactoringisoneproblempeoplemaywishtobeintractable sincethesecurityofrsadependsonthedif cultyoffactoringlargeintegers sizeofinputsandcostofarithmeticcomputationsbecauseweshallbeworkingwithlargeintegers weneedtoadjusthowwethinkaboutthesizeofaninputandaboutthecostofelementaryarithmeticoperations inthischapter largeinput typicallymeansaninputcontaining largein tegers ratherthananinputcontaining manyintegers asforsorting elementarynumber theoreticnotions weshallmeasurethesizeofaninputintermsofthenumberofbitsrequiredtorepresentthatinput notjustthenumberofintegersintheinput analgorithm withintegerinputsa akisapolynomial timealgorithmifitrunsintimepolynomialinlga lga lgak thatis polynomialinthelengthsofitsbinary encodedinputs inmostofthisbook wehavefounditconvenienttothinkoftheelemen taryarithmeticoperations multiplications divisions orcomputingremainders asprimitiveoperationsthattakeoneunitoftime bycountingthenumberofsucharithmeticoperationsthatanalgorithmperforms wehaveabasisformakingareasonableestimateofthealgorithm sactualrunningtimeonacomputer elemen taryoperationscanbetime consuming however whentheirinputsarelarge thusbecomesconvenienttomeasurehowmanybitoperationsanumber theoreticalgorithmrequires inthismodel multiplyingtwo bitintegersbytheordinarymethoduses bitoperations similarly wecandividea bitintegerbyashorterintegerortaketheremainderofa bitintegerwhendividedbyashorterin tegerintime bysimplealgorithms seeexercise fastermethodsareknown forexample asimpledivide conquermethodformultiplyingtwo bitintegershasarunningtimeof andthefastestknownmethodhasarunningtimeof lglg forpracticalpurposes however algorithmisoftenbest andweshallusethisboundasabasisforouranalyses weshallgenerallyanalyzealgorithmsinthischapterintermsofboththenumberofarithmeticoperationsandthenumberofbitoperationstheyrequire elementarynumber theoreticnotionsthissectionprovidesabriefreviewofnotionsfromelementarynumbertheory concerningthesetzdf gofintegersandthesetndf gofnaturalnumbers divisibilityanddivisorsthenotionofoneintegerbeingdivisiblebyanotheriskeytothetheoryofnumbers thenotationdja ddividesa meansthatadkdforsomeintegerk everyintegerdivides ifa anddja thenjdjjaj ifdja thenwealsosaythataisamultipleofd ifddoesnotdividea wewrited ifdjaandd wesaythatdisadivisorofa notethatdjaifandonlyifdja sothatnogeneralityislostbyde ningthedivisorstobenonnegative withtheunderstandingthatthenegativeofanydivisorofaalsodividesa chapter theoreticalgorithmsdivisorofanonzerointegeraisatleast butnotgreaterthanjaj forexample thedivisorsof everypositiveintegeraisdivisiblebythetrivialdivisors anda thenontrivialdivisorsofaarethefactorsofa forexample thefactorsof primeandcompositenumbersanintegera whoseonlydivisorsarethetrivialdivisors andaisaprimenumberor moresimply aprime primeshavemanyspecialpropertiesandplayacriticalroleinnumbertheory rst primes inorder asksyoutoprovethattherearein nitelymanyprimes anintegera thatisnotprimeisacompositenumberor moresimply acomposite forexample iscompositebecause wecalltheinteger aunit anditisneitherprimenorcomposite similarly theinteger andallnegativeintegersareneitherprimenorcomposite thedivisiontheorem remainders andmodularequivalencegivenanintegern wecanpartitiontheintegersintothosethataremultiplesofnandthosethatarenotmultiplesofn muchnumbertheoryisbaseduponre ningthispartitionbyclassifyingthenonmultiplesofnaccordingtotheirremainderswhendividedbyn thefollowingtheoremprovidesthebasisforthisre nement weomittheproof butsee forexample nivenandzuckerman theorem divisiontheorem foranyintegeraandanypositiveintegern thereexistuniqueintegersqandrsuchthat nandadqncr thevalueqdba ncisthequotientofthedivision thevaluerdamodnistheremainder orresidue ofthedivision wehavethatnjaifandonlyifamodnd wecanpartitiontheintegersintonequivalenceclassesaccordingtotheirre maindersmodulon theequivalenceclassmoduloncontaininganintegerais andfacknwk forexample wecanalsodenotethissetby usingthenotationde nedonpage wecansaythatwritinga bnisthesameaswritingab modn thesetofallsuchequivalenceclassesis elementarynumber theoreticnotions zndf anw whenyouseethede nitionzndf youshouldreaditasequivalenttoequation withtheunderstandingthat represents represents andsoon eachclassisrepresentedbyitssmallestnonnegativeelement youshouldkeeptheunderlyingequivalenceclassesinmind however forexample ifwereferto asamemberofzn wearereallyreferringto modn commondivisorsandgreatestcommondivisorsifdisadivisorofaanddisalsoadivisorofb thendisacommondivisorofaandb forexample thedivisorsof andsothecommondivisorsof notethat isacommondivisorofanytwointegers animportantpropertyofcommondivisorsisthatdjaanddjbimpliesdj acb anddj moregenerally wehavethatdjaanddjbimpliesdj axcby foranyintegersxandy ifajb theneitherjajjbjorbd whichimpliesthatajbandbjaimpliesad thegreatestcommondivisoroftwointegersaandb notbothzero isthelargestofthecommondivisorsofaandb wedenoteitbygcd forexample gcd gcd andgcd ifaandbarebothnonzero thengcd isanintegerbetween andmin jaj jbj wede negcd tobe thisde nitionisnecessarytomakestandardpropertiesofthegcdfunction suchasequation below universallyvalid thefollowingareelementarypropertiesofthegcdfunction gcd dgcd gcd dgcd gcd dgcd jaj jbj gcd djaj gcd djajforanyk thefollowingtheoremprovidesanalternativeandusefulcharacterizationofgcd chapter theoreticalgorithmstheorem ifaandbareanyintegers notbothzero thengcd isthesmallestpositiveelementofthesetfaxcbywx zgoflinearcombinationsofaandb proofletsbethesmallestpositivesuchlinearcombinationofaandb andletsdaxcbyforsomex letqdba equation thenimpliesamodsdaqsdaq axcby andsoamodsisalinearcombinationofaandbaswell amods wehavethatamodsd becausesisthesmallestpositivesuchlin earcombination therefore wehavethatsjaand byanalogousreasoning sjb sisacommondivisorofaandb andsogcd equation impliesthatgcd sincegcd dividesbothaandbandsisalinearcombinationofaandb butgcd jsands implythatgcd combininggcd sandgcd syieldsgcd weconcludethatsisthegreatestcommondivisorofaandb corollary foranyintegersaandb ifdjaanddjb thendjgcd proofthiscorollaryfollowsfromequation becausegcd isalinearcombinationofaandbbytheorem corollary forallintegersaandbandanynonnegativeintegern gcd dngcd proofifnd thecorollaryistrivial ifn thengcd isthesmallestpositiveelementofthesetfanxcbnywx whichisntimesthesmallestpositiveelementofthesetfaxcbywx corollary forallpositiveintegersn andb ifnjabandgcd thennjb proofweleavetheproofasexercise elementarynumber theoreticnotions relativelyprimeintegerstwointegersaandbarerelativelyprimeiftheironlycommondivisoris thatis ifgcd forexample arerelativelyprime sincethedivisorsof andthedivisorsof thefollowingtheoremstatesthatiftwointegersareeachrelativelyprimetoanintegerp thentheirproductisrelativelyprimetop theorem foranyintegersa andp ifbothgcd andgcd thengcd proofitfollowsfromtheorem thatthereexistintegersx andy suchthataxcpyd cpy multiplyingtheseequationsandrearranging wehaveab ybx axcpyy isthusapositivelinearcombinationofabandp anappealtotheo rem completestheproof integersn nkarepairwiserelativelyprimeif wheneveri wehavegcd uniquefactorizationanelementarybutimportantfactaboutdivisibilitybyprimesisthefollowing theorem forallprimespandallintegersaandb ifpjab thenpjaorpjb orboth proofassumeforthepurposeofcontradictionthatpjab butthatp aandp gcd andgcd sincetheonlydivisorsofpare andp andweassumethatpdividesneitheranorb theorem thenimpliesthatgcd contradictingourassumptionthatpjab sincepjabimpliesgcd thiscontradictioncompletestheproof aconsequenceoftheorem isthatwecanuniquelyfactoranycompositeintegerintoaproductofprimes chapter theoreticalgorithmstheorem uniquefactorization thereisexactlyonewaytowriteanycompositeintegeraasaproductoftheformadpe perr wherethepiareprime andtheeiarepositiveintegers proofweleavetheproofasexercise asanexample thenumber isuniquelyfactoredintoprimesas exercises provethatifa andcdacb thencmodadb provethattherearein nitelymanyprimes hint showthatnoneoftheprimesp pkdivide provethatifajbandbjc thenajc provethatifpisprimeand thengcd provecorollary provethatifpisprimeand thenpjpk concludethatforallintegersaandbandallprimesp acb papcbp modp provethatifaandbareanypositiveintegerssuchthatajb xmodb modadxmodaforanyx underthesameassumptions thatxy modb impliesxy moda foranyintegersxandy greatestcommondivisor foranyintegerk anintegernisakthpowerifthereexistsanintegerasuchthatakdn furthermore isanontrivialpowerifitisakthpowerforsomeintegerk showhowtodeterminewhetheragiven bitintegernisanontrivialpowerintimepolynomialin proveequations showthatthegcdoperatorisassociative thatis provethatforallintegersa andc gcd gcd dgcd gcd provetheorem giveef cientalgorithmsfortheoperationsofdividinga bitintegerbyashorterintegerandoftakingtheremainderofa bitintegerwhendividedbyashorterinteger youralgorithmsshouldrunintime giveanef cientalgorithmtoconvertagiven binary integertoadecimalrepresentation arguethatifmultiplicationordivisionofintegerswhoselength isatmost takestimem thenwecanconvertbinarytodecimalintime hint useadivide conquerapproach obtainingthetopandbottomhalvesoftheresultwithseparaterecursions greatestcommondivisorinthissection wedescribeeuclid salgorithmforef cientlycomputingthegreat estcommondivisoroftwointegers whenweanalyzetherunningtime weshall seeasurprisingconnectionwiththefibonaccinumbers whichyieldaworst caseinputforeuclid salgorithm werestrictourselvesinthissectiontononnegativeintegers thisrestrictionisjusti edbyequation whichstatesthatgcd dgcd jaj jbj chapter theoreticalgorithmsinprinciple wecancomputegcd forpositiveintegersaandbfromtheprimefactorizationsofaandb indeed ifadpe perr bdpf pfrr withzeroexponentsbeingusedtomakethesetofprimesp prthesameforbothaandb asexercise asksyoutoshow gcd dpmin pmin pmin asweshallshowinsection however thebestalgorithmstodateforfactoringdonotruninpolynomialtime thisapproachtocomputinggreatestcommondivisorsseemsunlikelytoyieldanef cientalgorithm euclid salgorithmforcomputinggreatestcommondivisorsreliesonthefollow ingtheorem theorem gcdrecursiontheorem foranynonnegativeintegeraandanypositiveintegerb gcd dgcd amodb proofweshallshowthatgcd andgcd amodb divideeachother sothatbyequation theymustbeequal sincetheyarebothnonnegative rstshowthatgcd jgcd amodb ifweletddgcd thendjaanddjb byequation amodbdaqb whereqdba sinceamodbisthusalinearcombinationofaandb equation impliesthatdj amodb therefore sincedjbanddj amodb corollary impliesthatdjgcd amodb equivalently thatgcd jgcd amodb showingthatgcd amodb jgcd isalmostthesame ifwenowletddgcd amodb thendjbanddj amodb sinceadqbc amodb whereqdba wehavethataisalinearcombinationofband amodb byequation weconcludethatdja sincedjbanddja wehavethatdjgcd bycorollary equivalently thatgcd amodb jgcd usingequation tocombineequations completestheproof greatestcommondivisor euclid salgorithmtheelementsofeuclid circa describesthefollowinggcdalgorithm althoughitmaybeofevenearlierorigin weexpresseuclid salgorithmasa recursiveprogrambaseddirectlyontheorem theinputsaandbarearbitrarynonnegativeintegers euclid ifb returna elsereturneuclid amodb asanexampleoftherunningofeuclid considerthecomputationofgcd euclid deuclid deuclid deuclid thiscomputationcallseuclidrecursivelythreetimes thecorrectnessofeuclidfollowsfromtheorem andthepropertythatifthealgorithmreturnsainline thenbd sothatequation impliesthatgcd dgcd thealgorithmcannotrecurseinde nitely sincethesecondargumentstrictlydecreasesineachrecursivecallandisalwaysnonnegative therefore euclidalwaysterminateswiththecorrectanswer therunningtimeofeuclid salgorithmweanalyzetheworst caserunningtimeofeuclidasafunctionofthesizeofaandb weassumewithnolossofgeneralitythata tojustifythisassumption observethatifb theneuclid immediatelymakestherecursivecalleuclid thatis ifthe rstargumentislessthanthesecondargument euclidspendsonerecursivecallswappingitsargumentsandthenpro ceeds similarly ifbda theprocedureterminatesafteronerecursivecall sinceamodbd theoverallrunningtimeofeuclidisproportionaltothenumberofrecursivecallsitmakes ouranalysismakesuseofthefibonaccinumbersfk nedbytherecurrence lemma ifa andthecalleuclid performsk recursivecalls thenafkc andbfkc chapter theoreticalgorithmsprooftheproofproceedsbyinductiononk forthebasisoftheinduction letkd andsincea wemusthavea sinceb amodb ineachrecursivecallthe rstargumentisstrictlylargerthanthesecond theassumptionthata bthereforeholdsforeachrecursivecall assumeinductivelythatthelemmaholdsifk recursivecallsaremade weshallthenprovethatthelemmaholdsforkrecursivecalls sincek wehaveb andeuclid callseuclid amodb recursively whichinturnmakesk recursivecalls theinductivehypothesisthenimpliesthatbfkc thusprovingpartofthelemma andamodbfk wehavebc amodb dbc abba sincea impliesba abc amodb fkc cfkdfkc thefollowingtheoremisanimmediatecorollaryofthislemma theorem lam stheorem foranyintegerk ifa andb fkc thenthecalleuclid makesfewerthankrecursivecalls wecanshowthattheupperboundoftheorem isthebestpossiblebyshowingthatthecalleuclid fkc makesexactlyk recursivecallswhenk weuseinductiononk forthebasecase andthecalleuclid makesexactlyonerecursivecall toeuclid wehavetostartatkd becausewhenkd wedonothavef fortheinduc tivestep assumethateuclid makesexactlyk recursivecalls fork wehavefk andfkc dfkcfk andsobyexercise wehavefkc modfkdfk wehavegcd fkc dgcd fkc modfk dgcd therefore thecalleuclid fkc recursesonetimemorethanthecalleuclid orexactlyk times meetingtheupperboundoftheo rem sincefkisapproximatelyk whereisthegoldenratio nedbyequation thenumberofrecursivecallsineuclidiso lgb greatestcommondivisor abba bcdxy howextended euclidcomputesgcd eachlineshowsoneleveloftherecursion thevaluesoftheinputsaandb thecomputedvalueba andthevaluesd andyreturned thetriple returnedbecomesthetriple usedatthenexthigherlevelofrecursion thecallextended euclid returns sothatgcd foratighterbound therefore ifwecalleuclidontwo bitnumbers thenitperformso arithmeticoperationsando bitoperations assumingthatmultiplicationanddivisionof bitnumberstakeo bitoper ations asksyoutoshowano boundonthenumberofbitoperations theextendedformofeuclid salgorithmwenowrewriteeuclid salgorithmtocomputeadditionalusefulinformation speci cally weextendthealgorithmtocomputetheintegercoef cientsxandysuchthatddgcd daxcby notethatxandymaybezeroornegative weshall ndthesecoef cientsusefullaterforcomputingmodularmultiplicativeinverses theprocedureextended euclidtakesasinputapairofnonnegativeintegersandreturnsatripleoftheform thatsatis esequation extended euclid ifb return dextended euclid amodb bcy return illustrateshowextended euclidcomputesgcd theextended euclidprocedureisavariationoftheeuclidprocedure isequivalenttothetest inline ofeuclid ifbd chapter theoreticalgorithmsextended euclidreturnsnotonlyddainline butalsothecoef cientsxd andyd sothatadaxcby ifb extended euclid rstcomputes suchthatd dgcd amodb andd dbx amodb asforeuclid wehaveinthiscaseddgcd dgcd amodb toobtainxandysuchthatddaxcby westartbyrewritingequation usingtheequationddd andequation ddbx abba bcy choosingxdy andydx bcy satis estheequationddaxcby provingthecorrectnessofextended euclid sincethenumberofrecursivecallsmadeineuclidisequaltothenumberofrecursivecallsmadeinextended euclid therunningtimesofeuclidandextended euclidarethesame towithinaconstantfactor thatis fora thenumberofrecursivecallsiso lgb exercises provethatequations implyequation computethevalues thatthecallextended euclid returns provethatforallintegersa andn gcd dgcd ackn rewriteeuclidinaniterativeformthatusesonlyaconstantamountofmemory thatis storesonlyaconstantnumberofintegervalues ifa showthatthecalleuclid makesatmost clogbrecursivecalls improvethisboundto clog gcd whatdoesextended euclid fkc return proveyouranswercorrect modulararithmetic nethegcdfunctionformorethantwoargumentsbytherecursiveequation gcd dgcd gcd showthatthegcdfunctionreturnsthesameanswerindependentoftheorderinwhichitsargumentsarespeci alsoshowhowto ndintegersx xnsuchthatgcd ccanxn showthatthenumberofdivisionsperformedbyyouralgorithmiso nclg maxfa ang nelcm tobetheleastcommonmultipleofthenintegersa thatis thesmallestnonnegativeintegerthatisamultipleofeachai showhowtocomputelcm cientlyusingthe argument gcdoperationasasubroutine provethatn andn arepairwiserelativelyprimeifandonlyifgcd dgcd moregenerally showthatn nkarepairwiserelativelyprimeifandonlyifasetofdlgkepairsofnumbersderivedfromtheniarerelativelyprime modulararithmeticinformally wecanthinkofmodulararithmeticasarithmeticasusualovertheintegers exceptthatifweareworkingmodulon theneveryresultxisreplacedbytheelementoff gthatisequivalenttox modulon thatis xisreplacedbyxmodn thisinformalmodelsuf cesifwesticktotheoperationsofaddition subtraction andmultiplication amoreformalmodelformodular arithmetic whichwenowgive isbestdescribedwithintheframeworkofgroup theory finitegroupsagroup isasetstogetherwithabinaryoperation nedonsforwhichthefollowingpropertieshold closure foralla wehavea identity thereexistsanelemente calledtheidentityofthegroup suchthate ada edaforalla associativity foralla wehave cda chapter theoreticalgorithms inverses foreacha thereexistsauniqueelementb calledtheinverseofa suchthata bdb ade asanexample considerthefamiliargroup oftheintegerszundertheoperationofaddition istheidentity andtheinverseofaisa ifagroup satis esthecommutativelawa bdb aforalla thenitisanabeliangroup ifagroup satis esjsj thenitisa nitegroup thegroupsde nedbymodularadditionandmultiplicationwecanformtwo niteabeliangroupsbyusingadditionandmultiplicationmod ulon wherenisapositiveinteger thesegroupsarebasedontheequivalenceclassesoftheintegersmodulon nedinsection tode neagrouponzn weneedtohavesuitablebinaryoperations whichweobtainbyrede ningtheordinaryoperationsofadditionandmultiplication wecaneasilyde neadditionandmultiplicationoperationsforzn becausetheequivalenceclassoftwointegersuniquelydeterminestheequivalenceclassoftheirsumorproduct thatis ifaa modn andbb modn thenacba modn aba modn wede neadditionandmultiplicationmodulon denotedcnandn ancn bnd acn ann bnd abn wecande nesubtractionsimilarlyonznby ann bnd butdivi sionismorecomplicated asweshallsee thesefactsjustifythecommonand convenientpracticeofusingthesmallestnonnegativeelementofeachequivalence classasitsrepresentativewhenperformingcomputationsinzn weadd andmultiplyasusualontherepresentatives butwereplaceeachresultxbytherepresentativeofitsclass thatis byxmodn usingthisde nitionofadditionmodulon wede netheadditivegroupmodulonas thesizeoftheadditivegroupmodulonisjznjdn givestheoperationtableforthegroup theorem thesystem isa niteabeliangroup proofequation showsthat isclosed associativityandcom mutativityofcnfollowfromtheassociativityandcommutativityofc modulararithmetic nitegroups equivalenceclassesaredenotedbytheirrepresentativeelements thegroup thegroup ancn cnd acncn cnd acb cnd bcc ancn bcnd ancn bncn ancn bnd acnd bcnd bncn theidentityelementof thatis additive inverseofanelementa thatis istheelementa thatis ancn usingthede nitionofmultiplicationmodulon wede nethemultiplicativegroupmodulonas theelementsofthisgrouparethesetznofelementsinznthatarerelativelyprimeton sothateachonehasauniqueinverse modulon zndf znwgcd toseethatzniswellde ned notethatfor wehavea ackn modn forallintegersk byexercise therefore gcd impliesgcd ackn forallintegersk andfacknwk thesetzniswellde ned anexampleofsuchagroupisz chapter theoreticalgorithmswherethegroupoperationismultiplicationmodulo herewedenoteanel ement asa forexample wedenote showsthegroup forexample mod workinginz theiden tityforthisgroupis theorem thesystem isa niteabeliangroup prooftheorem impliesthat isclosed associativityandcommu tativitycanbeprovedfornastheywereforcnintheproofoftheorem theidentityelementis toshowtheexistenceofinverses letabeanelementofznandlet bereturnedbyextended euclid sincea andaxcnyd equivalently modn xnisamultiplicativeinverseof modulon furthermore weclaimthat toseewhy equation demonstratesthatthesmallestpos itivelinearcombinationofxandnmustbe therefore theorem impliesthatgcd wedefertheproofthatinversesareuniquelyde neduntilcorollary asanexampleofcomputingmultiplicativeinverses supposethatad andnd thenextended euclid returns sothat isthemultiplicativeinverseof whenworkingwiththegroups intheremainderofthischapter wefollowtheconvenientpracticeofdenotingequivalenceclassesbytheir representativeelementsanddenotingtheoperationscnandnbytheusualarith meticnotationscand orjuxtaposition sothatabdab respectively equivalencesmodulonmayalsobeinterpretedasequationsinzn forexample thefollowingtwostatementsareequivalent axb modn ann xnd asafurtherconvenience wesometimesrefertoagroup merelyasswhentheoperation isunderstoodfromcontext wemaythusrefertothegroups asznandzn respectively wedenotethe multiplicative inverseofanelementaby modn divisioninznisde nedbytheequationa bab modn forexample inz modulararithmetic wehavethat mod mod sothat mod thesizeofznisdenoted thisfunction knownaseuler sphifunction satis estheequation dnypwpisprimeandpjn sothatprunsoveralltheprimesdividingn includingnitself ifnisprime weshallnotprovethisformulahere intuitively webeginwithalistofthenremaindersf gandthen foreachprimepthatdividesn crossouteverymultipleofpinthelist forexample sincetheprimedivisorsof ifpisprime thenzpdf andp pdp ifniscomposite althoughitcanbeshownthat nelnlnnc lnlnn forn whered iseuler sconstant asomewhatsimpler butlooser lowerboundforn lnlnn thelowerbound isessentiallythebestpossible sinceliminfn lnlnnde subgroupsif isagroup isalsoagroup isasubgroupof forexample theevenintegersformasubgroupoftheintegersundertheoperationofaddition thefollowingtheoremprovidesausefultoolforrecognizing subgroups chapter theoreticalgorithmstheorem anonemptyclosedsubsetofa nitegroupisasubgroup isa nitegroupands isanynonemptysubsetofssuchthata foralla isasubgroupof proofweleavetheproofasexercise forexample thesetf gformsasubgroupofz sinceitisnonemptyandclosedundertheoperationc thatis itisclosedunderc thefollowingtheoremprovidesanextremelyusefulconstraintonthesizeofasubgroup weomittheproof theorem lagrange stheorem isa nitegroupand isasubgroupof thenjs jisadivisorofjsj asubgroups ofagroupsisapropersubgroupifs weshallusethefollowingcorollaryinouranalysisinsection ofthemiller rabinprimality testprocedure corollary ifs isapropersubgroupofa nitegroups thenjs jjsj subgroupsgeneratedbyanelementtheorem givesusaneasywaytoproduceasubgroupofa nitegroup chooseanelementaandtakeallelementsthatcanbegeneratedfromausingthegroupoperation speci cally nea fork bya dkmid ada forexample ifwetakead inthegroupz thesequencea inthegroupzn wehavea dkamodn andinthegroupzn wehavea dakmodn wede nethesubgroupgeneratedbya denotedhaior hai byhaidfa wesaythatageneratesthesubgrouphaiorthataisageneratorofhai sincesis nite haiisa nitesubsetofs possiblyincludingallofs sincetheassociativityof implies modulararithmetic icj haiisclosedandtherefore bytheorem haiisasubgroupofs forexample inz wehaveh idf idf idf similarly inz wehaveh idf idf idf theorderofa inthegroups denotedord isde nedasthesmallestposi tiveintegertsuchthata theorem forany nitegroup andanya theorderofaisequaltothesizeofthesubgroupitgenerates orord djhaij prooflettdord sincea deanda tck fork ifi thena forsomej aswegenerateele mentsbya weseenonewelementsaftera haidfa andsojhaijt toshowthatjhaijt weshowthateachelementofthese quencea isdistinct supposeforthepurposeofcontradictionthata forsomeiandjsatisfying ick jck fork butthisequalityimpliesthata acontradic tion sinceic tbuttistheleastpositivevaluesuchthata fore eachelementofthesequencea isdistinct andjhaijt weconcludethatord djhaij corollary thesequencea isperiodicwithperiodtdord thatis ifandonlyifij modt consistentwiththeabovecorollary wede nea aseanda asa imodt wheretdord forallintegersi corollary isa nitegroupwithidentitye thenforalla jsj chapter theoreticalgorithmsprooflagrange stheorem theorem impliesthatord jjsj andsojsj modt wheretdord therefore jsj exercises drawthegroupoperationtablesforthegroups showthatthesegroupsareisomorphicbyexhibitingaone onecorrespondence betweentheirelementssuchthatacbc mod ifandonlyif mod listallsubgroupsofz andofz provetheorem showthatifpisprimeandeisapositiveinteger thenpe dpe showthatforanyintegern andforanya thefunctionfawzn znde nedbyfa daxmodnisapermutationofzn solvingmodularlinearequationswenowconsidertheproblemof ndingsolutionstotheequationaxb modn wherea andn thisproblemhasseveralapplications forexample weshalluseitaspartoftheprocedurefor ndingkeysinthersapublic keycryptosysteminsection weassumethata andnaregiven andwewishto ndallvaluesofx modulon thatsatisfyequation theequationmayhavezero ormorethanonesuchsolution lethaidenotethesubgroupofzngeneratedbya sincehaidfa gdfaxmodnwx equation hasasolutionifandonlyif hai grange stheorem theorem tellsusthatjhaijmustbeadivisorofn thefollowingtheoremgivesusaprecisecharacterizationofhai solvingmodularlinearequations theorem foranypositiveintegersaandn ifddgcd thenhaidhdidf inzn andthusjhaijdn proofwebeginbyshowingthatd hai recallthatextended euclid producesintegersx andy suchthatax cny modn sothatd hai inotherwords disamultipleofainzn sinced hai itfollowsthateverymultipleofdbelongstohai becauseanymultipleofamultipleofaisitselfamultipleofa haicontainseveryelementinf thatis hdhai wenowshowthathahdi ifm hai thenmdaxmodnforsomeintegerx andsomdaxcnyforsomeintegery however djaanddjn andsodjmbyequation therefore hdi combiningtheseresults wehavethathaidhdi toseethatjhaijdn observethatthereareexactlyn dmultiplesofdbetween andn inclusive corollary theequationaxb modn issolvablefortheunknownxifandonlyifdjb whereddgcd prooftheequationaxb modn issolvableifandonlyif hai whichisthesameassaying bmodn bytheorem thenb haiifandonlyifdjb sincethemembersofhaiarepreciselythemultiplesofd ifb orbn thecorollarythenfollowsfromtheobservationthatdjbifandonlyifdj bmodn sincebandbmodndifferbyamultipleofn whichisitselfamultipleofd corollary theequationaxb modn eitherhasddistinctsolutionsmodulon whereddgcd orithasnosolutions proofifaxb modn hasasolution thenb hai bytheorem ord djhaij andsocorollary andtheorem implythatthesequenceaimodn forid isperiodicwithperiodjhaijdn ifb hai thenbappearsexactlydtimesinthesequenceaimodn forid chapter theoreticalgorithmsthelength blockofvalueshairepeatsexactlydtimesasiincreasesfrom ton theindicesxofthedpositionsforwhichaxmodndbarethesolutionsoftheequationaxb modn theorem letddgcd andsupposethatddax cny forsomeintegersx andy forexample ascomputedbyextended euclid ifdjb thentheequationaxb modn hasasoneofitssolutionsthevaluex wherex modn proofwehaveax modn modn becauseax modn modn andthusx isasolutiontoaxb modn theorem supposethattheequationaxb modn issolvable thatis djb whereddgcd andthatx isanysolutiontothisequation thisequa tionhasexactlyddistinctsolutions modulon givenbyxidx forid proofbecausen nforid thevaluesx arealldistinct modulon sincex isasolutionofaxb modn wehaveax modnb modn forid wehaveaximodnda cin modnd cain modndax modn becausedjaimpliesthatain disamultipleofn modn andhenceaxib modn makingxiasolution bycorollary theequationaxb modn hasexactlydsolutions sothatx mustbeallofthem wehavenowdevelopedthemathematicsneededtosolvetheequationaxb modn thefollowingalgorithmprintsallsolutionstothisequation theinputsaandnarearbitrarypositiveintegers andbisanarbitraryinteger solvingmodularlinearequations modular linear equation solver dextended euclid ifdjb modn forid tod modn elseprint nosolutions asanexampleoftheoperationofthisprocedure considertheequation mod andnd callingextended euclidinline weobtain lines execute computesx mod thelooponlines printsthetwosolutions theproceduremodular linear equation solverworksasfollows computesddgcd alongwithtwovaluesx andy suchthatddax cny demonstratingthatx isasolutiontotheequationax modn ifddoesnotdivideb thentheequationaxb modn hasnosolution bycorollary checkstoseewhetherdjb ifnot reportsthattherearenosolutions otherwise computesasolutionx toaxb modn inaccordancewiththeorem givenonesolution theorem statesthat addingmultiplesof modulon yieldstheotherd solutions theforloopoflines printsoutalldsolutions beginningwithx andspacedn dapart modulon modular linear equation solverperformso lgncgcd arith meticoperations sinceextended euclidperformso lgn arithmeticopera tions andeachiterationoftheforloopoflines performsaconstantnumberofarithmeticoperations thefollowingcorollariesoftheorem givespecializationsofparticularinterest corollary foranyn ifgcd thentheequationaxb modn hasauniquesolution modulon ifbd acommoncaseofconsiderableinterest thexwearelookingforisamultiplicativeinverseofa modulon corollary foranyn ifgcd thentheequationax modn hasauniquesolution modulon otherwise ithasnosolution chapter theoreticalgorithmsthankstocorollary wecanusethenotationa modntorefertothemultiplicativeinverseofa modulon whenaandnarerelativelyprime ifgcd thentheuniquesolutiontotheequationax modn istheintegerxreturnedbyextended euclid sincetheequationgcd daxcnyimpliesax modn wecancomputea modnef cientlyusingextended euclid exercises findallsolutionstotheequation mod provethattheequationaxay modn impliesxy modn whenevergcd showthattheconditiongcd isnecessarybysupplyingacounterexamplewithgcd considerthefollowingchangetoline oftheproceduremodular linear equation solver mod willthiswork explainwhyorwhynot letpbeprimeandf xccftxt modp beapolyno mialofdegreet withcoef cientsfidrawnfromzp wesaythata zpisazerooffiff modp provethatifaisazerooff thenf modp forsomepolynomialg ofdegreet provebyinductionontthatifpisprime thenapolynomialf ofdegreetcanhaveatmosttdistinctzerosmodulop thechineseremaindertheoremarounda thechinesemathematiciansun usolvedtheproblemof ingthoseintegersxthatleaveremainders whendividedby respectively onesuchsolutionisxd allsolutionsareoftheform thechineseremaindertheorem forarbitraryintegersk chineseremaindertheorem providesacorrespon dencebetweenasystemofequationsmoduloasetofpairwiserelativelyprime moduli forexample andanequationmodulotheirproduct forexam ple thechineseremaindertheoremhastwomajorapplications lettheinte gernbefactoredasndn wherethefactorsniarepairwiserelativelyprime thechineseremaindertheoremisadescriptive structuretheorem thatdescribesthestructureofznasidenticaltothatofthecartesianproductzn znkwithcomponentwiseadditionandmultiplicationmoduloniintheithcomponent thisdescriptionhelpsustodesignef cientalgo rithms sinceworkingineachofthesystemsznicanbemoreef cient intermsofbitoperations thanworkingmodulon theorem chineseremaindertheorem letndn wheretheniarepairwiserelativelyprime considerthecorrespondencea wherea zni andaidamodniforid mapping isaone onecorrespondence bijec tion betweenznandthecartesianproductzn znk operationsper formedontheelementsofzncanbeequivalentlyperformedonthecorrespondingk tuplesbyperformingtheoperationsindependentlyineachcoordinatepositionintheappropriatesystem thatis ifa acb modn modn akcbk modnk modn modn akbk modnk modn modn akbkmodnk prooftransformingbetweenthetworepresentationsisfairlystraightforward goingfromato isquiteeasyandrequiresonlyk mod opera tions computingafrominputs isabitmorecomplicated webeginbyde ningmidn niforid thusmiistheproductofallofthenj sotherthanni midn nic wenextde chapter theoreticalgorithmscidmi imodni forid equation isalwayswellde ned sincemiandniarerelativelyprime bytheorem corollary guaranteesthatm imodniexists finally wecancomputeaasafunctionofa akasfollows ccakck modn wenowshowthatequation ensuresthataai modni forid notethatifj thenmj modni whichimpliesthatcjmj modni notealsothatci modni fromequation wethushavetheappealingandusefulcorrespondenceci avectorthathas severywhereexceptintheithcoordinate whereithasa thecithusforma basis fortherepresentation inacertainsense foreachi therefore wehaveaaici modni aimi imodni modni modni whichiswhatwewishedtoshow ourmethodofcomputingafromtheai spro ducesaresultathatsatis estheconstraintsaai modni forid thecorrespondenceisone sincewecantransforminbothdirections finally equations followdirectlyfromexercise xmodnid xmodn modniforanyxandid weshallusethefollowingcorollarieslaterinthischapter corollary ifn nkarepairwiserelativelyprimeandndn thenforanyintegersa thesetofsimultaneousequationsxai modni forid hasauniquesolutionmodulonfortheunknownx corollary ifn nkarepairwiserelativelyprimeandndn thenforallintegersxanda modni forid kifandonlyifxa modn thechineseremaindertheorem anillustrationofthechineseremaindertheoremforn andn forthisexample andc inrowi columnjisshownthevalueofa modulo suchthatamod diandamod notethatrow containsa similarly containsa equivalentto sincec movingdownarowincreasesaby similarly meansthatmovingrightbyacolumnincreasesaby increasingaby correspondstomovingdiagonallydownwardandtotheright wrappingaroundfromthebottomtothetopandfromtherighttotheleft asanexampleoftheapplicationofthechineseremaindertheorem supposewearegiventhetwoequationsa mod mod sothata andn andwewishtocomputeamod sincendn because mod mod wehavec mod mod anda mod mod mod seefigure foranillustrationofthechineseremaindertheorem modulo wecanworkmodulonbyworkingmodulondirectlyorbyworkinginthetransformedrepresentationusingseparatemodulonicomputations asconvenient thecomputationsareentirelyequivalent exercises findallsolutionstotheequationsx mod andx mod chapter theoreticalgorithms findallintegersxthatleaveremainders whendividedby respectively arguethat underthede nitionsoftheorem ifgcd modn modn modn kmodnk underthede nitionsoftheorem provethatforanypolynomialf thenum berofrootsoftheequationf modn equalstheproductofthenumberofrootsofeachoftheequationsf modn modn modnk powersofanelementjustasweoftenconsiderthemultiplesofagivenelementa modulon weconsiderthesequenceofpowersofa modulon wherea modulon indexingfrom thvalueinthissequenceisa modnd andtheithvalueisaimodn forexample thepowersof modulo arei imod whereasthepowersof modulo arei imod inthissection lethaidenotethesubgroupofzngeneratedbyabyrepeatedmultiplication andletordn orderofa modulon denotetheorderofainzn forexample idf ginz andord usingthede nitionoftheeulerphifunction asthesizeofzn seesection wenowtranslatecorollary intothenotationofzntoobtaineuler stheoremandspecializeittozp wherepisprime toobtainfermat stheorem theorem euler stheorem foranyintegern modn foralla powersofanelement theorem fermat stheorem ifpisprime thenap modp foralla proofbyequation ifpisprime fermat stheoremappliestoeveryelementinzpexcept foralla however wehaveapa modp ifpisprime ifordn djznj theneveryelementinznisapowerofg modulon andgisaprimitiverootorageneratorofzn forexample isaprimitiveroot modulo isnotaprimitiveroot modulo ifznpossessesaprimitiveroot thegroupzniscyclic weomittheproofofthefollowingtheorem whichisprovenbynivenandzuckerman theorem thevaluesofn forwhichzniscyclicare forallprimesp andallpositiveintegerse ifgisaprimitiverootofznandaisanyelementofzn thenthereexistsa suchthatg modn isadiscretelogarithmoranindexofa modulon tothebaseg wedenotethisvalueasindn theorem discretelogarithmtheorem ifgisaprimitiverootofzn thentheequationgxgy modn holdsifandonlyiftheequationxy mod holds proofsuppose rstthatxy mod xdyck forsomeintegerk therefore gxgyc modn modn modn byeuler stheorem modn conversely supposethatgxgy modn becausethesequenceofpowersofggenerateseveryelementofhgiandjhgijd corollary impliesthatthesequenceofpowersofgisperiodicwithperiod therefore ifgxgy modn thenwemusthavexy mod wenowturnourattentiontothesquarerootsof moduloaprimepower thefollowingtheoremwillbeusefulinourdevelopmentofaprimality testingalgo rithminsection chapter theoreticalgorithmstheorem ifpisanoddprimeande thentheequationx modpe hasonlytwosolutions namelyxd andx proofequation isequivalenttopej sincep wecanhavepj orpj butnotboth otherwise byproperty pwouldalsodividetheirdifference ifp thengcd andbycorollary wewouldhavepej thatis modpe symmetrically ifp thengcd andcorollary impliesthatpej sothatx modpe therefore eitherx modpe orx modpe anumberxisanontrivialsquarerootof modulon ifitsatis estheequationx modn butxisequivalenttoneitherofthetwo trivial squareroots modulon forexample isanontrivialsquarerootof modulo weshallusethefollowingcorollarytotheorem inthecorrectnessproofin forthemiller rabinprimality testingprocedure corollary ifthereexistsanontrivialsquarerootof modulon thenniscomposite proofbythecontrapositiveoftheorem ifthereexistsanontrivialsquarerootof modulon thenncannotbeanoddprimeorapowerofanoddprime ifx mod thenx mod andsoallsquarerootsof modulo aretrivial ncannotbeprime finally wemusthaven foranontrivialsquarerootof toexist therefore nmustbecomposite raisingtopowerswithrepeatedsquaringafrequentlyoccurringoperationinnumber theoreticcomputationsisraisingonenumbertoapowermoduloanothernumber alsoknownasmodularexponentia tion moreprecisely wewouldlikeanef cientwaytocomputeabmodn whereaandbarenonnegativeintegersandnisapositiveinteger modularexponenti ationisanessentialoperationinmanyprimality testingroutinesandinthersa public keycryptosystem themethodofrepeatedsquaringsolvesthisproblemef cientlyusingthebinaryrepresentationofb lethbk ibethebinaryrepresentationofb thatis thebinaryrepresentationiskc bitslong bkisthemostsigni cantbit andb istheleast powersofanelement theresultsofmodular exponentiationwhencomputingab modn wheread andnd thevaluesareshownaftereachexecutionoftheforloop nalresultis signi cantbit thefollowingprocedurecomputesacmodnascisincreasedbydoublingsandincrementationsfrom tob modular exponentiation lethbk ibethebinaryrepresentationofb foridkdownto modn ifbi cdcc modn returndtheessentialuseofsquaringinline ofeachiterationexplainsthename repeatedsquaring asanexample forad andnd thealgorithmcomputesthesequenceofvaluesmodulo showninfigure thesequence ofexponentsusedappearsintherowofthetablelabeledbyc thevariablecisnotreallyneededbythealgorithmbutisincludedforthefol lowingtwo partloopinvariant justpriortoeachiterationoftheforloopoflines thevalueofcisthesameasthepre xhbk bic iofthebinaryrepresentationofb ddacmodn weusethisloopinvariantasfollows initialization initially idk sothatthepre xhbk bic iisempty whichcorrespondstocd moreover modn chapter theoreticalgorithmsmaintenance letc andd denotethevaluesofcanddattheendofaniterationoftheforloop andthusthevaluespriortothenextiteration eachiterationupdatesc ifbid orc ifbid sothatcwillbecorrectpriortothenextiteration ifbid thend modnd modnda cmodndac modn ifbid thend amodnd amodnda modndac modn ineithercase ddacmodnpriortothenextiteration termination attermination cdb sincechasthevalueofthepre xhbk iofb sbinaryrepresentation henceddacmodndabmodn iftheinputsa andnare bitnumbers thenthetotalnumberofarith meticoperationsrequirediso andthetotalnumberofbitoperationsrequirediso exercises drawatableshowingtheorderofeveryelementinz pickthesmallestprimitiverootgandcomputeatablegivingind forallx giveamodularexponentiationalgorithmthatexaminesthebitsofbfromrighttoleftinsteadoflefttoright assumingthatyouknow explainhowtocomputea modnforanya znusingtheproceduremodular exponentiation thersapublic keycryptosystemwithapublic keycryptosystem wecanencryptmessagessentbetweentwocom municatingpartiessothataneavesdropperwhooverhearstheencryptedmessages willnotbeabletodecodethem apublic keycryptosystemalsoenablesaparty toappendanunforgeable digitalsignature totheendofanelectronicmessage suchasignatureistheelectronicversionofahandwrittensignatureonapaperdoc ument itcanbeeasilycheckedbyanyone forgedbynoone yetlosesitsvalidity ifanybitofthemessageisaltered itthereforeprovidesauthenticationofboththe identityofthesignerandthecontentsofthesignedmessage itistheperfecttool thersapublic keycryptosystem forelectronicallysignedbusinesscontracts electronicchecks electronicpurchaseorders andotherelectroniccommunicationsthatpartieswishtoauthenticate thersapublic keycryptosystemreliesonthedramaticdifferencebetweentheeaseof ndinglargeprimenumbersandthedif cultyoffactoringtheproductof twolargeprimenumbers describesanef cientprocedurefor nding largeprimenumbers andsection discussestheproblemoffactoringlarge integers public keycryptosystemsinapublic keycryptosystem eachparticipanthasbothapublickeyandasecretkey eachkeyisapieceofinformation forexample inthersacryptosystem eachkeyconsistsofapairofintegers theparticipants alice bob aretraditionallyusedincryptographyexamples wedenotetheirpublicandsecretkeysaspa saforaliceandpb sbforbob eachparticipantcreateshisorherownpublicandsecretkeys secretkeysarekeptsecret butpublickeyscanberevealedtoanyoneorevenpublished infact itisoftenconvenienttoassumethateveryone spublickeyisavailableinapub licdirectory sothatanyparticipantcaneasilyobtainthepublickeyofanyother participant thepublicandsecretkeysspecifyfunctionsthatcanbeappliedtoanymessage letddenotethesetofpermissiblemessages forexample dmightbethesetofall nite lengthbitsequences inthesimplest andoriginal formulationofpublic keycryptography werequirethatthepublicandsecretkeysspecifyone functionsfromdtoitself wedenotethefunctioncorrespondingtoalice spublickeypabypa andthefunctioncorrespondingtohersecretkeysabysa thefunctionspa andsa arethuspermutationsofd weassumethatthefunctionspa andsa areef cientlycomputablegiventhecorrespondingkeypaorsa thepublicandsecretkeysforanyparticipantarea matchedpair inthattheyspecifyfunctionsthatareinversesofeachother thatis mdsa mdpa foranymessagem transformingmwiththetwokeyspaandsasucces sively ineitherorder yieldsthemessagemback inapublic keycryptosystem werequirethatnoonebutalicebeabletocom putethefunctionsa inanypracticalamountoftime thisassumptioniscrucialtokeepingencryptedmailsenttoaliceprivateandtoknowingthatalice sdigi talsignaturesareauthentic alicemustkeepsasecret ifshedoesnot shelosesheruniquenessandthecryptosystemcannotprovideherwithuniquecapabilities theassumptionthatonlyalicecancomputesa mustholdeventhougheveryone chapter theoreticalgorithmsdecryptcommunication channelencryptbobaliceeavesdroppermmpasaccdpa encryptioninapublickeysystem bobencryptsthemessagemusingalice spublickeypaandtransmitstheresultingciphertextcdpa overacommunicationchanneltoal aneavesdropperwhocapturesthetransmittedciphertextgainsnoinformationaboutm alicereceivescanddecryptsitusinghersecretkeytoobtaintheoriginalmessagemdsa knowspaandcancomputepa theinversefunctiontosa ciently inordertodesignaworkablepublic keycryptosystem wemust gureouthowtocreateasysteminwhichwecanrevealatransformationpa withouttherebyrevealinghowtocomputethecorrespondinginversetransformationsa thistaskappearsformidable butweshallseehowtoaccomplishit inapublic keycryptosystem encryptionworksasshowninfigure sup posebobwishestosendaliceamessagemencryptedsothatitwilllooklikeunintelligiblegibberishtoaneavesdropper thescenarioforsendingthemessage goesasfollows bobobtainsalice spublickeypa fromapublicdirectoryordirectlyfromalice bobcomputestheciphertextcdpa correspondingtothemessagemandsendsctoalice whenalicereceivestheciphertextc sheapplieshersecretkeysatoretrievetheoriginalmessage dsa becausesa andpa areinversefunctions alicecancomputemfromc causeonlyaliceisabletocomputesa aliceistheonlyonewhocancomputemfromc becausebobencryptsmusingpa onlyalicecanunderstandthetrans mittedmessage wecanjustaseasilyimplementdigitalsignatureswithinourformulationofapublic keycryptosystem thereareotherwaysofapproachingtheproblemofconstructingdigitalsignatures butweshallnotgointothemhere supposenowthatalicewishestosendbobadigitallysignedresponsem showshowthedigital signaturescenarioproceeds alicecomputesherdigitalsignatureforthemessagem usinghersecretkeysaandtheequationdsa thersapublic keycryptosystem signcommunication channelverify acceptbobalicem pasa dsa digitalsignaturesinapublic keysystem alicesignsthemessagem byappendingherdigitalsignaturedsa toit shetransmitsthemessage signaturepair tobob whoveri esitbycheckingtheequationm dpa iftheequationholds heaccepts asamessagethatalicehassigned alicesendsthemessage signaturepair tobob whenbobreceives hecanverifythatitoriginatedfromalicebyus ingalice spublickeytoverifytheequationm dpa presumably containsalice sname sobobknowswhosepublickeytouse iftheequationholds thenbobconcludesthatthemessagem wasactuallysignedbyalice iftheequationfailstohold bobconcludeseitherthatthemessagem orthedigitalsignaturewascorruptedbytransmissionerrorsorthatthepair isanattemptedforgery becauseadigitalsignatureprovidesbothauthenticationofthesigner sidentityandauthenticationofthecontentsofthesignedmessage itisanalogoustoahandwrit tensignatureattheendofawrittendocument adigitalsignaturemustbeveri ablebyanyonewhohasaccesstothesigner spublickey asignedmessagecanbeveri edbyonepartyandthenpassedonto otherpartieswhocanalsoverifythesignature forexample themessagemight beanelectroniccheckfromalicetobob afterbobveri esalice ssignatureon thecheck hecangivethechecktohisbank whocanthenalsoverifythesignature andeffecttheappropriatefundstransfer asignedmessageisnotnecessarilyencrypted themessagecanbe intheclear andnotprotectedfromdisclosure bycomposingtheaboveprotocolsforencryp tionandforsignatures wecancreatemessagesthatarebothsignedandencrypted thesigner rstappendshisorherdigitalsignaturetothemessageandthenen cryptstheresultingmessage signaturepairwiththepublickeyoftheintendedre cipient therecipientdecryptsthereceivedmessagewithhisorhersecretkeyto obtainboththeoriginalmessageanditsdigitalsignature therecipientcanthenverifythesignatureusingthepublickeyofthesigner thecorrespondingcom binedprocessusingpaper basedsystemswouldbetosignthepaperdocumentand chapter theoreticalgorithmsthensealthedocumentinsideapaperenvelopethatisopenedonlybytheintendedrecipient thersacryptosysteminthersapublic keycryptosystem aparticipantcreateshisorherpublicandsecretkeyswiththefollowingprocedure selectatrandomtwolargeprimenumberspandqsuchthatp theprimespandqmightbe bitseach computendpq selectasmalloddintegerethatisrelativelyprimeto byequa tion equals computedasthemultiplicativeinverseofe modulo corollary guaranteesthatdexistsandisuniquelyde ned wecanusethetechniqueofsection tocomputed giveneand publishthepairpd astheparticipant srsapublickey keepsecretthepairsd astheparticipant srsasecretkey forthisscheme thedomaindisthesetzn totransformamessagemasso ciatedwithapublickeypd computep dmemodn totransformaciphertextcassociatedwithasecretkeysd computes dcdmodn theseequationsapplytobothencryptionandsignatures tocreateasignature thesignerapplieshisorhersecretkeytothemessagetobesigned ratherthantoa ciphertext toverifyasignature thepublickeyofthesignerisappliedtoit thantoamessagetobeencrypted wecanimplementthepublic keyandsecret keyoperationsusingtheproceduremodular exponentiationdescribedinsection toanalyzetherunningtimeoftheseoperations assumethatthepublickey andsecretkey satisfylgedo lgd andlgn applyingapublickeyrequireso modularmultiplicationsanduseso bitoperations applyingasecretkeyrequireso modularmultiplications usingo bitoperations theorem correctnessofrsa thersaequations neinversetransformationsofznsatis fyingequations thersapublic keycryptosystem prooffromequations wehavethatforanym dmed modn sinceeanddaremultiplicativeinversesmodulo edd forsomeintegerk butthen ifm modp wehavemedm modp mmodp modp modp bytheorem modp medm modp ifm modp medm modp forallm similarly medm modq forallm bycorollary tothechineseremaindertheorem medm modn forallm thesecurityofthersacryptosystemrestsinlargepartonthedif cultyoffac toringlargeintegers ifanadversarycanfactorthemodulusninapublickey thentheadversarycanderivethesecretkeyfromthepublickey usingtheknowledgeofthefactorspandqinthesamewaythatthecreatorofthepublickeyusedthem therefore iffactoringlargeintegersiseasy thenbreakingthersacryptosystem iseasy theconversestatement thatiffactoringlargeintegersishard thenbreak ingrsaishard isunproven aftertwodecadesofresearch however noeasier methodhasbeenfoundtobreakthersapublic keycryptosystemthantofactor themodulusn andasweshallseeinsection factoringlargeintegersissur prisinglydif cult byrandomlyselectingandmultiplyingtogethertwo bitprimes wecancreateapublickeythatcannotbe broken inanyfeasibleamount oftimewithcurrenttechnology intheabsenceofafundamentalbreakthroughin thedesignofnumber theoreticalgorithms andwhenimplementedwithcarefol lowingrecommendedstandards thersacryptosystemiscapableofprovidinga highdegreeofsecurityinapplications inordertoachievesecuritywiththersacryptosystem however weshoulduseintegersthatarequitelong hundredsorevenmorethanonethousandbits chapter theoreticalgorithmslong toresistpossibleadvancesintheartoffactoring atthetimeofthiswriting rsamoduliwerecommonlyintherangeof bits tocreatemoduliofsuchsizes wemustbeableto ndlargeprimesef ciently addressesthisproblem foref ciency rsaisoftenusedina hybrid management modewithfastnon public keycryptosystems withsuchasystem theencryptionand decryptionkeysareidentical ifalicewishestosendalongmessagemtobobprivately sheselectsarandomkeykforthefastnon public keycryptosystemandencryptsmusingk obtainingciphertextc cisaslongasm butkisquiteshort sheencryptskusingbob spublicrsakey sincekisshort computingpb isfast muchfasterthancomputingpb shethentransmits tobob whodecryptspb toobtainkandthenusesktodecryptc obtainingm wecanuseasimilarhybridapproachtomakedigitalsignaturesef ciently thisapproachcombinesrsawithapubliccollision resistanthashfunctionh afunctionthatiseasytocomputebutforwhichitiscomputationallyinfeasibleto ndtwomessagesmandm suchthath thevalueh isashort ngerprint ofthemessagem ifalicewishestosignamessagem rstapplieshtomtoobtainthe ngerprinth whichshethenencryptswithhersecretkey shesends tobobashersignedversionofm bobcanverifythesignaturebycomputingh andverifyingthatpaappliedtosa asreceivedequalsh becausenoonecancreatetwomessageswiththesame ngerprint itiscomputationallyinfeasibletoalterasignedmessageandpreservethevalidityofthesignature finally wenotethattheuseofcerti catesmakesdistributingpublickeysmucheasier forexample assumethereisa trustedauthority twhosepublickeyisknownbyeveryone alicecanobtainfromtasignedmessage hercerti cate statingthat alice spublickeyispa thiscerti cateis authenticating sinceeveryoneknowspt alicecanincludehercerti catewithhersignedmessages sothattherecipienthasalice spublickeyimmediatelyavailableinordertoverify hersignature becauseherkeywassignedbyt therecipientknowsthatalice skeyisreallyalice exercises consideranrsakeysetwithpd anded whatvalueofdshouldbeusedinthesecretkey whatistheencryptionofthemessagemd primalitytesting provethatifalice spublicexponenteis andanadversaryobtainsalice ssecretexponentd thentheadversarycanfactoralice smodulusnintimepolynomialinthenumberofbitsinn althoughyouarenotaskedtoproveit youmaybeinterestedtoknowthatthisresultremainstrueevenifthecondition isremoved seemiller provethatrsaismultiplicativeinthesensethatpa modn usethisfacttoprovethatifanadversaryhadaprocedurethatcouldef cientlydecrypt percentofmessagesfromznencryptedwithpa thenhecouldemployaprobabilisticalgorithmtodecrypteverymessageencryptedwithpawithhighprobability primalitytestinginthissection weconsidertheproblemof ndinglargeprimes webeginwitha discussionofthedensityofprimes proceedtoexamineaplausible butincomplete approachtoprimalitytesting andthenpresentaneffectiverandomizedprimalitytestduetomillerandrabin thedensityofprimenumbersformanyapplications suchascryptography weneedto ndlarge random primes fortunately largeprimesarenottoorare sothatitisfeasibletotestrandomintegersoftheappropriatesizeuntilwe ndaprime theprimedistribu tionfunction speci esthenumberofprimesthatarelessthanorequalton forexample sincethereare primenumberslessthanorequalto namely theprimenumbertheoremgivesausefulapproximation theorem primenumbertheorem limn lnnd theapproximationn lnngivesreasonablyaccurateestimatesof evenforsmalln forexample itisoffbylessthan atnd chapter theoreticalgorithms andn lnn toanumbertheorist isasmallnum ber wecanviewtheprocessofrandomlyselectinganintegernanddeterminingwhetheritisprimeasabernoullitrial seesectionc bytheprimenumber theorem theprobabilityofasuccess thatis theprobabilitythatnisprime isapproximately lnn thegeometricdistributiontellsushowmanytrialsweneedtoobtainasuccess andbyequation theexpectednumberoftrialsisap proximatelylnn wewouldexpecttoexamineapproximatelylnnintegerschosenrandomlynearninorderto ndaprimethatisofthesamelengthasn forexample weexpectthat ndinga bitprimewouldrequiretestingap proximatelyln randomlychosen bitnumbersforprimality ofcourse wecancutthis gureinhalfbychoosingonlyoddintegers intheremainderofthissection weconsidertheproblemofdeterminingwhetherornotalargeoddintegernisprime fornotationalconvenience weassumethatnhastheprimefactorizationndpe perr wherer praretheprimefactorsofn ande erareposi tiveintegers theintegernisprimeifandonlyifrd ande onesimpleapproachtotheproblemoftestingforprimalityistrialdivision wetrydividingnbyeachinteger bpnc wemayskipevenintegersgreaterthan itiseasytoseethatnisprimeifandonlyifnoneofthetrialdivi sorsdividesn assumingthateachtrialdivisiontakesconstanttime theworst caserunningtimeis whichisexponentialinthelengthofn recallthatifnisencodedinbinaryusing bits ddlg andsopnd trialdivisionworkswellonlyifnisverysmallorhappenstohaveasmallprimefactor whenitworks trialdivisionhastheadvantagethatitnotonlyde termineswhethernisprimeorcomposite butalsodeterminesoneofn sprimefactorsifniscomposite inthissection weareinterestedonlyin ndingoutwhetheragivennumbernisprime ifniscomposite wearenotconcernedwith ndingitsprimefactor ization asweshallseeinsection computingtheprimefactorizationofanumberiscomputationallyexpensive itisperhapssurprisingthatitismucheasiertotellwhetherornotagivennumberisprimethanitistodeterminetheprimefactorizationofthenumberifitisnotprime pseudoprimalitytestingwenowconsideramethodforprimalitytestingthat almostworks andinfactisgoodenoughformanypracticalapplications lateron weshallpresentare primalitytesting nementofthismethodthatremovesthesmalldefect letzcndenotethenonzeroelementsofzn zcndf ifnisprime thenzcndzn wesaythatnisabase apseudoprimeifniscompositeandan modn fermat stheorem theorem impliesthatifnisprime thennsatis esequa tion foreveryainzcn ifwecan ndanya zcnsuchthatndoesnotsatisfyequation thenniscertainlycomposite surprisingly thecon versealmostholds sothatthiscriterionformsanalmostperfecttestforprimality wetesttoseewhethernsatis esequation forad ifnot wedeclarentobecompositebyreturningcomposite otherwise wereturnprime guessingthatnisprime infact allweknowisthatniseitherprimeorabase pseudoprime thefollowingprocedurepretendsinthismannertobecheckingtheprimalityofn itusestheproceduremodular exponentiationfromsection weassumethattheinputnisanoddintegergreaterthan pseudoprime ifmodular exponentiation modn returncomposite nitely elsereturnprime wehope thisprocedurecanmakeerrors butonlyofonetype thatis ifitsaysthatniscomposite thenitisalwayscorrect ifitsaysthatnisprime however thenitmakesanerroronlyifnisabase pseudoprime howoftendoesthisprocedureerr surprisinglyrarely thereareonly valuesofnlessthan forwhichiterrs rstfoursuchvaluesare wewon tproveit buttheprobabilitythatthisprogrammakesan erroronarandomlychosen bitnumbergoestozeroas usingmorepreciseestimatesduetopomerance ofthenumberofbase pseudoprimesofagivensize wemayestimatethatarandomlychosen bitnumberthatiscalled primebytheaboveprocedurehaslessthanonechancein ofbeingabase pseudoprime andarandomlychosen bitnumberthatiscalledprimehasless thanonechancein ofbeingabase pseudoprime soifyouaremerelytryingto ndalargeprimeforsomeapplication forallpracticalpurposesyou almostnevergowrongbychoosinglargenumbersatrandomuntiloneofthem causespseudoprimetoreturnprime butwhenthenumbersbeingtestedforprimalityarenotrandomlychosen weneedabetterapproachfortestingprimality chapter theoreticalgorithmsasweshallsee alittlemorecleverness andsomerandomization willyieldaprimality testingroutinethatworkswellonallinputs unfortunately wecannotentirelyeliminatealltheerrorsbysimplycheckingequation forasecondbasenumber sayad becausethereexistcom positeintegersn knownascarmichaelnumbers thatsatisfyequation foralla wenotethatequation doesfailwhengcd thatis whena buthopingtodemonstratethatniscompositeby ndingsuchanacanbedif cultifnhasonlylargeprimefactors rstthreecarmichaelnumbersare carmichaelnumbersareextremelyrare thereare forexample ofthemlessthan helps explainwhytheyaresorare wenextshowhowtoimproveourprimalitytestsothatitwon tbefooledbycarmichaelnumbers themiller rabinrandomizedprimalitytestthemiller rabinprimalitytestovercomestheproblemsofthesimpletestpseu doprimewithtwomodi cations ittriesseveralrandomlychosenbasevaluesainsteadofjustonebasevalue whilecomputingeachmodularexponentiation itlooksforanontrivialsquarerootof modulon duringthe nalsetofsquarings ifit ndsone itstopsandreturnscomposite corollary fromsection justi esdetectingcompositesinthismanner thepseudocodeforthemiller rabinprimalitytestfollows theinputn istheoddnumbertobetestedforprimality andsisthenumberofrandomlycho senbasevaluesfromzcntobetried thecodeusestherandom numbergeneratorrandomdescribedonpage random returnsarandomlychosenintegerasatisfying thecodeusesanauxiliaryprocedurewitnesssuchthatwitness istrueifandonlyifaisa witness tothecomposite nessofn thatis ifitispossibleusingatoprove inamannerthatweshallsee thatniscomposite thetestwitness isanextensionof butmoreeffectivethan thetestan modn thatformedthebasis usingad forpseudoprime rstpresentandjustifytheconstructionofwitness andthenweshallshowhowweuseitinthemiller rabinprimalitytest letn tuwheret anduisodd thebinaryrepresentationofn isthebinaryrepresentationoftheoddintegerufollowedbyexactlytzeros therefore modn sothatwecan primalitytesting computean modnby rstcomputingaumodnandthensquaringtheresultttimessuccessively witness lettandubesuchthatt uisodd andn dmodular exponentiation forid tot xidx modn ifxi andxi andxi returntrue ifxt returntrue returnfalsethispseudocodeforwitnesscomputesan modnby rstcomputingthevaluex daumodninline andthensquaringtheresultttimesinarowintheforloopoflines byinductiononi thesequencex xtofvaluescomputedsatis estheequationxia modn forid sothatinparticularxtan modn afterline performsasquaringstep however theloopmayterminateearlyiflines detectthatanontrivialsquarerootof hasjustbeendiscovered weshallexplainthesetestsshortly ifso thealgo rithmstopsandreturnstrue lines returntrueifthevaluecomputedforxtan modn isnotequalto justasthepseudoprimeprocedurereturnscompositeinthiscase returnsfalseifwehaven treturnedtrueinlines wenowarguethatifwitness returnstrue thenwecanconstructaproofthatniscompositeusingaasawitness ifwitnessreturnstruefromline thenithasdiscoveredthatxtdan modn ifnisprime however wehavebyfermat stheorem theo rem thatan modn foralla zcn therefore ncannotbeprime andtheequationan modn provesthisfact ifwitnessreturnstruefromline thenithasdiscoveredthatxi isanon trivialsquarerootof modulon sincewehavethatxi modn yetxix modn corollary statesthatonlyifniscompositecanthereexistanontrivialsquarerootof modulon sothatdemonstratingthatxi isanontrivialsquarerootof modulonprovesthatniscomposite thiscompletesourproofofthecorrectnessofwitness ifwe ndthatthecallwitness returnstrue thennissurelycomposite andthewitnessa alongwiththereasonthattheprocedurereturnstrue diditreturnfromline orfromline providesaproofthatniscomposite chapter theoreticalgorithmsatthispoint webrie ypresentanalternativedescriptionofthebehaviorofwitnessasafunctionofthesequencexdhx xti whichweshall ndusefullateron whenweanalyzetheef ciencyofthemiller rabinprimalitytest notethatifxid forsome witnessmightnotcomputetherestofthesequence ifitweretodoso however eachvaluexic xic xtwouldbe andweconsiderthesepositionsinthesequencexasbeingall wehavefourcases xdh whered thesequencexdoesnotendin returntrueinline aisawitnesstothecompositenessofn byfermat stheorem xdh thesequencexisall returnfalse aisnotawitnesstothecompositenessofn xdh thesequencexendsin andthelastnon isequalto returnfalse aisnotawitnesstothecompositenessofn xdh whered thesequencexendsin butthelastnon isnot returntrueinline aisawitnesstothecompositenessofn sincedisanontrivialsquarerootof wenowexaminethemiller rabinprimalitytestbasedontheuseofwitness weassumethatnisanoddintegergreaterthan miller rabin forjd tos adrandom ifwitness returncomposite nitely returnprime almostsurelytheproceduremiller rabinisaprobabilisticsearchforaproofthatniscomposite themainloop beginningonline picksuptosrandomvaluesofafromzcn ifoneofthea spickedisawitnesstothecompositenessofn thenmiller rabinreturnscompositeonline sucharesultisalwayscor rect bythecorrectnessofwitness ifmiller rabin ndsnowitnessinstrials thentheprocedureassumesthatthisisbecausenowitnessesexist andthere foreitassumesthatnisprime weshallseethatthisresultislikelytobecorrectifsislargeenough butthatthereisstillatinychancethattheproceduremaybeunluckyinitschoiceofa sandthatwitnessesdoexisteventhoughnonehasbeenfound toillustratetheoperationofmiller rabin letnbethecarmichaelnum ber sothatn andud ifthepro cedurechoosesad asabase insection showsthatwit nesscomputesx mod andthuscomputesthesequence primalitytesting xdh witnessdiscoversanontrivialsquarerootof inthelastsquaringstep sincea modn anda modn therefore isawitnesstothecompositenessofn witness returnstrue andmiller rabinreturnscomposite ifnisa bitnumber miller rabinrequireso arithmeticoperationsando bitoperations sinceitrequiresasymptoticallynomoreworkthansmodularexponentiations errorrateofthemiller rabinprimalitytestifmiller rabinreturnsprime thenthereisaveryslimchancethatithasmadeanerror unlikepseudoprime however thechanceoferrordoesnotdependonn therearenobadinputsforthisprocedure itdependsonthesizeofsandthe luckofthedraw inchoosingbasevaluesa moreover sinceeachtestismorestringentthanasimplecheckofequation wecanexpectongeneral principlesthattheerrorrateshouldbesmallforrandomlychosenintegersn thefollowingtheorempresentsamorepreciseargument theorem ifnisanoddcompositenumber thenthenumberofwitnessestothecomposite nessofnisatleast prooftheproofshowsthatthenumberofnonwitnessesisatmost whichimpliesthetheorem westartbyclaimingthatanynonwitnessmustbeamemberofzn consideranynonwitnessa itmustsatisfyan modn equivalently aan modn theequationax modn hasasolution namelyan bycorollary gcd whichinturnimpliesthatgcd therefore aisamemberofzn allnonwitnessesbelongtozn tocompletetheproof weshowthatnotonlyareallnonwitnessescontainedinzn theyareallcontainedinapropersubgroupbofzn recallthatwesaybisapropersubgroupofznwhenbissubgroupofznbutbisnotequaltozn bycorollary wethenhavejbjjznj sincejznjn weobtainjbj therefore thenumberofnonwitnessesisatmost sothatthenumberofwitnessesmustbeatleast wenowshowhowto ndapropersubgroupbofzncontainingallofthenonwitnesses webreaktheproofintotwocases thereexistsanx znsuchthatxn modn chapter theoreticalgorithmsinotherwords nisnotacarmichaelnumber because aswenotedearlier carmichaelnumbersareextremelyrare isthemaincasethatarises whennhasbeenchosenrandomlyandisbeingtestedforprimal ity letbdfb znwbn modn clearly bisnonempty sincebisclosedundermultiplicationmodulon wehavethatbisasubgroupofznbytheorem notethateverynonwitnessbelongstob sinceanon witnessasatis esan modn sincex znb wehavethatbisapropersubgroupofzn forallx modn inotherwords nisacarmichaelnumber thiscaseisextremelyrareinprac tice however themiller rabintest unlikeapseudo primalitytest canef ciently determinethatcarmichaelnumbersarecomposite aswenowshow inthiscase ncannotbeaprimepower toseewhy letussupposetothecontrarythatndpe wherepisaprimeande wederiveacontradictionasfollows sinceweassumethatnisodd pmustalsobeodd theorem impliesthatznisacyclicgroup itcontainsageneratorgsuchthatordn djznjd dpe theformulafor comesfromequation byequation wehavegn modn thenthediscretelogarithmtheorem theorem takingyd impliesthatn mod jpe thisisacontradictionfore isdivisiblebytheprimepbutpe isnot nisnotaprimepower sincetheoddcompositenumbernisnotaprimepower wedecomposeitintoaproductn wheren andn areoddnumbersgreaterthan thatarerelativelyprimetoeachother theremaybeseveralwaystodecomposen anditdoesnotmatterwhichonewechoose forexample ifndpe perr thenwecanchoosen dpe andn dpe perr recallthatwede netandusothatn wheret anduisodd andthatforaninputa theprocedurewitnesscomputesthesequencexdhau tui allcomputationsareperformedmodulon letuscallapair ofintegersacceptableif modn primalitytesting acceptablepairscertainlyexistsinceuisodd wecanchoosedn andjd sothat isanacceptablepair nowpickthelargestpossiblejsuchthatthereexistsanacceptablepair xsothat isanacceptablepair letbdfx znwx modn sincebisclosedundermultiplicationmodulon itisasubgroupofzn bytheo rem therefore jbjdividesjznj everynonwitnessmustbeamemberofb sincethesequencexproducedbyanonwitnessmusteitherbeall sorelsecontaina nolaterthanthejthposition bythemaximalityofj isacceptable whereaisanonwitness wemusthavej jbyhowwechosej wenowusetheexistenceoftodemonstratethatthereexistsaw znb andhencethatbisapropersubgroupofzn modn wehave modn bycorollary tothechineseremaindertheorem bycorollary thereexistsawsimultaneouslysatisfyingtheequationswmodn modn therefore modn modn bycorollary modn impliesw modn andw modn impliesw modn hence weconcludethatw modn andsow itremainstoshowthatw whichwedoby rstworkingseparatelymod ulon andmodulon workingmodulon weobservethatsince wehavethatgcd andsoalsogcd ifdoesnothaveanycom mondivisorswithn thenitcertainlydoesnothaveanycommondivisorswithn sincewmodn weseethatgcd workingmodulon weobservethatw modn impliesgcd tocombinetheseresults weusetheorem whichimpliesthatgcd dgcd thatis thereforew znb andwe nishcase withtheconclusionthatbisapropersubgroupofzn ineithercase weseethatthenumberofwitnessestothecompositenessofnisatleast theorem foranyoddintegern andpositiveintegers theprobabilitythatmiller rabin errsisatmost chapter theoreticalgorithmsproofusingtheorem weseethatifniscomposite theneachexecutionoftheforloopoflines hasaprobabilityofatleast ofdiscoveringawitnessxtothecompositenessofn miller rabinmakesanerroronlyifitissounluckyastomissdiscoveringawitnesstothecompositenessofnoneachofthesiterationsofthemainloop theprobabilityofsuchasequenceofmissesisatmost ifnisprime miller rabinalwaysreportsprime andifniscomposite thechancethatmiller rabinreportsprimeisatmost whenapplyingmiller rabintoalargerandomlychosenintegern however weneedtoconsideraswellthepriorprobabilitythatnisprime inordertocor rectlyinterpretmiller rabin sresult supposethatwe xabitlength andchooseatrandomanintegernoflength bitstobetestedforprimality letadenotetheeventthatnisprime bytheprimenumbertheorem theorem theprobabilitythatnisprimeisapproximatelyprfag lnn nowletbdenotetheeventthatmiller rabinreturnsprime wehavethatpr bjad orequivalently thatprfbjagd andpr bja orequivalently thatpr bja butwhatisprfajbg theprobabilitythatnisprime giventhatmiller rabinhasreturnedprime bythealternateformofbayes stheorem equa tion wehaveprfajbgdprfagprfbjagprfagprfbjagcpr apr bja lnn thisprobabilitydoesnotexceed untilsexceedslg lnn intuitively thatmanyinitialtrialsareneededjustforthecon dencederivedfromfailingto nda witnesstothecompositenessofntoovercomethepriorbiasinfavorofnbeingcomposite foranumberwith bits thisinitialtestingrequiresaboutlg lnn trials inanycase choosingsd shouldsuf ceforalmostanyimaginableapplication infact thesituationismuchbetter ifwearetryingto ndlargeprimesbyapplyingmiller rabintolargerandomlychosenoddintegers thenchoosingasmallvalueofs isveryunlikelytoleadtoerroneousresults integerfactorization wewon tproveithere thereasonisthatforarandomlychosenoddcompositeintegern theexpectednumberofnonwitnessestothecompositenessofnislikelytobeverymuchsmallerthan iftheintegernisnotchosenrandomly however thebestthatcanbeprovenisthatthenumberofnonwitnessesisatmost usinganimprovedversionoftheorem furthermore theredoexistintegersnforwhichthenumberofnonwitnessesis exercises provethatifanoddintegern isnotaprimeoraprimepower thenthereexistsanontrivialsquarerootof modulon itispossibletostrengtheneuler stheoremslightlytotheforma modn foralla wherendpe perrandisde nedbydlcm perr provethatj acompositenumbernisacarmichaelnumberifjn thesmallestcarmichaelnumberis dlcm whichdivides provethatcarmichaelnum bersmustbeboth notdivisiblebythesquareofanyprime andthe productofatleastthreeprimes forthisreason theyarenotverycommon provethatifxisanontrivialsquarerootof modulon thengcd andgcd arebothnontrivialdivisorsofn integerfactorizationsupposewehaveanintegernthatwewishtofactor thatis todecomposeintoaproductofprimes theprimalitytestoftheprecedingsectionmaytellusthatniscomposite butitdoesnottellustheprimefactorsofn factoringalargeintegernseemstobemuchmoredif cultthansimplydeterminingwhethernisprimeorcomposite evenwithtoday ssupercomputersandthebestalgorithmstodate cannotfeasiblyfactoranarbitrary bitnumber chapter theoreticalgorithmspollard srhoheuristictrialdivisionbyallintegersuptorisguaranteedtofactorcompletelyanynumberuptor forthesameamountofwork thefollowingprocedure pollard rho factorsanynumberuptor unlessweareunlucky sincetheprocedureisonlyaheuristic neitheritsrunningtimenoritssuccessisguaranteed althoughthe procedureishighlyeffectiveinpractice anotheradvantageofthepollard rhoprocedureisthatitusesonlyaconstantnumberofmemorylocations ifyouwantedto youcouldeasilyimplementpollard rhoonaprogrammablepocketcalculatorto ndfactorsofsmallnumbers pollard rho drandom ydx whiletrue idic xid modn ddgcd yxi ifd andd printd ifi ydxi ktheprocedureworksasfollows lines initializeito andx toarandomlychosenvalueinzn thewhileloopbeginningonline iteratesforever searchingforfactorsofn duringeachiterationofthewhileloop usestherecurrencexid modn toproducethenextvalueofxiinthein nitesequencex withline correspondinglyincrementingi thepseudocodeiswrittenusingsub scriptedvariablesxiforclarity buttheprogramworksthesameifallofthesub scriptsaredropped sinceonlythemostrecentvalueofxineedstobemaintained withthismodi cation theprocedureusesonlyaconstantnumberofmemorylo cations everysooften theprogramsavesthemostrecentlygeneratedxivalueinthevariabley speci cally thevaluesthataresavedaretheoneswhosesubscriptsarepowersof integerfactorization savesthevaluex andline savesxkwheneveriisequaltok thevariablekisinitializedto inline andline doublesitwheneverline updatesy therefore kfollowsthesequence andalwaysgivesthesubscriptofthenextvaluexktobesavediny lines tryto ndafactorofn usingthesavedvalueofyandthecur rentvalueofxi speci cally computesthegreatestcommondivisorddgcd yxi ifline ndsdtobeanontrivialdivisorofn thenline printsd thisprocedurefor ndingafactormayseemsomewhatmysteriousat rst however thatpollard rhoneverprintsanincorrectanswer anynum beritprintsisanontrivialdivisorofn pollard rhomightnotprintanythingatall itcomeswithnoguaranteethatitwillprintanydivisors weshall however thatwehavegoodreasontoexpectpollard rhotoprintafac torpofnafter iterationsofthewhileloop ifniscomposite wecanexpectthisproceduretodiscoverenoughdivisorstofactorncompletelyafterapproximatelyn updates sinceeveryprimefactorpofnexceptpossiblythelargestoneislessthanpn webeginouranalysisofhowthisprocedurebehavesbystudyinghowlongittakesarandomsequencemodulontorepeatavalue sinceznis nite andsinceeachvalueinthesequence dependsonlyonthepreviousvalue sequence eventuallyrepeatsitself oncewereachanxisuchthatxidxjforsomej weareinacycle sincexic dxjc xic dxjc andsoon thereasonforthename rhoheuristic isthat asfigure shows wecandrawthesequencex asthe oftherhoandthecyclexj xjc xiasthe oftherho letusconsiderthequestionofhowlongittakesforthesequenceofxitorepeat thisinformationisnotexactlywhatweneed butweshallseelaterhowtomodifytheargument forthepurposeofthisestimation letusassumethatthefunctionfn modnbehaveslikea random function ofcourse itisnotreallyrandom butthisas sumptionyieldsresultsconsistentwiththeobservedbehaviorofpollard rho wecanthenconsidereachxitohavebeenindependentlydrawnfromznaccordingtoauniformdistributiononzn bythebirthday paradoxanalysisofsection weexpect stepstobetakenbeforethesequencecycles nowfortherequiredmodi cation letpbeanontrivialfactorofnsuchthatgcd forexample ifnhasthefactorizationndpe perr thenwemaytakeptobepe ife thenpisjustthesmallestprimefactorofn agoodexampletokeepinmind chapter theoreticalgorithms mod mod mod pollard srhoheuristic thevaluesproducedbytherecurrencexic mod startingwithx theprimefactorizationof theheavyarrowsindicatetheiterationstepsthatareexecutedbeforethefactor isdiscovered thelightarrowspointtounreachedvaluesintheiteration toillustratethe rho theshadedvaluesaretheyvaluesstoredbypollard rho thefactor isdiscovereduponreachingx whengcd iscomputed rstxvaluethatwouldberepeatedis butthefactor isdiscoveredbeforethisvalueisrepeated thevaluesproducedbythesamerecurrence modulo everyvaluexigiveninpart isequivalent modulo tothevaluex ishownhere forexample bothx andx areequivalentto modulo thevaluesproducedbythesamerecurrence modulo everyvaluexigiveninpart isequivalent modulo tothevaluex ishownhere bythechineseremaindertheorem eachnodeinpart correspondstoapairofnodes onefrompart andonefrompart thesequencehxiiinducesacorrespondingsequencehx iimodulop wherex idximodpforalli furthermore becausefnisde nedusingonlyarithmeticoperations squaringandsubtraction modulon wecancomputex fromx modulop viewof integerfactorization thesequenceisasmallerversionofwhatishappeningmodulon dxic modpdfn modpd modn modpd modp byexercise ximodp modpd modpdfp althoughwearenotexplicitlycomputingthesequencehx thissequenceiswellde nedandobeysthesamerecurrenceasthesequencehxii reasoningasbefore ndthattheexpectednumberofstepsbeforethese quencehx iirepeatsis ifpissmallcomparedton thesequencehx iimightrepeatmuchmorequicklythanthesequencehxii indeed asparts offigure thehx iisequencerepeatsassoonastwoelementsofthese quencehxiiaremerelyequivalentmodulop ratherthanequivalentmodulon lettdenotetheindexofthe rstrepeatedvalueinthehx iisequence andletu denotethelengthofthecyclethathasbeentherebyproduced thatis tandu arethesmallestvaluessuchthatx tcidx tcuciforalli bytheabovearguments theexpectedvaluesoftanduareboth notethatifx tcidx tcuci thenpj xtcucixtci gcd xtcucixtci therefore oncepollard rhohassavedasyanyvaluexksuchthatkt thenymodpisalwaysonthecyclemodulop ifanewvalueissavedasy thatvalueisalsoonthecyclemodulop eventually kissettoavaluethatisgreaterthanu andtheprocedurethenmakesanentirelooparoundthecyclemodulopwithoutchangingthevalueofy theprocedurethendiscoversafactorofnwhenxi runsinto thepreviouslystoredvalueofy modulop thatis whenxiy modp presumably thefactorfoundisthefactorp althoughitmayoccasionallyhap penthatamultipleofpisdiscovered sincetheexpectedvaluesofbothtanduare theexpectednumberofstepsrequiredtoproducethefactorpis thisalgorithmmightnotperformquiteasexpected fortworeasons theheuristicanalysisoftherunningtimeisnotrigorous anditispossiblethatthecycle ofvalues modulop couldbemuchlargerthanpp inthiscase thealgorithmperformscorrectlybutmuchmoreslowlythandesired inpractice thisissueseems tobemoot thedivisorsofnproducedbythisalgorithmmightalwaysbeoneofthetrivialfactors orn forexample supposethatndpq wherepandqareprime itcanhappenthatthevaluesoftanduforpareidenticalwiththevaluesoftanduforq andthusthefactorpisalwaysrevealedinthesamegcdoperationthatrevealsthefactorq sincebothfactorsarerevealedatthesame chapter theoreticalgorithmstime thetrivialfactorpqdnisrevealed whichisuseless thisproblemseemstobeinsigni cantinpractice ifnecessary wecanrestarttheheuristicwith adifferentrecurrenceoftheformxic modn weshouldavoidthevaluescd andcd forreasonswewillnotgointohere butothervaluesare ofcourse thisanalysisisheuristicandnotrigorous sincetherecurrenceisnotreally random nonetheless theprocedureperformswellinpractice itseemstobeasef cientasthisheuristicanalysisindicates itisthemethodofchoicefor ndingsmallprimefactorsofalargenumber tofactora bitcompos itenumberncompletely weonlyneedto ndallprimefactorslessthanbn andsoweexpectpollard rhotorequireatmostn arithmeticopera tionsandatmostn bitoperations pollard rho sabilityto ndasmallfactorpofnwithanexpectednumber ofarithmeticoperationsisoftenitsmostappealingfeature exercises referringtotheexecutionhistoryshowninfigure whendoespollard rhoprintthefactor supposethatwearegivenafunctionfwzn znandaninitialvaluex nexidf forid lettandu bethesmallestvaluessuchthatxtcidxtcuciforid intheterminologyofpollard srhoalgorithm tisthelengthofthetailanduisthelengthofthecycleoftherho giveanef cientalgorithmtodeterminetanduexactly andanalyzeitsrunningtime howmanystepswouldyouexpectpollard rhotorequiretodiscoverafactoroftheformpe wherepisprimeande onedisadvantageofpollard rhoaswrittenisthatitrequiresonegcdcompu tationforeachstepoftherecurrence instead wecouldbatchthegcdcomputa tionsbyaccumulatingtheproductofseveralxivaluesinarowandthenusingthisproductinsteadofxiinthegcdcomputation describecarefullyhowyouwouldimplementthisidea whyitworks andwhatbatchsizeyouwouldpickasthemosteffectivewhenworkingona bitnumbern problemsforchapter problems binarygcdalgorithmmostcomputerscanperformtheoperationsofsubtraction testingtheparity odd oreven ofabinaryinteger andhalvingmorequicklythancomputingremainders thisprobleminvestigatesthebinarygcdalgorithm whichavoidstheremaindercomputationsusedineuclid salgorithm provethatifaandbarebotheven thengcd gcd provethatifaisoddandbiseven thengcd dgcd provethatifaandbarebothodd thengcd dgcd designanef cientbinarygcdalgorithmforinputintegersaandb whereab thatrunsino lga assumethateachsubtraction paritytest andhalvingtakesunittime analysisofbitoperationsineuclid salgorithma considertheordinary paperandpencil algorithmforlongdivision dividingabyb whichyieldsaquotientqandremainderr showthatthismethodrequireso clgq lgb bitoperations nea clga clgb showthatthenumberofbitoperationsperformedbyeuclidinreducingtheproblemofcomputinggcd tothatofcomputinggcd amodb isatmostc amodb forsomesuf cientlylargeconstantc showthateuclid requireso bitoperationsingeneralando bitoperationswhenappliedtotwo bitinputs threealgorithmsforfibonaccinumbersthisproblemcomparestheef ciencyofthreemethodsforcomputingthenthfi bonaccinumberfn givenn assumethatthecostofadding subtracting ormul tiplyingtwonumbersiso independentofthesizeofthenumbers showthattherunningtimeofthestraightforwardrecursivemethodforcom putingfnbasedonrecurrence isexponentialinn forexample thefibprocedureonpage showhowtocomputefnino timeusingmemoization chapter theoreticalgorithmsc showhowtocomputefnino lgn timeusingonlyintegeradditionandmul tiplication hint considerthematrix anditspowers assumenowthataddingtwo bitnumberstakes timeandthatmulti plyingtwo bitnumberstakes whatistherunningtimeofthesethreemethodsunderthismorereasonablecostmeasurefortheelementaryarith meticoperations quadraticresiduesletpbeanoddprime anumbera zpisaquadraticresidueiftheequationx modp hasasolutionfortheunknownx showthatthereareexactly quadraticresidues modulop ifpisprime wede nethelegendresymbol fora tobe ifaisaquadraticresiduemodulopand otherwise provethatifa thenapa modp giveanef cientalgorithmthatdetermineswhetheragivennumberaisaqua draticresiduemodulop analyzetheef ciencyofyouralgorithm provethatifpisaprimeoftheform andaisaquadraticresidueinzp thenakc modpisasquarerootofa modulop howmuchtimeisrequiredto ndthesquarerootofaquadraticresidueamodulop describeanef cientrandomizedalgorithmfor ndinganonquadraticresidue moduloanarbitraryprimep thatis amemberofzpthatisnotaquadraticresidue howmanyarithmeticoperationsdoesyouralgorithmrequireonaver chapternotesnivenandzuckerman provideanexcellentintroductiontoelementarynum bertheory knuth containsagooddiscussionofalgorithmsfor ndingthe notesforchapter greatestcommondivisor aswellasotherbasicnumber theoreticalgorithms bach andriesel providemorerecentsurveysofcomputationalnumberthe ory dixon givesanoverviewoffactorizationandprimalitytesting conferenceproceedingseditedbypomerance containsseveralexcellentsur veyarticles morerecently bachandshallit haveprovidedanexceptional overviewofthebasicsofcomputationalnumbertheory knuth discussestheoriginofeuclid salgorithm itappearsinbook propositions ofthegreekmathematicianeuclid selements whichwaswrittenaround euclid sdescriptionmayhavebeenderivedfromanal gorithmduetoeudoxusaround euclid salgorithmmayholdthehonorofbeingtheoldestnontrivialalgorithm itisrivaledonlybyanalgorithmformul tiplicationknowntotheancientegyptians shallit chroniclesthehistoryof theanalysisofeuclid salgorithm knuthattributesaspecialcaseofthechineseremaindertheorem theo rem tothechinesemathematiciansun wholivedsometimebetween anda thedateisquiteuncertain thesamespecialcasewasgivenbythegreekmathematiciannichomachusarounda itwasgener alizedbychhinchiu shaoin thechineseremaindertheoremwas nally statedandprovedinitsfullgeneralitybyl eulerin therandomizedprimality testingalgorithmpresentedhereisduetomiller andrabin itisthefastestrandomizedprimality testingalgorithmknown towithinconstantfactors theproofoftheorem isaslightadaptationofonesuggestedbybach aproofofastrongerresultformiller rabinwasgivenbymonier formanyyearsprimality testingwastheclassicexampleofaproblemwhererandomizationappearedtobenecessarytoobtain anef cient polynomial algorithm however agrawal kayal saxema surprisedeveryonewiththeirdeterministicpolynomial timeprimality testingalgorithm untilthen thefastestdeterministicprimalitytestingalgorithm known duetocohenandlenstra ranintime lgn lglglgn oninputn whichisjustslightlysuperpolynomial nonetheless forpracticalpurposesrandomized primality testingalgorithmsremainmoreef cientandarepreferred theproblemof ndinglarge random primesisnicelydiscussedinanarticlebybeauchemin brassard epeau goutier andpomerance theconceptofapublic keycryptosystemisduetodif eandhellman thersacryptosystemwasproposedin byrivest shamir andadleman sincethen eldofcryptographyhasblossomed ourunderstandingofthersacryptosystemhasdeepened andmodernimplementationsusesignif icantre nementsofthebasictechniquespresentedhere inaddition manynew techniqueshavebeendevelopedforprovingcryptosystemstobesecure forex ample goldwasserandmicali showthatrandomizationcanbeaneffective toolinthedesignofsecurepublic keyencryptionschemes forsignatureschemes chapter theoreticalgorithmsgoldwasser micali andrivest presentadigital signatureschemeforwhicheveryconceivabletypeofforgeryisprovablyasdif cultasfactoring menezes vanoorschot andvanstone provideanoverviewofappliedcryptography therhoheuristicforintegerfactorizationwasinventedbypollard theversionpresentedhereisavariantproposedbybrent thebestalgorithmsforfactoringlargenumbershavearunningtimethatgrowsroughlyexponentiallywiththecuberootofthelengthofthenumberntobefac tored thegeneralnumber eldsievefactoringalgorithm asdevelopedbybuh ler lenstra andpomerance asanextensionoftheideasinthenumber eldsievefactoringalgorithmbypollard andlenstraetal andre nedby coppersmith andothers isperhapsthemostef cientsuchalgorithmingen eralforlargeinputs althoughitisdif culttogivearigorousanalysisofthis algorithm underreasonableassumptionswecanderivearunning timeestimateof wherel lnn lnlnn theelliptic curvemethodduetolenstra maybemoreeffectiveforsomeinputsthanthenumber eldsievemethod likepollard srhomethod itcan ndasmallprimefactorpquitequickly withthismethod thetimeto ndpisestimatedtobel stringmatchingtext editingprogramsfrequentlyneedto ndalloccurrencesofapatterninthetext typically thetextisadocumentbeingedited andthepatternsearchedforisa particularwordsuppliedbytheuser cientalgorithmsforthisproblem called stringmatching cangreatlyaidtheresponsivenessofthetext editingprogram amongtheirmanyotherapplications matchingalgorithmssearchforpar ticularpatternsindnasequences internetsearchenginesalsousethemto webpagesrelevanttoqueries weformalizethestring matchingproblemasfollows weassumethatthetextisanarrayt noflengthnandthatthepatternisanarrayp moflengthmn wefurtherassumethattheelementsofpandtarechar actersdrawnfroma nitealphabet forexample wemayhave gor dfa thecharacterarrayspandtareoftencalledstringsofcharacters referringtofigure wesaythatpatternpoccurswithshiftsintextt equivalently thatpatternpoccursbeginningatpositionsc intextt snmandt scdp thatis ift scdp ifpoccurswithshiftsint thenwecallsavalidshift otherwise wecallsaninvalidshift thestring matchingproblemistheproblemof ndingallvalidshiftswithwhichagivenpatternpoccursinagiventextt abcabaabcabacabaapatternptextts anexampleofthestring matchingproblem wherewewantto ndalloccurrencesofthepatternpdabaainthetexttdabcabaabcabac thepatternoccursonlyonceinthetext atshiftsd whichwecallavalidshift averticallineconnectseachcharacterofthepatterntoitsmatchingcharacterinthetext andallmatchedcharactersareshaded chapter stringmatchingalgorithmpreprocessingtimematchingtimenaive nmc rabin karp nmc finiteautomatono knuth morris pratt thestring matchingalgorithmsinthischapterandtheirpreprocessingandmatchingtimes exceptforthenaivebrute forcealgorithm whichwereviewinsection eachstring matchingalgorithminthischapterperformssomepreprocessingbased onthepatternandthen ndsallvalidshifts wecallthislatterphase matching showsthepreprocessingandmatchingtimesforeachofthealgorithms inthischapter thetotalrunningtimeofeachalgorithmisthesumoftheprepro cessingandmatchingtimes presentsaninterestingstring matchingalgorithm duetorabinandkarp althoughthe nmc worst caserunningtimeofthisalgorithmisnobetterthanthatofthenaivemethod itworks muchbetteronaverageandinpractice italsogeneralizesnicelytootherpattern matchingproblems thendescribesastring matchingalgorithmthat beginsbyconstructinga niteautomatonspeci callydesignedtosearchforoccur rencesofthegivenpatternpinatext thisalgorithmtakeso preprocess ingtime butonly matchingtime presentsthesimilar butmuchcleverer knuth morris pratt orkmp algorithm ithasthesame matchingtime anditreducesthepreprocessingtimetoonly notationandterminologywedenoteby sigma thesetofall nite lengthstringsformedusingcharactersfromthealphabet inthischapter weconsideronly nite lengthstrings thezero lengthemptystring denoted alsobelongsto thelengthofastringxisdenotedjxj theconcatenationoftwostringsxandy denotedxy haslengthjxjcjyjandconsistsofthecharactersfromxfollowedbythecharactersfromy wesaythatastringwisapre xofastringx denotedwx ifxdwyforsomestringy notethatifwx thenjwjjxj similarly wesaythatastringwisasuf xofastringx denotedwx ifxdywforsomey aswithapre wximpliesjwjjxj forexample wehaveababccaandccaabcca theemptystring isbothasuf xandapre xofeverystring foranystringsxandyandanycharactera wehavexyifandonlyifxaya chapter stringmatching xzxyy xzxyy xzxyy agraphicalproofoflemma wesupposethatx andy thethreepartsofthe gureillustratethethreecasesofthelemma verticallinesconnectmatchingregions shown shaded ofthestrings ifjxjjyj thenxy ifjxjjyj thenyx ifjxjdjyj thenxdy alsonotethatandaretransitiverelations thefollowinglemmawillbeusefullater lemma overlapping suf xlemma supposethatx arestringssuchthatx andy ifjxjjyj thenxy ifjxjjyj thenyx ifjxjdjyj thenxdy proofseefigure foragraphicalproof forbrevityofnotation wedenotethek characterpre kofthepatternp mbypk andpmdpdp similarly wedenotethek characterpre xofthetexttbytk usingthisnotation wecanstatethestring matchingproblemasthatof ndingallshiftssintherange snmsuchthatptscm inourpseudocode weallowtwoequal lengthstringstobecomparedforequal ityasaprimitiveoperation ifthestringsarecomparedfromlefttorightandthe comparisonstopswhenamismatchisdiscovered weassumethatthetimetaken bysuchatestisalinearfunctionofthenumberofmatchingcharactersdiscovered tobeprecise thetest isassumedtotaketime wheretisthelengthofthelongeststring suchthat xand wewrite ratherthan tohandlethecaseinwhichtd rstcharacterscompareddonotmatch butittakesapositiveamountoftimetoperformthiscomparison chapter stringmatching thenaivestring matchingalgorithmthenaivealgorithm ndsallvalidshiftsusingaloopthatcheckstheconditionp mdt scforeachofthenmc possiblevaluesofs naive matcher ndt mdp forsd tonm ifp patternoccurswithshift sfigure portraysthenaivestring matchingprocedureasslidinga template containingthepatternoverthetext notingforwhichshiftsallofthecharacters onthetemplateequalthecorrespondingcharactersinthetext theforloopoflines considerseachpossibleshiftexplicitly thetestinline determines whetherthecurrentshiftisvalid thistestimplicitlyloopstocheckcorresponding characterpositionsuntilallpositionsmatchsuccessfullyoramismatchisfound printsouteachvalidshifts procedurenaive matchertakestimeo nmc andthisboundistightintheworstcase forexample considerthetextstringan astringofna andthepatternam foreachofthenmc possiblevaluesoftheshifts theimplicitlooponline tocomparecorrespondingcharactersmustexecutemtimestovalidatetheshift theworst caserunningtimeisthus nmc whichis ifmdbn becauseitrequiresnopreprocessing naive matcher srunningtimeequalsitsmatchingtime acaabcaabs acaabcaabs acaabcaabs acaabcaabs theoperationofthenaivestringmatcherforthepatternpdaabandthetexttdacaabc wecanimaginethepatternpasatemplatethatweslidenexttothetext thefoursuccessivealignmentstriedbythenaivestringmatcher ineachpart verticallinesconnectcor respondingregionsfoundtomatch shownshaded andajaggedlineconnectsthe rstmismatchedcharacterfound ifany thealgorithm ndsoneoccurrenceofthepattern atshiftsd showninpart thenaivestring matchingalgorithm asweshallsee naive matcherisnotanoptimalprocedureforthisproblem indeed inthischapterweshallseethattheknuth morris prattalgorithm ismuchbetterintheworstcase thenaivestring matcherisinef cientbecause itentirelyignoresinformationgainedaboutthetextforonevalueofswhenitconsidersothervaluesofs suchinformationcanbequitevaluable however forexample ifpdaaabandwe ndthatsd isvalid thennoneoftheshifts arevalid sincet inthefollowingsections weexamineseveralwaystomakeeffectiveuseofthissortofinformation exercises showthecomparisonsthenaivestringmatchermakesforthepatternpd inthetexttd supposethatallcharactersinthepatternparedifferent showhowtoacceleratenaive matchertorunintimeo onann charactertextt supposethatpatternpandtexttarerandomlychosenstringsoflengthmandn respectively fromthed aryalphabet ddf whered showthattheexpectednumberofcharacter charactercomparisonsmadebytheim plicitloopinline ofthenaivealgorithmis nmc nmc overallexecutionsofthisloop assumethatthenaivealgorithmstopscomparingcharactersforagivenshiftonceit ndsamismatchormatchestheentirepattern forrandomlychosenstrings thenaivealgorithmisquiteef cient supposeweallowthepatternptocontainoccurrencesofagapcharacter thatcanmatchanarbitrarystringofcharacters evenoneofzerolength forexample thepatternab coccursinthetextcabccbacbacabascab abcc bacba cabandascab abccbac cab chapter stringmatchingnotethatthegapcharactermayoccuranarbitrarynumberoftimesinthepatternbutnotatallinthetext giveapolynomial timealgorithmtodeterminewhether suchapatternpoccursinagiventextt andanalyzetherunningtimeofyouralgorithm therabin karpalgorithmrabinandkarpproposedastring matchingalgorithmthatperformswellinprac ticeandthatalsogeneralizestootheralgorithmsforrelatedproblems suchas dimensionalpatternmatching therabin karpalgorithmuses prepro cessingtime anditsworst caserunningtimeis nmc basedoncertainassumptions however itsaverage caserunningtimeisbetter thisalgorithmmakesuseofelementarynumber theoreticnotionssuchastheequivalenceoftwonumbersmoduloathirdnumber youmightwanttoreferto fortherelevantde nitions forexpositorypurposes letusassumethat sothateachcharacterisadecimaldigit inthegeneralcase wecanassumethateachcharac terisadigitinradix dnotation whereddj wecanthenviewastringofkconsecutivecharactersasrepresentingalength kdecimalnumber thecharacterstring thuscorrespondstothedecimalnumber becauseweinter prettheinputcharactersasbothgraphicalsymbolsanddigits nditconvenientinthissectiontodenotethemaswewoulddigits inourstandardtextfont givenapatternp letpdenoteitscorrespondingdecimalvalue inasim ilarmanner givenatextt lettsdenotethedecimalvalueofthelength msubstringt forsd certainly tsdpifandonlyift scdp sisavalidshiftifandonlyiftsdp ifwecouldcomputepintime andallthetsvaluesinatotalof nmc thenwecoulddetermineallvalidshiftssintime nmc bycomparingpwitheachofthetsvalues forthemoment snotworryaboutthepossibilitythatpandthetsvaluesmightbeverylargenumbers wecancomputepintime usinghorner srule seesection pdp mcc similarly wecancomputet fromt mintime wewrite nmc insteadof becausestakesonnmc differentvalues issigni cantinanasymptoticsensebecausewhenmdn computingthelonetsvaluetakes not therabin karpalgorithm tocomputetheremainingvaluest tnmintime weobservethatwecancomputetsc fromtsinconstanttime sincetsc scmc subtracting scremovesthehigh orderdigitfromts multiplyingtheresultby shiftsthenumberleftbyonedigitposition andaddingt scmcbringsintheappropriatelow orderdigit forexample ifmd andtsd thenwewishtoremovethehigh orderdigitt scd andbringinthenewlow orderdigit supposeitist toobtaintsc ifweprecomputetheconstant whichwecandointimeo lgm usingthetechniquesofsection althoughforthisapplicationastraightforwardo timemethodsuf ces theneachexecutionofequation takesaconstantnum berofarithmeticoperations wecancomputepintime andwecancomputealloft tnmintime nmc therefore wecan ndalloccurrencesofthepatternp minthetextt nwith preprocessingtimeand nmc matchingtime untilnow wehaveintentionallyoverlookedoneproblem pandtsmaybetoolargetoworkwithconveniently ifpcontainsmcharacters thenwecannotreasonablyassumethateacharithmeticoperationonp whichismdigitslong takes constanttime fortunately wecansolvethisproblemeasily asfigure shows computepandthetsvaluesmoduloasuitablemodulusq wecancomputepmoduloqin timeandallthetsvaluesmoduloqin nmc ifwechoosethemodulusqasaprimesuchthat qjust tswithinonecomputerword thenwecanperformallthenecessarycomputationswithsingle precision arithmetic ingeneral withad aryalphabetf wechooseqsothatdq tswithinacomputerwordandadjusttherecurrenceequation toworkmoduloq sothatitbecomestsc tst sch scmc modq wherehdm modq isthevalueofthedigit inthehigh orderpositionofanm digittextwindow thesolutionofworkingmoduloqisnotperfect however tsp modq doesnotimplythattsdp ontheotherhand ifts modq thenwede nitelyhavethatts sothatshiftsisinvalid wecanthususethetesttsp modq asafastheuristictesttoruleoutinvalidshiftss anyshiftsforwhichtsp modq mustbetestedfurthertoseewhethersisreallyvalidorwejusthaveaspurioushit thisadditionaltestexplicitlychecksthecondition chapter stringmatching mod mod validmatchspurioushit oldhigh orderdigitnewlow orderdigit mod oldhigh orderdigitnewlow orderdigitshift mod mod therabin karpalgorithm eachcharacterisadecimaldigit andwecomputevaluesmodulo atextstring awindowoflength isshownshaded thenumericalvalueoftheshadednumber computedmodulo yieldsthevalue thesametextstringwithvaluescom putedmodulo foreachpossiblepositionofalength assumingthepatternpd welookforwindowswhosevaluemodulo mod thealgorithm ndstwosuchwindows shownshadedinthe gure rst beginningattextposition isindeedanoccurrenceofthepattern whilethesecond beginningattextposition isaspurioushit howtocomputethevalueforawindowinconstanttime giventhevalueforthepreviouswindow rstwindowhasvalue droppingthehigh orderdigit shiftingleft multiplyingby andthenaddinginthelow orderdigit givesusthenewvalue becauseallcomputationsareperformedmodulo thevalueforthe rstwindowis andthevalueforthenewwindowis therabin karpalgorithm mdt ifqislargeenough thenwehopethatspurioushitsoccurinfrequentlyenoughthatthecostoftheextracheckingislow thefollowingproceduremakestheseideasprecise theinputstotheprocedurearethetextt thepatternp theradixdtouse whichistypicallytakentobej andtheprimeqtouse rabin karp matcher ndt mdp hddm modq forid tom preprocessing dpcp modq modq forsd tonm matching ifp ifp patternoccurswithshift ifs tsc tst sch scmc modqtheprocedurerabin karp matcherworksasfollows allcharactersareinterpretedasradix ddigits thesubscriptsontareprovidedonlyforclarity theprogramworkscorrectlyifallthesubscriptsaredropped initializeshtothevalueofthehigh orderdigitpositionofanm digitwindow lines computepasthevalueofp mmodqandt asthevalueoft mmodq theforloopoflines iteratesthroughallpossibleshiftss maintainingthefollowinginvariant wheneverline isexecuted tsdt scmodq ifpdtsinline thenline checkstoseewhetherp mdt scinordertoruleoutthepossibilityofaspurioushit printsoutanyvalidshiftsthatarefound ifs checkedinline thentheforloopwillexecuteatleastonemoretime andsoline rstexecutestoensurethattheloopinvariantholdswhenwegetbacktoline computesthevalueoftsc modqfromthevalueoftsmodqinconstanttimeusingequation directly rabin karp matchertakes preprocessingtime anditsmatchingtimeis nmc intheworstcase likethenaivestring matchingalgo rithm therabin karpalgorithmexplicitlyveri eseveryvalidshift ifpdam chapter stringmatchingandtdan thenverifyingtakestime nmc sinceeachofthenmc possibleshiftsisvalid inmanyapplications weexpectfewvalidshifts perhapssomeconstantcofthem insuchapplications theexpectedmatchingtimeofthealgorithmisonly nmc ccm ncm plusthetimerequiredtoprocessspurioushits wecanbaseaheuristicanalysisontheassumptionthatreducingvaluesmod uloqactslikearandommappingfrom tozq seethediscussionontheuseofdivisionforhashinginsection itisdif culttoformalizeandprovesuchanassumption althoughoneviableapproachistoassumethatqischosenrandomlyfromintegersoftheappropriatesize weshallnotpursuethisformalizationhere wecanthenexpectthatthenumberofspurioushitsiso sincewecanes timatethechancethatanarbitrarytswillbeequivalenttop moduloq sincethereareo positionsatwhichthetestofline failsandwespendo timeforeachhit theexpectedmatchingtimetakenbytherabin karpalgorithm iso whereisthenumberofvalidshifts thisrunningtimeiso ifdo andwechooseqm thatis iftheexpectednumberofvalidshiftsissmall andwechoosetheprimeqtobelargerthanthelengthofthepattern thenwecanexpecttherabin karpproceduretouseonlyo ncm matchingtime sincemn thisexpectedmatchingtimeiso exercises workingmoduloqd howmanyspurioushitsdoestherabin karpmatcheren counterinthetexttd whenlookingforthepatternpd howwouldyouextendtherabin karpmethodtotheproblemofsearchingatext stringforanoccurrenceofanyoneofagivensetofkpatterns startbyassumingthatallkpatternshavethesamelength thengeneralizeyoursolutiontoallowthepatternstohavedifferentlengths showhowtoextendtherabin karpmethodtohandletheproblemoflookingfor agivenmmpatterninannnarrayofcharacters thepatternmaybeshiftedverticallyandhorizontally butitmaynotberotated stringmatchingwith niteautomata alicehasacopyofalongn leadhan andbobsimilarlyhasann lebdhbn aliceandbobwishtoknowiftheir lesareidentical toavoidtransmittingallofaorb theyusethefollowingfastprobabilisticcheck theyselectaprimeq nandrandomlyselectanintegerxfromf aliceevaluatesa xid aixi modqandbobsimilarlyevaluatesb provethatifa thereisatmostonechancein thata whereasifthetwo lesarethesame isnecessarilythesameasb hint seeexercise stringmatchingwith niteautomatamanystring matchingalgorithmsbuilda niteautomaton asimplemachineforprocessinginformation thatscansthetextstringtforalloccurrencesofthepat ternp thissectionpresentsamethodforbuildingsuchanautomaton thesestring matchingautomataareveryef cient theyexamineeachtextcharacterex actlyonce takingconstanttimepertextcharacter thematchingtimeused afterpreprocessingthepatterntobuildtheautomaton istherefore thetimetobuildtheautomaton however canbelargeif islarge describesacleverwayaroundthisproblem webeginthissectionwiththede nitionofa niteautomaton wethenexamineaspecialstring matchingautomatonandshowhowtouseitto ndoccurrencesofapatterninatext finally weshallshowhowtoconstructthestring matchingautomatonforagiveninputpattern finiteautomataa niteautomatonm illustratedinfigure isa tuple whereqisa nitesetofstates qisthestartstate aqisadistinguishedsetofacceptingstates isa niteinputalphabet isafunctionfromq intoq calledthetransitionfunctionofm chapter stringmatching abinputstate aabb asimpletwo niteautomatonwithstatesetqdf startstateq andinputalphabet dfa atabularrepresentationofthetransitionfunction anequivalentstate transitiondiagram shownblackend istheonlyacceptingstate directededgesrepresenttransitions forexample theedgefromstate tostate labeledbindicatesthat thisautomatonacceptsthosestringsthatendinanoddnumberofa moreprecisely itacceptsastringxifandonlyifxdy whereyd oryendswithab dak wherekisodd forexample oninputabaaa includingthestartstate thisautomatonentersthesequenceofstatesh andsoitacceptsthisinput forinputabbaa itentersthesequenceofstatesh andsoitrejectsthisinput niteautomatonbeginsinstateq andreadsthecharactersofitsinputstringoneatatime iftheautomatonisinstateqandreadsinputcharactera itmoves makesatransition fromstateqtostate wheneveritscurrentstateqisamemberofa themachinemhasacceptedthestringreadsofar aninputthatisnotacceptedisrejected niteautomatonminducesafunction calledthe nal statefunction toqsuchthatw isthestatemendsupinafterscanningthestringw macceptsastringwifandonlyifw wede nethefunctionrecursively usingthetransitionfunction forw matchingautomataforagivenpatternp weconstructastring matchingautomatoninapreprocess ingstepbeforeusingittosearchthetextstring illustrateshowweconstructtheautomatonforthepatternpdababaca fromnowon weshallassumethatpisagiven xedpatternstring forbrevity weshallnotindicatethedependenceuponpinournotation inordertospecifythestring matchingautomatoncorrespondingtoagivenpat ternp rstde neanauxiliaryfunction calledthesuf xfunctioncorrespondingtop thefunctionmaps tof mgsuchthatx isthelengthofthelongestpre xofpthatisalsoasuf xofx dmaxfkwpkxg stringmatchingwith niteautomata ababacabaaaab stateinputabca abababacaba istateti astate transitiondiagramforthestring matchingautomatonthatacceptsallstringsendinginthestringababaca isthestartstate andstate shownblackened istheonlyacceptingstate adirectededgefromstateitostatejlabeledarepresents theright goingedgesformingthe spine oftheautomaton shownheavyinthe gure correspondtosuccessfulmatchesbetweenpatternandinputcharacters theleft goingedgescorrespondtofailing matches someedgescorrespondingtofailingmatchesareomitted byconvention ifastateihasnooutgoingedgelabeledaforsomea thecorrespondingtransitionfunction andthepatternstringpdababaca theentriescorrespondingtosuccessfulmatchesbetweenpatternandinputcharactersareshownshaded theoperationoftheautomatononthetexttdabababacaba undereachtextcharactert iappearsthestateti thattheautoma tonisinafterprocessingthepre xti theautomaton ndsoneoccurrenceofthepattern endinginposition thesuf xfunctioniswellde nedsincetheemptystringp isasuf xofeverystring asexamples forthepatternpdab wehave ccaca andccab forapatternpoflengthm wehavex dmifandonlyifpx fromthede nitionofthesuf xfunction xyimpliesx wede nethestring matchingautomatonthatcorrespondstoagivenpatternp masfollows chapter stringmatchingthestatesetqisf thestartstateq isstate andstatemistheonlyacceptingstate thetransitionfunction isde nedbythefollowingequation foranystateqandcharactera dpqa wede dpqa becausewewanttokeeptrackofthelongestpre xofthepatternpthathasmatchedthetextstringtsofar weconsiderthemostrecentlyreadcharactersoft inorderforasubstringoft ssaythesubstringendingatt tomatchsomepre xpjofp thispre xpjmustbeasuf xofti supposethatqdti sothatafterreadingti theautomatonisinstateq wedesignthetransitionfunction sothatthisstatenumber tellsusthelengthofthelongestpre xofpthatmatchesasuf xofti thatis instateq pqtiandqdti wheneverqdm allmcharactersofpmatchasuf xofti andsowehavefoundamatch sinceti andti bothequalq weshallsee intheorem below thattheautomatonmaintainsthefollowing invariant dti iftheautomatonisinstateqandreadsthenextcharactert icda thenwewantthetransitiontoleadtothestatecorrespondingtothelongestpre xofpthatisasuf xoftia andthatstateistia becausepqisthelongestpre xofpthatisasuf xofti thelongestpre xofpthatisasuf xoftiaisnotonlytia butalsopqa lemma onpage provesthattia dpqa whentheautomatonisinstateq wewantthetransitionfunctiononcharac teratotaketheautomatontostatepqa therearetwocasestoconsider inthe rstcase adp sothatthecharacteracontinuestomatchthepattern inthiscase because dqc thetransitioncontinuestogoalongthe spine oftheautomaton theheavyedgesin inthesecondcase sothatadoesnotcontinuetomatchthepattern wemust ndasmallerpre xofpthatisalsoasuf xofti becausethepreprocessingstepmatchesthepatternagainstitselfwhencreatingthe matchingautomaton thetransitionfunctionquicklyidenti esthelongest suchsmallerpre xofp slookatanexample thestring matchingautomatonoffigure illustratingthe rstcase inwhichthematchcontinues toillus tratethesecondcase observethattheautomatonoffigure wemakethistransitionbecauseiftheautomatonreadsabinstateqd thenpqbdababab andthelongestpre xofpthatisalsoasuf xofabababisp dabab stringmatchingwith niteautomata xaprpr anillustrationfortheproofoflemma gureshowsthatrx whererdxa toclarifytheoperationofastring matchingautomaton wenowgiveasimple cientprogramforsimulatingthebehaviorofsuchanautomaton represented byitstransitionfunction ndingoccurrencesofapatternpoflengthminaninputtextt asforanystring matchingautomatonforapatternoflengthm thestatesetqisf thestartstateis andtheonlyacceptingstateisstatem finite automaton matcher ndt forid ton ifq patternoccurswithshift imfromthesimpleloopstructureoffinite automaton matcher wecaneasilyseethatitsmatchingtimeonatextstringoflengthnis thismatchingtime however doesnotincludethepreprocessingtimerequiredtocomputethe transitionfunction weaddressthisproblemlater rstprovingthattheprocedurefinite automaton matcheroperatescorrectly considerhowtheautomatonoperatesonaninputtextt weshallprovethattheautomatonisinstateti afterscanningcharactert sinceti dmifandonlyifpti themachineisintheacceptingstatemifandonlyifithasjustscannedthepatternp toprovethisresult wemakeuseofthefollowingtwolemmasaboutthesuf xfunction lemma suf functioninequality foranystringxandcharactera wehavexa proofreferringtofigure letrdxa ifrd thentheconclusionxa drx istriviallysatis bythenonnegativityofx nowassumethatr prxa bythede nitionof chapter stringmatchingxaapqprfigure anillustrationfortheproofoflemma gureshowsthatrdpqa whereqdx andrdxa droppingtheafromtheendofprandfromtheendofxa therefore sincex isthelargestksuchthatpkx andthusxa drx lemma suf functionrecursionlemma foranystringxandcharactera ifqdx thenxa dpqa prooffromthede nitionof wehavepqx asfigure shows wealsohavepqaxa ifweletrdxa thenprxaand bylemma rqc wehavejprjdrqc djpqaj sincepqaxa prxa andjprjjpqaj lemma impliesthatprpqa therefore rpqa thatis pqa butwealsohavepqa sincepqaxa dpqa wearenowreadytoproveourmaintheoremcharacterizingthebehaviorofastring matchingautomatononagiveninputtext asnotedabove thistheoremshowsthattheautomatonismerelykeepingtrack ateachstep ofthelongestpre xofthepatternthatisasuf xofwhathasbeenreadsofar inotherwords theautomatonmaintainstheinvariant theorem ifisthe nal statefunctionofastring matchingautomatonforagivenpatternpandt nisaninputtextfortheautomaton thenti dti forid prooftheproofisbyinductiononi forid thetheoremistriviallytrue sincet stringmatchingwith niteautomata weassumethatti dti andprovethattic dtic letqdenoteti andletadenotet tic dtia bythede nitionsoftic anda bythede nitionof bythede nitionofq dpqa bythede nition dtia bylemma andinduction dtic bythede nitionoftic bytheorem ifthemachineentersstateqonline thenqisthelargestvaluesuchthatpqti wehaveqdmonline ifandonlyifthema chinehasjustscannedanoccurrenceofthepatternp weconcludethatfinite automaton matcheroperatescorrectly computingthetransitionfunctionthefollowingprocedurecomputesthetransitionfunction fromagivenpatternp compute transition function mdp forqd tom foreachcharactera kdmin kdk untilpkpqa return thisprocedurecomputes inastraightforwardmanneraccordingtoitsdef initioninequation thenestedloopsbeginningonlines allstatesqandallcharactersa andlines tobethelargestksuchthatpkpqa thecodestartswiththelargestconceivablevalueofk whichismin itthendecreaseskuntilpkpqa whichmusteventuallyoccur sincep isasuf xofeverystring therunningtimeofcompute transition functioniso causetheouterloopscontributeafactorofmj theinnerrepeatloopcanrunatmostmc times andthetestpkpqaonline canrequirecomparingup chapter stringmatchingtomcharacters muchfasterproceduresexist byutilizingsomecleverlycom putedinformationaboutthepatternp seeexercise wecanimprovethetimerequiredtocompute fromptoo withthisimprovedprocedureforcomputing wecan ndalloccurrencesofalength mpatterninalength ntextoveranalphabet witho preprocessingtimeand matchingtime exercises constructthestring matchingautomatonforthepatternpdaababandillustrateitsoperationonthetextstringtdaaababaabaababaab drawastate transitiondiagramforastring matchingautomatonforthepattern ababbabbababbababbabboverthealphabet dfa wecallapatternpnonoverlappableifpkpqimplieskd orkdq scribethestate transitiondiagramofthestring matchingautomatonforanonover lappablepattern giventwopatternspandp describehowtoconstructa niteautomatonthatdeterminesalloccurrencesofeitherpattern trytominimizethenumberofstatesinyourautomaton givenapatternpcontaininggapcharacters seeexercise showhowtobuilda niteautomatonthatcan ndanoccurrenceofpinatexttino matchingtime wherendjtj theknuth morris prattalgorithmwenowpresentalinear timestring matchingalgorithmduetoknuth morris andpratt thisalgorithmavoidscomputingthetransitionfunction altogether anditsmatchingtimeis usingjustanauxiliaryfunction whichweprecomputefromthepatternintime andstoreinanarray thearrayallowsustocomputethetransitionfunction ciently inanamortizedsense onthe asneeded looselyspeaking foranystateqd mandanycharacter theknuth morris prattalgorithm thevalueqcontainstheinformationweneedtocompute butthatdoesnotdependona sincethearrayhasonlymentries whereas entries wesaveafactorofj jinthepreprocessingtimebycomputingratherthan thepre xfunctionforapatternthepre xfunctionforapatternencapsulatesknowledgeabouthowthepat ternmatchesagainstshiftsofitself wecantakeadvantageofthisinformationto avoidtestinguselessshiftsinthenaivepattern matchingalgorithmandtoavoid precomputingthefulltransitionfunction forastring matchingautomaton considertheoperationofthenaivestringmatcher showsaparticularshiftsofatemplatecontainingthepatternpdababacaagainstatextt forthisexample ofthecharactershavematchedsuccessfully butthe thpatterncharacterfailstomatchthecorrespondingtextcharacter theinfor mationthatqcharactershavematchedsuccessfullydeterminesthecorrespondingtextcharacters knowingtheseqtextcharactersallowsustodetermineimmedi atelythatcertainshiftsareinvalid intheexampleofthe gure theshiftsc isnecessarilyinvalid sincethe rstpatterncharacter wouldbealignedwithatextcharacterthatweknowdoesnotmatchthe rstpatterncharacter butdoesmatchthesecondpatterncharacter theshifts dsc showninpart ofthe ure however alignsthe rstthreepatterncharacterswiththreetextcharactersthatmustnecessarilymatch ingeneral itisusefultoknowtheanswertothefollowing giventhatpatterncharactersp qmatchtextcharacterst whatistheleastshifts ssuchthatforsomek kdt wheres ckdscq inotherwords knowingthatpqtscq wewantthelongestproperpre xpkofpqthatisalsoasuf xoftscq sinces ckdscq ifwearegivensandq ndingthesmallestshifts istantamountto ndingthelongestpre xlengthk weaddthedifferenceqkinthelengthsofthesepre xesofptotheshiftstoarriveatournewshifts sothats dsc inthebestcase sothats dscq andweimmediatelyruleoutshiftssc scq inanycase atthenewshifts wedon tneedtocomparethe rstkcharactersofpwiththecorrespondingcharactersoft sinceequation guaranteesthattheymatch wecanprecomputethenecessaryinformationbycomparingthepatternagainstitself asfigure demonstrates sincet cispartofthe chapter stringmatchingbacbababa abaabcbabbacastpqbacbababa abaabcbabbacas tpkababaaba pqpkfigure thepre xfunction thepatternpdababacaalignswithatexttsothatthe rstqd charactersmatch matchingcharacters shownshaded areconnectedbyverticallines usingonlyourknowledgeofthe matchedcharacters wecandeducethatashiftofsc isinvalid butthatashiftofs dsc isconsistentwitheverythingweknowaboutthetextandthereforeispotentiallyvalid wecanprecomputeusefulinformationforsuchdeductionsbycomparingthepatternwithitself weseethatthelongestpre xofpthatisalsoapropersuf xofp isp werepresentthisprecomputedinformationinthearray sothat giventhatqcharactershavematchedsuccessfullyatshifts thenextpotentiallyvalidshiftisats dsc asshowninpart knownportionofthetext itisasuf xofthestringpq therefore wecaninterpretequation asaskingforthegreatestk qsuchthatpkpq thenewshifts dsc isthenextpotentiallyvalidshift wewill nditconvenienttostore foreachvalueofq thenumberkofmatchingcharactersatthenewshifts ratherthanstoring weformalizetheinformationthatweprecomputeasfollows givenapatternp thepre xfunctionforthepatternpisthefunctionwf gsuchthatqdmaxfkwk qandpkpqg thatis qisthelengthofthelongestpre xofpthatisapropersuf xofpq givesthecompletepre xfunctionforthepatternababaca theknuth morris prattalgorithm ababaca ababacaababacaababacaababaca iip anillustrationoflemma forthepatternpdababacaandqd thefunctionforthegivenpattern byiteratingweobtaindf weslidethetemplatecontainingthepatternptotherightandnotewhensomepre xpkofpmatchesupwithsomepropersuf xofp wegetmatcheswhenkd inthe gure rstrowgivesp andthedottedverticallineisdrawnjustafterp successiverowsshowalltheshiftsofpthatcausesomepre xpkofptomatchsomesuf xofp successfullymatchedcharactersareshownshaded verticallinesconnectalignedmatchingcharacters fkwk andpkp gdf lemma claimsthat qdfkwk qandpkpqgforallq thepseudocodebelowgivestheknuth morris prattmatchingalgorithmastheprocedurekmp matcher forthemostpart theprocedurefollowsfromfinite automaton matcher asweshallsee kmp matchercallstheaux iliaryprocedurecompute prefix functiontocompute kmp matcher ndt mdp dcompute prefix function numberofcharactersmatched forid ton scanthetextfromlefttoright whileq andp qdq nextcharacterdoesnotmatch ifp qdqc nextcharactermatches ifq isallofpmatched patternoccurswithshift qdq lookforthenextmatch chapter stringmatchingcompute prefix function mdp mbeanewarray forqd tom whilek andp kdk ifp kdkc qdk returnthesetwoprocedureshavemuchincommon becausebothmatchastringagainstthepatternp kmp matchermatchesthetexttagainstp andcompute prefix functionmatchespagainstitself webeginwithananalysisoftherunningtimesoftheseprocedures provingtheseprocedurescorrectwillbemorecomplicated running timeanalysistherunningtimeofcompute prefix functionis whichweshowbyusingtheaggregatemethodofamortizedanalysis seesection theonly trickypartisshowingthatthewhileloopoflines executeso timesalto gether weshallshowthatitmakesatmostm iterations westartbymakingsomeobservationsaboutk startskat andtheonlywaythatkincreasesisbytheincrementoperationinline whichexecutesatmostonceper iterationoftheforloopoflines thetotalincreaseinkisatmostm sincek quponenteringtheforloopandeachiterationoftheloopin crementsq wealwayshavek therefore theassignmentsinlines ensurethatq qforallqd whichmeansthateachiterationofthewhileloopdecreasesk kneverbecomesnegative puttingthesefactstogether weseethatthetotaldecreaseinkfromthewhileloopisboundedfromabovebythetotalincreaseinkoveralliterationsoftheforloop whichism thewhileloopiteratesatmostm timesinall andcompute prefix functionrunsintime asksyoutoshow byasimilaraggregateanalysis thatthematch ingtimeofkmp matcheris comparedwithfinite automaton matcher byusingratherthan wehavereducedthetimeforpreprocessingthepatternfromo whilekeepingtheactualmatchingtimeboundedby theknuth morris prattalgorithm correctnessofthepre functioncomputationweshallseealittlelaterthatthepre xfunctionhelpsussimulatethetransitionfunction inastring matchingautomaton rst weneedtoprovethattheprocedurecompute prefix functiondoesindeedcomputethepre xfunc tioncorrectly inordertodoso wewillneedto ndallpre xespkthatarepropersuf xesofagivenpre xpq thevalueofqgivesusthelongestsuchpre butthefollowinglemma illustratedinfigure showsthatbyiteratingthepre function wecanindeedenumerateallthepre xespkthatarepropersuf xesofpq qdfq qisde nedintermsoffunctionaliteration sothat qdqand qfori andwherethesequencein qstopsuponreaching lemma pre functioniterationlemma letpbeapatternoflengthmwithpre xfunction forqd wehave qdfkwk qandpkpqg proofwe rstprovethat qfkwk qandpkpqgor equivalently qimpliespipq ifi thenid qforsomeu weproveequation byinductiononu forud wehaveidq andtheclaimfollowssincei qandpqpqbythede nitionof usingtherelationsi iandpipiandthetransitivityof andestablishestheclaimforalliin therefore qfkwk qandpkpqg wenowprovethatfkwk qandpkpqg qbycontradiction sup posetothecontrarythatthesetfkwk qandpkpqg qisnonempty andletjbethelargestnumberintheset becauseqisthelargestvalueinfkwk qandpkpqgandq wemusthavej andsoweletj denotethesmallestintegerin qthatisgreaterthanj wecanchoosej dqifnoothernumberin qisgreaterthanj wehavepjpqbecausej fkwk qandpkpqg andfromj qandequation wehavepj pjpj bylemma andjisthelargestvaluelessthanj withthisproperty therefore wemusthavej djand sincej wemusthavej qaswell thiscontradictionprovesthelemma thealgorithmcompute prefix functioncomputesq inorder forqd setting inline ofcompute prefix functioniscer tainlycorrect sinceq qforallq weshallusethefollowinglemmaand chapter stringmatchingitscorollarytoprovethatcompute prefix functioncomputesqcorrectlyforq lemma letpbeapatternoflengthm andletbethepre xfunctionforp forqd ifq thenq proofletrdq sothatr qandprpq andpr bydroppingthelastcharacterfromprandpq whichwecandobecauser bylemma therefore wehaveq forqd nethesubseteq qbyeq dfk qwp kcdp qgdfkwk andpkpq andp kcdp bylemma dfkwk andpkc pqg theseteq consistsofthevaluesk forwhichpkpq andforwhich becausep kcdp wehavepkc consistsofthosevaluesk qsuchthatwecanextendpktopkc andgetapropersuf xofpq corollary letpbeapatternoflengthm andletbethepre xfunctionforp forqd ifeq cmaxfk gifeq proofifeq isempty thereisnok includingkd forwhichwecanextendpktopkc andgetapropersuf xofpq thereforeqd ifeq isnonempty thenforeachk wehavekc qandpkc therefore fromthede nitionofq wehaveq cmaxfk notethatq letrdq sothatrc dqandthere foreprc sincerc wehavep rcdp furthermore bylemma wehaver therefore andsormaxfk gor equivalently cmaxfk combiningequations completestheproof theknuth morris prattalgorithm wenow nishtheproofthatcompute prefix functioncomputescor rectly intheprocedurecompute prefix function atthestartofeachiter ationoftheforloopoflines wehavethatkdq thisconditionisenforcedbylines whentheloopis rstentered anditremainstruein eachsuccessiveiterationbecauseofline lines adjustksothatitbecomesthecorrectvalueofq thewhileloopoflines searchesthroughallvaluesk quntilit ndsavalueofkforwhichp kcdp atthatpoint kisthelargestvalueintheseteq sothat bycorollary wecansetqtokc ifthewhileloopcannot ndak qsuchthatp kcdp thenkequals atline ifp thenweshouldsetbothkandqto otherwiseweshouldleavekaloneandsetqto lines setkandqcorrectlyineithercase thiscompletesourproofofthecorrectnessofcompute prefix function correctnessoftheknuth morris prattalgorithmwecanthinkoftheprocedurekmp matcherasareimplementedversionoftheprocedurefinite automaton matcher butusingthepre xfunctiontocomputestatetransitions speci cally weshallprovethatintheithiterationoftheforloopsofbothkmp matcherandfinite automaton matcher thestateqhasthesamevaluewhenwetestforequalitywithm atline inkmp matcherandatline infinite automaton matcher oncewehavearguedthatkmp matchersimulatesthebehavioroffinite automaton matcher thecorrectnessofkmp matcherfollowsfromthecorrectnessoffinite automaton matcher thoughweshallseealittlelaterwhyline inkmp matcherisnecessary beforeweformallyprovethatkmp matchercorrectlysimulatesfinite automaton matcher stakeamomenttounderstandhowthepre xfunc tionreplacesthe transitionfunction recallthatwhenastring matchingautomatonisinstateqanditscansacharacteradt itmovestoanewstate ifadp sothatacontinuestomatchthepattern dqc otherwise sothatadoesnotcontinuetomatchthepattern inthe rstcase whenacontinuestomatch kmp matchermovestostateqc withoutreferringtothefunction thewhilelooptestinline comesupfalsethe rsttime thetestinline comesuptrue andline incrementsq thefunctioncomesintoplaywhenthecharacteradoesnotcontinuetomatchthepattern sothatthenewstate iseitherqortotheleftofqalongthespineoftheautomaton thewhileloopoflines inkmp matcheriteratesthroughthestatesin stoppingeitherwhenitarrivesinastate sayq suchthatamatchesp corq hasgoneallthewaydownto ifamatchesp chapter stringmatchingthenline setsthenewstatetoq whichshouldequal forthesimulationtoworkcorrectly inotherwords thenewstate shouldbeeitherstate oronegreaterthansomestatein slookattheexampleinfigures whichareforthepatternpdababaca supposethattheautomatonisinstateqd thestatesin indescendingorder ifthenextcharacterscannedisc thenwecaneasilyseethattheautomatonmovestostate inbothfinite automaton matcherandkmp matcher nowsupposethatthenextchar acterscannedisinsteadb sothattheautomatonshouldmovetostate thewhileloopinkmp matcherexitshavingexecutedline anditar rivesinstateq sincep cdp thetestinline comesuptrue andkmp matchermovestothenewstateq finally supposethatthenextcharacterscannedisinsteada sothattheautoma tonshouldmovetostate rstthreetimesthatthetestinline executes thetestcomesuptrue rsttime ndthatp andkmp matchermovestostate rststatein thesecondtime ndthatp aandmovetostate thesecondstatein thethirdtime ndthatp aandmovetostate thelaststatein thewhileloopexitsonceitarrivesinstateq ndsthatp cdp andline movestheautomatontothenewstateq ourintuitionisthatkmp matcheriteratesthroughthestatesin qindecreasingorder stoppingatsomestateq andthenpossiblymovingtostateq althoughthatmightseemlikealotofworkjusttosimulatecomputing bearinmindthatasymptotically kmp matcherisnoslowerthanfinite automaton matcher wearenowreadytoformallyprovethecorrectnessoftheknuth morris prattalgorithm bytheorem wehavethatqdti aftereachtimeweexecuteline offinite automaton matcher therefore itsuf cestoshowthatthesamepropertyholdswithregardtotheforloopinkmp matcher theproofproceedsbyinductiononthenumberofloopiterations initially bothprocedures setqto astheyentertheirrespectiveforloopsforthe rsttime consideritera tionioftheforloopinkmp matcher andletq bestateatthestartofthisloopiteration bytheinductivehypothesis wehaveq dti weneedtoshowthatqdti atline weshallhandleline separately whenweconsiderthecharactert thelongestpre xofpthatisasuf xoftiiseitherpq ifp cdt orsomepre notnecessarilyproper andpossiblyempty ofpq weconsiderseparatelythethreecasesinwhichti theknuth morris prattalgorithm ifti thenp istheonlypre xofpthatisasuf xofti thewhileloopoflines iteratesthroughthevaluesin butalthoughpqtiforeveryq theloopnever ndsaqsuchthatp qcdt theloopterminateswhenqreaches andofcourseline doesnotexecute therefore atline sothatqdti ifti thenp cdt andthewhilelooptestinline failsthe rsttimethrough executes incrementingqsothatafterwardwehaveqdq dti thenthewhileloopoflines iteratesatleastonce checkingindecreasingordereachvalueq untilitstopsatsomeq pqisthelongestpre xofpq forwhichp qcdt sothatwhenthewhileloopterminates dpq sinceq dti lemma impliesthatti dpq wehaveqc dpq dti dti whenthewhileloopterminates afterline incrementsq wehaveqdti isnecessaryinkmp matcher becauseotherwise wemightrefer encep mconline ndinganoccurrenceofp theargumentthatqdti uponthenextexecutionofline remainsvalidbythehintgiveninexercise equivalently dpma foranya theremainingargumentforthecorrectnessoftheknuth morris prattalgorithmfollowsfromthecorrectnessoffinite automaton matcher sincewehaveshownthatkmp matchersimulatesthebehavioroffinite automaton matcher exercises computethepre xfunctionforthepatternababbabbabbababbabb giveanupperboundonthesizeof qasafunctionofq giveanexampletoshowthatyourboundistight explainhowtodeterminetheoccurrencesofpatternpinthetexttbyexaminingthefunctionforthestringpt thestringoflengthmcnthatistheconcatenationofpandt chapter stringmatching useanaggregateanalysistoshowthattherunningtimeofkmp matcheris useapotentialfunctiontoshowthattherunningtimeofkmp matcheris showhowtoimprovekmp matcherbyreplacingtheoccurrenceofinline butnotline isde nedrecursivelyforqd bytheequation ifqd qifq andp qcdp qifq andp explainwhythemodi edalgorithmiscorrect andexplaininwhatsensethischangeconstitutesanimprovement givealinear timealgorithmtodeterminewhetheratexttisacyclicrotationofanotherstringt forexample arcandcararecyclicrotationsofeachother giveano timealgorithmforcomputingthetransitionfunction forthestring matchingautomatoncorrespondingtoagivenpatternp hint provethat ifqdmorp problems stringmatchingbasedonrepetitionfactorsletyidenotetheconcatenationofstringywithitselfitimes forexample dababab wesaythatastringx hasrepetitionfactorrifxdyrforsomestringy andsomer letx denotethelargestrsuchthatxhasrepetitionfactorr giveanef cientalgorithmthattakesasinputapatternp mandcomputesthevaluepi forid whatistherunningtimeofyouralgo rithm notesforchapter foranypatternp bede nedasmax impi provethatifthepatternpischosenrandomlyfromthesetofallbinarystringsoflengthm thentheexpectedvalueof iso arguethatthefollowingstring matchingalgorithmcorrectly ndsalloccur rencesofpatternpinatextt nintimeo ncm repetition matcher mdp ndt whilesnm ift scqc qdqc ifq patternoccurswithshift ifq mort scqc sdscmax thisalgorithmisduetogalilandseiferas byextendingtheseideasgreatly theyobtainedalinear timestring matchingalgorithmthatusesonlyo stor agebeyondwhatisrequiredforpandt chapternotestherelationofstringmatchingtothetheoryof niteautomataisdiscussedbyaho hopcroft andullman theknuth morris prattalgorithm inventedindependentlybyknuthandprattandbymorris theypublishedtheir workjointly reingold urban andgries giveanalternativetreatmentofthe knuth morris prattalgorithm therabin karpalgorithmwasproposedbykarp andrabin galilandseiferas giveaninterestingdeterministiclinear timestring matchingalgorithmthatusesonlyo spacebeyondthatrequiredtostorethepatternandtext computationalgeometrycomputationalgeometryisthebranchofcomputersciencethatstudiesalgorithmsforsolvinggeometricproblems inmodernengineeringandmathematics com putationalgeometryhasapplicationsinsuchdiverse eldsascomputergraphics robotics vlsidesign computer aideddesign molecularmodeling metallurgy manufacturing textilelayout forestry andstatistics theinputtoacomputational geometryproblemistypicallyadescriptionofasetofgeometricobjects suchas asetofpoints asetoflinesegments ortheverticesofapolygonincounterclock wiseorder theoutputisoftenaresponsetoaqueryabouttheobjects suchas whetheranyofthelinesintersect orperhapsanewgeometricobject suchasthe convexhull smallestenclosingconvexpolygon ofthesetofpoints inthischapter welookatafewcomputational geometryalgorithmsintwodimensions thatis intheplane werepresenteachinputobjectbyasetof pointsfp whereeachpid andxi forexam ple werepresentann vertexpolygonpbyasequencehp iofitsverticesinorderoftheirappearanceontheboundaryofp computationalgeometrycanalsoapplytothreedimensions andevenhigher dimensionalspaces butsuchproblemsandtheirsolutionscanbeverydif culttovisualize evenin twodimensions however wecanseeagoodsampleofcomputational geometry techniques showshowtoanswerbasicquestionsaboutlinesegmentsef cientlyandaccurately whetheronesegmentisclockwiseorcounterclockwise fromanotherthatsharesanendpoint whichwayweturnwhentraversingtwo adjoininglinesegments andwhethertwolinesegmentsintersect presentsatechniquecalled sweeping thatweusetodevelopano nlgn timealgorithmfordeterminingwhetherasetofnlinesegmentscontainsanyinter sections givestwo rotational sweep algorithmsthatcomputethe convexhull smallestenclosingconvexpolygon ofasetofnpoints graham sscan whichrunsintimeo nlgn andjarvis smarch whichtakeso wherehisthenumberofverticesoftheconvexhull finally gives segmentproperties ano nlgn timedivide conqueralgorithmfor ndingtheclosestpairofpointsinasetofnpointsintheplane segmentpropertiesseveralofthecomputational geometryalgorithmsinthischapterrequireanswerstoquestionsaboutthepropertiesoflinesegments aconvexcombinationoftwodistinctpointsp andp isanypointp suchthatforsome intherange wehavex andy wealsowritethatp intuitively isanypointthatisonthelinepassingthroughp andp andisonorbetweenp andp ontheline giventwodistinctpointsp andp thelinesegmentp isthesetofconvexcombinationsofp andp wecallp andp theendpointsofsegmentp sometimestheorderingofp andp matters andwespeakofthedirectedsegment ifp istheorigin thenwecantreatthedirectedsegment asthevectorp inthissection weshallexplorethefollowingquestions giventwodirectedsegments clockwisefrom withrespecttotheircommonendpointp giventwolinesegmentsp andp ifwetraversep andthenp dowemakealeftturnatpointp dolinesegmentsp andp intersect therearenorestrictionsonthegivenpoints wecananswereachquestionino whichshouldcomeasnosurprisesincetheinputsizeofeachquestioniso moreover ourmethodsuseonlyad ditions subtractions multiplications andcomparisons weneedneitherdivision nortrigonometricfunctions bothofwhichcanbecomputationallyexpensiveand pronetoproblemswithround offerror forexample straightforward ofdeterminingwhethertwosegmentsintersect computethelineequationofthe formydmxcbforeachsegment mistheslopeandbisthey intercept ndthepointofintersectionofthelines andcheckwhetherthispointisonbothsegments usesdivisionto ndthepointofintersection whenthesegmentsarenearlyparallel thismethodisverysensitivetotheprecisionofthedivisionopera tiononrealcomputers themethodinthissection whichavoidsdivision ismuchmoreaccurate chapter computationalgeometryp pfigure thecrossproductofvectorsp andp isthesignedareaoftheparallelogram thelightlyshadedregioncontainsvectorsthatareclockwisefromp thedarklyshadedregioncontainsvectorsthatarecounterclockwisefromp crossproductscomputingcrossproductsliesattheheartofourline segmentmethods considervectorsp andp showninfigure wecaninterpretthecrossproductp asthesignedareaoftheparallelogramformedbythepoints andp anequivalent butmoreuseful nitiongivesthecrossproductasthedeterminantofamatrix ddetx ifp ispositive thenp isclockwisefromp withrespecttotheorigin ifthiscrossproductisnegative thenp iscounterclockwisefromp seeexer cise showstheclockwiseandcounterclockwiseregionsrelativetoavectorp aboundaryconditionarisesifthecrossproductis inthiscase thevectorsarecolinear pointingineitherthesameoroppositedirections todeterminewhetheradirectedsegment isclosertoadirectedseg ment inaclockwisedirectionorinacounterclockwisedirectionwithrespecttotheircommonendpointp wesimplytranslatetousep astheorigin thatis weletp denotethevectorp wherex andy andwede nep similarly wethencomputethecrossproduct actually thecrossproductisathree dimensionalconcept itisavectorthatisperpendiculartobothp andp accordingtothe handrule andwhosemagnitudeisjx inthischapter however nditconvenienttotreatthecrossproductsimplyasthevaluex segmentproperties counterclockwise clockwisefigure usingthecrossproducttodeterminehowconsecutivelinesegmentsp andp turnatpointp wecheckwhetherthedirectedsegment isclockwiseorcounterclockwiserelativetothedirectedsegment ifcounterclockwise thepointsmakealeftturn ifclockwise theymakearightturn ifthiscrossproductispositive isclockwisefrom ifnegative itiscounterclockwise determiningwhetherconsecutivesegmentsturnleftorrightournextquestioniswhethertwoconsecutivelinesegmentsp andp turnleftorrightatpointp equivalently wewantamethodtodeterminewhichwayagivenangle turns crossproductsallowustoanswerthisquestionwith outcomputingtheangle asfigure shows wesimplycheckwhetherdirected isclockwiseorcounterclockwiserelativetodirectedsegment todoso wecomputethecrossproduct ifthesignofthiscrossproductisnegative iscounterclockwisewithrespectto andthuswemakealeftturnatp apositivecrossproductindicatesaclockwiseorientationandarightturn acrossproductof meansthatpointsp andp arecolinear determiningwhethertwolinesegmentsintersecttodeterminewhethertwolinesegmentsintersect wecheckwhethereachsegmentstraddlesthelinecontainingtheother asegmentp straddlesalineifpointp liesononesideofthelineandpointp liesontheotherside aboundarycasearisesifp orp liesdirectlyontheline twolinesegmentsintersectifandonlyifeither orboth ofthefollowingconditionsholds eachsegmentstraddlesthelinecontainingtheother anendpointofonesegmentliesontheothersegment thisconditioncomesfromtheboundarycase chapter computationalgeometrythefollowingproceduresimplementthisidea segments intersectreturnstrueifsegmentsp andp intersectandfalseiftheydonot itcallsthesubroutinesdirection whichcomputesrelativeorientationsusingthecross productmethodabove andon whichdetermineswhetherapointknowntobecolinearwithasegmentliesonthatsegment segments intersect ddirection ddirection ddirection ddirection andd andd andd andd returntrue elseifd andon returntrue elseifd andon returntrue elseifd andon returntrue elseifd andon returntrue elsereturnfalsedirection return pkpi pjpi ifmin xkmax andmin ykmax returntrue elsereturnfalsesegments intersectworksasfollows lines computetherelativeori entationdiofeachendpointpiwithrespecttotheothersegment ifalltherelativeorientationsarenonzero thenwecaneasilydeterminewhethersegmentsp andp intersect asfollows segmentp straddlesthelinecontainingseg mentp ifdirectedsegments haveoppositeorientationsrelativeto inthiscase thesignsofd andd similarly straddlesthelinecontainingp ifthesignsofd andd ifthetestofline istrue thenthesegmentsstraddleeachother andsegments intersectreturnstrue showsthiscase otherwise thesegmentsdonotstraddle segmentproperties casesintheproceduresegments intersect thesegmentsp andp straddleeachother slines becausep straddlesthelinecontainingp thesignsofthecrossproducts becausep straddlesthelinecontainingp thesignsofthecrossproducts segmentp straddlesthelinecontainingp butp doesnotstraddlethelinecontainingp thesignsofthecrossproducts arethesame pointp iscolinearwithp andisbetweenp andp pointp iscolinearwithp butitisnotbetweenp andp thesegmentsdonotintersect eachother slines althoughaboundarycasemayapply ifalltherelativeorienta tionsarenonzero noboundarycaseapplies allthetestsagainst inlines thenfail andsegments intersectreturnsfalseinline showsthiscase aboundarycaseoccursifanyrelativeorientationdkis weknowthatpkiscolinearwiththeothersegment itisdirectlyontheothersegmentifandonlyifitisbetweentheendpointsoftheothersegment theprocedureon segmentreturnswhetherpkisbetweentheendpointsofsegmentpipj whichwillbetheothersegmentwhencalledinlines theprocedureassumesthatpkiscolinearwithsegmentpipj figures showcaseswithcolinearpoints infigure isonp andsosegments intersectreturnstrueinline noendpointsareonothersegmentsinfigure andsosegments intersectreturnsfalseinline chapter computationalgeometryotherapplicationsofcrossproductslatersectionsofthischapterintroduceadditionalusesforcrossproducts insec tion weshallneedtosortasetofpointsaccordingtotheirpolarangleswith respecttoagivenorigin asexercise asksyoutoshow wecanusecross productstoperformthecomparisonsinthesortingprocedure insection shallusered blacktreestomaintaintheverticalorderingofasetoflinesegments ratherthankeepingexplicitkeyvalueswhichwecomparetoeachotherinthe blacktreecode weshallcomputeacross producttodeterminewhichoftwo segmentsthatintersectagivenverticallineisabovetheother exercises provethatifp ispositive thenvectorp isclockwisefromvectorp withrespecttotheorigin andthatifthiscrossproductisnegative thenp iscounterclockwisefromp professorvanpeltproposesthatonlythex dimensionneedstobetestedinline ofon showwhytheprofessoriswrong thepolarangleofapointp withrespecttoanoriginpointp istheangleofthevectorp intheusualpolarcoordinatesystem forexample thepolarangleof withrespectto istheangleofthevector whichis degreesor radians thepolarangleof withrespectto istheangleofthevector whichis degreesor radians writepseudocodetosortasequencehp pniofnpointsaccordingtotheirpolarangleswithrespecttoagivenoriginpointp yourprocedureshouldtakeo nlgn timeandusecrossproductstocompareangles showhowtodetermineino lgn timewhetheranythreepointsinasetofnpointsarecolinear apolygonisapiecewise linear closedcurveintheplane thatis itisacurveendingonitselfthatisformedbyasequenceofstraight linesegments calledthe sidesofthepolygon apointjoiningtwoconsecutivesidesisavertexofthepoly gon ifthepolygonissimple asweshallgenerallyassume itdoesnotcrossitself thesetofpointsintheplaneenclosedbyasimplepolygonformstheinteriorof determiningwhetheranypairofsegmentsintersects thepolygon thesetofpointsonthepolygonitselfformsitsboundary andthesetofpointssurroundingthepolygonformsitsexterior asimplepolygonisconvexif givenanytwopointsonitsboundaryorinitsinterior allpointsontheline segmentdrawnbetweenthemarecontainedinthepolygon sboundaryorinterior avertexofaconvexpolygoncannotbeexpressedasaconvexcombinationofany twodistinctpointsontheboundaryorintheinteriorofthepolygon professoramundsenproposesthefollowingmethodtodeterminewhetherase quencehp iofnpointsformstheconsecutiveverticesofaconvexpolygon output ifthesetf pipic pic wid wheresub scriptadditionisperformedmodulon doesnotcontainbothleftturnsandrightturns otherwise output showthatalthoughthismethodrunsinlineartime itdoesnotalwaysproducethecorrectanswer modifytheprofessor smethodso thatitalwaysproducesthecorrectanswerinlineartime givenapointp therighthorizontalrayfromp isthesetofpointsfpid wxix andyidy thatis itisthesetofpointsduerightofp alongwithp itself showhowtodeterminewhetheragivenrighthorizontalrayfromp intersectsalinesegmentp ino timebyreducingtheproblemtothatofdeterminingwhethertwolinesegmentsintersect onewaytodeterminewhetherapointp isintheinteriorofasimple butnotnecessarilyconvex polygonpistolookatanyrayfromp andcheckthattherayintersectstheboundaryofpanoddnumberoftimesbutthatp itselfisnotontheboundaryofp showhowtocomputein timewhetherapointp isintheinteriorofann vertexpolygonp hint useexercise makesureyouralgorithmiscorrectwhentherayintersectsthepolygonboundaryatavertexand whentherayoverlapsasideofthepolygon showhowtocomputetheareaofann vertexsimple butnotnecessarilyconvex polygonin seeexercise forde nitionspertainingtopolygons determiningwhetheranypairofsegmentsintersectsthissectionpresentsanalgorithmfordeterminingwhetheranytwolinesegmentsinasetofsegmentsintersect thealgorithmusesatechniqueknownas sweep ing whichiscommontomanycomputational geometryalgorithms moreover chapter computationalgeometrytheexercisesattheendofthissectionshow thisalgorithm orsimplevariationsofit canhelpsolveothercomputational geometryproblems thealgorithmrunsino nlgn wherenisthenumberofsegmentswearegiven itdeterminesonlywhetherornotanyintersectionexists itdoesnotprint alltheintersections byexercise ittakesn timeintheworstcaseto ndalltheintersectionsinasetofnlinesegments insweeping animaginaryverticalsweeplinepassesthroughthegivensetofgeometricobjects usuallyfromlefttoright wetreatthespatialdimensionthatthesweeplinemovesacross inthiscasethex dimension asadimensionoftime sweepingprovidesamethodfororderinggeometricobjects usuallybyplac ingthemintoadynamicdatastructure andfortakingadvantageofrelationships amongthem theline intersectionalgorithminthissectionconsidersall theline segmentendpointsinleft rightorderandchecksforanintersectioneach timeitencountersanendpoint todescribeandprovecorrectouralgorithmfordeterminingwhetheranytwoofnlinesegmentsintersect weshallmaketwosimplifyingassumptions weassumethatnoinputsegmentisvertical weassumethatnothreeinputsegmentsintersectatasinglepoint exercises askyoutoshowthatthealgorithmisrobustenoughthatitneedsonlyaslightmodi cationtowork evenwhentheseassumptionsdonothold indeed removingsuchsimplifying assumptionsanddealingwithboundaryconditionsoftenpresentthemostdif cult challengeswhenprogrammingcomputational geometryalgorithmsandprovingtheircorrectness orderingsegmentsbecauseweassumethattherearenoverticalsegments weknowthatanyinputsegmentintersectingagivenverticalsweeplineintersectsitatasinglepoint wecanorderthesegmentsthatintersectaverticalsweeplineaccordingtothey coordinatesofthepointsofintersection tobemoreprecise considertwosegmentss ands wesaythatthesesegmentsarecomparableatxiftheverticalsweeplinewithx coordinatexintersectsbothofthem wesaythats isaboves atx writtens ifs ands arecomparableatxandtheintersectionofs withthesweeplineatxishigherthantheintersectionofs withthesamesweepline orifs ands intersectatthesweepline infigure forexample wehavetherelationshipsa andb segmentdisnotcomparablewithanyothersegment foranygivenx therelation isatotalpreorder seesectionb forallsegmentsthatintersectthesweeplineatx thatis therelationistransitive andifsegmentss ands eachintersectthesweeplineatx theneithers ors orboth ifs ands intersectatthesweepline therelation xis determiningwhetheranypairofsegmentsintersects rtuacbd vwefghizfigure theorderingamonglinesegmentsatvariousverticalsweeplines wehavea andb segmentdiscomparablewithnoothersegmentshown whensegmentseandfintersect theyreversetheirorders wehavee fbutf anysweepline suchas thatpassesthroughtheshadedregionhaseandfconsecutiveintheorderinggivenbytherelation alsore exive butneithersymmetricnorantisymmetric thetotalpreordermaydifferfordifferingvaluesofx however assegmentsenterandleavetheordering asegmententerstheorderingwhenitsleftendpointisencounteredbythesweep anditleavestheorderingwhenitsrightendpointisencountered whathappenswhenthesweeplinepassesthroughtheintersectionoftwoseg ments asfigure shows thesegmentsreversetheirpositionsinthetotal preorder sweeplinesandwaretotheleftandright respectively ofthepointofintersectionofsegmentseandf andwehavee fandf notethatbecauseweassumethatnothreesegmentsintersectatthesamepoint mustbesomeverticalsweeplinexforwhichintersectingsegmentseandfareconsecutiveinthetotalpreorder anysweeplinethatpassesthroughtheshadedregionoffigure suchas haseandfconsecutiveinitstotalpreorder movingthesweeplinesweepingalgorithmstypicallymanagetwosetsofdata thesweep linestatusgivestherelationshipsamongtheobjectsthatthesweeplineintersects theevent pointscheduleisasequenceofpoints calledeventpoints whichweorderfromlefttorightaccordingtotheirx coordinates asthesweepprogressesfromlefttoright wheneverthesweeplinereachesthex coordinateofaneventpoint thesweephalts processestheeventpoint andthenresumes changestothesweep linestatusoccuronlyateventpoints forsomealgorithms thealgorithmaskedforinexercise forexample theevent pointscheduledevelopsdynamicallyasthealgorithmprogresses theal gorithmathand however determinesalltheeventpointsbeforethesweep based chapter computationalgeometrysolelyonsimplepropertiesoftheinputdata inparticular eachsegmentendpointisaneventpoint wesortthesegmentendpointsbyincreasingx coordinateandproceedfromlefttoright iftwoormoreendpointsarecovertical theyhavethesamex coordinate webreakthetiebyputtingallthecoverticalleftendpointsbeforethecoverticalrightendpoints withinasetofcoverticalleftendpoints putthosewithlowery coordinates rst andwedothesamewithinasetofcover ticalrightendpoints whenweencounterasegment sleftendpoint weinsertthe segmentintothesweep linestatus andwedeletethesegmentfromthesweep linestatusuponencounteringitsrightendpoint whenevertwosegments rstbecomeconsecutiveinthetotalpreorder wecheckwhethertheyintersect thesweep linestatusisatotalpreordert forwhichwerequirethefollowingoperations insert insertsegmentsintot delete deletesegmentsfromt returnthesegmentimmediatelyabovesegmentsint below returnthesegmentimmediatelybelowsegmentsint itispossibleforsegmentss ands tobemutuallyaboveeachotherinthetotalpreordert thissituationcanoccurifs ands intersectatthesweeplinewhosetotalpreorderisgivenbyt inthiscase thetwosegmentsmayappearineitherorderint iftheinputcontainsnsegments wecanperformeachoftheoperationsinsert delete andbelowino lgn timeusingred blacktrees recallthatthered treeoperationsinchapter involvecomparingkeys wecanre placethekeycomparisonsbycomparisonsthatusecrossproductstodeterminethe relativeorderingoftwosegments seeexercise intersectionpseudocodethefollowingalgorithmtakesasinputasetsofnlinesegments returningthebooleanvaluetrueifanypairofsegmentsinsintersects andfalseotherwise ared blacktreemaintainsthetotalpreordert determiningwhetheranypairofsegmentsintersects segments intersect sorttheendpointsofthesegmentsinsfromlefttoright breakingtiesbyputtingleftendpointsbeforerightendpoints andbreakingfurthertiesbyputtingpointswithlower coordinates rst foreachpointpinthesortedlistofendpoints ifpistheleftendpointofasegments insert existsandintersectss below existsandintersectss returntrue ifpistherightendpointofasegments ifbothabove andbelow existandabove intersectsbelow returntrue delete returnfalsefigure illustrateshowthealgorithmworks initializesthetotalpreordertobeempty determinestheevent pointschedulebysortingthe nsegmentendpointsfromlefttoright breakingtiesasdescribedabove onewaytoperformline isbylexicographicallysortingtheendpointson wherexandyaretheusualcoordinates foraleftendpoint anded forarightendpoint eachiterationoftheforloopoflines processesoneeventpointp ifpistheleftendpointofasegments addsstothetotalpreorder andlines returntrueifsintersectseitherofthesegmentsitisconsecutivewithinthetotalpreorderde nedbythesweeplinepassingthroughp aboundaryconditionoccursifpliesonanothersegments inthiscase werequireonlythatsands beplacedconsecutivelyintot ifpistherightendpointofasegments thenweneedtodeletesfromthetotalpreorder rst lines returntrueifthereisanintersectionbetweenthesegmentssurroundingsinthetotalpreorderde nedbythesweeplinepassingthroughp ifthesesegmentsdonotintersect deletessegmentsfromthetotalpreorder ifthesegmentssurroundingsegmentsintersect theywouldhavebecomeconsecutiveafterdeletingshadthereturnstatementinline notpreventedline fromexecuting thecorrectnessargument whichfollows willmakeitclearwhyitsuf cestocheckthesegments surroundings finally ifwenever ndanyintersectionsafterhavingprocessedall neventpoints returnsfalse chapter computationalgeometryaabacbdacbdcbedcbabcdeftimefigure theexecutionofany segments intersect eachdashedlineisthesweeplineataneventpoint exceptfortherightmostsweepline theorderingofsegmentnamesbeloweachsweeplinecorrespondstothetotalpreordertattheendoftheforloopprocessingthecorrespondingeventpoint therightmostsweeplineoccurswhenprocessingtherightendpointofsegmentc becausesegmentsdandbsurroundcandintersecteachother theprocedurereturnstrue correctnesstoshowthatany segments intersectiscorrect wewillprovethatthecallany segments intersect returnstrueifandonlyifthereisanintersec tionamongthesegmentsins itiseasytoseethatany segments intersectreturnstrue onlines onlyifit ndsanintersectionbetweentwooftheinputsegments hence ifitreturnstrue thereisanintersection wealsoneedtoshowtheconverse thatifthereisanintersection thenany segments intersectreturnstrue letussupposethatthereisatleastoneintersection letpbetheleftmostintersectionpoint breakingtiesbychoosingthepointwiththelowesty coordinate andletaandbbethesegmentsthatintersectatp sincenointersectionsoccurtotheleftofp theordergivenbytiscorrectatallpointstotheleftofp becausenothreesegmentsintersectatthesamepoint aandbbecomeconsecutiveinthetotalpreorderatsomesweepline moreover istotheleftofporgoesthroughp somesegmentendpointqonsweepline ifweallowthreesegmentstointersectatthesamepoint theremaybeaninterveningsegmentcthatintersectsbothaandbatpointp thatis wemayhavea wcandc wbforallsweeplineswtotheleftofpforwhicha asksyoutoshowthatany segments intersectiscorrectevenifthreesegmentsdointersectatthesamepoint determiningwhetheranypairofsegmentsintersects istheeventpointatwhichaandbbecomeconsecutiveinthetotalpreorder ifpisonsweepline thenqdp ifpisnotonsweepline thenqistotheleftofp ineithercase theordergivenbytiscorrectjustbeforeencounteringq hereiswhereweusethelexicographicorderinwhichthealgorithmprocesses eventpoints becausepisthelowestoftheleftmostintersectionpoints evenifpisonsweepline andsomeotherintersectionpointp ison eventpointqdpisprocessedbeforetheotherintersectionp caninterferewiththetotalpreordert moreover evenifpistheleftendpointofonesegment saya andtherightend pointoftheothersegment sayb becauseleftendpointeventsoccurbeforerightendpointevents segmentbisintupon rstencounteringsegmenta eithereventpointqisprocessedbyany segments intersectoritisnotprocessed ifqisprocessedbyany segments intersect onlytwopossibleactionsmayoccur eitheraorbisinsertedintot andtheothersegmentisaboveorbelowitinthetotalpreorder lines detectthiscase segmentsaandbarealreadyint andasegmentbetweentheminthetotalpreorderisdeleted makingaandbbecomeconsecutive lines detectthiscase ineithercase ndtheintersectionpandany segments intersectreturnstrue ifeventpointqisnotprocessedbyany segments intersect theproce duremusthavereturnedbeforeprocessingalleventpoints thissituationcouldhaveoccurredonlyifany segments intersecthadalreadyfoundaninter sectionandreturnedtrue ifthereisanintersection segments intersectreturnstrue aswehavealreadyseen ifany segments intersectreturnstrue thereisanintersection therefore segments intersectalwaysreturnsacorrectanswer runningtimeifsetscontainsnsegments thenany segments intersectrunsintimeo nlgn takeso takeso nlgn usingmergesortorheapsort theforloopoflines iteratesatmostoncepereventpoint andsowith neventpoints theloopiteratesatmost ntimes eachiterationtakeso lgn sinceeachred treeoperationtakeso lgn timeand usingthemethodofsection eachintersectiontesttakeso thetotaltimeisthuso nlgn chapter computationalgeometryexercises showthatasetofnlinesegmentsmaycontain intersections giventwosegmentsaandbthatarecomparableatx showhowtodetermineino timewhichofa xborb xaholds assumethatneithersegmentisvertical hint ifaandbdonotintersect youcanjustusecrossproducts ifaandbintersect whichyoucanofcoursedetermineusingonlycrossprod ucts youcanstilluseonlyaddition subtraction andmultiplication avoiding ofcourse intheapplicationofthe xrelationusedhere ifaandbintersect wecanjuststopanddeclarethatwehavefoundanintersection professormasonsuggeststhatwemodifyany segments intersectsothatinsteadofreturningupon ndinganintersection itprintsthesegmentsthatinter sectandcontinuesontothenextiterationoftheforloop theprofessorcallstheresultingprocedureprint intersecting segmentsandclaimsthatitprintsallintersections fromlefttoright astheyoccurinthesetoflinesegments pro fessordixondisagrees claimingthatprofessormason sideaisincorrect professorisright willprint intersecting segmentsalways ndtheleft mostintersection rst willitalways ndalltheintersections giveano nlgn timealgorithmtodeterminewhetherann vertexpolygonissimple giveano nlgn timealgorithmtodeterminewhethertwosimplepolygonswithatotalofnverticesintersect adiskconsistsofacircleplusitsinteriorandisrepresentedbyitscenterpointandradius twodisksintersectiftheyhaveanypointincommon giveano nlgn timealgorithmtodeterminewhetheranytwodisksinasetofnintersect givenasetofnlinesegmentscontainingatotalofkintersections showhowtooutputallkintersectionsino nck lgn findingtheconvexhull arguethatany segments intersectworkscorrectlyevenifthreeormoresegmentsintersectatthesamepoint showthatany segments intersectworkscorrectlyinthepresenceofverti calsegmentsifwetreatthebottomendpointofaverticalsegmentasifitwerea leftendpointandthetopendpointasifitwerearightendpoint howdoesyour answertoexercise changeifweallowverticalsegments findingtheconvexhulltheconvexhullofasetqofpoints denotedbych isthesmallestconvexpolygonpforwhicheachpointinqiseitherontheboundaryofporinitsinterior seeexercise foraprecisede nitionofaconvexpolygon implicitlyassumethatallpointsinthesetqareuniqueandthatqcontainsatleastthreepointswhicharenotcolinear intuitively wecanthinkofeachpointinqasbeinganailstickingoutfromaboard theconvexhullisthentheshapeformedbyatightrubberbandthatsurroundsallthenails showsaset ofpointsanditsconvexhull inthissection weshallpresenttwoalgorithmsthatcomputetheconvexhullofasetofnpoints bothalgorithmsoutputtheverticesoftheconvexhullincounterclockwiseorder rst knownasgraham sscan runsino nlgn thesecond calledjarvis smarch runsino wherehisthenumberofverticesoftheconvexhull asfigure illustrates everyvertexofch isap asetofpointsqdfp gwithitsconvexhullch ingray chapter computationalgeometrypointinq bothalgorithmsexploitthisproperty decidingwhichverticesinqtokeepasverticesoftheconvexhullandwhichverticesinqtoreject wecancomputeconvexhullsino nlgn timebyanyoneofseveralmethods bothgraham sscanandjarvis smarchuseatechniquecalled rotationalsweep processingverticesintheorderofthepolaranglestheyformwithareference vertex othermethodsincludethefollowing intheincrementalmethod rstsortthepointsfromlefttoright yieldingasequencehp pni attheithstage weupdatetheconvexhullofthei leftmostpoints accordingtotheithpointfromtheleft thusformingch pig asksyouhowtoimplementthismethodtotakeatotalofo nlgn inthedivide conquermethod wedividethesetofnpointsin timeintotwosubsets onecontainingtheleftmostdn epointsandonecontainingtherightmostbn cpoints recursivelycomputetheconvexhullsofthesubsets andthen bymeansofaclevermethod combinethehullsino therunningtimeisdescribedbythefamiliarrecurrencet andsothedivide conquermethodrunsino nlgn theprune searchmethodissimilartotheworst caselinear timemedianalgorithmofsection withthismethod ndtheupperportion upperchain oftheconvexhullbyrepeatedlythrowingoutaconstantfractionoftheremainingpointsuntilonlytheupperchainoftheconvexhullremains wethen dothesameforthelowerchain thismethodisasymptoticallythefastest theconvexhullcontainshvertices itrunsinonlyo nlgh computingtheconvexhullofasetofpointsisaninterestingprobleminitsownright moreover algorithmsforsomeothercomputational geometryproblemsstart bycomputingaconvexhull forexample thetwo dimensionalfarthest pairproblem wearegivenasetofnpointsintheplaneandwishto ndthetwopointswhosedistancefromeachotherismaximum asexercise asks youtoprove thesetwopointsmustbeverticesoftheconvexhull althoughwe won tproveithere wecan ndthefarthestpairofverticesofann vertexconvexpolygonino bycomputingtheconvexhulloftheninputpointsino nlgn timeandthen ndingthefarthestpairoftheresultingconvex polygonvertices wecan ndthefarthestpairofpointsinanysetofnpointsino nlgn graham sscangraham sscansolvestheconvex hullproblembymaintainingastacksofcan didatepoints itpusheseachpointoftheinputsetqontothestackonetime findingtheconvexhull anditeventuallypopsfromthestackeachpointthatisnotavertexofch whenthealgorithmterminates stackscontainsexactlytheverticesofch incounterclockwiseorderoftheirappearanceontheboundary theproceduregraham scantakesasinputasetqofpoints wherejqj itcallsthefunctionstop whichreturnsthepointontopofstackswithoutchangings andnext whichreturnsthepointoneentrybelowthetopofstackswithoutchangings asweshallproveinamoment thestacksreturnedbygraham scancontains frombottomtotop exactlytheverticesofch incounterclockwiseorder graham scan letp bethepointinqwiththeminimumy coordinate ortheleftmostsuchpointincaseofatie lethp pmibetheremainingpointsinq sortedbypolarangleincounterclockwiseorderaroundp ifmorethanonepointhasthesameangle removeallbuttheonethatisfarthestfromp letsbeanemptystack forid tom whiletheangleformedbypointsnext andpimakesanonleftturn pop returnsfigure illustratestheprogressofgraham scan choosespointp asthepointwiththelowesty coordinate pickingtheleftmostsuchpointincaseofatie sincethereisnopointinqthatisbelowp andanyotherpointswiththesamey coordinatearetoitsright mustbeavertexofch sortstheremainingpointsofqbypolaranglerelativetop usingthesamemethod comparingcrossproducts asinexercise iftwoormorepoints havethesamepolaranglerelativetop allbutthefarthestsuchpointareconvexcombinationsofp andthefarthestpoint andsoweremovethementirelyfromconsideration weletmdenotethenumberofpointsotherthanp thatremain thepolarangle measuredinradians ofeachpointinqrelativetop isinthehalf openinterval sincethepointsaresortedaccordingtopolarangles theyaresortedincounterclockwiseorderrelativetop wedesignatethissortedsequenceofpointsbyhp pmi notethatpointsp andpmarevertices chapter computationalgeometryp theexecutionofgraham scanonthesetqoffigure thecurrentconvexhullcontainedinstacksisshowningrayateachstep thesequencehp iofpointsnumberedinorderofincreasingpolaranglerelativetop andtheinitialstackscontainingp andp stacksaftereachiterationoftheforloopoflines dashedlinesshownonleftturns whichcausepointstobepoppedfromthestack inpart forexample therightturnatangle causesp tobepopped andthentherightturnatangle causesp tobepopped findingtheconvexhull continued theconvexhullreturnedbytheprocedure whichmatchesthatoffigure chapter computationalgeometryofch seeexercise showsthepointsoffigure sequentiallynumberedinorderofincreasingpolaranglerelativetop theremainderoftheprocedureusesthestacks lines initializethestacktocontain frombottomtotop rstthreepointsp andp showstheinitialstacks theforloopoflines iteratesonceforeachpointinthesubsequencehp pmi weshallseethatafterprocessingpointpi stackscontains frombottomtotop theverticesofch pig incoun terclockwiseorder thewhileloopoflines removespointsfromthestackifwe ndthemnottobeverticesoftheconvexhull whenwetraversetheconvexhullcounterclockwise weshouldmakealeftturnateachvertex eachtime thewhileloop ndsavertexatwhichwemakeanonleftturn wepopthevertexfromthestack bycheckingforanonleftturn ratherthanjustarightturn testprecludesthepossibilityofastraightangleatavertexoftheresultingconvex hull wewantnostraightangles sincenovertexofaconvexpolygonmaybea convexcombinationofotherverticesofthepolygon afterwepopallvertices thathavenonleftturnswhenheadingtowardpointpi wepushpiontothestack figures showthestateofthestacksaftereachiterationoftheforloop finally graham scanreturnsthestacksinline showsthecorrespondingconvexhull thefollowingtheoremformallyprovesthecorrectnessofgraham scan theorem correctnessofgraham sscan ifgraham scanexecutesonasetqofpoints wherejqj thenattermina tion thestacksconsistsof frombottomtotop exactlytheverticesofch incounterclockwiseorder proofafterline wehavethesequenceofpointshp pmi letusde forid thesubsetofpointsqidfp pig thepointsinqqmarethosethatwereremovedbecausetheyhadthesamepolaranglerelativetop assomepointinqm thesepointsarenotinch andsoch dch itsuf cestoshowthatwhengraham scanterminates thestacksconsistsoftheverticesofch incounterclockwiseorder whenlistedfrombottomtotop notethatjustasp andpmareverticesofch thepointsp andpiareallverticesofch theproofusesthefollowingloopinvariant atthestartofeachiterationoftheforloopoflines stacksconsistsof frombottomtotop exactlytheverticesofch incounterclockwiseorder initialization theinvariantholdsthe rsttimeweexecuteline sinceatthattime stacksconsistsofexactlytheverticesofq dqi andthissetofthree findingtheconvexhull pkpjpiqj pjpi ptprfigure theproofofcorrectnessofgraham scan becausepi spolaranglerelativetop isgreaterthanpj spolarangle andbecausetheangle pkpjpimakesaleftturn addingpitoch givesexactlytheverticesofch fpig iftheangle prptpimakesanonleftturn thenptiseitherintheinteriorofthetriangleformedbyp andpioronasideofthetriangle whichmeansthatitcannotbeavertexofch verticesformsitsownconvexhull moreover theyappearincounterclockwiseorderfrombottomtotop maintenance enteringaniterationoftheforloop thetoppointonstacksispi whichwaspushedattheendofthepreviousiteration orbeforethe rstiteration whenid letpjbethetoppointonsafterexecutingthewhileloopoflines butbeforeline pushespi andletpkbethepointjustbelowpjons atthemomentthatpjisthetoppointonsandwehavenotyetpushedpi stackscontainsexactlythesamepointsitcontainedafteriterationjoftheforloop bytheloopinvariant therefore scontainsexactlytheverticesofch atthatmoment andtheyappearincounterclockwiseorderfrombottomtotop letuscontinuetofocusonthismomentjustbeforepushingpi weknowthatpi spolaranglerelativetop isgreaterthanpj spolarangleandthattheangle pkpjpimakesaleftturn otherwisewewouldhavepoppedpj therefore becausescontainsexactlytheverticesofch weseefromfigure thatoncewepushpi stackswillcontainexactlytheverticesofch fpig stillincounterclockwiseorderfrombottomtotop wenowshowthatch fpig isthesamesetofpointsasch consideranypointptthatwaspoppedduringiterationioftheforloop andletprbethepointjustbelowptonstacksatthetimeptwaspopped prmightbepj theangle prptpimakesanonleftturn andthepolarangleofptrelativetop isgreaterthanthepolarangleofpr asfigure shows ptmust chapter computationalgeometrybeeitherintheinteriorofthetriangleformedbyp andpioronasideofthistriangle butitisnotavertexofthetriangle clearly sinceptiswithinatriangleformedbythreeotherpointsofqi itcannotbeavertexofch sinceptisnotavertexofch wehavethatch qifptg dch letpibethesetofpointsthatwerepoppedduringiterationioftheforloop sincetheequality appliesforallpointsinpi wecanapplyitrepeatedlytoshowthatch qipi dch butqipidqj fpig andsoweconcludethatch fpig dch qipi dch wehaveshownthatoncewepushpi stackscontainsexactlytheverticesofch incounterclockwiseorderfrombottomtotop incrementingiwillthencausetheloopinvarianttoholdforthenextiteration termination whentheloopterminates wehaveidmc andsotheloopinvariantimpliesthatstacksconsistsofexactlytheverticesofch whichisch incounterclockwiseorderfrombottomtotop thiscompletestheproof wenowshowthattherunningtimeofgraham scaniso nlgn wherendjqj takes takeso nlgn usingmergesortorheapsorttosortthepolaranglesandthecross productmethodofsection tocompareangles wecanremoveallbutthefarthestpointwiththesamepolar angleintotalofo timeoverallnpoints lines takeo becausemn theforloopoflines executesatmostn times sincepushtakeso eachiterationtakeso timeexclusiveofthetimespentinthewhileloopoflines andthusoveralltheforlooptakeso timeexclusiveofthenestedwhileloop weuseaggregateanalysistoshowthatthewhilelooptakeso timeoverall forid wepusheachpointpiontostacksexactlyonce asintheanalysisofthemultipopprocedureofsection weobservethatwecanpopatmostthenumberofitemsthatwepush atleastthreepoints andpm areneverpoppedfromthestack sothatinfactatmostm popoperationsareperformedintotal eachiterationofthewhileloopperformsonepop andsothereareatmostm iterationsofthewhileloopaltogether sincethetestinline takeso eachcallofpoptakeso andmn thetotaltimetakenbythewhileloopiso therunningtimeofgraham scaniso nlgn findingtheconvexhull chainleft chainright chainleft chainp theoperationofjarvis smarch wechoosethe rstvertexasthelowestpointp thenextvertex hasthesmallestpolarangleofanypointwithrespecttop hasthesmallestpolaranglewithrespecttop therightchaingoesashighasthehighestpointp weconstructtheleftchainby ndingsmallestpolarangleswithrespecttothenegativex axis jarvis smarchjarvis smarchcomputestheconvexhullofasetqofpointsbyatechniqueknownaspackagewrapping orgiftwrapping thealgorithmrunsintimeo wherehisthenumberofverticesofch whenhiso lgn jarvis smarchisasymptoticallyfasterthangraham sscan intuitively jarvis smarchsimulateswrappingatautpieceofpaperaroundthesetq westartbytapingtheendofthepapertothelowestpointintheset thatis tothesamepointp withwhichwestartgraham sscan weknowthatthispointmustbeavertexoftheconvexhull wepullthepapertotherighttomakeittaut andthenwepullithigheruntilittouchesapoint thispointmustalsobeavertex oftheconvexhull keepingthepapertaut wecontinueinthiswayaroundtheset ofverticesuntilwecomebacktoouroriginalpointp moreformally jarvis smarchbuildsasequencehdhp ioftheverticesofch westartwithp asfigure shows thenextvertexp intheconvexhullhasthesmallestpolaranglewithrespecttop incaseofties wechoosethepointfarthestfromp similarly hasthesmallestpolarangle chapter computationalgeometrywithrespecttop andsoon whenwereachthehighestvertex saypk breakingtiesbychoosingthefarthestsuchvertex wehaveconstructed asfigure shows therightchainofch toconstructtheleftchain westartatpkandchoosepkc asthepointwiththesmallestpolaranglewithrespecttopk butfromthenegativex axis wecontinueon formingtheleftchainbytakingpolaranglesfromthenegativex axis untilwecomebacktoouroriginalvertexp wecouldimplementjarvis smarchinoneconceptualsweeparoundtheconvexhull thatis withoutseparatelyconstructingtherightandleftchains suchimple mentationstypicallykeeptrackoftheangleofthelastconvex hullsidechosenandrequirethesequenceofanglesofhullsidestobestrictlyincreasing intherange toradians theadvantageofconstructingseparatechainsisthatweneednotexplicitlycomputeangles thetechniquesofsection suf cetocompare angles ifimplementedproperly jarvis smarchhasarunningtimeofo foreachofthehverticesofch ndthevertexwiththeminimumpolarangle eachcomparisonbetweenpolaranglestakeso usingthetechniquesofsec tion assection shows wecancomputetheminimumofnvaluesino timeifeachcomparisontakeso jarvis smarchtakeso exercises provethatintheproceduregraham scan pointsp andpmmustbeverticesofch consideramodelofcomputationthatsupportsaddition comparison andmultipli cationandforwhichthereisalowerboundofnlgn tosortnnumbers provethatnlgn isalowerboundforcomputing inorder theverticesoftheconvexhullofasetofnpointsinsuchamodel givenasetofpointsq provethatthepairofpointsfarthestfromeachothermustbeverticesofch foragivenpolygonpandapointqonitsboundary theshadowofqisthesetofpointsrsuchthatthesegmentqrisentirelyontheboundaryorintheinteriorofp asfigure illustrates apolygonpisstar shapedifthereexistsapointpintheinteriorofpthatisintheshadowofeverypointontheboundaryofp thesetofallsuchpointspiscalledthekernelofp givenann vertex findingtheclosestpairofpoints qqfigure thede nitionofastar shapedpolygon foruseinexercise astar shapedpolygon thesegmentfrompointptoanypointqontheboundaryintersectstheboundaryonlyatq anon shapedpolygon theshadedregionontheleftistheshadowofq andtheshadedregionontherightistheshadowofq sincetheseregionsaredisjoint thekernelisempty shapedpolygonpspeci edbyitsverticesincounterclockwiseorder showhowtocomputech ino intheon lineconvex hullproblem wearegiventhesetqofnpointsonepointatatime afterreceivingeachpoint wecomputetheconvexhullofthepointsseen sofar obviously wecouldrungraham sscanonceforeachpoint withatotal runningtimeofo lgn showhowtosolvetheon lineconvex hullprobleminatotalofo showhowtoimplementtheincrementalmethodforcomputingtheconvexhull ofnpointssothatitrunsino nlgn findingtheclosestpairofpointswenowconsidertheproblemof ndingtheclosestpairofpointsinasetqofn points closest referstotheusualeuclideandistance thedistancebetweenpointsp andp isp twopointsinsetqmaybecoincident inwhichcasethedistancebetweenthemiszero thisproblemhasapplicationsin forexample traf controlsystems asystemforcontrollingairorseatraf cmightneedtoidentifythetwoclosestvehiclesinordertodetectpotentialcollisions abrute forceclosest pairalgorithmsimplylooksatallthen pairsofpoints inthissection weshalldescribeadivide conqueralgorithmfor chapter computationalgeometrythisproblem whoserunningtimeisdescribedbythefamiliarrecurrencet thisalgorithmusesonlyo nlgn thedivide conqueralgorithmeachrecursiveinvocationofthealgorithmtakesasinputasubsetpqandarraysxandy eachofwhichcontainsallthepointsoftheinputsubsetp thepointsinarrayxaresortedsothattheirx coordinatesaremonotonicallyincreasing similarly arrayyissortedbymonotonicallyincreasingy coordinate notethatinordertoattaintheo nlgn timebound wecannotaffordtosortineachrecursivecall ifwedid therecurrencefortherunningtimewouldbe nlgn whosesolutionist nlg usetheversionofthemastermethodgiveninexercise weshallseealittlelaterhowtouse presorting tomaintainthissortedpropertywithoutactuallysortingineachrecursivecall agivenrecursiveinvocationwithinputsp andy rstcheckswhetherjpj ifso theinvocationsimplyperformsthebrute forcemethoddescribedabove tryalljpj pairsofpointsandreturntheclosestpair ifjpj therecursiveinvocationcarriesoutthedivide conquerparadigmasfollows findaverticallinelthatbisectsthepointsetpintotwosetsplandprsuchthatjpljddjpj jprjdbjpj allpointsinplareonortotheleftoflinel andallpointsinprareonortotherightofl dividethearrayxintoarraysxlandxr whichcontainthepointsofplandprrespectively sortedbymonotonicallyincreasingx coordinate similarly dividethearrayyintoarraysylandyr whichcontainthepointsofplandprrespectively sortedbymonotonicallyincreasingy coordinate conquer havingdividedpintoplandpr maketworecursivecalls oneto ndtheclosestpairofpointsinplandtheotherto ndtheclosestpairofpointsinpr theinputstothe rstcallarethesubsetplandarraysxlandyl thesecondcallreceivestheinputspr andyr lettheclosest pairdistancesreturnedforplandprbe respectively andlet dmin combine theclosestpairiseitherthepairwithdistance foundbyoneoftherecursivecalls oritisapairofpointswithonepointinplandtheotherinpr thealgorithmdetermineswhetherthereisapairwithonepointinplandtheotherpointinprandwhosedistanceislessthan observethatifapairofpointshasdistancelessthan bothpointsofthepairmustbewithin unitsoflinel asfigure shows theybothmustresideinthe wideverticalstripcenteredatlinel ndsuchapair ifoneexists wedothefollowing findingtheclosestpairofpoints createanarrayy whichisthearrayywithallpointsnotinthe wideverticalstripremoved thearrayy issortedbyy coordinate justasyis foreachpointpinthearrayy tryto ndpointsiny thatarewithin unitsofp asweshallseeshortly onlythe pointsiny thatfollowpneedbeconsidered computethedistancefromptoeachofthese points andkeeptrackoftheclosest pairdistance foundoverallpairsofpointsiny thentheverticalstripdoesindeedcontainacloserpairthantherecursivecallsfound returnthispairanditsdistance otherwise returntheclosestpairanditsdistance foundbytherecursivecalls theabovedescriptionomitssomeimplementationdetailsthatarenecessarytoachievetheo nlgn runningtime afterprovingthecorrectnessofthealgorithm weshallshowhowtoimplementthealgorithmtoachievethedesiredtimebound correctnessthecorrectnessofthisclosest pairalgorithmisobvious exceptfortwoaspects bybottomingouttherecursionwhenjpj weensurethatwenevertrytosolveasubproblemconsistingofonlyonepoint thesecondaspectisthatweneedonlycheckthe pointsfollowingeachpointpinarrayy weshallnowprovethisproperty supposethatatsomeleveloftherecursion theclosestpairofpointsispl plandpr thedistance betweenplandprisstrictlylessthan pointplmustbeonortotheleftoflinelandlessthan unitsaway similarly prisonortotherightoflandlessthan unitsaway moreover plandprarewithin unitsofeachothervertically asfigure shows plandprarewithina rectanglecenteredatlinel theremaybeotherpointswithinthisrectangleaswell wenextshowthatatmost pointsofpcanresidewithinthis rectangle considerthe squareformingthelefthalfofthisrectangle sinceallpointswithinplareatleast unitsapart atmost pointscanresidewithinthissquare showshow similarly atmost pointsinprcanresidewithinthe squareformingtherighthalfoftherectangle atmost pointsofpcanresidewithinthe rectangle notethatsincepointsonlinelmaybeineitherplorpr theremaybeupto pointsonl thislimitisachievediftherearetwopairsofcoincidentpointssuchthateachpairconsistsofonepointfromplandonepointfrompr onepairisattheintersectionoflandthetopoftherectangle andtheotherpairiswherelintersectsthebottomoftherectangle havingshownthatatmost pointsofpcanresidewithintherectangle wecaneasilyseewhyweneedtocheckonlythe pointsfollowingeachpointinthearrayy stillassumingthattheclosestpairisplandpr letusassumewithout chapter computationalgeometrylplprplpr prpl lcoincident points prcoincident points prfigure keyconceptsintheproofthattheclosest pairalgorithmneedstocheckonly pointsfollowingeachpointinthearrayy ifpl plandpr prarelessthan unitsapart theymustresidewithina rectanglecenteredatlinel pointsthatarepairwiseatleast unitsapartcanallresidewithina ontheleftare pointsinpl andontherightare pointsinpr rectanglecancontain pointsifthepointsshownonlinelareactuallypairsofcoincidentpointswithonepointinplandoneinpr lossofgeneralitythatplprecedesprinarrayy evenifploccursasearlyaspossibleiny andproccursaslateaspossible prisinoneofthe positionsfollowingpl wehaveshownthecorrectnessoftheclosest pairalgorithm implementationandrunningtimeaswehavenoted ourgoalistohavetherecurrencefortherunningtimebet wheret istherunningtimeforasetofnpoints themaindif cultycomesfromensuringthatthearraysxl andyr whicharepassedtorecursivecalls aresortedbythepropercoordinateandalsothatthe arrayy issortedbyy coordinate notethatifthearrayxthatisreceivedbyarecursivecallisalreadysorted thenwecaneasilydividesetpintoplandprinlineartime thekeyobservationisthatineachcall wewishtoformasortedsubsetofasortedarray forexample aparticularinvocationreceivesthesubsetpandthearrayy sortedbyy coordinate havingpartitionedpintoplandpr itneedstoformthearraysylandyr whicharesortedbyy coordinate inlineartime wecanviewthemethodastheoppositeofthemergeprocedurefrommergesortin findingtheclosestpairofpoints wearesplittingasortedarrayintotwosortedarrays thefollowingpseudocodegivestheidea letyl lengthandyr lengthbenewarrays lengthdyr lengthd forid toy ify lengthdyl lengthc lengthdy elseyr lengthdyr lengthc lengthdy iwesimplyexaminethepointsinarrayyinorder ifapointy iisinpl weappendittotheendofarrayyl otherwise weappendittotheendofarrayyr similarpseudocodeworksforformingarraysxl andy theonlyremainingquestionishowtogetthepointssortedinthe rstplace wepresortthem thatis wesortthemonceandforallbeforethe rstrecursivecall wepassthesesortedarraysintothe rstrecursivecall andfromtherewewhittle themdownthroughtherecursivecallsasnecessary presortingaddsanadditional nlgn termtotherunningtime butnoweachstepoftherecursiontakeslineartimeexclusiveoftherecursivecalls ifwelett betherunningtimeofeachrecursivestepandt betherunningtimeoftheentirealgorithm wegett nlgn andt ifn ifn nlgn andt nlgn exercises professorwilliamscomesupwithaschemethatallowstheclosest pairalgorithm tocheckonly pointsfollowingeachpointinarrayy theideaisalwaystoplacepointsonlinelintosetpl therecannotbepairsofcoincidentpointsonlinelwithonepointinplandoneinpr atmost pointscanresideinthe rectangle whatisthe awintheprofessor sscheme showthatitactuallysuf cestocheckonlythepointsinthe arraypositionsfol lowingeachpointinthearrayy chapter computationalgeometry wecande nethedistancebetweentwopointsinwaysotherthaneuclidean theplane thelm distancebetweenpointsp andp isgivenbytheexpres sion jmcjy euclideandistance therefore isl distance modifytheclosest pairalgorithmtousethel distance whichisalsoknownasthemanhattandistance giventwopointsp andp intheplane thel distancebetweenthemisgivenbymax modifytheclosest pairalgorithmtousethel distance supposethat ofthepointsgiventotheclosest pairalgorithmarecovertical showhowtodeterminethesetsplandprandhowtodeterminewhethereachpointofyisinplorprsothattherunningtimefortheclosest pairalgorithmremainso nlgn suggestachangetotheclosest pairalgorithmthatavoidspresortingtheyarraybutleavestherunningtimeaso nlgn hint mergesortedarraysylandyrtoformthesortedarrayy problems convexlayersgivenasetqofpointsintheplane wede netheconvexlayersofqinductively rstconvexlayerofqconsistsofthosepointsinqthatareverticesofch fori neqitoconsistofthepointsofqwithallpointsinconvexlayers removed theithconvexlayerofqisch ifqi andisunde nedotherwise giveano timealgorithmto ndtheconvexlayersofasetofnpoints provethatnlgn timeisrequiredtocomputetheconvexlayersofasetofnpointswithanymodelofcomputationthatrequiresnlgn timetosortnrealnumbers problemsforchapter maximallayersletqbeasetofnpointsintheplane wesaythatpoint dominatespoint ifxx andyy apointinqthatisdominatedbynootherpointsinqissaidtobemaximal notethatqmaycontainmanymaximalpoints whichcanbeorganizedintomaximallayersasfollows rstmaximallayerl isthesetofmaximalpointsofq fori theithmaximallayerliisthesetofmaximalpointsinqsi supposethatqhasknonemptymaximallayers andletyibethey coordinateoftheleftmostpointinliforid fornow assumethatnotwopointsinqhavethesamex ory coordinate showthaty considerapoint thatistotheleftofanypointinqandforwhichyisdistinctfromthey coordinateofanypointinq letq letjbetheminimumindexsuchthatyj unlessy inwhichcaseweletjdkc showthatthemaximallayersofq areasfollows ifjk thenthemaximallayersofq arethesameasthemaximallayersofq exceptthatljalsoincludes asitsnewleftmostpoint ifjdkc thenthe rstkmaximallayersofq arethesameasforq butinaddition hasanonempty stmaximallayer lkc describeano nlgn timealgorithmtocomputethemaximallayersofasetqofnpoints hint moveasweeplinefromrighttoleft doanydif cultiesariseifwenowallowinputpointstohavethesamex ory coordinate suggestawaytoresolvesuchproblems ghostbustersandghostsagroupofnghostbustersisbattlingnghosts eachghostbustercarriesaprotonpack whichshootsastreamataghost eradicatingit astreamgoesinastraight lineandterminateswhenithitstheghost theghostbustersdecideuponthefol lowingstrategy theywillpairoffwiththeghosts formingnghostbuster ghostpairs andthensimultaneouslyeachghostbusterwillshootastreamathischo senghost asweallknow itisverydangeroustoletstreamscross andsotheghostbustersmustchoosepairingsforwhichnostreamswillcross assumethatthepositionofeachghostbusterandeachghostisa xedpointintheplaneandthatnothreepositionsarecolinear arguethatthereexistsalinepassingthroughoneghostbusterandoneghostsuchthatthenumberofghostbustersononesideofthelineequalsthenumberofghostsonthesameside describehowto ndsuchalineino nlgn chapter computationalgeometryb giveano lgn timealgorithmtopairghostbusterswithghostsinsuchawaythatnostreamscross pickingupsticksprofessorcharonhasasetofnsticks whicharepiledupinsomecon guration eachstickisspeci edbyitsendpoints andeachendpointisanorderedtriple givingits coordinates nostickisvertical hewishestopickupallthesticks oneatatime subjecttotheconditionthathemaypickupastickonlyifthereisnootherstickontopofit giveaprocedurethattakestwosticksaandbandreportswhetheraisabove below orunrelatedtob describeanef cientalgorithmthatdetermineswhetheritispossibletopickupallthesticks andifso providesalegalorderinwhichtopickthemup sparse hulleddistributionsconsidertheproblemofcomputingtheconvexhullofasetofpointsintheplane thathavebeendrawnaccordingtosomeknownrandomdistribution sometimes thenumberofpoints orsize oftheconvexhullofnpointsdrawnfromsuchadistributionhasexpectationo forsomeconstant wecallsuchadistributionsparse hulled sparse hulleddistributionsincludethefollowing pointsdrawnuniformlyfromaunit radiusdisk theconvexhullhasexpectedsize pointsdrawnuniformlyfromtheinteriorofaconvexpolygonwithksides foranyconstantk theconvexhullhasexpectedsize lgn pointsdrawnaccordingtoatwo dimensionalnormaldistribution theconvexhullhasexpectedsize plgn giventwoconvexpolygonswithn andn verticesrespectively showhowtocomputetheconvexhullofalln pointsino thepolygonsmayoverlap showhowtocomputetheconvexhullofasetofnpointsdrawnindependentlyaccordingtoasparse hulleddistributionino average casetime hint recursively ndtheconvexhullsofthe rstn pointsandthesecondn points andthencombinetheresults notesforchapter chapternotesthischapterbarelyscratchesthesurfaceofcomputational geometryalgorithmsandtechniques booksoncomputationalgeometryincludethosebypreparataand shamos edelsbrunner ando rourke althoughgeometryhasbeenstudiedsinceantiquity thedevelopmentofalgo rithmsforgeometricproblemsisrelativelynew preparataandshamosnotethattheearliestnotionofthecomplexityofaproblemwasgivenbye lemoinein hewasstudyingeuclideanconstructions thoseusingacompassandaruler devisedasetof veprimitives placingonelegofthecompassonagivenpoint placingonelegofthecompassonagivenline drawingacircle passingtheruler edgethroughagivenpoint anddrawingaline lemoinewasinterestedinthe numberofprimitivesneededtoeffectagivenconstruction hecalledthisamount simplicity oftheconstruction thealgorithmofsection whichdetermineswhetheranysegmentsinter sect isduetoshamosandhoey theoriginalversionofgraham sscanisgivenbygraham thepackage wrappingalgorithmisduetojarvis usingadecision treemodelofcom putation yao provedaworst caselowerboundofnlgn fortherunningtimeofanyconvex hullalgorithm whenthenumberofverticeshofthecon vexhullistakenintoaccount theprune searchalgorithmofkirkpatrickandseidel whichtakeso nlgh isasymptoticallyoptimal theo nlgn timedivide conqueralgorithmfor ndingtheclosestpairofpointsisbyshamosandappearsinpreparataandshamos preparataand shamosalsoshowthatthealgorithmisasymptoticallyoptimalinadecision model completenessalmostallthealgorithmswehavestudiedthusfarhavebeenpolynomial timeal gorithms oninputsofsizen theirworst caserunningtimeiso forsomecon stantk youmightwonderwhetherallproblemscanbesolvedinpolynomialtime theanswerisno forexample thereareproblems suchasturing sfamous halt ingproblem thatcannotbesolvedbyanycomputer nomatterhowmuchtimewe therearealsoproblemsthatcanbesolved butnotintimeo foranyconstantk generally wethinkofproblemsthataresolvablebypolynomial timealgorithmsasbeingtractable oreasy andproblemsthatrequiresuperpolynomialtimeasbeingintractable orhard thesubjectofthischapter however isaninterestingclassofproblems calledthe problems whosestatusisunknown nopolynomial timeal gorithmhasyetbeendiscoveredforannp completeproblem norhasanyoneyet beenabletoprovethatnopolynomial timealgorithmcanexistforanyoneofthem thisso calledp npquestionhasbeenoneofthedeepest mostperplexingopenresearchproblemsintheoreticalcomputersciencesinceitwas rstposedin severalnp completeproblemsareparticularlytantalizingbecausetheyseemonthesurfacetobesimilartoproblemsthatweknowhowtosolveinpolynomial ineachofthefollowingpairsofproblems oneissolvableinpolynomial timeandtheotherisnp butthedifferencebetweenproblemsappearsto beslight shortestvs longestsimplepaths inchapter wesawthatevenwithnegativeedgeweights wecan ndshortestpathsfromasinglesourceinadirectedgraphgd ino findingalongestsimplepathbetweentwoverticesisdif cult however merelydeterminingwhetheragraphcontainsa simplepathwithatleastagivennumberofedgesisnp eulertourvs hamiltoniancycle aneulertourofaconnected directedgraphgd isacyclethattraverseseachedgeofgexactlyonce althoughitisallowedtovisiteachvertexmorethanonce byproblem wecan determinewhetheragraphhasaneulertourinonlyo timeand infact chapter completeness wecan ndtheedgesoftheeulertourino ahamiltoniancycleofadirectedgraphgd isasimplecyclethatcontainseachvertexinv determiningwhetheradirectedgraphhasahamiltoniancycleisnp laterinthischapter weshallprovethatdeterminingwhetheranundirectedgraphhasahamiltoniancycleisnp cnfsatis abilityvs cnfsatis ability abooleanformulacontainsvari ableswhosevaluesare booleanconnectivessuchas not andparentheses abooleanformulaissatis ableifthereexistssomeassignmentofthevalues toitsvariablesthatcausesittoevaluateto weshallde netermsmoreformallylaterinthischapter butinformally abooleanformulaisink conjunctivenormalform ork cnf ifitistheandofclausesoforsofexactlykvariablesortheirnegations forexample thebooleanformula isin cnf ithasthesatisfyingassignmentx althoughwecandeter mineinpolynomialtimewhethera cnfformulaissatis weshallsee laterinthischapterthatdeterminingwhethera cnfformulaissatis ableis completenessandtheclassespandnpthroughoutthischapter weshallrefertothreeclassesofproblems andnpc thelatterclassbeingthenp completeproblems wedescribetheminfor mallyhere andweshallde nethemmoreformallylateron theclasspconsistsofthoseproblemsthataresolvableinpolynomialtime morespeci cally theyareproblemsthatcanbesolvedintimeo forsomeconstantk wherenisthesizeoftheinputtotheproblem mostoftheproblemsexaminedinpreviouschaptersareinp theclassnpconsistsofthoseproblemsthatare veri inpolynomialtime whatdowemeanbyaproblembeingveri ifweweresomehowgivena certi cate ofasolution thenwecouldverifythatthecerti cateiscorrectintime polynomialinthesizeoftheinputtotheproblem forexample inthehamiltonian cycleproblem givenadirectedgraphgd acerti catewouldbease quenceh jvjiofjvjvertices wecouldeasilycheckinpolynomialtimethatiic eforid jvj andthatjvj easwell asanotherexample cnfsatis ability acerti catewouldbeanassignment ofvaluestovariables wecouldcheckinpolynomialtimethatthisassignment satis esthebooleanformula anyprobleminpisalsoinnp sinceifaproblemisinpthenwecansolveitinpolynomialtimewithoutevenbeingsuppliedacerti cate weshallformalize thisnotionlaterinthischapter butfornowwecanbelievethatpnp theopenquestioniswhetherornotpisapropersubsetofnp chapter completenessinformally aproblemisintheclassnpc andwerefertoitasbeingnp ifitisinnpandisas asanyprobleminnp weshallformallyde newhatitmeanstobeashardasanyprobleminnplaterinthischapter inthemeantime wewillstatewithoutproofthatifanynp completeproblemcanbesolvedinpolynomialtime theneveryprobleminnphasapolynomial timealgorithm mosttheoreticalcomputerscientistsbelievethatthenp problemsareintractable sincegiventhewiderangeofnp completeproblems thathavebeenstudiedtodate withoutanyonehavingdiscoveredapolynomial timesolutiontoanyofthem itwouldbetrulyastoundingifallofthemcouldbesolvedinpolynomialtime giventheeffortdevotedthusfartoproving thatnp completeproblemsareintractable withoutaconclusiveoutcome cannotruleoutthepossibilitythatthenp completeproblemsareinfactsolvable inpolynomialtime tobecomeagoodalgorithmdesigner youmustunderstandtherudimentsofthetheoryofnp completeness ifyoucanestablishaproblemasnp youprovidegoodevidenceforitsintractability asanengineer youwouldthendobettertospendyourtimedevelopinganapproximationalgorithm seechapter orsolvingatractablespecialcase ratherthansearchingforafastalgorithmthatsolvestheproblemexactly moreover manynaturalandinterestingproblemsthat onthesurfaceseemnoharderthansorting graphsearching ornetwork oware infactnp therefore youshouldbecomefamiliarwiththisremarkable classofproblems overviewofshowingproblemstobenp completethetechniquesweusetoshowthataparticularproblemisnp completedifferfundamentallyfromthetechniquesusedthroughoutmostofthisbooktodesignandanalyzealgorithms whenwedemonstratethataproblemisnp wearemakingastatementabouthowharditis oratleasthowhardwethinkit ratherthanabouthoweasyitis wearenottryingtoprovetheexistenceof anef cientalgorithm butinsteadthatnoef cientalgorithmislikelytoexist thisway completenessproofsbearsomesimilaritytotheproofinsection ofannlgn timelowerboundforanycomparisonsortalgorithm thespeci ctechniquesusedforshowingnp completenessdifferfromthedecision treemethod usedinsection however werelyonthreekeyconceptsinshowingaproblemtobenp decisionproblemsvs optimizationproblemsmanyproblemsofinterestareoptimizationproblems inwhicheachfeasible legal solutionhasanassociatedvalue andwewishto ndafeasiblesolutionwiththebestvalue forexample inaproblemthatwecallshortest chapter completeness wearegivenanundirectedgraphgandverticesuand andwewishto ndapathfromutothatusesthefewestedges inotherwords shortest pathisthesingle pairshortest pathprobleminanunweighted undirectedgraph completenessappliesdirectlynottooptimizationproblems however buttodeci sionproblems inwhichtheanswerissimply moreformally althoughnp completeproblemsarecon nedtotherealmofdecisionproblems wecantakeadvantageofaconvenientrelationshipbetweenoptimizationproblemsanddecisionproblems weusuallycancastagivenoptimizationproblemasare lateddecisionproblembyimposingaboundonthevaluetobeoptimized adecisionproblemrelatedtoshortest pathispath givenadi rectedgraphg verticesuand andanintegerk doesapathexistfromutoconsistingofatmostkedges therelationshipbetweenanoptimizationproblemanditsrelateddecisionprob lemworksinourfavorwhenwetrytoshowthattheoptimizationproblemis thatisbecausethedecisionproblemisinasense easier oratleast noharder asaspeci cexample wecansolvepathbysolvingshortest pathandthencomparingthenumberofedgesintheshortestpathfoundtothevalueofthedecision problemparameterk inotherwords ifanoptimizationprob lemiseasy itsrelateddecisionproblemiseasyaswell statedinawaythathas morerelevancetonp completeness ifwecanprovideevidencethatadecision problemishard wealsoprovideevidencethatitsrelatedoptimizationproblemishard eventhoughitrestrictsattentiontodecisionproblems thetheoryofnp completenessoftenhasimplicationsforoptimizationproblemsaswell reductionstheabovenotionofshowingthatoneproblemisnoharderornoeasierthanan otherappliesevenwhenbothproblemsaredecisionproblems wetakeadvantage ofthisideainalmosteverynp completenessproof asfollows letusconsidera decisionproblema whichwewouldliketosolveinpolynomialtime wecalltheinputtoaparticularproblemaninstanceofthatproblem forexample inpath aninstancewouldbeaparticulargraphg particularverticesuandofg andaparticularintegerk nowsupposethatwealreadyknowhowtosolveadifferentdecisionproblembinpolynomialtime finally supposethatwehaveaprocedurethattransformsanyinstance ofaintosomeinstance ofbwiththefollowingcharacteristics thetransformationtakespolynomialtime theanswersarethesame thatis theanswerfor ifandonlyiftheanswerfor isalso chapter completenesspolynomial timereduction algorithminstancepolynomial timealgorithm byesyespolynomial algorithm anonoofbinstanceofafigure howtouseapolynomial timereductionalgorithmtosolveadecisionproblemainpolynomialtime givenapolynomial timedecisionalgorithmforanotherproblemb inpolynomialtime wetransformaninstance ofaintoaninstance ofb wesolvebinpolynomialtime andweusetheanswerfor astheanswerfor wecallsuchaprocedureapolynomial timereductionalgorithmand asfig ure shows itprovidesusawaytosolveproblemainpolynomialtime givenaninstance ofproblema useapolynomial timereductionalgorithmtotransformittoaninstance ofproblemb runthepolynomial timedecisionalgorithmforbontheinstance usetheanswerfor astheanswerfor aslongaseachofthesestepstakespolynomialtime allthreetogetherdoalso andsowehaveawaytodecideon inpolynomialtime inotherwords reducing solvingproblematosolvingproblemb weusethe easiness ofbtoprovethe easiness ofa recallingthatnp completenessisaboutshowinghowhardaproblemisratherthanhoweasyitis weusepolynomial timereductionsintheoppositewaytoshow thataproblemisnp letustaketheideaastepfurther andshowhowwe couldusepolynomial timereductionstoshowthatnopolynomial timealgorithm canexistforaparticularproblemb supposewehaveadecisionproblemaforwhichwealreadyknowthatnopolynomial timealgorithmcanexist letusnot concernourselvesfornowwithhowto ndsuchaproblema supposefurtherthatwehaveapolynomial timereductiontransforminginstancesofatoinstancesofb nowwecanuseasimpleproofbycontradictiontoshowthatnopolynomial timealgorithmcanexistforb supposeotherwise supposethatbhasapolynomial timealgorithm usingthemethodshowninfigure wewouldhaveawaytosolveproblemainpolynomialtime whichcontradictsourassumptionthatthereisnopolynomial timealgorithmfora fornp completeness wecannotassumethatthereisabsolutelynopolynomial timealgorithmforproblema theproofmethodologyissimilar however inthatweprovethatproblembisnp completeontheassumptionthatproblemaisalsonp polynomialtime rstnp completeproblembecausethetechniqueofreductionreliesonhavingaproblemalreadyknownto benp completeinordertoproveadifferentproblemnp weneeda rst completeproblem theproblemweshalluseisthecircuit satis ability inwhichwearegivenabooleancombinationalcircuitcomposedofand andnotgates andwewishtoknowwhetherthereexistssomesetofboolean inputstothiscircuitthatcausesitsoutputtobe weshallprovethatthis rstproblemisnp completeinsection chapteroutlinethischapterstudiestheaspectsofnp completenessthatbearmostdirectlyontheanalysisofalgorithms insection weformalizeournotionof andde nethecomplexityclasspofpolynomial timesolvabledecisionproblems wealsoseehowthesenotions tintotheframeworkofformal languagetheory sec tion nestheclassnpofdecisionproblemswhosesolutionsareveri inpolynomialtime italsoformallyposesthep npquestion showswecanrelateproblemsviapolynomial reductions itde nesnp completenessandsketchesaproofthatoneproblem called circuitsatis ability isnp havingfoundonenp completeproblem weshowinsection howtoproveotherproblemstobenp completemuchmoresimplybythemethodologyofreductions weillustratethismethodologybyshowingthattwoformula satis abilityproblemsarenp withadditionalreductions weshowinsection avarietyofotherproblemstobenp polynomialtimewebeginourstudyofnp completenessbyformalizingournotionofpolynomial timesolvableproblems wegenerallyregardtheseproblemsastractable butfor philosophical notmathematical reasons wecanofferthreesupportingargu ments althoughwemayreasonablyregardaproblemthatrequirestime tobeintractable veryfewpracticalproblemsrequiretimeontheorderofsucha degreepolynomial thepolynomial timecomputableproblemsencountered inpracticetypicallyrequiremuchlesstime experiencehasshownthatoncethe rstpolynomial timealgorithmforaproblemhasbeendiscovered moreef cient algorithmsoftenfollow evenifthecurrentbestalgorithmforaproblemhasa runningtimeof analgorithmwithamuchbetterrunningtimewilllikelysoonbediscovered chapter completenesssecond formanyreasonablemodelsofcomputation aproblemthatcanbesolvedinpolynomialtimeinonemodelcanbesolvedinpolynomialtimeinan forexample theclassofproblemssolvableinpolynomialtimebytheserial random accessmachineusedthroughoutmostofthisbookisthesameastheclass ofproblemssolvableinpolynomialtimeonabstractturingmachines itisalsothesameastheclassofproblemssolvableinpolynomialtimeonaparallelcom puterwhenthenumberofprocessorsgrowspolynomiallywiththeinputsize theclassofpolynomial timesolvableproblemshasniceclosureproper ties sincepolynomialsareclosedunderaddition multiplication andcomposition forexample iftheoutputofonepolynomial timealgorithmisfedintotheinputof another thecompositealgorithmispolynomial asksyoutoshow thatifanalgorithmmakesaconstantnumberofcallstopolynomial timesubrou tinesandperformsanadditionalamountofworkthatalsotakespolynomialtime thentherunningtimeofthecompositealgorithmispolynomial abstractproblemstounderstandtheclassofpolynomial timesolvableproblems wemust rsthaveaformalnotionofwhata wede neanabstractproblemqtobeabinaryrelationonasetiofprobleminstancesandasetsofproblemsolutions forexample aninstanceforshortest pathisatripleconsistingofagraphandtwovertices asolutionisasequenceofverticesinthegraph withperhapstheemptysequencedenotingthatnopathexists theproblemshortest itselfistherelationthatassociateseachinstanceofagraphandtwoverticeswith ashortestpathinthegraphthatconnectsthetwovertices sinceshortestpathsare notnecessarilyunique agivenprobleminstancemayhavemorethanonesolution thisformulationofanabstractproblemismoregeneralthanweneedforourpurposes aswesawabove thetheoryofnp completenessrestrictsattentiontodecisionproblems thosehavingayes nosolution inthiscase wecanviewanabstractdecisionproblemasafunctionthatmapstheinstancesetitothesolutionsetf forexample adecisionproblemrelatedtoshortest pathistheproblempaththatwesawearlier ifidhg kiisaninstanceofthedecisionproblempath thenpath ifashortestpathfromutohasatmostkedges andpath otherwise manyabstractproblemsarenotdecisionproblems butratheroptimizationproblems whichrequiresomevaluetobeminimizedormaximized aswesawabove however wecanusuallyrecastan optimizationproblemasadecisionproblemthatisnoharder seehopcroftandullman orlewisandpapadimitriou forathoroughtreatmentoftheturing machinemodel polynomialtime encodingsinorderforacomputerprogramtosolveanabstractproblem wemustrepresentprobleminstancesinawaythattheprogramunderstands anencodingofasetsofabstractobjectsisamappingefromstothesetofbinarystrings forexample weareallfamiliarwithencodingthenaturalnumbersndf gasthestringsf usingthisencoding ifyouhavelookedatcomputerrepresentationsofkeyboardcharacters youprobablyhave seentheasciicode forexample theencodingofais wecanencodeacompoundobjectasabinarystringbycombiningtherepresentationsof itsconstituentparts polygons graphs functions orderedpairs programs allcan beencodedasbinarystrings acomputeralgorithmthat solves someabstractdecisionproblemactu allytakesanencodingofaprobleminstanceasinput wecallaproblemwhose instancesetisthesetofbinarystringsaconcreteproblem wesaythatanalgo rithmsolvesaconcreteproblemintimeo whenitisprovidedaprobleminstanceioflengthndjij thealgorithmcanproducethesolutionino aconcreteproblemispolynomial timesolvable therefore ifthereexistsanalgorithmtosolveitintimeo forsomeconstantk wecannowformallyde nethecomplexityclasspasthesetofconcretedeci sionproblemsthatarepolynomial timesolvable wecanuseencodingstomapabstractproblemstoconcreteproblems givenanabstractdecisionproblemqmappinganinstancesetitof anencodingewi gcaninducearelatedconcretedecisionproblem whichwedenotebye ifthesolutiontoanabstract probleminstancei iisq thenthesolutiontotheconcrete probleminstancee gisalsoq asatechnicality somebinarystringsmightrepresentnomeaningfulabstract instance forconvenience weshallassumethatanysuchstringmapsarbitrarily theconcreteproblemproducesthesamesolutionsastheabstractprob lemonbinary stringinstancesthatrepresenttheencodingsofabstract probleminstances wewouldliketoextendthede nitionofpolynomial timesolvabilityfromcon creteproblemstoabstractproblemsbyusingencodingsasthebridge butwewould thecodomainofeneednotbebinarystrings anysetofstringsovera nitealphabethavingatleast symbolswilldo weassumethatthealgorithm soutputisseparatefromitsinput becauseittakesatleastonetimesteptoproduceeachbitoftheoutputandthealgorithmtakeso timesteps thesizeoftheoutputiso wedenotebyf gthesetofallstringscomposedofsymbolsfromthesetf chapter completenesslikethede nitiontobeindependentofanyparticularencoding thatis theef ciencyofsolvingaproblemshouldnotdependonhowtheproblemisencoded unfortunately itdependsquiteheavilyontheencoding forexample supposethat anintegerkistobeprovidedasthesoleinputtoanalgorithm andsupposethattherunningtimeofthealgorithmis iftheintegerkisprovidedinunary astringofk thentherunningtimeofthealgorithmiso onlength ninputs whichispolynomialtime ifweusethemorenaturalbinaryrepresentationofthe integerk however thentheinputlengthisndblgkcc inthiscase therun ningtimeofthealgorithmis whichisexponentialinthesizeoftheinput dependingontheencoding thealgorithmrunsineitherpolynomial orsuperpolynomialtime howweencodeanabstractproblemmattersquiteabittohowweunderstandpolynomialtime wecannotreallytalkaboutsolvinganabstractproblemwithout rstspecifyinganencoding nevertheless inpractice ifweruleout expensive encodingssuchasunaryones theactualencodingofaproblemmakeslittledif ferencetowhethertheproblemcanbesolvedinpolynomialtime forexample representingintegersinbase insteadofbinaryhasnoeffectonwhetheraprob lemissolvableinpolynomialtime sincewecanconvertanintegerrepresentedinbase toanintegerrepresentedinbase inpolynomialtime wesaythatafunctionfwf gispolynomial timecomputableifthereexistsapolynomial timealgorithmathat givenanyinputx producesasoutputf forsomesetiofprobleminstances wesaythattwoen codingse ande arepolynomiallyrelatedifthereexisttwopolynomial timecom putablefunctionsf andf suchthatforanyi wehavef andf thatis apolynomial timealgorithmcancomputetheen codinge fromtheencodinge andviceversa iftwoencodingse ande ofanabstractproblemarepolynomiallyrelated whethertheproblemispolynomial timesolvableornotisindependentofwhichencodingweuse asthefollowing lemmashows lemma letqbeanabstractdecisionproblemonaninstanceseti andlete ande bepolynomiallyrelatedencodingsoni pifandonlyife technically wealsorequirethefunctionsf andf mapnoninstancestononinstances anoninstanceofanencodingeisastringx gsuchthatthereisnoinstanceiforwhiche werequirethatf dyforeverynoninstancexofencodinge whereyissomenon instanceofe andthatf foreverynoninstancex ofe wherey issomenoninstanceofe polynomialtime proofweneedonlyprovetheforwarddirection sincethebackwarddirectionissymmetric suppose therefore thate canbesolvedintimeo forsomeconstantk further supposethatforanyprobleminstancei theencodinge canbecomputedfromtheencodinge intimeo forsomeconstantc wherendje tosolveprobleme oninpute rstcomputee andthenrunthealgorithmfore howlongdoesthistake convertingencodingstakestimeo andthereforeje jdo sincetheoutputofaserialcomputercannotbelongerthanitsrunningtime solvingtheproblemone takestimeo nck whichispolynomialsincebothcandkareconstants whetheranabstractproblemhasitsinstancesencodedinbinaryorbase doesnotaffectits complexity thatis whetheritispolynomial timesolvableornot butifinstancesareencodedinunary itscomplexitymaychange inordertobeabletoconverseinanencoding independentfashion weshallgenerallyassume thatprobleminstancesareencodedinanyreasonable concisefashion unlesswe speci callysayotherwise tobeprecise weshallassumethattheencodingofan integerispolynomiallyrelatedtoitsbinaryrepresentation andthattheencodingof nitesetispolynomiallyrelatedtoitsencodingasalistofitselements enclosed inbracesandseparatedbycommas asciiisonesuchencodingscheme sucha standard encodinginhand wecanderivereasonableencodingsofother mathematicalobjects suchastuples graphs andformulas todenotethestandard encodingofanobject weshallenclosetheobjectinanglebraces hgidenotesthestandardencodingofagraphg aslongasweimplicitlyuseanencodingthatispolynomiallyrelatedtothisstandardencoding wecantalkdirectlyaboutabstractproblemswithoutreference toanyparticularencoding knowingthatthechoiceofencodinghasnoeffectonwhethertheabstractproblemispolynomial timesolvable henceforth weshallgenerallyassumethatallprobleminstancesarebinarystringsencodedusingthestandardencoding unlessweexplicitlyspecifythecontrary weshallalsotypicallyneglectthedistinctionbetweenabstractandconcreteproblems youshouldwatchoutforproblemsthatariseinpractice however inwhichastandardencodingisnotobviousandtheencodingdoesmakeadifference aformal languageframeworkbyfocusingondecisionproblems wecantakeadvantageofthemachineryofformal languagetheory sreviewsomede nitionsfromthattheory analphabet isa nitesetofsymbols alanguagelover isanysetofstringsmadeupofsymbolsfrom forexample thesetldf gisthelanguageofbinaryrepresen chapter completenesstationsofprimenumbers wedenotetheemptystringby theemptylanguageby andthelanguageofallstringsover forexample gisthesetofallbinarystrings everylanguagelover isasubsetof wecanperformavarietyofoperationsonlanguages theoreticoperations suchasunionandintersection followdirectlyfromtheset theoreticde nitions wede nethecomplementoflbyld theconcatenationl oftwolanguagesl andl isthelanguageldfx andx theclosureorkleenestarofalanguagelisthelanguageldf wherelkisthelanguageobtainedbyconcatenatingltoitselfktimes fromthepointofviewoflanguagetheory thesetofinstancesforanydecisionproblemqissimplytheset sinceqisentirelycharacter izedbythoseprobleminstancesthatproducea wecanviewqasalanguagelover whereldfx forexample thedecisionproblempathhasthecorrespondinglanguagepathdfhg kiwgd isanundirectedgraph isaninteger andthereexistsapathfromutoingconsistingofatmostkedgesg whereconvenient weshallsometimesusethesamename pathinthiscase torefertobothadecisionproblemanditscorrespondinglanguage theformal languageframeworkallowsustoexpressconciselytherelationbe tweendecisionproblemsandalgorithmsthatsolvethem wesaythatanal gorithmaacceptsastringx gif giveninputx thealgorithm sout puta thelanguageacceptedbyanalgorithmaisthesetofstringsldfx gwa thatis thesetofstringsthatthealgorithmaccepts analgorithmarejectsastringxifa eveniflanguagelisacceptedbyanalgorithma thealgorithmwillnotneces sarilyrejectastringx lprovidedasinputtoit forexample thealgorithmmayloopforever alanguagelisdecidedbyanalgorithmaifeverybinarystringinlisacceptedbyaandeverybinarystringnotinlisrejectedbya alan guagelisacceptedinpolynomialtimebyanalgorithmaifitisacceptedbyaandifinadditionthereexistsaconstantksuchthatforanylength nstringx polynomialtime algorithmaacceptsxintimeo alanguagelisdecidedinpolynomialtimebyanalgorithmaifthereexistsaconstantksuchthatforanylength nstringx thealgorithmcorrectlydecideswhetherx lintimeo toacceptalanguage analgorithmneedonlyproduceananswerwhenprovideda stringinl buttodecidealanguage itmustcorrectlyacceptorrejecteverystringinf asanexample thelanguagepathcanbeacceptedinpolynomialtime onepolynomial timeacceptingalgorithmveri esthatgencodesanundirectedgraph veri esthatuandareverticesing usesbreadth rstsearchtocomputeashort estpathfromutoing andthencomparesthenumberofedgesontheshortestpathobtainedwithk ifgencodesanundirectedgraphandthepathfoundfromutohasatmostkedges thealgorithmoutputs andhalts otherwise thealgo rithmrunsforever thisalgorithmdoesnotdecidepath however sinceitdoes notexplicitlyoutput forinstancesinwhichashortestpathhasmorethankedges adecisionalgorithmforpathmustexplicitlyrejectbinarystringsthatdonotbe longtopath foradecisionproblemsuchaspath suchadecisionalgorithmiseasytodesign insteadofrunningforeverwhenthereisnotapathfromutowithatmostkedges itoutputs andhalts itmustalsooutput andhaltiftheinputencodingisfaulty forotherproblems suchasturing shaltingproblem existsanacceptingalgorithm butnodecisionalgorithmexists wecaninformallyde neacomplexityclassasasetoflanguages membershipinwhichisdeterminedbyacomplexitymeasure suchasrunningtime ofanalgorithmthatdetermineswhetheragivenstringxbelongstolanguagel theactualde nitionofacomplexityclassissomewhatmoretechnical usingthislanguage theoreticframework wecanprovideanalternativede tionofthecomplexityclassp pdflf gwthereexistsanalgorithmathatdecideslinpolynomialtimeg infact pisalsotheclassoflanguagesthatcanbeacceptedinpolynomialtime theorem pdflwlisacceptedbyapolynomial timealgorithmg proofbecausetheclassoflanguagesdecidedbypolynomial timealgorithmsisasubsetoftheclassoflanguagesacceptedbypolynomial timealgorithms needonlyshowthatiflisacceptedbyapolynomial timealgorithm itisde cidedbyapolynomial timealgorithm letlbethelanguageacceptedbysome formoreoncomplexityclasses seetheseminalpaperbyhartmanisandstearns chapter completenesspolynomial timealgorithma weshalluseaclassic simulation argumenttoconstructanotherpolynomial timealgorithma thatdecidesl becauseaac ceptslintimeo forsomeconstantk therealsoexistsaconstantcsuchthataacceptslinatmostcnksteps foranyinputstringx thealgorithma simulatescnkstepsofa aftersimulatingcnksteps algorithma inspectsthebe haviorofa ifahasacceptedx thena acceptsxbyoutputtinga ifahasnotacceptedx thena rejectsxbyoutputtinga theoverheadofa simulatingadoesnotincreasetherunningtimebymorethanapolynomialfactor andthusa isapolynomial timealgorithmthatdecidesl notethattheproofoftheorem isnonconstructive foragivenlanguagel wemaynotactuallyknowaboundontherunningtimeforthealgorithmathatacceptsl nevertheless weknowthatsuchaboundexists andtherefore thatanalgorithma existsthatcancheckthebound eventhoughwemaynotbeableto ndthealgorithma easily exercises netheoptimizationproblemlongest lengthastherelationthatassociateseachinstanceofanundirectedgraphandtwoverticeswiththenum berofedgesinalongestsimplepathbetweenthetwovertices nethede cisionproblemlongest pathdfhg kiwgd isanundi rectedgraph isaninteger andthereexistsasimplepathfromutoingconsistingofatleastkedgesg showthattheoptimizationprob lemlongest lengthcanbesolvedinpolynomialtimeifandonlyiflongest giveaformalde nitionfortheproblemof ndingthelongestsimplecycleinanundirectedgraph givearelateddecisionproblem givethelanguagecorrespond ingtothedecisionproblem giveaformalencodingofdirectedgraphsasbinarystringsusinganadjacency matrixrepresentation dothesameusinganadjacency listrepresentation argue thatthetworepresentationsarepolynomiallyrelated isthedynamic programmingalgorithmforthe knapsackproblemthatisaskedforinexercise apolynomial timealgorithm explainyouranswer polynomial timeveri cation showthatifanalgorithmmakesatmostaconstantnumberofcallstopolynomial timesubroutinesandperformsanadditionalamountofworkthatalsotakespolyno mialtime thenitrunsinpolynomialtime alsoshowthatapolynomialnumberof callstopolynomial timesubroutinesmayresultinanexponential timealgorithm showthattheclassp viewedasasetoflanguages isclosedunderunion inter concatenation complement andkleenestar thatis ifl thenl andl polynomial timeveri cationwenowlookatalgorithmsthatverifymembershipinlanguages forexample supposethatforagiveninstancehg kiofthedecisionproblempath wearealsogivenapathpfromuto wecaneasilycheckwhetherpisapathingandwhetherthelengthofpisatmostk andifso wecanviewpasa certi cate thattheinstanceindeedbelongstopath forthedecisionproblempath thiscerti catedoesn tseemtobuyusmuch afterall pathbelongstop infact wecansolvepathinlineartime andsoverifyingmembershipfromagiven certi catetakesaslongassolvingtheproblemfromscratch weshallnowexamine aproblemforwhichweknowofnopolynomial timedecisionalgorithmandyet givenacerti cate veri cationiseasy hamiltoniancyclestheproblemof ndingahamiltoniancycleinanundirectedgraphhasbeenstud iedforoverahundredyears formally ahamiltoniancycleofanundirectedgraphgd isasimplecyclethatcontainseachvertexinv agraphthatcon tainsahamiltoniancycleissaidtobehamiltonian otherwise itisnonhamilto nian thenamehonorsw hamilton whodescribedamathematicalgameonthedodecahedron inwhichoneplayersticks vepinsinany consecutiveverticesandtheotherplayermustcompletethepathtoformacycle chapter completeness agraphrepresentingthevertices edges andfacesofadodecahedron withahamiltoniancycleshownbyshadededges abipartitegraphwithanoddnumberofvertices anysuchgraphisnonhamiltonian containingallthevertices thedodecahedronishamiltonian andfigure showsonehamiltoniancycle notallgraphsarehamiltonian however forex ample showsabipartitegraphwithanoddnumberofvertices asksyoutoshowthatallsuchgraphsarenonhamiltonian wecande nethehamiltonian cycleproblem doesagraphghaveahamil toniancycle asaformallanguage ham cycledfhgiwgisahamiltoniangraphg howmightanalgorithmdecidethelanguageham cycle givenaprobleminstancehgi onepossibledecisionalgorithmlistsallpermutationsoftheverticesofgandthencheckseachpermutationtoseeifitisahamiltonianpath whatistherunningtimeofthisalgorithm ifweusethe reasonable encodingofagraph asitsadjacencymatrix thenumbermofverticesinthegraphispn wherendjhgijisthelengthoftheencodingofg therearem possiblepermutations inaletterdated october tohisfriendjohnt graves hamilton ihavefoundthatsomeyoungpersonshavebeenmuchamusedbytryinganewmathematicalgamewhichtheicosionfurnishes onepersonsticking vepinsinany veconsecutivepoints andtheotherplayerthenaimingtoinsert whichbythetheoryinthislettercanalwaysbedone fteenotherpins incyclicalsuccession soastocoveralltheotherpoints andtoendinimmediateproximitytothepinwherewithhisantagonisthadbegun polynomial timeveri cation ofthevertices andthereforetherunningtimeism dpn whichisnoto foranyconstantk thisnaivealgorithmdoesnotruninpolynomialtime infact thehamiltonian cycleproblemisnp aswe shallproveinsection veri cationalgorithmsconsideraslightlyeasierproblem supposethatafriendtellsyouthatagivengraphgishamiltonian andthenofferstoproveitbygivingyoutheverticesinorderalongthehamiltoniancycle itwouldcertainlybeeasyenoughtoverifythe proof simplyverifythattheprovidedcycleishamiltonianbycheckingwhether itisapermutationoftheverticesofvandwhethereachoftheconsecutiveedgesalongthecycleactuallyexistsinthegraph youcouldcertainlyimplementthis veri cationalgorithmtorunino wherenisthelengthoftheencodingofg aproofthatahamiltoniancycleexistsinagraphcanbeveri edinpolynomialtime wede neaveri cationalgorithmasbeingatwo argumentalgorithma whereoneargumentisanordinaryinputstringxandtheotherisabinarystringycalledacerti cate atwo argumentalgorithmaveri esaninputstringxifthereexistsacerti cateysuchthata thelanguageveri edbyaveri cationalgorithmaisldfx gwthereexistsy gsuchthata intuitively analgorithmaveri esalanguagelifforanystringx thereexistsacerti cateythatacanusetoprovethatx moreover foranystringx theremustbenocerti cateprovingthatx forexample inthehamiltonian cycleproblem thecerti cateisthelistofverticesinsomehamilto niancycle ifagraphishamiltonian thehamiltoniancycleitselfoffersenough informationtoverifythisfact conversely ifagraphisnothamiltonian canbenolistofverticesthatfoolstheveri cationalgorithmintobelievingthatthe graphishamiltonian sincetheveri cationalgorithmcarefullycheckstheproposed cycle tobesure chapter completenessthecomplexityclassnpthecomplexityclassnpistheclassoflanguagesthatcanbeveri edbyapoly nomial timealgorithm moreprecisely alanguagelbelongstonpifandonlyifthereexistatwo inputpolynomial timealgorithmaandaconstantcsuchthatldfx gwthereexistsacerti cateywithjyjdo jxjc suchthata wesaythatalgorithmaveri eslanguagelinpolynomialtime fromourearlierdiscussiononthehamiltonian cycleproblem wenowseethatham cycle itisalwaysnicetoknowthatanimportantsetisnonempty moreover ifl thenl sinceifthereisapolynomial timealgorithmtodecidel thealgorithmcanbeeasilyconvertedtoatwo argumentveri cationalgorithmthatsimplyignoresanycerti cateandacceptsexactlythoseinputstrings itdeterminestobeinl pnp itisunknownwhetherpdnp butmostresearchersbelievethatpandnparenotthesameclass intuitively theclasspconsistsofproblemsthatcanbesolved quickly theclassnpconsistsofproblemsforwhichasolutioncanbeveri quickly youmayhavelearnedfromexperiencethatitisoftenmoredif cultto solveaproblemfromscratchthantoverifyaclearlypresentedsolution whenworkingundertimeconstraints theoreticalcomputerscientistsgenerally believethatthisanalogyextendstotheclassespandnp andthusthatnpincludes languagesthatarenotinp thereismorecompelling thoughnotconclusive evidencethatp theexistenceoflanguagesthatare weshallstudythisclassinsec tion manyotherfundamentalquestionsbeyondthep npquestionremainunre solved showssomepossiblescenarios despitemuchworkbymany researchers nooneevenknowswhethertheclassnpisclosedundercomple ment thatis doesl npimplyl wecande nethecomplexityclassco npasthesetoflanguageslsuchthatl wecanrestatethequestionofwhethernpisclosedundercomplementaswhethernpdco sincepisclosedundercomplement itfollowsfromexercise pnp onceagain however nooneknowswhetherpdnp nporwhetherthereissomelanguageinnp npp thename standsfor nondeterministicpolynomialtime theclassnpwasoriginallystudiedinthecontextofnondeterminism butthisbookusesthesomewhatsimpleryetequivalentnotionofveri cation hopcroftandullman giveagoodpresentationofnp completenessintermsofnondeterministicmodelsofcomputation polynomial timeveri cation npnp npco npnp pnp npfigure fourpossibilitiesforrelationshipsamongcomplexityclasses ineachdiagram oneregionenclosinganotherindicatesaproper subsetrelation pdnpdco mostresearchersregardthispossibilityasthemostunlikely ifnpisclosedundercomplement thennpdco butitneednotbethecasethatpdnp pdnp butnpisnotclosedundercomplement npandp mostresearchersregardthispossibilityasthemostlikely ourunderstandingofthepreciserelationshipbetweenpandnpiswoe fullyincomplete nevertheless eventhoughwemightnotbeabletoprovethata particularproblemisintractable ifwecanprovethatitisnp thenwe havegainedvaluableinformationaboutit exercises considerthelanguagegraph isomorphismdfhg iwg andg areisomorphicgraphsg provethatgraph isomorphism npbydescribingapolynomial timealgorithmtoverifythelanguage provethatifgisanundirectedbipartitegraphwithanoddnumberofvertices thengisnonhamiltonian showthatifham cycle thentheproblemoflistingtheverticesofahamiltoniancycle inorder ispolynomial timesolvable chapter completeness provethattheclassnpoflanguagesisclosedunderunion intersection concate andkleenestar discusstheclosureofnpundercomplement showthatanylanguageinnpcanbedecidedbyanalgorithmrunningintime forsomeconstantk ahamiltonianpathinagraphisasimplepaththatvisitseveryvertexexactlyonce showthatthelanguageham pathdfhg iwthereisahamiltonianpathfromutoingraphggbelongstonp showthatthehamiltonian pathproblemfromexercise canbesolvedin polynomialtimeondirectedacyclicgraphs giveanef cientalgorithmforthe letbeabooleanformulaconstructedfromthebooleaninputvariablesx negations ands ors andparentheses theformulaisatautologyifitevaluatesto foreveryassignmentof totheinputvariables netautologyasthelanguageofbooleanformulasthataretautologies showthattautology provethatpco provethatifnp thenp letgbeaconnected undirectedgraphwithatleast vertices andletg bethegraphobtainedbyconnectingallpairsofverticesthatareconnectedbyapathingoflengthatmost provethatg ishamiltonian hint constructaspanningtreeforg anduseaninductiveargument completenessandreducibility completenessandreducibilityperhapsthemostcompellingreasonwhytheoreticalcomputerscientistsbelievethatp npcomesfromtheexistenceoftheclassof problems thisclasshastheintriguingpropertythatifanynp completeproblemcanbesolvedinpolynomialtime theneveryprobleminnphasapolynomial timesolu tion thatis pdnp despiteyearsofstudy nopolynomial timealgorithmhaseverbeendiscoveredforanynp completeproblem thelanguageham cycleisonenp completeproblem ifwecoulddecideham cycleinpolynomialtime thenwecouldsolveeveryprobleminnpin polynomialtime infact ifnppshouldturnouttobenonempty wecouldsaywithcertaintythatham cycle npp thenp completelanguagesare inasense hardest languagesinnp inthissection weshallshowhowtocomparetherelative hardness oflanguages usingaprecisenotioncalled polynomial timereducibility thenweformally nethenp completelanguages andwe nishbysketchingaproofthatone suchlanguage calledcircuit isnp insections weshallusethenotionofreducibilitytoshowthatmanyotherproblemsarenp reducibilityintuitively aproblemqcanbereducedtoanotherproblemq ifanyinstanceofqcanbe easilyrephrased asaninstanceofq thesolutiontowhichprovidesasolutiontotheinstanceofq forexample theproblemofsolvinglinearequationsinanindeterminatexreducestotheproblemofsolvingquadraticequations givenaninstanceaxcbd wetransformitto caxcbd whosesolutionprovidesasolutiontoaxcbd ifaproblemqreducestoanotherproblemq thenqis inasense nohardertosolve thanq returningtoourformal languageframeworkfordecisionproblems wesaythatalanguagel ispolynomial timereducibletoalanguagel writtenl ifthereexistsapolynomial timecomputablefunctionfwf gsuchthatforallx ifandonlyiff wecallthefunctionfthereductionfunction andapolynomial timealgorithmfthatcomputesfisareductionalgorithm illustratestheideaofapolynomial timereductionfromalan guagel toanotherlanguagel eachlanguageisasubsetoff thereductionfunctionfprovidesapolynomial timemappingsuchthatifx chapter completenessl ffigure anillustrationofapolynomial timereductionfromalanguagel toalanguagel viaareductionfunctionf foranyinputx thequestionofwhetherx hasthesameanswerasthequestionofwhetherf thenf moreover ifx thenf thereductionfunc tionmapsanyinstancexofthedecisionproblemrepresentedbythelanguagel toaninstancef oftheproblemrepresentedbyl providingananswertowhetherf directlyprovidestheanswertowhetherx polynomial timereductionsgiveusapowerfultoolforprovingthatvariouslan guagesbelongtop lemma ifl garelanguagessuchthatl thenl pimpliesl proofleta beapolynomial timealgorithmthatdecidesl andletfbeapolynomial timereductionalgorithmthatcomputesthereductionfunctionf weshallconstructapolynomial timealgorithma thatdecidesl illustrateshowweconstructa foragiveninputx algorithma usesftotransformxintof andthenitusesa totestwhetherf algorithma takestheoutputfromalgorithma andproducesthatanswerasitsownoutput thecorrectnessofa followsfromcondition thealgorithmrunsinpoly nomialtime sincebothfanda runinpolynomialtime seeexercise completenesspolynomial timereductionsprovideaformalmeansforshowingthatoneprob lemisatleastashardasanother towithinapolynomial timefactor thatis thenl isnotmorethanapolynomialfactorharderthanl whichis completenessandreducibility xff theproofoflemma thealgorithmfisareductionalgorithmthatcomputesthereductionfunctionffroml tol inpolynomialtime anda isapolynomial timealgorithmthatdecidesl algorithma decideswhetherx byusingftotransformanyinputxintof andthenusinga todecidewhetherf whythe lessthanorequalto notationforreductionismnemonic wecannowde nethesetofnp completelanguages whicharethehardestproblemsinnp alanguagelf gisnp completeif plforeveryl ifalanguagelsatis esproperty butnotnecessarilyproperty wesaythatlisnp wealsode nenpctobetheclassofnp completelanguages asthefollowingtheoremshows completenessisatthecruxofdecidingwhetherpisinfactequaltonp theorem ifanynp completeproblemispolynomial timesolvable thenpdnp equiva lently ifanyprobleminnpisnotpolynomial timesolvable thennonp completeproblemispolynomial timesolvable proofsupposethatl pandalsothatl npc foranyl wehavel plbyproperty ofthede nitionofnp completeness bylemma wealsohavethatl whichprovesthe rststatementofthetheorem toprovethesecondstatement notethatitisthecontrapositiveofthe rststate ment itisforthisreasonthatresearchintothep npquestioncentersaroundthenp completeproblems mosttheoreticalcomputerscientistsbelievethatp whichleadstotherelationshipsamongp andnpcshowninfigure forallweknow someonemayyetcomeupwithapolynomial timealgo rithmforannp completeproblem thusprovingthatpdnp nevertheless sincenopolynomial timealgorithmforanynp completeproblemhasyetbeendiscov chapter completenessnpcpnpfigure howmosttheoreticalcomputerscientistsviewtherelationshipsamongp andnpc bothpandnpcarewhollycontainedwithinnp andp npcd ered aproofthataproblemisnp completeprovidesexcellentevidencethatitisintractable circuitsatis abilitywehavede nedthenotionofannp completeproblem butuptothispoint wehavenotactuallyprovedthatanyproblemisnp onceweprovethatat leastoneproblemisnp wecanusepolynomial timereducibilityasa tooltoproveotherproblemstobenp wenowfocusondemon stratingtheexistenceofannp completeproblem thecircuit satis abilityprob lem unfortunately theformalproofthatthecircuit satis abilityproblemisnp completerequirestechnicaldetailbeyondthescopeofthistext instead weshall informallydescribeaproofthatreliesonabasicunderstandingofbooleancombi nationalcircuits booleancombinationalcircuitsarebuiltfrombooleancombinationalelementsthatareinterconnectedbywires abooleancombinationalelementisanycircuitelementthathasaconstantnumberofbooleaninputsandoutputsandthatperforms awell nedfunction booleanvaluesaredrawnfromthesetf representsfalseand representstrue thebooleancombinationalelementsthatweuseinthecircuit satis abilityprob lemcomputesimplebooleanfunctions andtheyareknownaslogicgates ure showsthethreebasiclogicgatesthatweuseinthecircuit satis ability thenotgate orinverter theandgate andtheorgate thenotgatetakesasinglebinaryinputx whosevalueiseither andproducesabinaryoutput whosevalueisoppositethatoftheinputvalue eachoftheothertwogatestakestwobinaryinputsxandyandproducesasinglebinaryoutput wecandescribetheoperationofeachgate andofanybooleancombinationalelement byatruthtable shownundereachgateinfigure atruthtablegivestheoutputsofthecombinationalelementforeachpossiblesettingoftheinputs completenessandreducibility xyzxyz xxxyy yfigure threebasiclogicgates withbinaryinputsandoutputs undereachgateisthetruthtablethatdescribesthegate soperation thenotgate theandgate theorgate thetruthtablefortheorgatetellsusthatwhentheinputsarexd andyd theoutputvalueis weusethesymbols todenotethenotfunction todenotetheandfunction todenotetheorfunction forexample wecangeneralizeandandorgatestotakemorethantwoinputs anandgate soutputis ifallofitsinputsare anditsoutputis otherwise anorgate soutputis ifanyofitsinputsare anditsoutputis otherwise abooleancombinationalcircuitconsistsofoneormorebooleancombinationalelementsinterconnectedbywires awirecanconnecttheoutputofoneelementtotheinputofanother therebyprovidingtheoutputvalueofthe rstelementasan inputvalueofthesecond showstwosimilarbooleancombinational circuits differinginonlyonegate ofthe gurealsoshowsthevalueson theindividualwires giventheinputhx althoughasinglewiremayhavenomorethanonecombinational elementoutputconnectedtoit itcanfeedseveralelementinputs thenumberofelementinputsfedbyawireiscalledthefan outofthewire ifnoelementoutputisconnectedtoawire thewireisacircuitinput acceptinginputvaluesfromanexternalsource ifnoelementinputisconnectedtoawire thewireisacircuitoutput providingtheresultsofthecircuit scomputationtotheoutsideworld aninternalwirecanalsofanouttoacircuitoutput forthepurposeofde ningthecircuit satis abilityproblem welimitthenumberofcircuitoutputsto thoughinactualhardwaredesign abooleancombinationalcircuitmayhavemultipleoutputs booleancombinationalcircuitscontainnocycles inotherwords supposewecreateadirectedgraphgd withonevertexforeachcombinationalelementandwithkdirectededgesforeachwirewhosefan outisk thegraphcontainsadirectededge ifawireconnectstheoutputofelementutoaninputofelement thengmustbeacyclic chapter completenessx twoinstancesofthecircuit satis abilityproblem theassignmenthx itotheinputsofthiscircuitcausestheoutputofthecircuittobe thecircuitisthereforesatis noassignmenttotheinputsofthiscircuitcancausetheoutputofthecircuittobe thecircuitisthereforeunsatis atruthassignmentforabooleancombinationalcircuitisasetofbooleaninputvalues wesaythataone outputbooleancombinationalcircuitissatis ableifithasasatisfyingassignment atruthassignmentthatcausestheoutputofthecircuittobe forexample thecircuitinfigure hasthesatisfyingassignmenthx andsoitissatis asexercise asksyoutoshow noassignmentofvaluestox andx causesthecircuitinfigure toproducea output italwaysproduces andsoitisunsatis thecircuit satis abilityproblemis givenabooleancombinationalcircuitcomposedofand andnotgates isitsatis inordertoposethisquestionformally however wemustagreeonastandardencodingforcircuits thesizeofabooleancombinationalcircuitisthenumberofbooleancombina tionalelementsplusthenumberofwiresinthecircuit wecoulddeviseagraphlikeencodingthatmapsanygivencircuitcintoabinarystringhciwhoselengthispolynomialinthesizeofthecircuititself asaformallanguage wecanthereforede necircuit satdfhciwcisasatis ablebooleancombinationalcircuitg thecircuit satis abilityproblemarisesintheareaofcomputer aidedhardwareoptimization ifasubcircuitalwaysproduces thatsubcircuitisunnecessary thedesignercanreplaceitbyasimplersubcircuitthatomitsalllogicgatesand providestheconstant valueasitsoutput youcanseewhywewouldliketohaveapolynomial timealgorithmforthisproblem givenacircuitc wemightattempttodeterminewhetheritissatis ablebysimplycheckingallpossibleassignmentstotheinputs unfortunately ifthecircuit haskinputs thenwewouldhavetocheckupto kpossibleassignments completenessandreducibility thesizeofcispolynomialink checkingeachonetakes whichissuperpolynomialinthesizeofthecircuit infact aswehaveclaimed thereisstrongevidencethatnopolynomial timealgorithmexiststhatsolvesthecircuit satis abilityproblembecausecircuitsatis abilityisnp webreakthe proofofthisfactintotwoparts basedonthetwopartsofthede nitionofnp completeness lemma thecircuit satis abilityproblembelongstotheclassnp proofweshallprovideatwo input polynomial timealgorithmathatcanverifycircuit oneoftheinputstoais astandardencodingof abooleancom binationalcircuitc theotherinputisacerti catecorrespondingtoanassignmentofbooleanvaluestothewiresinc seeexercise forasmallercerti cate weconstructthealgorithmaasfollows foreachlogicgateinthecircuit itchecksthatthevalueprovidedbythecerti cateontheoutputwireiscorrectly computedasafunctionofthevaluesontheinputwires iftheoutputofthe entirecircuitis thealgorithmoutputs sincethevaluesassignedtotheinputsofcprovideasatisfyingassignment otherwise aoutputs wheneverasatis ablecircuitcisinputtoalgorithma thereexistsacerti catewhoselengthispolynomialinthesizeofcandthatcausesatooutputa everanunsatis ablecircuitisinput nocerti catecanfoolaintobelievingthatthecircuitissatis algorithmarunsinpolynomialtime withagoodimple mentation lineartimesuf ces wecanverifycircuit satinpolynomialtime andcircuit thesecondpartofprovingthatcircuit satisnp completeistoshowthatthelanguageisnp thatis wemustshowthateverylanguageinnpis polynomial timereducibletocircuit theactualproofofthisfactisfull oftechnicalintricacies andsoweshallsettleforasketchoftheproofbasedon someunderstandingoftheworkingsofcomputerhardware acomputerprogramisstoredinthecomputermemoryasasequenceofin structions atypicalinstructionencodesanoperationtobeperformed addressesofoperandsinmemory andanaddresswheretheresultistobestored aspe cialmemorylocation calledtheprogramcounter keepstrackofwhichinstruc ontheotherhand ifthesizeofthecircuitcis thenanalgorithmwhoserunningtimeiso hasarunningtimethatispolynomialinthecircuitsize evenifp thissitua tionwouldnotcontradictthenp completenessoftheproblem theexistenceofapolynomial timealgorithmforaspecialcasedoesnotimplythatthereisapolynomial timealgorithmforallcases chapter completenesstionistobeexecutednext theprogramcounterautomaticallyincrementsuponfetchingeachinstruction therebycausingthecomputertoexecuteinstructionsse quentially theexecutionofaninstructioncancauseavaluetobewrittentothe programcounter however whichaltersthenormalsequentialexecutionandallows thecomputertoloopandperformconditionalbranches atanypointduringtheexecutionofaprogram thecomputer smemoryholdstheentirestateofthecomputation wetakethememorytoincludetheprogram itself theprogramcounter workingstorage andanyofthevariousbitsofstatethatacomputermaintainsforbookkeeping wecallanyparticularstateofcom putermemoryacon guration wecanviewtheexecutionofaninstructionasmappingonecon gurationtoanother thecomputerhardwarethataccomplishes thismappingcanbeimplementedasabooleancombinationalcircuit whichwe denotebymintheproofofthefollowinglemma lemma thecircuit satis abilityproblemisnp proofletlbeanylanguageinnp weshalldescribeapolynomial timealgo rithmfcomputingareductionfunctionfthatmapseverybinarystringxtoacircuitcdf suchthatx lifandonlyifc circuit sincel theremustexistanalgorithmathatveri eslinpolynomialtime thealgorithmfthatweshallconstructusesthetwo inputalgorithmatocomputethereductionfunctionf lett denotetheworst caserunningtimeofalgorithmaonlength ninputstrings andletk beaconstantsuchthatt andthelengthofthecerti cateiso therunningtimeofaisactuallyapolynomialinthetotalinputsize whichincludesbothaninputstringandacerti cate butsincethelengthofthecerti cateispolynomialinthelengthnoftheinputstring therunningtimeispolynomialinn thebasicideaoftheproofistorepresentthecomputationofaasasequenceofcon gurations asfigure illustrates wecanbreakeachcon gurationinto partsconsistingoftheprogramfora theprogramcounterandauxiliarymachinestate theinputx thecerti catey andworkingstorage thecombinationalcir cuitm whichimplementsthecomputerhardware mapseachcon gurationcitothenextcon gurationcic startingfromtheinitialcon gurationc algorithmawritesitsoutput tosomedesignatedlocationbythetimeit nishesex ecuting andifweassumethatthereafterahalts thevalueneverchanges ifthealgorithmrunsforatmostt steps theoutputappearsasoneofthebitsinct thereductionalgorithmfconstructsasinglecombinationalcircuitthatcom putesallcon gurationsproducedbyagiveninitialcon guration theideaisto completenessandreducibility mapcaux statexyworking storageapcaux statexyworking storagemapcaux statexyworking storagemapcaux statexy working storage outputmc thesequenceofcon gurationsproducedbyanalgorithmarunningonaninputxandcerti catey eachcon gurationrepresentsthestateofthecomputerforonestepofthecomputationand besidesa andy includestheprogramcounter auxiliarymachinestate andworkingstorage exceptforthecerti catey theinitialcon gurationc isconstant abooleancombinationalcircuitmmapseachcon gurationtothenextcon guration theoutputisadistinguishedbitintheworkingstorage chapter completenesspastetogethert copiesofthecircuitm theoutputoftheithcircuit whichproducescon gurationci feedsdirectlyintotheinputofthe stcircuit thecon gurations ratherthanbeingstoredinthecomputer smemory simplyre sideasvaluesonthewiresconnectingcopiesofm recallwhatthepolynomial timereductionalgorithmfmustdo givenanin putx itmustcomputeacircuitcdf thatissatis ableifandonlyifthereexistsacerti cateysuchthata whenfobtainsaninputx rstcomputesndjxjandconstructsacombinationalcircuitc consistingoft copiesofm theinputtoc isaninitialcon gurationcorrespondingtoacompu tationona andtheoutputisthecon gurationct algorithmfmodi escircuitc slightlytoconstructthecircuitcdf itwirestheinputstoc correspondingtotheprogramfora theinitialpro gramcounter theinputx andtheinitialstateofmemorydirectlytotheseknownvalues theonlyremaininginputstothecircuitcorrespondtothecerti catey itignoresalloutputsfromc exceptfortheonebitofct correspondingtotheoutputofa thiscircuitc soconstructed computesc foranyinputyoflengtho thereductionalgorithmf whenprovidedaninputstringx computessuchacircuitcandoutputsit weneedtoprovetwoproperties wemustshowthatfcorrectlycomputesareductionfunctionf thatis wemustshowthatcissatis ableifandonlyifthereexistsacerti cateysuchthata wemustshowthatfrunsinpolynomialtime toshowthatfcorrectlycomputesareductionfunction letussupposethatthereexistsacerti cateyoflengtho suchthata ifweapplythebitsofytotheinputsofc theoutputofcisc ifacerti cateexists thencissatis fortheotherdirection supposethatcissatis hence thereexistsaninputytocsuchthatc fromwhichweconcludethata fcorrectlycomputesareductionfunction tocompletetheproofsketch weneedonlyshowthatfrunsintimepolynomialinndjxj rstobservationwemakeisthatthenumberofbitsrequiredtorepresentacon gurationispolynomialinn theprogramforaitselfhasconstantsize independentofthelengthofitsinputx thelengthoftheinputxisn andthelengthofthecerti cateyiso sincethealgorithmrunsforatmosto steps theamountofworkingstoragerequiredbyaispolynomialinnaswell weassumethatthismemoryiscontiguous asksyoutoextend theargumenttothesituationinwhichthelocationsaccessedbyaarescatteredacrossamuchlargerregionofmemoryandtheparticularpatternofscatteringcandifferforeachinputx thecombinationalcircuitmimplementingthecomputerhardwarehassizepolynomialinthelengthofacon guration whichiso hence thesizeofmispolynomialinn mostofthiscircuitryimplementsthelogicofthememory completenessandreducibility thecircuitcconsistsofatmosttdo copiesofm andhenceithassizepolynomialinn thereductionalgorithmfcanconstructcfromxinpolynomialtime sinceeachstepoftheconstructiontakespolynomialtime thelanguagecircuit satisthereforeatleastashardasanylanguageinnp andsinceitbelongstonp itisnp theorem thecircuit satis abilityproblemisnp proofimmediatefromlemmas andfromthede nitionofnp completeness exercises verifythatthecircuitinfigure isunsatis showthattheprelationisatransitiverelationonlanguages thatis showthatifl andl thenl provethatlplifandonlyiflpl showthatwecouldhaveusedasatisfyingassignmentasacerti cateinanalter nativeproofoflemma whichcerti catemakesforaneasierproof theproofoflemma assumesthattheworkingstorageforalgorithmaoccu piesacontiguousregionofpolynomialsize whereintheproofdoweexploitthis assumption arguethatthisassumptiondoesnotinvolveanylossofgenerality alanguageliscompleteforalanguageclasscwithrespecttopolynomial timereductionsifl candl plforalll showthat andf garetheonlylanguagesinpthatarenotcompleteforpwithrespecttopolynomial reductions chapter completeness showthat withrespecttopolynomial timereductions seeexercise liscompletefornpifandonlyifliscompleteforco thereductionalgorithmfintheproofoflemma constructsthecircuitcdf basedonknowledgeofx andk professorsartreobservesthatthestringxisinputtof butonlytheexistenceofa andtheconstantfactorimplicitintheo runningtimeisknowntof sincethelanguagelbelongstonp nottheiractualvalues theprofessorconcludesthatfcan tpossi blyconstructthecircuitcandthatthelanguagecircuit satisnotnecessarilynp explainthe awintheprofessor sreasoning completenessproofsweprovedthatthecircuit satis abilityproblemisnp completebyadirectproof thatlpcircuit satforeverylanguagel inthissection weshallshowhowtoprovethatlanguagesarenp completewithoutdirectlyreducingeverylanguageinnptothegivenlanguage weshallillustratethismethodologyby provingthatvariousformula satis abilityproblemsarenp providesmanymoreexamplesofthemethodology thefollowinglemmaisthebasisofourmethodforshowingthatalanguageisnp lemma iflisalanguagesuchthatl plforsomel npc thenlisnp inaddition thenl npc proofsincel isnp foralll wehavel bysup andthusbytransitivity wehavel whichshowsthatlisnp ifl wealsohavel npc inotherwords byreducingaknownnp completelanguagel tol weimplic itlyreduceeverylanguageinnptol lemma givesusamethodforprovingthatalanguagelisnp provel selectaknownnp completelanguagel completenessproofs describeanalgorithmthatcomputesafunctionfmappingeveryinstancex gofl toaninstancef ofl provethatthefunctionfsatis esx ifandonlyiff lforallx provethatthealgorithmcomputingfrunsinpolynomialtime steps showthatlisnp thismethodologyofreducingfromasin gleknownnp completelanguageisfarsimplerthanthemorecomplicatedpro cessofshowingdirectlyhowtoreducefromeverylanguageinnp proving circuit npchasgivenusa footinthedoor becauseweknowthatthecircuit satis abilityproblemisnp wenowcanprovemuchmoreeasily thatotherproblemsarenp moreover aswedevelopacatalogofknown completeproblems wewillhavemoreandmorechoicesforlanguagesfromwhichtoreduce formulasatis abilityweillustratethereductionmethodologybygivingannp completenessprooffortheproblemofdeterminingwhetherabooleanformula notacircuit issatis thisproblemhasthehistoricalhonorofbeingthe rstproblemevershowntobenp weformulatethe formula satis abilityproblemintermsofthelanguagesatasfollows aninstanceofsatisabooleanformulacomposedof nbooleanvariables mbooleanconnectives anybooleanfunctionwithoneortwoinputsandoneoutput suchas not implication ifandonlyif parentheses withoutlossofgenerality weassumethattherearenoredundantparentheses aformulacontainsatmostonepairofparenthesesperboolean connective wecaneasilyencodeabooleanformulainalengththatispolynomialinncm asinbooleancombinationalcircuits atruthassignmentforabooleanformulaisasetofvaluesforthevariablesof andasatisfyingassignmentisatruthassignmentthatcausesittoevaluateto aformulawithasatisfyingassignmentisasatis ableformula thesatis abilityproblemaskswhetheragivenbooleanformulaissatis informal languageterms satdfhiwisasatis ablebooleanformulag asanexample theformula chapter completenessd hasthesatisfyingassignmenthx sinced andthusthisformulabelongstosat thenaivealgorithmtodeterminewhetheranarbitrarybooleanformulaissatis abledoesnotruninpolynomialtime aformulawithnvariableshas npossibleassignments ifthelengthofhiispolynomialinn thencheckingeveryassign mentrequires whichissuperpolynomialinthelengthofhi asthefollowingtheoremshows apolynomial timealgorithmisunlikelytoexist theorem satis abilityofbooleanformulasisnp proofwestartbyarguingthatsat thenweprovethatsatisnp hardbyshowingthatcircuit satpsat bylemma thiswillprovethetheorem toshowthatsatbelongstonp weshowthatacerti cateconsistingofasatisfyingassignmentforaninputformulacanbeveri edinpolynomialtime theverifyingalgorithmsimplyreplaceseachvariableintheformulawithitscor respondingvalueandthenevaluatestheexpression muchaswedidinequa tion thistaskiseasytodoinpolynomialtime iftheexpression evaluatesto thenthealgorithmhasveri edthattheformulaissatis rstconditionoflemma fornp completenessholds toprovethatsatisnp weshowthatcircuit satpsat inotherwords weneedtoshowhowtoreduceanyinstanceofcircuitsatis abilitytoan instanceofformulasatis abilityinpolynomialtime wecanuseinductionto expressanybooleancombinationalcircuitasabooleanformula wesimplylook atthegatethatproducesthecircuitoutputandinductivelyexpresseachofthe gate sinputsasformulas wethenobtaintheformulaforthecircuitbywritingan expressionthatappliesthegate sfunctiontoitsinputs formulas unfortunately thisstraightforwardmethoddoesnotamounttoapolynomial timereduction asexercise asksyoutoshow sharedsubformulas arisefromgateswhoseoutputwireshavefan outof ormore cancausethe sizeofthegeneratedformulatogrowexponentially thereductionalgorithm mustbesomewhatmoreclever illustrateshowweovercomethisproblem usingasanexamplethecircuitfromfigure foreachwirexiinthecircuitc theformula completenessproofs reducingcircuitsatis abilitytoformulasatis ability theformulaproducedbythereductionalgorithmhasavariableforeachwireinthecircuit hasavariablexi wecannowexpresshoweachgateoperatesasasmallformulainvolvingthevariablesofitsincidentwires forexample theoperationofthe outputandgateisx wecalleachofthesesmallformulasaclause theformulaproducedbythereductionalgorithmistheandofthecircuit outputvariablewiththeconjunctionofclausesdescribingtheoperationofeach gate forthecircuitinthe gure theformulaisdx givenacircuitc itisstraightforwardtoproducesuchaformulainpolynomialtime whyisthecircuitcsatis ableexactlywhentheformulaissatis ifchasasatisfyingassignment theneachwireofthecircuithasawell nedvalue andtheoutputofthecircuitis therefore whenweassignwirevaluestovariablesin eachclauseofevaluatesto andthustheconjunctionofallevaluatesto conversely ifsomeassignmentcausestoevaluateto thecircuitcissatis ablebyananalogousargument wehaveshownthatcircuit satpsat whichcompletestheproof chapter completeness cnfsatis abilitywecanprovemanyproblemsnp completebyreducingfromformulasatis ability thereductionalgorithmmusthandleanyinputformula andthisrequire mentcanleadtoahugenumberofcasesthatwemustconsider weoftenprefer toreducefromarestrictedlanguageofbooleanformulas sothatweneedtocon siderfewercases ofcourse wemustnotrestrictthelanguagesomuchthatit becomespolynomial timesolvable oneconvenientlanguageis cnfsatis abil ity cnf wede cnfsatis abilityusingthefollowingterms aliteralinabooleanformulaisanoccurrenceofavariableoritsnegation abooleanformulaisin conjunctivenormalform orcnf ifitisexpressedasanandofclauses eachofwhichistheorofoneormoreliterals abooleanformulaisin conjunctivenormalform cnf ifeachclausehasexactlythreedistinctliterals forexample thebooleanformula isin cnf rstofitsthreeclausesis whichcontainsthethreeliteralsx cnf weareaskedwhetheragivenbooleanformulain cnfissatis thefollowingtheoremshowsthatapolynomial timealgorithmthat candeterminethesatis abilityofbooleanformulasisunlikelytoexist evenwhen theyareexpressedinthissimplenormalform theorem satis abilityofbooleanformulasin conjunctivenormalformisnp prooftheargumentweusedintheproofoftheorem toshowthatsat npappliesequallywellheretoshowthat cnf bylemma therefore weneedonlyshowthatsatp cnf webreakthereductionalgorithmintothreebasicsteps eachstepprogressivelytransformstheinputformulaclosertothedesired conjunctivenormalform rststepissimilartotheoneusedtoprovecircuit satpsatintheorem weconstructabinary parse treefortheinputformula withliteralsasleavesandconnectivesasinternalnodes showssuch aparsetreefortheformulad shouldtheinputformulacontainaclausesuchastheorofseveralliterals weuseassociativitytoparenthesizetheexpressionfullysothateveryinternalnodeinthe resultingtreehas wecannowthinkofthebinaryparsetreeasacircuitforcomputingthefunction completenessproofs thetreecorrespondingtotheformulad mimickingthereductionintheproofoftheorem weintroduceavari ableyifortheoutputofeachinternalnode werewritetheoriginalfor mulaastheandoftherootvariableandaconjunctionofclausesdescribingtheoperationofeachnode fortheformula theresultingexpressionis observethattheformula thusobtainedisaconjunctionofclauses eachofwhichhasatmost literals theonlyrequirementthatwemightfailtomeetis thateachclausehastobeanorof literals thesecondstepofthereductionconvertseachclause iintoconjunctivenormalform weconstructatruthtablefor ibyevaluatingallpossibleassignmentstoitsvariables eachrowofthetruthtableconsistsofapossibleassignmentofthe variablesoftheclause togetherwiththevalueoftheclauseunderthatassignment usingthetruth tableentriesthatevaluateto webuildaformulaindisjunctivenormalform ordnf anorofands thatisequivalentto wethennegatethisformulaandconvertitintoacnfformula ibyusingdemorgan chapter completenessy thetruthtablefortheclause lawsforpropositionallogic tocomplementallliterals changeorsintoands andchangeandsintoors inourexample weconverttheclause intocnfasfollows thetruthtablefor appearsinfigure thednfformulaequivalentto negatingandapplyingdemorgan slaws wegetthecnfformula whichisequivalenttotheoriginalclause atthispoint wehaveconvertedeachclause ioftheformula intoacnfformula andthus isequivalenttothecnfformula consistingoftheconjunctionofthe moreover eachclauseof hasatmost literals thethirdand nalstepofthereductionfurthertransformstheformulasothateachclausehasexactly distinctliterals weconstructthe nal cnfformula fromtheclausesofthecnfformula theformula alsousestwoauxiliaryvariablesthatweshallcallpandq foreachclauseciof weincludethefollowingclausesin ifcihas distinctliterals thensimplyincludeciasaclauseof ifcihas distinctliterals thatis ifcid wherel andl areliterals theninclude asclausesof theliteralspand pmerelyful llthesyntacticrequirementthateachclauseof completenessproofs exactly distinctliterals whetherpd orpd oneoftheclausesisequivalenttol andtheotherevaluatesto whichistheidentityforand ifcihasjust distinctliterall theninclude asclausesof regardlessofthevaluesofpandq oneofthefourclausesisequivalenttol andtheother evaluateto wecanseethatthe cnfformula issatis ableifandonlyifissatis ablebyinspectingeachofthethreesteps likethereductionfromcircuit sattosat theconstructionof frominthe rststeppreservessatis ability thesecondstepproducesacnfformula thatisalgebraicallyequivalentto thethirdstepproducesa cnfformula thatiseffectivelyequivalentto sinceanyassignmenttothevariablespandqproducesaformulathatisalgebraicallyequivalentto wemustalsoshowthatthereductioncanbecomputedinpolynomialtime con structing fromintroducesatmost variableand clauseperconnectivein constructing canintroduceatmost clausesinto foreachclausefrom sinceeachclauseof hasatmost variables andthetruthtableforeachclausehasatmost rows theconstructionof introducesatmost clausesinto foreachclauseof thesizeoftheresultingformula ispolynomialinthelengthoftheoriginalformula eachofthecon structionscaneasilybeaccomplishedinpolynomialtime exercises considerthestraightforward nonpolynomial reductionintheproofofthe orem describeacircuitofsizenthat whenconvertedtoaformulabythismethod yieldsaformulawhosesizeisexponentialinn showthe cnfformulathatresultswhenweusethemethodoftheorem ontheformula professorjaggerproposestoshowthatsatp cnf satbyusingonlythetruth tabletechniqueintheproofoftheorem andnottheothersteps theprofessorproposestotakethebooleanformula formatruthtableforitsvariables derivefromthetruthtableaformulain dnfthatisequivalent andthennegateandapplydemorgan slawstoproducea cnfformulaequivalentto showthatthisstrategydoesnotyieldapolynomial timereduction chapter completeness showthattheproblemofdeterminingwhetherabooleanformulaisatautologyis completeforco hint seeexercise showthattheproblemofdeterminingthesatis abilityofbooleanformulasindis junctivenormalformispolynomial timesolvable supposethatsomeonegivesyouapolynomial timealgorithmtodecideformulasatis ability describehowtousethisalgorithmto ndsatisfyingassignmentsinpolynomialtime cnf satbethesetofsatis ablebooleanformulasincnfwithexactly literalsperclause showthat cnf makeyouralgorithmasef cientaspossible hint observethatx yisequivalentto reduce cnf sattoanef cientlysolvableproblemonadirectedgraph completeproblemsnp completeproblemsariseindiversedomains booleanlogic graphs arithmetic networkdesign setsandpartitions storageandretrieval sequencingandschedul ing mathematicalprogramming algebraandnumbertheory gamesandpuzzles automataandlanguagetheory programoptimization biology chemistry physics andmore inthissection weshallusethereductionmethodologytoprovidenp completenessproofsforavarietyofproblemsdrawnfromgraphtheoryandset partitioning outlinesthestructureofthenp completenessproofsinthissectionandsection weproveeachlanguageinthe guretobenp completebyreductionfromthelanguagethatpointstoit attherootiscircuit whichweprovednp completeintheorem thecliqueproblemacliqueinanundirectedgraphgd isasubsetv vofvertices eachpairofwhichisconnectedbyanedgeine inotherwords acliqueisacompletesubgraphofg thesizeofacliqueisthenumberofverticesitcontains thecliqueproblemistheoptimizationproblemof ndingacliqueofmaximumsizein completeproblems circuit satsat cnf satcliquevertex coversubset sumham cycletspfigure thestructureofnp completenessproofsinsections allproofsulti matelyfollowbyreductionfromthenp completenessofcircuit agraph asadecisionproblem weasksimplywhetheracliqueofagivensizekexistsinthegraph theformalde nitioniscliquedfhg kiwgisagraphcontainingacliqueofsizekg anaivealgorithmfordeterminingwhetheragraphgd withjvjver ticeshasacliqueofsizekistolistallk subsetsofv andcheckeachonetoseewhetheritformsaclique therunningtimeofthisalgorithmisk jvjk whichispolynomialifkisaconstant ingeneral however kcouldbenearjvj inwhichcasethealgorithmrunsinsuperpolynomialtime indeed anef cient algorithmforthecliqueproblemisunlikelytoexist theorem thecliqueproblemisnp prooftoshowthatclique foragivengraphgd weusethesetv vofverticesinthecliqueasacerti cateforg wecancheckwhetherv isacliqueinpolynomialtimebycheckingwhether foreachpairu theedge belongstoe wenextprovethat cnf satpclique whichshowsthatthecliqueprob lemisnp youmightbesurprisedthatweshouldbeabletoprovesucha sinceonthesurfacelogicalformulasseemtohavelittletodowithgraphs thereductionalgorithmbeginswithaninstanceof cnf letdc ckbeabooleanformulain cnfwithkclauses forrd chapter completenessx thegraphgderivedfromthe cnfformuladc wherec andc inreducing cnf sattoclique asatisfyingassignmentoftheformulahasx andx thisassignmentsatis esc anditsatis esc andc withx correspondingtothecliquewithlightlyshadedvertices eachclausecrhasexactlythreedistinctliteralslr andlr weshallconstructagraphgsuchthatissatis ableifandonlyifghasacliqueofsizek weconstructthegraphgd asfollows foreachclausecrd weplaceatripleofverticesr andr intov weputanedgebetweentwoverticesriandsjifbothofthefollowinghold riandsjareindifferenttriples thatis andtheircorrespondingliteralsareconsistent thatis lriisnotthenegationoflsj wecaneasilybuildthisgraphfrominpolynomialtime asanexampleofthisconstruction ifwehaved thengisthegraphshowninfigure wemustshowthatthistransformationofintogisareduction supposethathasasatisfyingassignment theneachclausecrcontainsatleastoneliterallrithatisassigned andeachsuchliteralcorrespondstoavertexri pickingonesuch true literalfromeachclauseyieldsasetv ofkvertices weclaimthatv isaclique foranytwoverticesrisj wherer bothcorrespondingliteralslriandlsjmapto bythegivensatisfyingassignment andthustheliterals completeproblems cannotbecomplements bytheconstructionofg theedgerisj belongstoe conversely supposethatghasacliquev ofsizek noedgesingconnectverticesinthesametriple andsov containsexactlyonevertexpertriple wecanassign toeachliterallrisuchthatri withoutfearofassigning tobothaliteralanditscomplement sincegcontainsnoedgesbetweeninconsistentliterals eachclauseissatis andsoissatis anyvariablesthatdonotcorrespondtoavertexinthecliquemaybesetarbitrarily intheexampleoffigure asatisfyingassignmentofhasx andx acorrespondingcliqueofsizekd consistsoftheverticescorrespond ingto fromthe rstclause fromthesecondclause andx fromthethirdclause becausethecliquecontainsnoverticescorrespondingtoeitherx wecansetx toeither inthissatisfyingassignment observethatintheproofoftheorem wereducedanarbitraryinstanceof cnf sattoaninstanceofcliquewithaparticularstructure youmight thinkthatwehaveshownonlythatcliqueisnp hardingraphsinwhichthe verticesarerestrictedtooccurintriplesandinwhichtherearenoedgesbetween verticesinthesametriple indeed wehaveshownthatcliqueisnp hardonly inthisrestrictedcase butthisproofsuf cestoshowthatcliqueisnp hardin generalgraphs ifwehadapolynomial timealgorithmthatsolvedclique ongeneralgraphs itwouldalsosolvecliqueonrestrictedgraphs theoppositeapproach reducinginstancesof cnf satwithaspecialstruc turetogeneralinstancesofclique wouldnothavesuf ced however not perhapstheinstancesof cnf satthatwechosetoreducefromwere easy andsowewouldnothavereducedannp hardproblemtoclique observealsothatthereductionusedtheinstanceof cnf butnotthesolution wewouldhaveerredifthepolynomial timereductionhadreliedonknowingwhethertheformulaissatis sincewedonotknowhowtodecidewhetherissatis ableinpolynomialtime thevertex coverproblemavertexcoverofanundirectedgraphgd isasubsetv vsuchthatif thenu orboth thatis eachvertex covers itsincidentedges andavertexcoverforgisasetofverticesthatcoversalltheedgesine thesizeofavertexcoveristhenumberofverticesinit forexample thegraphinfigure hasavertexcoverfw gofsize thevertex coverproblemisto ndavertexcoverofminimumsizeinagivengraph restatingthisoptimizationproblemasadecisionproblem wewishto chapter completenessuvyxzw uvyxzw reducingcliquetovertex anundirectedgraphgd withcliquev dfu thegraphgproducedbythereductionalgorithmthathasvertexcovervv dfw determinewhetheragraphhasavertexcoverofagivensizek asalanguage wede nevertex coverdfhg kiwgraphghasavertexcoverofsizekg thefollowingtheoremshowsthatthisproblemisnp theorem thevertex coverproblemisnp proofwe rstshowthatvertex supposewearegivenagraphgd andanintegerk thecerti catewechooseisthevertexcoverv vitself theveri cationalgorithmaf rmsthatjv jdk andthenitchecks foreachedge thatu wecaneasilyverifythecerti cateinpolynomialtime weprovethatthevertex coverproblemisnp hardbyshowingthatcliquepvertex thisreductionreliesonthenotionofthe complement ofagraph givenanundirectedgraphgd wede nethecomplementofgasgd whereedf inotherwords gisthegraphcontainingexactlythoseedgesthatarenoting showsagraphanditscomplementandillustratesthereductionfromcliqueto vertex thereductionalgorithmtakesasinputaninstancehg kiofthecliqueproblem itcomputesthecomplementg whichwecaneasilydoinpolynomialtime theoutputofthereductionalgorithmistheinstancehg jvjkiofthevertex coverproblem tocompletetheproof weshowthatthistransformationisindeeda completeproblems reduction thegraphghasacliqueofsizekifandonlyifthegraphghasavertexcoverofsizejvjk supposethatghasacliquev vwithjv jdk weclaimthatvv isavertexcovering beanyedgeine whichimpliesthatatleastoneofuordoesnotbelongtov sinceeverypairofverticesinv isconnectedbyanedgeofe equivalently atleastoneofuorisinvv whichmeansthatedge iscoveredbyvv waschosenarbitrarilyfrome everyedgeofeiscoveredbyavertexinvv hence thesetvv whichhassizejvjk formsavertexcoverforg conversely supposethatghasavertexcoverv wherejv jdjvjk forallu thenu orboth thecontrapositiveofthisimplicationisthatforallu ifu inotherwords isaclique andithassizejvjjv jdk sincevertex coverisnp wedon texpectto ndapolynomial timealgorithmfor ndingaminimum sizevertexcover presentsa polynomial approximationalgorithm however whichproduces approxi mate solutionsforthevertex coverproblem thesizeofavertexcoverproduced bythealgorithmisatmosttwicetheminimumsizeofavertexcover weshouldn tgiveuphopejustbecauseaproblemisnp wemaybeabletodesignapolynomial timeapproximationalgorithmthatobtains optimalsolutions eventhough ndinganoptimalsolutionisnp chapter givesseveralapproximationalgorithmsfornp completeproblems thehamiltonian cycleproblemwenowreturntothehamiltonian cycleproblemde nedinsection theorem thehamiltoniancycleproblemisnp proofwe rstshowthatham cyclebelongstonp givenagraphgd ourcerti cateisthesequenceofjvjverticesthatmakesupthehamiltoniancycle theveri cationalgorithmchecksthatthissequencecontainseachvertexinvexactlyonceandthatwiththe rstvertexrepeatedattheend itformsacycleing thatis itchecksthatthereisanedgebetweeneachpairofconsecutiveverticesandbetweenthe rstandlastvertices wecanverifythecerti catein polynomialtime wenowprovethatvertex coverpham cycle whichshowsthatham cycleisnp givenanundirectedgraphgd andan chapter completeness wuv wuv wuv wuv thewidgetusedinreducingthevertex coverproblemtothehamiltonian cycleprob lem anedge ofgraphgcorrespondstowidgetwinthegraphg createdinthereduction thewidget withindividualverticeslabeled theshadedpathsaretheonlypossibleonesthroughthewidgetthatincludeallvertices assumingthattheonlyconnectionsfromthewidgettotheremainderofg arethroughvertices integerk weconstructanundirectedgraphg thathasahamiltoniancycleifandonlyifghasavertexcoverofsizek ourconstructionusesawidget whichisapieceofagraphthatenforcescertainproperties showsthewidgetweuse foreachedge thegraphg thatweconstructwillcontainonecopyofthiswidget whichwedenotebyw wedenoteeachvertexinwby ior sothateachwidgetwcontains vertices widgetwalsocontainsthe edgesshowninfigure alongwiththeinternalstructureofthewidget weenforcethepropertieswewantbylimitingtheconnectionsbetweenthewidgetandtheremainderofthe graphg thatweconstruct inparticular onlyvertices willhaveedgesincidentfromoutsidew anyhamiltoniancycleofg musttraversetheedgesofwinoneofthethreewaysshowninfig ures ifthecycleentersthroughvertex itmustexitthroughvertex anditeithervisitsall ofthewidget svertices orthesixvertices inthelattercase thecyclewillhavetoreenterthewidgettovisitvertices similarly ifthecycleentersthroughvertex itmustexitthroughver tex anditeithervisitsall ofthewidget svertices orthesixvertices nootherpathsthroughthewidgetthatvisitall verticesarepossible inparticular itisimpossibletoconstructtwovertex disjointpaths oneofwhichconnects andtheotherofwhichconnects suchthattheunionofthetwopathscontainsallofthewidget svertices completeproblems wwx wxy wwy wwzs wxzy reducinganinstanceofthevertex coverproblemtoaninstanceofthehamiltonian cycleproblem anundirectedgraphgwithavertexcoverofsize consistingofthelightlyshadedverticeswandy theundirectedgraphg producedbythereduction withthehamilto nianpathcorrespondingtothevertexcovershaded thevertexcoverfw ygcorrespondstoedges appearinginthehamiltoniancycle theonlyotherverticesinv otherthanthoseofwidgetsareselectorverticess weuseedgesincidentonselectorverticesing toselectthekverticesofthecovering inadditiontotheedgesinwidgets containstwoothertypesofedges whichfigure shows foreachvertexu weaddedgestojoinpairsofwidgetsinordertoformapathcontainingallwidgetscorrespondingtoedgesincidentonuing wearbitrarilyordertheverticesadjacenttoeachvertexu vasu wheredegree isthenumberofverticesadjacenttou wecreateapathing throughallthewidgetscorrespondingtoedgesincidentonubyaddingtoe theedgesf idegree infigure forexample weordertheverticesad jacenttowasx andsographg inpart ofthe gureincludestheedges chapter completeness foreachvertexu theseedgesing llinapathcontainingallwidgetscorrespondingtoedgesincidentonuing theintuitionbehindtheseedgesisthatifwechooseavertexu vinthevertexcoverofg wecanconstructapathfrom ing covers allwidgetscorrespondingtoedgesincidentonu thatis foreachofthesewidgets saywu thepatheitherincludesall vertices ifuisinthevertexcoverbutu isnot orjustthesixvertices ifbothuandu areinthevertexcover naltypeofedgeine joinsthe rstvertex andthelastvertex ofeachofthesepathstoeachoftheselectorvertices thatis weincludetheedgesf vand jkg vand jkg weshowthatthesizeofg ispolynomialinthesizeofg andhencewecanconstructg intimepolynomialinthesizeofg theverticesofg arethoseinthewidgets plustheselectorvertices verticesperwidget pluskjvjselectorvertices wehaveatotalofjv jejck jejcjvjvertices theedgesofg arethoseinthewidgets thosethatgobetweenwidgets andthoseconnectingselectorverticestowidgets eachwidgetcontains edges totaling jejinallwidgets foreachvertexu graphg hasdegree edgesgoingbetweenwidgets sothatsummedoverallverticesinv jejjvjedgesgobetweenwidgets finally hastwoedgesforeachpairconsistingofaselectorvertexandavertexofv totaling kjvjsuchedges thetotalnumberofedgesofg isthereforeje jej jejjvj kjvj jejc jvj jejc jvj jvj nowweshowthatthetransformationfromgraphgtog isareduction thatis wemustshowthatghasavertexcoverofsizekifandonlyifg hasahamiltoniancycle completeproblems supposethatgd hasavertexcovervvofsizek letvdfu ukg asfigure shows weformahamiltoniancy cleing byincludingthefollowingedges foreachvertexuj includeedges idegree whichconnectallwidgetscorrespondingtoedgesincidentonuj wealsoincludetheedgeswithinthesewidgetsasfigures dependingonwhethertheedgeiscov eredbyoneortwoverticesinv thehamiltoniancyclealsoincludestheedgesf jkg sjc byinspectingfigure youcanverifythattheseedgesformacycle thecyclestartsats visitsallwidgetscorrespondingtoedgesincidentonu thenvisitss visitsallwidgetscorrespondingtoedgesincidentonu andsoon untilitreturnstos thecyclevisitseachwidgeteitheronceortwice dependingonwhetheroneortwoverticesofvcoveritscorrespondingedge becausevisavertexcoverforg eachedgeineisincidentonsomevertexinv andsothecyclevisitseachvertexineachwidgetofg becausethecyclealsovisitseveryselectorvertex itishamiltonian conversely supposethatg hasahamiltoniancyclece weclaimthatthesetvdfu cforsome jkg isavertexcoverforg toseewhy partitioncintomaximalpathsthatstartatsomeselectorvertexsi traverseanedge forsomeu andendataselectorvertexsjwithoutpassingthroughanyotherselectorvertex letuscalleachsuchpatha coverpath fromhowg isconstructed eachcoverpathmuststartatsomesi taketheedge forsomevertexu passthroughallthewidgetscorrespondingtoedgesineincidentonu andthenendatsomeselectorvertexsj werefertothiscoverpathaspu andbyequation weputuintov eachwidgetvisitedbypumustbeworwforsome foreachwidgetvisitedbypu itsverticesarevisitedbyeitheroneortwocoverpaths iftheyarevisitedbyonecoverpath thenedge eiscoveredingbyvertexu iftwocoverpathsvisitthewidget thentheothercoverpathmustbep whichimpliesthat andedge eiscoveredbybothuand technically wede neacycleintermsofverticesratherthanedges seesectionb intheinterestofclarity weabusenotationhereandde nethehamiltoniancycleintermsofedges chapter completenessuvxw aninstanceofthetraveling salesmanproblem shadededgesrepresentaminimum costtour withcost becauseeachvertexineachwidgetisvisitedbysomecoverpath weseethateachedgeineiscoveredbysomevertexinv thetraveling salesmanprobleminthetraveling salesmanproblem whichiscloselyrelatedtothehamiltonian cycleproblem asalesmanmustvisitncities modelingtheproblemasacompletegraphwithnvertices wecansaythatthesalesmanwishestomakeatour orhamiltoniancycle visitingeachcityexactlyonceand nishingatthecityhestarts thesalesmanincursanonnegativeintegercostc totravelfromcityitocityj andthesalesmanwishestomakethetourwhosetotalcostisminimum wherethetotalcostisthesumoftheindividualcostsalongtheedgesofthetour forexample infigure aminimum costtourishu withcost theformallanguageforthecorrespondingdecisionproblemistspdfhg kiwgd isacompletegraph cisafunctionfromvv andghasatraveling salesmantourwithcostatmostkg thefollowingtheoremshowsthatafastalgorithmforthetraveling salesmanproblemisunlikelytoexist theorem thetraveling salesmanproblemisnp proofwe rstshowthattspbelongstonp givenaninstanceoftheproblem weuseasacerti catethesequenceofnverticesinthetour theveri cationalgorithmchecksthatthissequencecontainseachvertexexactlyonce sumsuptheedgecosts andcheckswhetherthesumisatmostk thisprocesscancertainlybedoneinpolynomialtime completeproblems toprovethattspisnp weshowthatham cycleptsp letgd beaninstanceofham cycle weconstructaninstanceoftspasfollows weformthecompletegraphg wheree vandi andwede nethecostfunctioncbyc notethatbecausegisundirected ithasnoself loops andsoc forallvertices theinstanceoftspisthenhg whichwecaneasilycreateinpolynomialtime wenowshowthatgraphghasahamiltoniancycleifandonlyifgraphg hasatourofcostatmost supposethatgraphghasahamiltoniancycleh eachedgeinhbelongstoeandthushascost ing hisatouring withcost conversely supposethatgraphg hasatourh ofcostatmost sincethecostsoftheedgesine thecostoftourh isexactly andeachedgeonthetourmusthavecost therefore containsonlyedgesine weconcludethath isahamiltoniancycleingraphg thesubset sumproblemwenextconsideranarithmeticnp completeproblem inthesubset sumproblem wearegivena nitesetsofpositiveintegersandanintegertargett weaskwhetherthereexistsasubsets swhoseelementssumtot forexample ifsdf gandtd thenthesubsets gisasolution asusual wede netheproblemasalanguage subset sumdfhs tiwthereexistsasubsets ssuchthattdps aswithanyarithmeticproblem itisimportanttorecallthatourstandardencodingassumesthattheinputintegersarecodedinbinary withthisassumptioninmind wecanshowthatthesubset sumproblemisunlikelytohaveafastalgorithm theorem thesubset sumproblemisnp prooftoshowthatsubset sumisinnp foraninstancehs tioftheproblem weletthesubsets bethecerti cate averi cationalgorithmcancheckwhethertdps sinpolynomialtime wenowshowthat cnf satpsubset sum givena cnfformulaovervariablesx xnwithclausesc eachcontainingexactly chapter completenessthreedistinctliterals thereductionalgorithmconstructsaninstancehs tiofthesubset sumproblemsuchthatissatis ableifandonlyifthereexistsasubsetofswhosesumisexactlyt withoutlossofgenerality wemaketwosimplifyingassumptionsabouttheformula noclausecontainsbothavariableanditsnegation forsuchaclauseisautomaticallysatis edbyanyassignmentofvalues tothevariables eachvariableappearsinatleastoneclause becauseit doesnotmatterwhatvalueisassignedtoavariablethatappearsinnoclauses thereductioncreatestwonumbersinsetsforeachvariablexiandtwonumbersinsforeachclausecj weshallcreatenumbersinbase whereeachnumbercontainsnckdigitsandeachdigitcorrespondstoeitheronevariableoroneclause andotherbases asweshallsee hasthepropertyweneedofpreventingcarriesfromlowerdigitstohigherdigits asfigure shows weconstructsetsandtargettasfollows welabeleachdigitpositionbyeitheravariableoraclause theleastsigni cantkdigitsarelabeledbytheclauses andthemostsigni cantndigitsarelabeledbyvariables thetargetthasa ineachdigitlabeledbyavariableanda ineachdigitlabeledbyaclause foreachvariablexi setscontainstwointegersiand eachofiand ihasa inthedigitlabeledbyxiand sintheothervariabledigits ifliteralxiappearsinclausecj thenthedigitlabeledbycjinicontainsa iflit eral xiappearsinclausecj thenthedigitlabeledbycjin icontainsa allotherdigitslabeledbyclausesiniand iare alliand ivaluesinsetsareunique forl nolor lvaluescanequaliand iinthemostsigni cantndigits furthermore byoursimplifyingassumptionsabove noiand icanbeequalinallkleastsigni cantdigits ifiand iwereequal thenxiand xiwouldhavetoappearinexactlythesamesetofclauses butweassumethatnoclausecontainsbothxiand xiandthateitherxior xiappearsinsomeclause andsotheremustbesomeclausecjforwhichiand idiffer foreachclausecj setscontainstwointegerssjands eachofsjands jhas sinalldigitsotherthantheonelabeledbycj forsj thereisa inthecjdigit ands jhasa inthisdigit theseintegersare slackvariables whichweusetogeteachclause labeleddigitpositiontoaddtothetargetvalueof simpleinspectionoffigure demonstratesthatallsjands jvaluesinsareuniqueinsets notethatthegreatestsumofdigitsinanyonedigitpositionis whichoccursinthedigitslabeledbyclauses sfromtheiand ivalues plus completeproblems tfigure thereductionof cnf sattosubset sum theformulain cnfisdc wherec andc asatisfyingassignmentofishx thesetsproducedbythereductionconsistsofthebase numbersshown readingfromtoptobottom sdf thetargettis thesubsets sislightlyshaded anditcontains correspondingtothesatisfyingassignment italsocontainsslackvariabless ands toachievethetargetvalueof inthedigitslabeledbyc throughc thesjands jvalues interpretingthesenumbersinbase therefore nocarriescanoccurfromlowerdigitstohigherdigits wecanperformthereductioninpolynomialtime thesetscontains kvalues eachofwhichhasnckdigits andthetimetoproduceeachdigitispoly nomialinnck thetargetthasnckdigits andthereductionproduceseachinconstanttime wenowshowthatthe cnfformulaissatis ableifandonlyifthereexistsasubsets swhosesumist supposethathasasatisfyingassignment forid ifxid inthisassignment thenincludeiins otherwise inotherwords weincludeins exactlytheiand ivaluesthatcor infact anybaseb whereb wouldwork theinstanceatthebeginningofthissubsectionisthesetsandtargettinfigure interpretedinbase withslistedinsortedorder chapter completenessrespondtoliteralswiththevalue inthesatisfyingassignment havingincludedeitherior butnotboth foralli andhavingput inthedigitslabeledbyvariablesinallsjands weseethatforeachvariable labeleddigit thesumofthevaluesofs mustbe whichmatchesthosedigitsofthetargett becauseeachclauseissatis theclausecontainssomeliteralwiththevalue therefore eachdigitlabeledbyaclausehasatleastone contributedtoitssumbyaior ivalueins infact literalsmaybe ineachclause andsoeachclause labeleddigithasasumof fromtheiand ivaluesins infigure forexample literals andx havethevalue inasatisfyingassignment eachofclausesc andc containsexactlyoneoftheseliterals andsotogether contribute tothesuminthedigitsforc andc clausec containstwooftheseliterals contribute tothesuminthedigitforc clausec containsallthreeoftheseliterals contribute tothesuminthedigitforc weachievethetargetof ineachdigitlabeledbyclausecjbyincludingins theappropriatenonemptysubsetofslackvariablesfsj infigure includess ands sincewehavematchedthetargetinalldigitsofthesum andnocarriescanoccur thevaluesofs sumtot supposethatthereisasubsets sthatsumstot thesubsets mustincludeexactlyoneofiand iforeachid forotherwisethedigitslabeledbyvariableswouldnotsumto ifi wesetxid otherwise andwesetxid weclaimthateveryclausecj forjd issatis edbythisassignment toprovethisclaim notethattoachieveasumof inthedigitlabeledbycj thesubsets mustincludeatleastoneior ivaluethathasa inthedigitlabeledbycj sincethecontributionsoftheslackvariablessjands jtogethersumtoatmost ifs includesaithathasa incj sposition thentheliteralxiappearsinclausecj sincewehavesetxid wheni clausecjissatis ifs includesa ithathasa inthatposition thentheliteral xiappearsincj sincewehavesetxid clausecjisagainsatis allclausesofaresatis whichcompletestheproof exercises thesubgraph isomorphismproblemtakestwoundirectedgraphsg andg anditaskswhetherg isisomorphictoasubgraphofg showthatthesubgraph isomorphismproblemisnp givenanintegermnmatrixaandanintegerm vectorb integer programmingproblemaskswhetherthereexistsanintegern vectorxwithele problemsforchapter mentsinthesetf gsuchthataxb provethat integerprogrammingisnp hint reducefrom cnf theintegerlinear programmingproblemislikethe integer programmingproblemgiveninexercise exceptthatthevaluesofthevectorxmaybeanyintegersratherthanjust assumingthatthe integer programmingproblemisnp showthattheintegerlinear programmingproblemisnp showhowtosolvethesubset sumprobleminpolynomialtimeifthetargetvaluetisexpressedinunary theset partitionproblemtakesasinputasetsofnumbers thequestioniswhetherthenumberscanbepartitionedintotwosetsaandadsasuchthatpx axdpx showthattheset partitionproblemisnp showthatthehamiltonian pathproblemisnp thelongest cycleproblemistheproblemofdeterminingasimplecycle norepeatedvertices ofmaximumlengthinagraph formulatearelateddecision andshowthatthedecisionproblemisnp inthehalf cnfsatis abilityproblem wearegivena cnfformulawithnvariablesandmclauses wheremiseven wewishtodeterminewhetherthereexistsatruthassignmenttothevariablesofsuchthatexactlyhalftheclausesevaluateto andexactlyhalftheclausesevaluateto provethatthehalf cnfsatis abilityproblemisnp problems independentsetanindependentsetofagraphgd isasubsetv vofverticessuchthateachedgeineisincidentonatmostonevertexinv theindependent setproblemisto ndamaximum sizeindependentseting chapter completenessa formulatearelateddecisionproblemfortheindependent setproblem andprovethatitisnp hint reducefromthecliqueproblem supposethatyouaregivena subroutinetosolvethedecisionprob lemyoude nedinpart giveanalgorithmto ndanindependentsetofmax imumsize therunningtimeofyouralgorithmshouldbepolynomialinjvjandjej countingqueriestotheblackboxasasinglestep althoughtheindependent setdecisionproblemisnp certainspecialcasesarepolynomial timesolvable giveanef cientalgorithmtosolvetheindependent setproblemwheneachver texinghasdegree analyzetherunningtime andprovethatyouralgorithmworkscorrectly giveanef cientalgorithmtosolvetheindependent setproblemwhengisbipartite analyzetherunningtime andprovethatyouralgorithmworkscor rectly hint usetheresultsofsection bonnieandclydebonnieandclydehavejustrobbedabank theyhaveabagofmoneyandwanttodivideitup foreachofthefollowingscenarios eithergiveapolynomial algorithm orprovethattheproblemisnp theinputineachcaseisa listofthenitemsinthebag alongwiththevalueofeach thebagcontainsncoins butonly differentdenominations somecoinsareworthxdollars andsomeareworthydollars bonnieandclydewishtodividethemoneyexactlyevenly thebagcontainsncoins withanarbitrarynumberofdifferentdenominations buteachdenominationisanonnegativeintegerpowerof thepossibledenominationsare dollars dollars etc bonnieandclydewishtodividethemoneyexactlyevenly thebagcontainsnchecks whichare inanamazingcoincidence madeoutto bonnieorclyde theywishtodividethecheckssothattheyeachgetthe exactsameamountofmoney thebagcontainsnchecksasinpart butthistimebonnieandclydearewillingtoacceptasplitinwhichthedifferenceisnolargerthan dollars problemsforchapter graphcoloringmapmakerstrytouseasfewcolorsaspossiblewhencoloringcountriesonamap aslongasnotwocountriesthatshareaborderhavethesamecolor wecanmodel thisproblemwithanundirectedgraphgd inwhicheachvertexrepre sentsacountryandverticeswhoserespectivecountriesshareaborderareadjacent coloringisafunctioncwv kgsuchthatc foreveryedge inotherwords thenumbers krepresentthekcol ors andadjacentverticesmusthavedifferentcolors thegraph coloringproblemistodeterminetheminimumnumberofcolorsneededtocoloragivengraph giveanef cientalgorithmtodeterminea coloringofagraph ifoneexists castthegraph coloringproblemasadecisionproblem showthatyourdeci sionproblemissolvableinpolynomialtimeifandonlyifthegraph coloring problemissolvableinpolynomialtime letthelanguage colorbethesetofgraphsthatcanbe colored showthatif colorisnp thenyourdecisionproblemfrompart toprovethat colorisnp weuseareductionfrom cnf givenaformulaofmclausesonnvariablesx weconstructagraphgd asfollows thesetvconsistsofavertexforeachvariable avertexforthenegationofeachvariable verticesforeachclause specialvertices true false andred theedgesofthegraphareoftwotypes literal edgesthatareindependentoftheclausesand clause edgesthatdependontheclauses theliteraledgesformatriangleonthespecialverticesandalsoformatriangleon andredforid arguethatinany coloringcofagraphcontainingtheliteraledges exactlyoneofavariableanditsnegationiscoloredc true andtheotheriscoloredc false arguethatforanytruthassignmentfor thereexistsa coloringofthegraphcontainingjusttheliteraledges thewidgetshowninfigure helpstoenforcetheconditioncorrespondingtoaclause eachclauserequiresauniquecopyofthe verticesthatareheavilyshadedinthe gure theyconnectasshowntotheliteralsoftheclauseand thespecialvertextrue arguethatifeachofx iscoloredc true orc false thenthewidgetis colorableifandonlyifatleastoneofx iscoloredc true completetheproofthat colorisnp chapter completenessxyztruefigure thewidgetcorrespondingtoaclause usedinproblem schedulingwithpro tsanddeadlinessupposethatwehaveonemachineandasetofntasksa eachofwhichrequirestimeonthemachine eachtaskajrequirestjtimeunitsonthemachine itsprocessingtime yieldsapro tofpj andhasadeadlinedj themachinecanprocessonlyonetaskatatime andtaskajmustrunwithoutinter ruptionfortjconsecutivetimeunits ifwecompletetaskajbyitsdeadlinedj wereceiveapro tpj butifwecompleteitafteritsdeadline wereceivenopro asanoptimizationproblem wearegiventheprocessingtimes pro anddeadlines forasetofntasks andwewishto ndaschedulethatcompletesallthetasksandreturnsthegreatestamountofpro theprocessingtimes pro anddeadlines areallnonnegativenumbers statethisproblemasadecisionproblem showthatthedecisionproblemisnp giveapolynomial timealgorithmforthedecisionproblem assumingthatallprocessingtimesareintegersfrom ton hint usedynamicprogramming giveapolynomial timealgorithmfortheoptimizationproblem assumingthatallprocessingtimesareintegersfrom ton chapternotesthebookbygareyandjohnson providesawonderfulguidetonp ness discussingthetheoryatlengthandprovidingacatalogueofmanyproblemsthatwereknowntobenp completein theproofoftheorem adaptedfromtheirbook andthelistofnp completeproblemdomainsatthebegin ningofsection isdrawnfromtheirtableofcontents johnsonwroteaseries notesforchapter columnsinthejournalofalgorithmsbetween reportingnewdevelopmentsinnp completeness hopcroft motwani andullman lewis andpapadimitriou papadimitriou andsipser havegoodtreat mentsofnp completenessinthecontextofcomplexitytheory completeness andseveralreductionsalsoappearinbooksbyaho hopcroft andullman dasgupta papadimitriou andvazirani johnsonbaughandschaefer andkleinbergandtardos theclasspwasintroducedin bycobham independently byedmonds whoalsointroducedtheclassnpandconjecturedthatp thenotionofnp completenesswasproposedin bycook whogave rstnp completenessproofsforformulasatis abilityand cnfsatis abil ity levin independentlydiscoveredthenotion givingannp completeness proofforatilingproblem karp introducedthemethodologyofreductions anddemonstratedtherichvarietyofnp completeproblems karp spa perincludedtheoriginalnp completenessproofsoftheclique vertex hamiltonian cycleproblems sincethen thousandsofproblemshavebeenproven tobenp completebymanyresearchers inatalkatameetingcelebratingkarp thbirthdayin papadimitriouremarked paperseachyearhave theterm ontheirtitle abstract orlistofkeywords thisismore thaneachoftheterms compiler database expert neuralnetwork oper atingsystem recentworkincomplexitytheoryhasshedlightonthecomplexityofcomputingapproximatesolutions thisworkgivesanewde nitionofnpusing probabilis ticallycheckableproofs thisnewde nitionimpliesthatforproblemssuchas clique vertexcover thetraveling salesmanproblemwiththetriangleinequality andmanyothers computinggoodapproximatesolutionsisnp hardandhenceno easierthancomputingoptimalsolutions anintroductiontothisareacanbefound inarora sthesis achapterbyaroraandlundinhochbaum asurvey articlebyarora abookeditedbymayr omel andsteger andasurveyarticlebyjohnson approximationalgorithmsmanyproblemsofpracticalsigni cancearenp yettheyaretooimpor tanttoabandonmerelybecausewedon tknowhowto ndanoptimalsolutionin polynomialtime evenifaproblemisnp theremaybehope wehaveat leastthreewaystogetaroundnp completeness iftheactualinputsaresmall analgorithmwithexponentialrunningtimemaybeperfectlysatisfactory wemaybeabletoisolateimportantspecialcasesthatwecansolveinpolynomial wemightcomeupwithapproachesto ndnear optimalsolutionsinpolynomialtime eitherintheworstcaseortheexpectedcase inpractice optimalityisoftengoodenough wecallanalgorithmthatreturnsnear optimalsolutionsanapproximationalgorithm thischapterpresentspolynomial timeap proximationalgorithmsforseveralnp completeproblems performanceratiosforapproximationalgorithmssupposethatweareworkingonanoptimizationprobleminwhicheachpotentialsolutionhasapositivecost andwewishto ndanear optimalsolution depending ontheproblem wemayde neanoptimalsolutionasonewithmaximumpossi blecostoronewithminimumpossiblecost thatis theproblemmaybeeithera maximizationoraminimizationproblem wesaythatanalgorithmforaproblemhasanapproximationratioof foranyinputofsizen thecostcofthesolutionproducedbythealgorithmiswithinafactorof ofthecostcofanoptimalsolution maxcc ifanalgorithmachievesanapproximationratioof wecallitan approx imationalgorithm thede nitionsoftheapproximationratioandofa approximationalgorithmapplytobothminimizationandmaximizationproblems foramaximizationproblem andtheratioc cgivesthefactorbywhichthecostofanoptimalsolutionislargerthanthecostoftheapproximate chapter approximationalgorithms similarly foraminimizationproblem andtheratioc cgivesthefactorbywhichthecostoftheapproximatesolutionislargerthanthecostofanoptimalsolution becauseweassumethatallsolutionshavepositive theseratiosarealwayswellde ned theapproximationratioofanapprox imationalgorithmisneverlessthan sincec impliesc therefore approximationalgorithm producesanoptimalsolution andanap proximationalgorithmwithalargeapproximationratiomayreturnasolutionthat ismuchworsethanoptimal formanyproblems wehavepolynomial timeapproximationalgorithmswithsmallconstantapproximationratios althoughforotherproblems thebestknown polynomial timeapproximationalgorithmshaveapproximationratiosthatgrow asfunctionsoftheinputsizen anexampleofsuchaproblemistheset coverproblempresentedinsection somenp completeproblemsallowpolynomial timeapproximationalgorithmsthatcanachieveincreasinglybetterapproximationratiosbyusingmoreandmorecomputationtime thatis wecantradecomputationtimeforthequalityoftheapproximation anexampleisthesubset sumproblemstudiedinsection thissituationisimportantenoughtodeserveanameofitsown anapproximationschemeforanoptimizationproblemisanapproximational gorithmthattakesasinputnotonlyaninstanceoftheproblem butalsoavalue suchthatforany xed theschemeisa approximationalgorithm wesaythatanapproximationschemeisapolynomial timeapproximationschemeifforany xed theschemerunsintimepolynomialinthesizenofitsinputinstance therunningtimeofapolynomial timeapproximationschemecanincreaseveryrapidlyasdecreases forexample therunningtimeofapolynomial timeap proximationschememightbeo ideally ifdecreasesbyaconstantfactor therunningtimetoachievethedesiredapproximationshouldnotincreasebymore thanaconstantfactor thoughnotnecessarilythesameconstantfactorbywhichdecreased wesaythatanapproximationschemeisafullypolynomial timeapproximationschemeifitisanapproximationschemeanditsrunningtimeispolynomialinbothandthesizenoftheinputinstance forexample theschememighthavearunningtimeofo withsuchascheme anyconstant factordecreaseincomeswithacorrespondingconstant factorincreaseintherunningtime whentheapproximationratioisindependentofn weusetheterms approximationratioof approximationalgorithm indicatingnodependenceonn chapter approximationalgorithmschapteroutlinethe rstfoursectionsofthischapterpresentsomeexamplesofpolynomial timeapproximationalgorithmsfornp completeproblems andthe fthsectionpresents afullypolynomial timeapproximationscheme beginswithastudy ofthevertex coverproblem annp completeminimizationproblemthathasan approximationalgorithmwithanapproximationratioof presentsanapproximationalgorithmwithanapproximationratioof forthecaseofthetraveling salesmanprobleminwhichthecostfunctionsatis esthetrianglein equality italsoshowsthatwithoutthetriangleinequality foranyconstant approximationalgorithmcannotexistunlesspdnp insection weshowhowtouseagreedymethodasaneffectiveapproximationalgorithmforthe coveringproblem obtainingacoveringwhosecostisatworstalogarithmic factorlargerthantheoptimalcost presentstwomoreapproximation algorithms firstwestudytheoptimizationversionof cnfsatis abilityandgiveasimplerandomizedalgorithmthatproducesasolutionwithanexpectedap proximationratioof thenweexamineaweightedvariantofthevertex coverproblemandshowhowtouselinearprogrammingtodevelopa approximationalgorithm finally presentsafullypolynomial timeapproximationschemeforthesubset sumproblem thevertex coverproblemsection nedthevertex coverproblemandproveditnp recall thatavertexcoverofanundirectedgraphgd isasubsetv vsuchthatif isanedgeofg theneitheru orboth thesizeofavertexcoveristhenumberofverticesinit thevertex coverproblemisto ndavertexcoverofminimumsizeinagivenundirectedgraph wecallsuchavertexcoveranoptimalvertexcover thisprob lemistheoptimizationversionofannp completedecisionproblem eventhoughwedon tknowhowto ndanoptimalvertexcoverinagraphginpolynomialtime wecanef ciently ndavertexcoverthatisnear optimal thefollowingapproximationalgorithmtakesasinputanundirectedgraphgandreturnsavertexcoverwhosesizeisguaranteedtobenomorethantwicethesize ofanoptimalvertexcover thevertex coverproblem bcdaefg bcdaefg bcdaefg bcdaefg bcdaefg bcdaefg theoperationofapprox vertex theinputgraphg whichhas verticesand edges theedge shownheavy isthe rstedgechosenbyapprox vertex verticesbandc shownlightlyshaded areaddedtothesetccontainingthevertexcoverbeingcreated edges showndashed areremovedsincetheyarenowcoveredbysomevertexinc ischosen verticeseandfareaddedtoc ischosen verticesdandgareaddedtoc thesetc whichisthevertexcoverproducedbyapprox vertex containsthesixverticesb theoptimalvertexcoverforthisproblemcontainsonlythreevertices ande approx vertex whilee beanarbitraryedgeofe cdc removefrome everyedgeincidentoneitheruor returncfigure illustrateshowapprox vertex coveroperatesonanexamplegraph thevariableccontainsthevertexcoverbeingconstructed ini tializesctotheemptyset setse tobeacopyoftheedgesetg eofthegraph theloopoflines repeatedlypicksanedge frome addsits chapter approximationalgorithmsendpointsuandtoc anddeletesalledgesine thatarecoveredbyeitheruor finally returnsthevertexcoverc therunningtimeofthisalgorithmiso vce usingadjacencyliststorepresente theorem approx vertex coverisapolynomial approximationalgorithm proofwehavealreadyshownthatapprox vertex coverrunsinpolyno mialtime thesetcofverticesthatisreturnedbyapprox vertex coverisavertexcover sincethealgorithmloopsuntileveryedgeing ehasbeencoveredbysomevertexinc toseethatapprox vertex coverreturnsavertexcoverthatisatmosttwicethesizeofanoptimalcover letadenotethesetofedgesthatline ofapprox vertex coverpicked inordertocovertheedgesina anyvertexcover inparticular anoptimalcoverc mustincludeatleastoneendpointofeachedgeina notwoedgesinashareanendpoint sinceonceanedgeispickedinline allotheredgesthatareincidentonitsendpointsaredeletedfrome inline notwoedgesinaarecoveredbythesamevertexfromc andwehavethelowerboundjcjjaj onthesizeofanoptimalvertexcover eachexecutionofline picksanedgeforwhichneitherofitsendpointsisalreadyinc yieldinganupperbound anexactupperbound infact onthesizeofthevertexcoverreturned jcjd jaj combiningequations weobtainjcjd jaj jcj therebyprovingthetheorem letusre ectonthisproof rst youmightwonderhowwecanpossiblyprovethatthesizeofthevertexcoverreturnedbyapprox vertex coverisatmosttwicethesizeofanoptimalvertexcover whenwedonotevenknowthesize ofanoptimalvertexcover insteadofrequiringthatweknowtheexactsizeofan optimalvertexcover werelyonalowerboundonthesize asexercise asks youtoshow thesetaofedgesthatline ofapprox vertex coverselectsisactuallyamaximalmatchinginthegraphg amaximalmatchingisamatchingthatisnotapropersubsetofanyothermatching thesizeofamaximalmatching thetraveling salesmanproblem aswearguedintheproofoftheorem alowerboundonthesizeofanoptimalvertexcover thealgorithmreturnsavertexcoverwhosesizeisatmost twicethesizeofthemaximalmatchinga byrelatingthesizeofthesolutionreturnedtothelowerbound weobtainourapproximationratio wewillusethis methodologyinlatersectionsaswell exercises giveanexampleofagraphforwhichapprox vertex coveralwaysyieldsasuboptimalsolution provethatthesetofedgespickedinline ofapprox vertex coverformsamaximalmatchinginthegraphg professorb undchenproposesthefollowingheuristictosolvethevertex coverproblem repeatedlyselectavertexofhighestdegree andremoveallofitsin cidentedges giveanexampletoshowthattheprofessor sheuristicdoesnothaveanapproximationratioof hint tryabipartitegraphwithverticesofuniformdegreeontheleftandverticesofvaryingdegreeontheright giveanef cientgreedyalgorithmthat ndsanoptimalvertexcoverforatreein lineartime fromtheproofoftheorem weknowthatthevertex coverproblemandthe completecliqueproblemarecomplementaryinthesensethatanoptimalvertex coveristhecomplementofamaximum sizecliqueinthecomplementgraph thisrelationshipimplythatthereisapolynomial timeapproximationalgorithm withaconstantapproximationratioforthecliqueproblem justifyyouranswer thetraveling salesmanprobleminthetraveling salesmanproblemintroducedinsection wearegivena completeundirectedgraphgd thathasanonnegativeintegercostc associatedwitheachedge andwemust ndahamiltoniancycle atour ofgwithminimumcost asanextensionofournotation letc denotethetotalcostoftheedgesinthesubsetae chapter approximationalgorithmsc inmanypracticalsituations theleastcostlywaytogofromaplaceutoaplacewistogodirectly withnointermediatesteps putanotherway cuttingoutaninter mediatestopneverincreasesthecost weformalizethisnotionbysayingthatthe costfunctioncsatis esthetriangleinequalityif forallverticesu thetriangleinequalityseemsasthoughitshouldnaturallyhold anditisau tomaticallysatis edinseveralapplications forexample iftheverticesofthe grapharepointsintheplaneandthecostoftravelingbetweentwoverticesisthe ordinaryeuclideandistancebetweenthem thenthetriangleinequalityissatis furthermore manycostfunctionsotherthaneuclideandistancesatisfythetriangle inequality asexercise shows thetraveling salesmanproblemisnp completeevenifwerequirethatthecostfunctionsatisfythetriangleinequality weshould notexpectto ndapolynomial timealgorithmforsolvingthisproblemexactly instead welookforgoodapproximationalgorithms insection weexaminea approximationalgorithmforthetraveling salesmanproblemwiththetriangleinequality insection weshowthatwithoutthetriangleinequality apolynomial timeapproximationalgorithmwithaconstantapproximationratiodoesnotexistunlesspdnp thetraveling salesmanproblemwiththetriangleinequalityapplyingthemethodologyoftheprevioussection weshall rstcomputeastruc ture aminimumspanningtree whoseweightgivesalowerboundonthelengthofanoptimaltraveling salesmantour weshallthenusetheminimumspanningtreetocreateatourwhosecostisnomorethantwicethatoftheminimumspanningtree sweight aslongasthecostfunctionsatis esthetriangleinequality thefol lowingalgorithmimplementsthisapproach callingtheminimum spanning treealgorithmmst primfromsection asasubroutine theparametergisacompleteundirectedgraph andthecostfunctioncsatis esthetriangleinequality approx tsp tour selectavertexr vtobea vertex computeaminimumspanningtreetforgfromrootrusingmst prim lethbealistofvertices orderedaccordingtowhentheyare rstvisitedinapreordertreewalkoft returnthehamiltoniancycleh thetraveling salesmanproblem adbfegch adbfegch adech adbfegch bfgehcabfgdfigure theoperationofapprox tsp tour acompleteundirectedgraph verticeslieonintersectionsofintegergridlines forexample fisoneunittotherightandtwounitsupfromh thecostfunctionbetweentwopointsistheordinaryeuclideandistance aminimumspanningtreetofthecompletegraph ascomputedbymst prim vertexaistherootvertex onlyedgesintheminimumspanningtreeareshown theverticeshappentobelabeledinsuchawaythattheyareaddedtothemaintreebymst priminalphabeticalorder awalkoft startingata afullwalkofthetreevisitstheverticesintheordera apreorderwalkoftlistsavertexjustwhenitis rstencountered asindicatedbythedotnexttoeachvertex yieldingtheorderinga atourobtainedbyvisitingtheverticesintheordergivenbythepreorderwalk whichisthetourhreturnedbyapprox tsp tour itstotalcostisapproximately anoptimaltourhfortheoriginalcompletegraph itstotalcostisapproximately recallfromsection thatapreordertreewalkrecursivelyvisitseveryvertexinthetree listingavertexwhenitis rstencountered beforevisitinganyofitschildren illustratestheoperationofapprox tsp tour ofthe ureshowsacompleteundirectedgraph andpart showstheminimumspanning treetgrownfromrootvertexabymst prim showshowapreorderwalkoftvisitsthevertices andpart displaysthecorrespondingtour whichisthetourreturnedbyapprox tsp tour displaysanoptimaltour whichisabout shorter chapter approximationalgorithmsbyexercise evenwithasimpleimplementationofmst prim therun ningtimeofapprox tsp touris wenowshowthatifthecostfunctionforaninstanceofthetraveling salesmanproblemsatis esthetriangleinequality thenapprox tsp tourreturnsatourwhosecostisnotmorethantwicethecostofanoptimaltour theorem approx tsp tourisapolynomial approximationalgorithmforthetraveling salesmanproblemwiththetriangleinequality proofwehavealreadyseenthatapprox tsp tourrunsinpolynomialtime lethdenoteanoptimaltourforthegivensetofvertices weobtainaspanningtreebydeletinganyedgefromatour andeachedgecostisnonnegative therefore theweightoftheminimumspanningtreetcomputedinline ofapprox tsp tourprovidesalowerboundonthecostofanoptimaltour afullwalkoftliststheverticeswhentheyare rstvisitedandalsowhenevertheyarereturnedtoafteravisittoasubtree letuscallthisfullwalkw thefullwalkofourexamplegivestheordera sincethefullwalktraverseseveryedgeoftexactlytwice wehave extendingourde nitionofthecostcinthenaturalmannertohandlemultisetsofedges inequality andequation implythat andsothecostofwiswithinafactorof ofthecostofanoptimaltour unfortunately thefullwalkwisgenerallynotatour sinceitvisitssomever ticesmorethanonce bythetriangleinequality however wecandeleteavisitto anyvertexfromwandthecostdoesnotincrease ifwedeleteavertexfromwbetweenvisitstouandw theresultingorderingspeci esgoingdirectlyfromutow byrepeatedlyapplyingthisoperation wecanremovefromwallbutthe rstvisittoeachvertex inourexample thisleavestheorderinga thisorderingisthesameasthatobtainedbyapreorderwalkofthetreet lethbethecyclecorrespondingtothispreorderwalk itisahamiltoniancycle sinceev thetraveling salesmanproblem eryvertexisvisitedexactlyonce andinfactitisthecyclecomputedbyapprox tsp tour sincehisobtainedbydeletingverticesfromthefullwalkw wehavec combininginequalities givesc whichcompletestheproof inspiteoftheniceapproximationratioprovidedbytheorem approx tsp tourisusuallynotthebestpracticalchoiceforthisproblem thereareotherapproximationalgorithmsthattypicallyperformmuchbetterinpractice seethe referencesattheendofthischapter thegeneraltraveling salesmanproblemifwedroptheassumptionthatthecostfunctioncsatis esthetriangleinequality thenwecannot ndgoodapproximatetoursinpolynomialtimeunlesspdnp theorem ifp thenforanyconstant thereisnopolynomial timeapproximationalgorithmwithapproximationratioforthegeneraltraveling salesmanproblem prooftheproofisbycontradiction supposetothecontrarythatforsomenum ber thereisapolynomial timeapproximationalgorithmawithapprox imationratio withoutlossofgenerality weassumethatisaninteger byroundingitupifnecessary weshallthenshowhowtouseatosolveinstancesofthehamiltonian cycleproblem nedinsection inpolynomialtime sincetheorem tellsusthatthehamiltonian cycleproblemisnp theorem impliesthatifwecansolveitinpolynomialtime thenpdnp letgd beaninstanceofthehamiltonian cycleproblem wewishtodetermineef cientlywhethergcontainsahamiltoniancyclebymakinguseofthehypothesizedapproximationalgorithma weturngintoaninstanceofthetraveling salesmanproblemasfollows letg bethecompletegraphonv thatis vandu assignanintegercosttoeachedgeine asfollows jvjc otherwise wecancreaterepresentationsofg andcfromarepresentationofgintimepoly nomialinjvjandjej chapter approximationalgorithmsnow considerthetraveling salesmanproblem iftheoriginalgraphghasahamiltoniancycleh thenthecostfunctioncassignstoeachedgeofhacostof andso containsatourofcostjvj ontheotherhand ifgdoesnotcontainahamiltoniancycle thenanytourofg mustusesomeedgenotine butanytourthatusesanedgenotinehasacostofatleastjvjc jvj djvjcjvjjvj becauseedgesnotingaresocostly thereisagapofatleastjvjbetweenthecostofatourthatisahamiltoniancycleing costjvj andthecostofanyothertour costatleastjvjcjvj therefore thecostofatourthatisnotahamiltoniancycleingisatleastafactorofc greaterthanthecostofatourthatisahamiltoniancycleing supposethatweapplytheapproximationalgorithmatothetraveling salesmanproblem becauseaisguaranteedtoreturnatourofcostnomorethantimesthecostofanoptimaltour ifgcontainsahamiltoniancycle thenamustreturnit ifghasnohamiltoniancycle thenareturnsatourofcostmorethanjvj therefore wecanuseatosolvethehamiltonian cycleprobleminpolynomialtime theproofoftheorem servesasanexampleofageneraltechniqueforprovingthatwecannotapproximateaproblemverywell supposethatgivenan hardproblemx wecanproduceinpolynomialtimeaminimizationprob lemysuchthat instancesofxcorrespondtoinstancesofywithvalueatmostk forsomek butthat instancesofxcorrespondtoinstancesofywithvaluegreaterthan wehaveshownthat unlesspdnp thereisnopolynomial approximationalgorithmforproblemy exercises supposethatacompleteundirectedgraphgd withatleast verticeshasacostfunctioncthatsatis esthetriangleinequality provethatc forallu showhowinpolynomialtimewecantransformoneinstanceofthetraveling salesmanproblemintoanotherinstancewhosecostfunctionsatis esthetriangle inequality thetwoinstancesmusthavethesamesetofoptimaltours explain whysuchapolynomial timetransformationdoesnotcontradicttheorem sumingthatp theset coveringproblem considerthefollowingclosest pointheuristicforbuildinganapproximatetrav eling salesmantourwhosecostfunctionsatis esthetriangleinequality withatrivialcycleconsistingofasinglearbitrarilychosenvertex ateachstep identifythevertexuthatisnotonthecyclebutwhosedistancetoanyvertexonthecycleisminimum supposethatthevertexonthecyclethatisnearestuisvertex extendthecycletoincludeubyinsertingujustafter repeatuntilallverticesareonthecycle provethatthisheuristicreturnsatourwhosetotalcostisnotmorethantwicethecostofanoptimaltour inthebottlenecktraveling salesmanproblem wewishto ndthehamiltoniancy clethatminimizesthecostofthemostcostlyedgeinthecycle assumingthatthe costfunctionsatis esthetriangleinequality showthatthereexistsapolynomial timeapproximationalgorithmwithapproximationratio forthisproblem hint showrecursivelythatwecanvisitallthenodesinabottleneckspanningtree discussedinproblem exactlyoncebytakingafullwalkofthetreeandskip pingnodes butwithoutskippingmorethantwoconsecutiveintermediatenodes showthatthecostliestedgeinabottleneckspanningtreehasacostthatisatmost thecostofthecostliestedgeinabottleneckhamiltoniancycle supposethattheverticesforaninstanceofthetraveling salesmanproblemare pointsintheplaneandthatthecostc istheeuclideandistancebetweenpointsuand showthatanoptimaltournevercrossesitself theset coveringproblemtheset coveringproblemisanoptimizationproblemthatmodelsmanyproblemsthatrequireresourcestobeallocated itscorrespondingdecisionproblemgeneral izesthenp completevertex coverproblemandisthereforealsonp theap proximationalgorithmdevelopedtohandlethevertex coverproblemdoesn tapplyhere however andsoweneedtotryotherapproaches weshallexamineasimplegreedyheuristicwithalogarithmicapproximationratio thatis asthesizeofthe instancegetslarger thesizeoftheapproximatesolutionmaygrow relativetothe sizeofanoptimalsolution becausethelogarithmfunctiongrowsratherslowly however thisapproximationalgorithmmaynonethelessgiveusefulresults chapter approximationalgorithmss aninstance oftheset coveringproblem wherexconsistsofthe blackpointsandfdfs aminimum sizesetcoveriscdfs withsize thegreedyalgorithmproducesacoverofsize byselectingeitherthesetss ands orthesetss ands inorder aninstance oftheset coveringproblemconsistsofa nitesetxandafamilyfofsubsetsofx suchthateveryelementofxbelongstoatleastonesubsetinf wesaythatasubsets fcoversitselements theproblemisto ndaminimum sizesubsetcfwhosememberscoverallofx wesaythatanycsatisfyingequation coversx illustratestheset coveringproblem thesizeofcisthenumberofsetsitcontains ratherthanthenumberofindividualelementsinthesesets sinceeverysubsetcthatcoversxmustcontainalljxjindividualelements infigure theminimumsetcoverhassize theset coveringproblemabstractsmanycommonlyarisingcombinatorialprob lems asasimpleexample supposethatxrepresentsasetofskillsthatareneededtosolveaproblemandthatwehaveagivensetofpeopleavailabletoworkonthe wewishtoformacommittee containingasfewpeopleaspossible suchthatforeveryrequisiteskillinx atleastonememberofthecommitteehasthatskill inthedecisionversionoftheset coveringproblem weaskwhethera coveringexistswithsizeatmostk wherekisanadditionalparameterspeci edintheprobleminstance thedecisionversionoftheproblemisnp asexercise asksyoutoshow theset coveringproblem agreedyapproximationalgorithmthegreedymethodworksbypicking ateachstage thesetsthatcoversthegreat estnumberofremainingelementsthatareuncovered greedy udx whileu selectans fthatmaximizesjs udus cdc fsg returncintheexampleoffigure greedy coveraddstoc inorder thesetss ands followedbyeithers ors thealgorithmworksasfollows thesetucontains ateachstage thesetofremaininguncoveredelements thesetccontainsthecoverbeingconstructed isthegreedydecision makingstep choosingasubsetsthatcoversasmanyuncoveredelementsaspossible breakingtiesarbitrarily aftersisselected removesitselementsfromu andline placessintoc whenthealgorithmterminates thesetccontainsasubfamilyoffthatcoversx wecaneasilyimplementgreedy covertorunintimepolynomialinjxjandjfj sincethenumberofiterationsofthelooponlines isboundedfromabovebymin jxj jfj andwecanimplementtheloopbodytorunintimeo jxjjfj asimpleimplementationrunsintimeo jxjjfjmin jxj jfj ercise asksforalinear timealgorithm analysiswenowshowthatthegreedyalgorithmreturnsasetcoverthatisnottoomuchlargerthananoptimalsetcover forconvenience inthischapterwedenotethedthharmonicnumberhddpdid seesectiona byh asaboundarycondition wede neh theorem greedy coverisapolynomial approximationalgorithm maxfjsjws proofwehavealreadyshownthatgreedy coverrunsinpolynomialtime chapter approximationalgorithmstoshowthatgreedy coverisa approximationalgorithm weas signacostof toeachsetselectedbythealgorithm distributethiscostovertheelementscoveredforthe rsttime andthenusethesecoststoderivethede siredrelationshipbetweenthesizeofanoptimalsetcovercandthesizeofthesetcovercreturnedbythealgorithm letsidenotetheithsubsetselectedbygreedy thealgorithmincursacostof whenitaddssitoc wespreadthiscostofselectingsievenlyamongtheelementscoveredforthe rsttimebysi letcxdenotethecostallocatedtoelementx foreachx eachelementisassignedacostonlyonce whenitiscoveredforthe rsttime ifxiscoveredforthe rsttimebysi thencxd jsi eachstepofthealgorithmassigns unitofcost andsojcjdxx xcx eachelementx xisinatleastonesetintheoptimalcoverc andsowehavexs cxx scxxx xcx combiningequation andinequality wehavethatjcjxs cxx scx theremainderoftheproofrestsonthefollowingkeyinequality whichweshallproveshortly foranysetsbelongingtothefamilyf scxh jsj frominequalities itfollowsthatjcjxs jsj jcjh maxfjsjws thusprovingthetheorem allthatremainsistoproveinequality consideranysets fandanyid jcj andletuidjs jbethenumberofelementsinsthatremainuncoveredafterthealgorithmhasselectedsetss wede neu djsjtobethenumberofelements theset coveringproblem ofs whichareallinitiallyuncovered letkbetheleastindexsuchthatukd sothateveryelementinsiscoveredbyatleastoneofthesetss skandsomeelementinsisuncoveredbys andui uielementsofsarecoveredforthe rsttimebysi forid scxdkxid jsi observethatjsi jjs jdui becausethegreedychoiceofsiguaranteesthatscannotcovermorenewele mentsthansidoes otherwise thealgorithmwouldhavechosensinsteadofsi consequently weobtainxx scxkxid wenowboundthisquantityasfollows scxkxid dkxid xjduic kxid xjduic becausejui dkxid xjd juixjd dkxid becausethesumtelescopes becauseh jsj whichcompletestheproofofinequality chapter approximationalgorithmscorollary greedy coverisapolynomial lnjxjc approximationalgorithm proofuseinequality andtheorem insomeapplications maxfjsjws fgisasmallconstant andsothesolutionreturnedbygreedy coverisatmostasmallconstanttimeslargerthanoptimal onesuchapplicationoccurswhenthisheuristic ndsanapproximate vertexcoverforagraphwhoseverticeshavedegreeatmost inthiscase thesolutionfoundbygreedy coverisnotmorethanh timesaslargeasanoptimalsolution aperformanceguaranteethatisslightlybetterthan thatofapprox vertex exercises considereachofthefollowingwordsasasetofletters farid dash drain shun slate snare threadg showwhichsetcovergreedy coverproduceswhenwebreaktiesinfavorofthewordthatap pears rstinthedictionary showthatthedecisionversionoftheset coveringproblemisnp completeby reducingitfromthevertex coverproblem showhowtoimplementgreedy coverinsuchawaythatitrunsintimeops fjsj showthatthefollowingweakerformoftheorem istriviallytrue jcjjcjmaxfjsjws greedy covercanreturnanumberofdifferentsolutions dependingonhowwebreaktiesinline giveaprocedurebad instance thatreturnsann elementinstanceoftheset coveringproblemforwhich ingonhowwebreaktiesinline greedy covercanreturnanumberofdifferentsolutionsthatisexponentialinn randomizationandlinearprogramming randomizationandlinearprogramminginthissection westudytwousefultechniquesfordesigningapproximationalgo rithms randomizationandlinearprogramming weshallgiveasimplerandomized algorithmforanoptimizationversionof cnfsatis ability andthenweshalluse linearprogrammingtohelpdesignanapproximationalgorithmforaweightedver sionofthevertex coverproblem thissectiononlyscratchesthesurfaceofthesetwopowerfultechniques thechapternotesgivereferencesforfurtherstudyof theseareas arandomizedapproximationalgorithmformax cnfsatis abilityjustassomerandomizedalgorithmscomputeexactsolutions somerandomizedalgorithmscomputeapproximatesolutions wesaythatarandomizedalgorithm foraproblemhasanapproximationratioof foranyinputofsizen theexpectedcostcofthesolutionproducedbytherandomizedalgorithmiswithinafactorof ofthecostcofanoptimalsolution maxcc wecallarandomizedalgorithmthatachievesanapproximationratioof arandomizedn approximationalgorithm inotherwords arandomizedap proximationalgorithmislikeadeterministicapproximationalgorithm exceptthat theapproximationratioisforanexpectedcost aparticularinstanceof cnfsatis ability asde nedinsection mayormaynotbesatis inordertobesatis theremustexistanassignmentof thevariablessothateveryclauseevaluatesto ifaninstanceisnotsatis wemaywanttocomputehow tosatis ableitis thatis wemaywishto ndanassignmentofthevariablesthatsatis esasmanyclausesaspossible wecalltheresultingmaximizationproblemmax cnfsatis ability theinputtomax cnfsatis abilityisthesameasfor cnfsatis ability andthegoalistoreturnanassignmentofthevariablesthatmaximizesthenumberofclausesevaluatingto wenowshowthatrandomlysettingeachvariableto withprobability andto withprobability yieldsarandomized approximationalgorithm accordingtothede nitionof cnfsatis abilityfromsection werequireeachclausetoconsistofexactlythreedistinctliterals wefurtherassumethat noclausecontainsbothavariableanditsnegation asksyouto removethislastassumption chapter approximationalgorithmstheorem givenaninstanceofmax cnfsatis abilitywithnvariablesx xnandmclauses therandomizedalgorithmthatindependentlysetseachvari ableto withprobability andto withprobability isarandomized approximationalgorithm proofsupposethatwehaveindependentlyseteachvariableto withprobabil ity andto withprobability forid wede netheindicatorrandomvariableyidifclauseiissatis edg sothatyid aslongaswehavesetatleastoneoftheliteralsintheithclauseto sincenoliteralappearsmorethanonceinthesameclause andsincewehaveassumedthatnovariableanditsnegationappearinthesameclause thesettingsofthethreeliteralsineachclauseareindependent aclauseisnotsatis edonlyifallthreeofitsliteralsaresetto andsoprfclauseiisnotsatis edgd wehaveprfclauseiissatis edgd andbylemma wehavee yid letybethenumberofsatis edclausesoverall sothatydy ccym wehavee yde mxid dmxid bylinearityofexpectation dmxid clearly misanupperboundonthenumberofsatis edclauses andhencetheapproximationratioisatmostm approximatingweightedvertexcoverusinglinearprogrammingintheminimum weightvertex coverproblem wearegivenanundirectedgraphgd inwhicheachvertex vhasanassociatedpositiveweightw foranyvertexcoverv wede netheweightofthevertexcoverw thegoalisto ndavertexcoverofminimumweight wecannotapplythealgorithmusedforunweightedvertexcover norcanweusearandomsolution bothmethodsmayreturnsolutionsthatarefarfromoptimal weshall however computealowerboundontheweightoftheminimum randomizationandlinearprogramming vertexcover byusingalinearprogram weshallthen thissolutionanduseittoobtainavertexcover supposethatweassociateavariablex witheachvertex andletusrequirethatx equalseither foreach weputintothevertexcoverifandonlyifx wecanwritetheconstraintthatforanyedge atleastoneofuandmustbeinthevertexcoverasx thisviewgivesrisetothefollowing integerprogramfor ndingaminimum weightvertexcover minimizex subjecttox foreach gforeach inthespecialcaseinwhichalltheweightsw areequalto thisformu lationistheoptimizationversionofthenp hardvertex coverproblem sup however thatweremovetheconstraintthatx gandreplaceitby wethenobtainthefollowinglinearprogram whichisknownasthelinear programmingrelaxation minimizex subjecttox foreach foreach foreach anyfeasiblesolutiontothe integerprograminlines isalsoafeasiblesolutiontothelinearprograminlines therefore valueofanoptimalsolutiontothelinearprogramgivesalowerboundonthevalueofanoptimalsolutiontothe integerprogram andhencealowerboundontheoptimalweightintheminimum weightvertex coverproblem thefollowingprocedureusesthesolutiontothelinear programmingrelaxationtoconstructanapproximatesolutiontotheminimum weightvertex coverproblem chapter approximationalgorithmsapprox min computenx anoptimalsolutiontothelinearprograminlines foreach ifnx cdc returnctheapprox min vcprocedureworksasfollows initial izesthevertexcovertobeempty formulatesthelinearprogramin lines andthensolvesthislinearprogram anoptimalsolution giveseachvertexanassociatedvaluenx weusethisvaluetoguidethechoiceofwhichverticestoaddtothevertexcovercinlines ifnx weaddtoc otherwisewedonot ineffect weare rounding eachfractionalvariableinthesolutiontothelinearprogramto inordertoobtainasolutiontothe integerprograminlines finally returnsthevertexcoverc theorem algorithmapprox min vcisapolynomial approximational gorithmfortheminimum weightvertex coverproblem proofbecausethereisapolynomial timealgorithmtosolvethelinearprograminline andbecausetheforloopoflines runsinpolynomialtime approx min vcisapolynomial timealgorithm nowweshowthatapprox min vcisa approximationalgo rithm letcbeanoptimalsolutiontotheminimum weightvertex coverprob lem andlet bethevalueofanoptimalsolutiontothelinearprograminlines sinceanoptimalvertexcoverisafeasiblesolutiontothe linearprogram mustbealowerboundonw thatis weclaimthatbyroundingthefractionalvaluesofthevariablesnx weproduceasetcthatisavertexcoverandsatis esw toseethatcisavertexcover consideranyedge byconstraint weknowthatx whichimpliesthatatleastoneofnx andnx isatleast therefore atleastoneofuandisincludedinthevertexcover andsoeveryedgeiscovered weconsidertheweightofthecover wehave randomizationandlinearprogramming vwnx vwnx combininginequalities givesw andhenceapprox min vcisa approximationalgorithm exercises showthatevenifweallowaclausetocontainbothavariableanditsnegation domlysettingeachvariableto withprobability andto withprobability stillyieldsarandomized approximationalgorithm themax cnfsatis abilityproblemislikethemax cnfsatis abilityprob lem exceptthatitdoesnotrestricteachclausetohaveexactly literals givearandomized approximationalgorithmforthemax cnfsatis abilityproblem inthemax cutproblem wearegivenanunweightedundirectedgraphgd wede neacut asinchapter andtheweightofacutasthenumberofedgescrossingthecut thegoalisto ndacutofmaximumweight supposethatforeachvertex werandomlyandindependentlyplaceinswithprobability andinvswithprobability showthatthisalgorithmisarandomized approximationalgorithm chapter approximationalgorithms showthattheconstraintsinline areredundantinthesensethatifwere movethemfromthelinearprograminlines anyoptimalsolution totheresultinglinearprogrammustsatisfyx foreach thesubset sumproblemrecallfromsection thataninstanceofthesubset sumproblemisapair wheresisasetfx xngofpositiveintegersandtisaposi tiveinteger thisdecisionproblemaskswhetherthereexistsasubsetofsthataddsupexactlytothetargetvaluet aswesawinsection thisproblemisnp theoptimizationproblemassociatedwiththisdecisionproblemarisesinprac ticalapplications intheoptimizationproblem wewishto ndasubsetoffx xngwhosesumisaslargeaspossiblebutnotlargerthant forex ample wemayhaveatruckthatcancarrynomorethantpounds andndifferentboxestoship theithofwhichweighsxipounds wewishto llthetruckwithasheavyaloadaspossiblewithoutexceedingthegivenweightlimit inthissection wepresentanexponential timealgorithmthatcomputestheop timalvalueforthisoptimizationproblem andthenweshowhowtomodifythe algorithmsothatitbecomesafullypolynomial timeapproximationscheme callthatafullypolynomial timeapproximationschemehasarunningtimethatis polynomialinaswellasinthesizeoftheinput anexponential timeexactalgorithmsupposethatwecomputed foreachsubsets ofs thesumoftheelementsins andthenweselected amongthesubsetswhosesumdoesnotexceedt theonewhosesumwasclosesttot clearlythisalgorithmwouldreturntheop timalsolution butitcouldtakeexponentialtime toimplementthisalgorithm wecoulduseaniterativeprocedurethat initerationi computesthesumsofallsubsetsoffx xig usingasastartingpointthesumsofallsubsetsoffx indoingso wewouldrealizethatonceaparticularsubsets hadasumexceedingt therewouldbenoreasontomaintainit sincenosuper setofs couldbetheoptimalsolution wenowgiveanimplementationofthisstrategy theprocedureexact subset sumtakesaninputsetsdfx xngandatargetvaluet llseeitspseudocodeinamoment thisprocedureit thesubset sumproblem erativelycomputesli thelistofsumsofallsubsetsoffx xigthatdonotexceedt andthenitreturnsthemaximumvalueinln iflisalistofpositiveintegersandxisanotherpositiveinteger thenweletlcxdenotethelistofintegersderivedfromlbyincreasingeachelementoflbyx forexample ifldh thenlc wealsousethisnotationforsets sothatscxdfscxws wealsouseanauxiliaryproceduremerge lists whichreturnsthesortedlistthatisthemergeofitstwosortedinputlistslandl withduplicatevaluesremoved likethemergeprocedureweusedinmergesort merge listsrunsintimeo jljcjl weomitthepseudocodeformerge lists subset sum ndjsj forid ton lidmerge lists cxi removefromlieveryelementthatisgreaterthant returnthelargestelementinlntoseehowexact subset sumworks letpidenotethesetofallvaluesobtainedbyselectinga possiblyempty subsetoffx xigandsummingitsmembers forexample ifsdf thenp giventheidentity pidpi cxi wecanprovebyinductiononi seeexercise thatthelistliisasortedlistcontainingeveryelementofpiwhosevalueisnotmorethant sincethelengthoflicanbeasmuchas subset sumisanexponential timealgorithmingeneral althoughitisapolynomial timealgorithminthespecialcasesinwhichtispolynomialinjsjorallthenumbersinsareboundedbyapolynomialinjsj afullypolynomial timeapproximationschemewecanderiveafullypolynomial timeapproximationschemeforthesubset sumproblemby trimming eachlistliafteritiscreated theideabehindtrimmingis chapter approximationalgorithmsthatiftwovaluesinlareclosetoeachother thensincewewantjustanapproxi matesolution wedonotneedtomaintainbothofthemexplicitly moreprecisely weuseatrimmingparameter suchthat whenwetrimalistlby weremoveasmanyelementsfromlaspossible insuchawaythatifl istheresultoftrimmingl thenforeveryelementythatwasremovedfroml thereisanelement stillinl thatapproximatesy thatis wecanthinkofsucha representing yinthenewlistl eachremovedelementyisrepresentedbyaremainingelement satisfyinginequality forexample andldh thenwecantrimltoobtainl wherethedeletedvalue isrepresentedby thedeletedvalues arerepresentedby andthedeletedvalue isrepresentedby becauseeveryelementofthetrimmedversionofthelistisalsoanelementoftheoriginal versionofthelist trimmingcandramaticallydecreasethenumberofelementskept whilekeepingaclose andslightlysmaller representativevalueinthelistforeach deletedelement thefollowingproceduretrimslistldhy ymiintime givenland andassumingthatlissortedintomonotonicallyincreasingorder theoutputoftheprocedureisatrimmed sortedlist trim letmbethelengthofl dhy lastdy forid tom ifyi yilastbecauselissorted appendyiontotheendofl lastdyi returnl theprocedurescanstheelementsoflinmonotonicallyincreasingorder anum berisappendedontothereturnedlistl onlyifitisthe rstelementoflorifitcannotberepresentedbythemostrecentnumberplacedintol giventheproceduretrim wecanconstructourapproximationschemeasfol lows thisproceduretakesasinputasetsdfx xngofnintegers inarbitraryorder atargetintegert andan approximationparameter thesubset sumproblem itreturnsavalue whosevalueiswithina cfactoroftheoptimalsolution approx subset sum ndjsj forid ton lidmerge lists cxi lidtrim removefromlieveryelementthatisgreaterthant bethelargestvalueinln return initializesthelistl tobethelistcontainingjusttheelement theforloopinlines computesliasasortedlistcontainingasuitablytrimmedver sionofthesetpi withallelementslargerthantremoved sincewecreatelifromli wemustensurethattherepeatedtrimmingdoesn tintroducetoomuchcompoundedinaccuracy inamoment weshallseethatapprox subset sumreturnsacorrectapproximationifoneexists asanexample supposewehavetheinstancesdh iwithtd andd thetrimmingparameter approx subset sumcomputesthefollowingvaluesontheindicatedlines chapter approximationalgorithmsthealgorithmreturns asitsanswer whichiswellwithind oftheoptimalanswer infact itiswithin theorem approx subset sumisafullypolynomial timeapproximationschemeforthesubset sumproblem prooftheoperationsoftrimmingliinline andremovingfromlieveryele mentthatisgreaterthantmaintainthepropertythateveryelementofliisalsoamemberofpi therefore thevalue returnedinline isindeedthesumofsomesubsetofs lety pndenoteanoptimalsolutiontothesubset sumproblem fromline weknowthat byinequality weneedtoshowthaty wemustalsoshowthattherunningtimeofthisalgorithmispolynomialinbothandthesizeoftheinput asexercise asksyoutoshow foreveryelementyinpithatisatmostt thereexistsanelement lisuchthaty inequality mustholdfory andthereforethereexistsanelement lnsuchthaty andthusy sincethereexistsanelement lnful llinginequality theinequalitymustholdfor whichisthelargestvalueinln thatis weshowthaty wedosobyshowingthat byequation wehavelimn nde asksyoutoshowthatddn therefore thefunction nincreaseswithnasitapproachesitslimitofe andwehave thesubset sumproblem nne byinequality byinequality combininginequalities completestheanalysisoftheapproxi mationratio toshowthatapprox subset sumisafullypolynomial timeapproximationscheme wederiveaboundonthelengthofli aftertrimming successiveele ments oflimusthavetherelationship thatis theymustdifferbyafactorofatleast eachlist therefore containsthevalue possiblythevalue anduptolog additionalvalues thenumberofelementsineachlistliisatmostlog ntc dlntln lntc byinequality nlntc byinequality thisboundispolynomialinthesizeoftheinput whichisthenumberofbitslgtneededtorepresenttplusthenumberofbitsneededtorepresentthesets whichisinturnpolynomialinn andin sincetherunningtimeofapprox subset sumispolynomialinthelengthsoftheli weconcludethatapprox subset sumisafullypolynomial timeapproximationscheme exercises proveequation thenshowthatafterexecutingline ofexact subset sum liisasortedlistcontainingeveryelementofpiwhosevalueisnotmorethant usinginductiononi proveinequality proveinequality chapter approximationalgorithms howwouldyoumodifytheapproximationschemepresentedinthissectionto agoodapproximationtothesmallestvaluenotlessthantthatisasumofsomesubsetofthegiveninputlist modifytheapprox subset sumproceduretoalsoreturnthesubsetofsthatsumstothevalue problems binpackingsupposethatwearegivenasetofnobjects wherethesizesioftheithobjectsatis wewishtopackalltheobjectsintotheminimumnumberofunit sizebins eachbincanholdanysubsetoftheobjectswhosetotalsizedoes notexceed provethattheproblemofdeterminingtheminimumnumberofbinsrequiredisnp hint reducefromthesubset sumproblem rst theuristictakeseachobjectinturnandplacesitintothe rstbinthatcanaccommodateit letsdpnid arguethattheoptimalnumberofbinsrequiredisatleastdse arguethatthe rst theuristicleavesatmostonebinlessthanhalffull provethatthenumberofbinsusedbythe rst theuristicisnevermorethand proveanapproximationratioof forthe rst theuristic giveanef cientimplementationofthe rst theuristic andanalyzeitsrunningtime approximatingthesizeofamaximumcliqueletgd beanundirectedgraph foranyk neg tobetheundi rectedgraph wherev isthesetofallorderedk tuplesofverticesfromvande isde nedsothat isadjacentto ifandonlyifforid eithervertexiisadjacenttowiing orelseidwi problemsforchapter provethatthesizeofthemaximumcliqueing isequaltothekthpowerofthesizeofthemaximumcliqueing arguethatifthereisanapproximationalgorithmthathasaconstantapproxi mationratiofor ndingamaximum sizeclique thenthereisapolynomial approximationschemefortheproblem weightedset coveringproblemsupposethatwegeneralizetheset coveringproblemsothateachsetsiinthefamilyfhasanassociatedweightwiandtheweightofacovercispsi cwi wewishtodetermineaminimum weightcover handlesthecasein whichwid foralli showhowtogeneralizethegreedyset coveringheuristicinanaturalmannertoprovideanapproximatesolutionforanyinstanceoftheweightedset covering showthatyourheuristichasanapproximationratioofh wheredisthemaximumsizeofanysetsi maximummatchingrecallthatforanundirectedgraphg amatchingisasetofedgessuchthatnotwoedgesinthesetareincidentonthesamevertex insection wesawhow ndamaximummatchinginabipartitegraph inthisproblem wewilllookat matchingsinundirectedgraphsingeneral thegraphsarenotrequiredtobe bipartite amaximalmatchingisamatchingthatisnotapropersubsetofanyothermatching showthatamaximalmatchingneednotbeamaximummatchingbyexhibitinganundirectedgraphgandamaximalmatchingmingthatisnotamaximummatching hint youcan ndsuchagraphwithonlyfourvertices consideranundirectedgraphgd giveano timegreedyalgo rithmto ndamaximalmatchinging inthisproblem weshallconcentrateonapolynomial timeapproximationalgo rithmformaximummatching whereasthefastestknownalgorithmformaximummatchingtakessuperlinear butpolynomial theapproximationalgorithm herewillruninlineartime youwillshowthatthelinear timegreedyalgorithm formaximalmatchinginpart isa approximationalgorithmformaximummatching showthatthesizeofamaximummatchingingisalowerboundonthesizeofanyvertexcoverforg chapter approximationalgorithmsd consideramaximalmatchingmingd lettdf vwsomeedgeinmisincidentong whatcanyousayaboutthesubgraphofginducedbytheverticesofgthatarenotint concludefrompart jmjisthesizeofavertexcoverforg usingparts provethatthegreedyalgorithminpart isa approx imationalgorithmformaximummatching parallelmachineschedulingintheparallel schedulingproblem wearegivennjobs whereeachjobjkhasanassociatednonnegativeprocessingtimeofpk wearealsogivenmidenticalmachines anyjobcanrunonanyma chine aschedulespeci foreachjobjk themachineonwhichitrunsandthetimeperiodduringwhichitruns eachjobjkmustrunonsomemachinemiforpkconsecutivetimeunits andduringthattimeperiodnootherjobmayrunonmi letckdenotethecompletiontimeofjobjk thatis thetimeatwhichjobjkcompletesprocessing givenaschedule wede necmaxdmax jncjtobethemakespanoftheschedule thegoalisto ndaschedulewhosemakespanisminimum forexample supposethatwehavetwomachinesm andm andthatwehavefourjobsj withp andp thenonepossiblescheduleruns onmachinem jobj followedbyjobj andonma chinem itrunsjobj followedbyjobj forthisschedule andcmaxd anoptimalschedulerunsj onmachinem anditrunsjobsj andj onmachinem forthisschedule andcmaxd givenaparallel schedulingproblem weletcmaxdenotethemakespanofanoptimalschedule showthattheoptimalmakespanisatleastaslargeasthegreatestprocessingtime thatis cmaxmax knpk showthattheoptimalmakespanisatleastaslargeastheaveragemachineload thatis cmax knpk problemsforchapter supposethatweusethefollowinggreedyalgorithmforparallelmachineschedul ing wheneveramachineisidle scheduleanyjobthathasnotyetbeenscheduled writepseudocodetoimplementthisgreedyalgorithm whatistherunningtimeofyouralgorithm fortheschedulereturnedbythegreedyalgorithm showthatcmax knpkcmax knpk concludethatthisalgorithmisapolynomial approximationalgorithm approximatingamaximumspanningtreeletgd beanundirectedgraphwithdistinctedgeweightsw oneachedge foreachvertex letmax dmax efw gbethemaximum weightedgeincidentonthatvertex letsgdfmax vgbethesetofmaximum weightedgesincidentoneachvertex andlettgbethemaximum weightspanningtreeofg thatis thespanningtreeofmaximumtotalweight foranysubsetofedgese giveanexampleofagraphwithatleast verticesforwhichsgdtg giveanexampleofagraphwithatleast verticesforwhichsg provethatsgtgforanygraphg provethatw foranygraphg giveano vce timealgorithmtocomputea approximationtothemaxi mumspanningtree anapproximationalgorithmforthe knapsackproblemrecalltheknapsackproblemfromsection therearenitems wheretheithitemisworthidollarsandweighswipounds wearealsogivenaknapsackthatcanholdatmostwpounds weaddthefurtherassumptionsthateachweightwiisatmostwandthattheitemsareindexedinmonotonicallydecreasingorderoftheirvalues inthe knapsackproblem wewishto ndasubsetoftheitemswhosetotalweightisatmostwandwhosetotalvalueismaximum thefractionalknapsackproblemislikethe knapsackproblem exceptthatweareallowedtotakea fractionofeachitem ratherthanbeingrestrictedtotakingeitherallornoneof chapter approximationalgorithmseachitem ifwetakeafractionxiofitemi wecontributexiwitotheweightoftheknapsackandreceivevaluexii ourgoalistodevelopapolynomial approximationalgorithmforthe knapsackproblem inordertodesignapolynomial timealgorithm weconsiderrestrictedinstancesofthe knapsackproblem givenaninstanceioftheknapsackproblem weformrestrictedinstancesij forjd byremovingitems andrequiringthesolutiontoincludeitemj allofitemjinboththefractionaland knapsackproblems noitemsareremovedininstancei forinstanceij letpjdenoteanoptimalsolutiontothe problemandqjdenoteanoptimalsolutiontothefractionalproblem arguethatanoptimalsolutiontoinstanceiofthe knapsackproblemisoneoffp png provethatwecan ndanoptimalsolutionqjtothefractionalproblemforin stanceijbyincludingitemjandthenusingthegreedyalgorithminwhichateachstep wetakeasmuchaspossibleoftheunchoseniteminthesetfjc ngwithmaximumvalueperpoundi provethatwecanalwaysconstructanoptimalsolutionqjtothefractionalproblemforinstanceijthatincludesatmostoneitemfractionally thatis forallitemsexceptpossiblyone weeitherincludealloftheitemornoneofthe itemintheknapsack givenanoptimalsolutionqjtothefractionalproblemforinstanceij formsolutionrjfromqjbydeletinganyfractionalitemsfromqj lets denotethetotalvalueofitemstakeninasolutions provethatrj giveapolynomial timealgorithmthatreturnsamaximum valuesolutionfromthesetfr rng andprovethatyouralgorithmisapolynomial approximationalgorithmforthe knapsackproblem chapternotesalthoughmethodsthatdonotnecessarilycomputeexactsolutionshavebeenknownforthousandsofyears forexample methodstoapproximatethevalue thenotionofanapproximationalgorithmismuchmorerecent hochbaum creditsgarey graham andullman andjohnson withformal izingtheconceptofapolynomial timeapproximationalgorithm rstsuch algorithmisoftencreditedtograham notesforchapter sincethisearlywork thousandsofapproximationalgorithmshavebeende signedforawiderangeofproblems andthereisawealthofliteratureonthis eld recenttextsbyausielloetal hochbaum andvazirani dealexclusivelywithapproximationalgorithms asdosurveysbyshmoys andkleinandyoung severalothertexts suchasgareyandjohnson andpapadimitriouandsteiglitz havesigni cantcoverageofapproximation algorithmsaswell lawler lenstra rinnooykan andshmoys providean extensivetreatmentofapproximationalgorithmsforthetraveling salesmanprob lem papadimitriouandsteiglitzattributethealgorithmapprox vertex covertof gavrilandm yannakakis thevertex coverproblemhasbeenstudiedexten sively hochbaum lists differentapproximationalgorithmsforthisprob lem butalltheapproximationratiosareatleast thealgorithmapprox tsp tourappearsinapaperbyrosenkrantz stearns andlewis christo desimprovedonthisalgorithmandgavea approx imationalgorithmforthetraveling salesmanproblemwiththetriangleinequality arora andmitchell haveshownthatifthepointsareintheeuclideanplane thereisapolynomial timeapproximationscheme theorem isduetosahniandgonzalez theanalysisofthegreedyheuristicfortheset coveringproblemismodeledaftertheproofpublishedbychv atal ofamoregeneralresult thebasicresultaspresentedhereisduetojohnson andlov asz thealgorithmapprox subset sumanditsanalysisarelooselymodeledafterrelatedapproximationalgorithmsfortheknapsackandsubset sumproblemsby ibarraandkim isacombinatorialversionofamoregeneralresultonapproximat ingknapsack typeintegerprogramsbybienstockandmcclosky therandomizedalgorithmformax cnfsatis abilityisimplicitintheworkofjohnson theweightedvertex coveralgorithmisbyhochbaum onlytouchesonthepowerofrandomizationandlinearprogram minginthedesignofapproximationalgorithms acombinationofthesetwoideas yieldsatechniquecalled randomizedrounding whichformulatesaproblemas anintegerlinearprogram solvesthelinear programmingrelaxation andinterprets thevariablesinthesolutionasprobabilities theseprobabilitiesthenhelpguide thesolutionoftheoriginalproblem thistechniquewas rstusedbyraghavan andthompson andithashadmanysubsequentuses seemotwani naor andraghavan forasurvey severalothernotablerecentideasinthe eldofapproximationalgorithmsincludetheprimal dualmethod seegoemansand williamson forasurvey ndingsparsecutsforuseindivide conquer algorithms andtheuseofsemide niteprogramming chapter approximationalgorithmsasmentionedinthechapternotesforchapter recentresultsinprobabilisti callycheckableproofshaveledtolowerboundsontheapproximabilityofmany problems includingseveralinthischapter inadditiontothereferencesthere thechapterbyaroraandlund containsagooddescriptionoftherelation shipbetweenprobabilisticallycheckableproofsandthehardnessofapproximating variousproblems viiiappendix mathematicalbackground introductionwhenweanalyzealgorithms weoftenneedtodrawuponabodyofmathematicaltools someofthesetoolsareassimpleashigh schoolalgebra butothersmaybenewtoyou inparti wesawhowtomanipulateasymptoticnotationsandsolve recurrences thisappendixcomprisesacompendiumofseveralotherconceptsand methodsweusetoanalyzealgorithms asnotedintheintroductiontoparti mayhaveseenmuchofthematerialinthisappendixbeforehavingreadthisbook althoughthespeci cnotationalconventionsweusemightoccasionallydifferfrom thoseyouhaveseenelsewhere hence youshouldtreatthisappendixasreference asintherestofthisbook however wehaveincludedexercisesand problems inorderforyoutoimproveyourskillsintheseareas appendixaoffersmethodsforevaluatingandboundingsummations whichoccurfrequentlyintheanalysisofalgorithms manyoftheformulashereappear inanycalculustext butyouwill nditconvenienttohavethesemethodscompiled inoneplace appendixbcontainsbasicde nitionsandnotationsforsets relations functions graphs andtrees italsogivessomebasicpropertiesofthesemathematicalobjects appendixcbeginswithelementaryprinciplesofcounting permutations com binations andthelike theremaindercontainsde nitionsandpropertiesofbasic probability mostofthealgorithmsinthisbookrequirenoprobabilityfortheir analysis andthusyoucaneasilyomitthelattersectionsofthechapterona rst reading evenwithoutskimmingthem later whenyouencounteraprobabilistic analysisthatyouwanttounderstandbetter youwill ndappendixcwellorga nizedforreferencepurposes partviiiappendix mathematicalbackgroundappendixdde nesmatrices theiroperations andsomeoftheirbasicprop erties youhaveprobablyseenmostofthismaterialalreadyifyouhavetakena courseinlinearalgebra butyoumight ndithelpfultohaveoneplacetolookfor ournotationandde nitions asummationswhenanalgorithmcontainsaniterativecontrolconstructsuchasawhileorforloop wecanexpressitsrunningtimeasthesumofthetimesspentoneachexe cutionofthebodyoftheloop forexample wefoundinsection thatthejthiterationofinsertionsorttooktimeproportionaltojintheworstcase byaddingupthetimespentoneachiteration weobtainedthesummation orseries nxjd whenweevaluatedthissummation weattainedaboundof ontheworst caserunningtimeofthealgorithm thisexampleillustrateswhyyoushouldknow howtomanipulateandboundsummations sectiona listsseveralbasicformulasinvolvingsummations sectiona fersusefultechniquesforboundingsummations wepresenttheformulasinsec tiona withoutproof thoughproofsforsomeofthemappearinsectiona toillustratethemethodsofthatsection youcan ndmostoftheotherproofsinanycalculustext summationformulasandpropertiesgivenasequencea anofnumbers wherenisanonnegativeinteger wecanwritethe nitesuma ccanasnxkd ifnd thevalueofthesummationisde nedtobe thevalueofa niteseriesisalwayswellde ned andwecanadditstermsinanyorder givenanin nitesequencea ofnumbers wecanwritethein nitesuma cas appendixasummations xkd whichweinterprettomeanlimn nxkd ifthelimitdoesnotexist theseriesdiverges otherwise itconverges thetermsofaconvergentseriescannotalwaysbeaddedinanyorder wecan however rearrangethetermsofanabsolutelyconvergentseries thatis aseriesp akforwhichtheseriesp jakjalsoconverges linearityforanyrealnumbercandany nitesequencesa anandb nxkd cakcbk dcnxkd akcnxkd thelinearitypropertyalsoappliestoin niteconvergentseries wecanexploitthelinearitypropertytomanipulatesummationsincorporatingasymptoticnotation forexample nxkd nxkd inthisequation notationontheleft handsideappliestothevariablek butontheright handside itapplieston wecanalsoapplysuchmanipulationstoin niteconvergentseries arithmeticseriesthesummationnxkd ccn isanarithmeticseriesandhasthevaluenxkd summationformulasandproperties sumsofsquaresandcubeswehavethefollowingsummationsofsquaresandcubes nxkd nxkd geometricseriesforrealx thesummationnxkd xkd cxcx ccxnisageometricorexponentialseriesandhasthevaluenxkd xkdxnc whenthesummationisin niteandjxj wehavethein nitedecreasinggeo metricseries xkd xkd harmonicseriesforpositiveintegersn thenthharmonicnumberishnd ndnxkd kdlnnco weshallprovearelatedboundinsectiona integratinganddifferentiatingseriesbyintegratingordifferentiatingtheformulasabove additionalformulasarise forexample bydifferentiatingbothsidesofthein nitegeometricseries multiplyingbyx weget appendixasummations xkd kxkdx forjxj telescopingseriesforanysequencea nxkd akak dana sinceeachofthetermsa isaddedinexactlyonceandsubtractedoutexactlyonce wesaythatthesumtelescopes similarly xkd akakc asanexampleofatelescopingsum considertheseriesn xkd sincewecanrewriteeachtermas wegetn xkd xkd productswecanwritethe niteproducta anasnykd ifnd thevalueoftheproductisde nedtobe wecanconvertaformulawithaproducttoaformulawithasummationbyusingtheidentitylg nykd dnxkd lgak boundingsummations exercisesa findasimpleformulaforpnkd showthatpnkd dln bymanipulatingtheharmonicseries showthatp xkdx jxj showthatp evaluatethesump provethatpnkd dopnkd byusingthelinearitypropertyofsummations evaluatetheproductqnkd evaluatetheproductqnkd boundingsummationswehavemanytechniquesatourdisposalforboundingthesummationsthatde scribetherunningtimesofalgorithms herearesomeofthemostfrequentlyused methods mathematicalinductionthemostbasicwaytoevaluateaseriesistousemathematicalinduction asanexample letusprovethatthearithmeticseriespnkd kevaluatesto wecaneasilyverifythisassertionfornd wemaketheinductiveassumptionthat appendixasummationsitholdsforn andweprovethatitholdsfornc wehavenc xkd kdnxkd youdon talwaysneedtoguesstheexactvalueofasummationinordertousemathematicalinduction instead youcanuseinductiontoproveaboundonasum mation asanexample letusprovethatthegeometricseriespnkd kiso morespeci cally letusprovethatpnkd nforsomeconstantc fortheinitialconditionnd wehavep aslongasc assumingthattheboundholdsforn letusprovethatitholdsfornc wehavenc xkd kdnxkd bytheinductivehypothesis aslongas equivalently pnkd kdo aswewishedtoshow wehavetobecarefulwhenweuseasymptoticnotationtoproveboundsbyin duction considerthefollowingfallaciousproofthatpnkd kdo certainly kdo assumingthattheboundholdsforn wenowproveitfornc xkd kdnxkd thebugintheargumentisthatthe constant hiddenbythe growswithnandthusisnotconstant wehavenotshownthatthesameconstantworksforalln boundingthetermswecansometimesobtainagoodupperboundonaseriesbyboundingeachtermoftheseries anditoftensuf cestousethelargesttermtoboundtheothers boundingsummations aquickupperboundonthearithmeticseries isnxkd knxkd ndn ingeneral foraseriespnkd ifweletamaxdmax knak thennxkd aknamax thetechniqueofboundingeachterminaseriesbythelargesttermisaweakmethodwhentheseriescaninfactbeboundedbyageometricseries giventhe seriespnkd supposethatakc akrforallk isaconstant wecanboundthesumbyanin nitedecreasinggeometricseries sinceaka andthusnxkd xkd rkda xkd rkda wecanapplythismethodtoboundthesummationp inordertostartthesummationatkd werewriteitasp rstterm andtheratio ofconsecutivetermsis forallk wehave xkd xkd appendixasummationsacommonbuginapplyingthismethodistoshowthattheratioofconsecu tivetermsislessthan andthentoassumethatthesummationisboundedbyageometricseries anexampleisthein niteharmonicseries whichdivergessince xkd kdlimn nxkd kdlimn lgn theratioofthe standkthtermsinthisseriesisk buttheseriesisnotboundedbyadecreasinggeometricseries toboundaseriesbyageometric series wemustshowthatthereisanr whichisaconstant suchthattheratioofallpairsofconsecutivetermsneverexceedsr intheharmonicseries nosuchrexistsbecausetheratiobecomesarbitrarilycloseto splittingsummationsonewaytoobtainboundsonadif cultsummationistoexpresstheseriesasthesumoftwoormoreseriesbypartitioningtherangeoftheindexandthentobound eachoftheresultingseries forexample supposewetryto ndalowerbound onthearithmeticseriespnkd whichwehavealreadyseenhasanupperboundofn wemightattempttoboundeachterminthesummationbythesmallestterm butsincethattermis wegetalowerboundofnforthesummation farofffromourupperboundofn wecanobtainabetterlowerboundby rstsplittingthesummation assumeforconveniencethatniseven wehavenxkd kdn xkd kcnxkdn xkd cnxkdn whichisanasymptoticallytightbound sincepnkd kdo forasummationarisingfromtheanalysisofanalgorithm wecanoftensplitthesummationandignoreaconstantnumberoftheinitialterms generally thistechniqueapplieswheneachtermakinasummationpnkd akisindependentofn boundingsummations thenforanyconstantk wecanwritenxkd akdk xkd akcnxkdk akd cnxkdk sincetheinitialtermsofthesummationareallconstantandthereareaconstantnumberofthem wecanthenuseothermethodstoboundpnkdk thistech niqueappliestoin nitesummationsaswell forexample ndanasymptoticupperboundon xkd weobservethattheratioofconsecutivetermsis ifk thesummationcanbesplitinto xkd xkd xkd xkd xkd kdo sincethe rstsummationhasaconstantnumberoftermsandthesecondsummationisadecreasinggeometricseries thetechniqueofsplittingsummationscanhelpusdetermineasymptoticboundsinmuchmoredif cultsituations forexample wecanobtainaboundofo lgn ontheharmonicseries hndnxkd wedosobysplittingtherange tonintoblgncc piecesandupper boundingthecontributionofeachpieceby forid blgnc theithpiececonsists appendixasummationsofthetermsstartingat iandgoinguptobutnotincluding thelastpiecemightcontaintermsnotintheoriginalharmonicseries andthuswehavenxkd kblgncxid xjd icjblgncxid xjd idblgncxid lgnc approximationbyintegralswhenasummationhastheformpnkdmf wheref isamonotonicallyin creasingfunction wecanapproximateitbyintegrals znm dxnxkdmf znc figurea justi esthisapproximation thesummationisrepresentedastheareaoftherectanglesinthe gure andtheintegralistheshadedregionunderthecurve whenf isamonotonicallydecreasingfunction wecanuseasimilarmethodtoprovidetheboundsznc dxnxkdmf znm theintegralapproximation givesatightestimateforthenthharmonicnumber foralowerbound weobtainnxkd kznc dxxdln fortheupperbound wederivetheinequalitynxkd kzn dxxdlnn boundingsummations figurea approximationofpnkdmf byintegrals theareaofeachrectangleisshownwithintherectangle andthetotalrectanglearearepresentsthevalueofthesummation thein tegralisrepresentedbytheshadedareaunderthecurve bycomparingareasin wegetrnm dxpnkdmf andthenbyshiftingtherectanglesoneunittotheright wegetpnkdmf rnc dxin appendixasummationswhichyieldstheboundnxkd klnnc exercisesa showthatpnkd isboundedabovebyaconstant findanasymptoticupperboundonthesummationblgncxkd showthatthenthharmonicnumberislgn bysplittingthesummation approximatepnkd withanintegral whydidn tweusetheintegralapproximation directlyonpnkd ktoobtainanupperboundonthenthharmonicnumber problemsa boundingsummationsgiveasymptoticallytightboundsonthefollowingsummations assumethatr ands areconstants nxkd nxkd lgsk notesforappendixa nxkd krlgsk appendixnotesknuth providesanexcellentreferenceforthematerialpresentedhere youcan ndbasicpropertiesofseriesinanygoodcalculusbook suchasapostol orthomasetal bsets etc manychaptersofthisbooktouchontheelementsofdiscretemathematics thisappendixreviewsmorecompletelythenotations nitions andelementaryprop ertiesofsets relations functions graphs andtrees ifyouarealreadywellversed inthismaterial youcanprobablyjustskimthischapter setsasetisacollectionofdistinguishableobjects calleditsmembersorelements ifanobjectxisamemberofasets wewritex xisamemberofs morebrie xisins ifxisnotamemberofs wewritex wecandescribeasetbyexplicitlylistingitsmembersasalistinsidebraces forexample wecande neasetstocontainpreciselythenumbers bywritingsdf isamemberofthesets wecanwrite andsince isnotamember wehave asetcannotcontainthesameobjectmorethanonce anditselementsarenotordered twosetsaandbareequal writtenadb iftheycontainthesameelements forexample gdf gdf weadoptspecialnotationsforfrequentlyencounteredsets denotestheemptyset thatis thesetcontainingnomembers zdenotesthesetofintegers thatis thesetf rdenotesthesetofrealnumbers ndenotesthesetofnaturalnumbers thatis thesetf avariationofaset whichcancontainthesameobjectmorethanonce iscalledamultiset someauthorsstartthenaturalnumberswith insteadof themoderntrendseemstobetostartwith sets ifalltheelementsofasetaarecontainedinasetb thatis ifx aimpliesx thenwewriteabandsaythataisasubsetofb asetaisapropersubsetofb writtenab ifabbuta someauthorsusethesymbol todenotetheordinarysubsetrelation ratherthantheproper subsetrelation foranyseta wehaveaa fortwosetsaandb wehaveadbifandonlyifabandba foranythreesetsa andc ifabandbc thenac foranyseta wehavea wesometimesde nesetsintermsofothersets givenaseta wecande neasetbabystatingapropertythatdistinguishestheelementsofb forexample wecande nethesetofevenintegersbyfxwx zandx isanintegerg thecoloninthisnotationisread suchthat someauthorsuseaverticalbarinplace ofthecolon giventwosetsaandb wecanalsode nenewsetsbyapplyingsetoperations theintersectionofsetsaandbistheseta bdfxwx aandx theunionofsetsaandbistheseta bdfxwx aorx thedifferencebetweentwosetsaandbisthesetabdfxwx aandx setoperationsobeythefollowinglaws emptysetlaws idempotencylaws ada ada commutativelaws bdb bdb appendixbsets etc aaaaaabbbbb dddda cccccfigureb avenndiagramillustratingthe rstofdemorgan slaws eachofthesetsa andcisrepresentedasacircle associativelaws distributivelaws absorptionlaws demorgan slaws figureb illustratesthe rstofdemorgan slaws usingavenndiagram agraph icalpictureinwhichsetsarerepresentedasregionsoftheplane allthesetsunderconsiderationaresubsetsofsomelargersetucalledtheuniverse forexample ifweareconsideringvarioussetsmadeuponlyofintegers thesetzofintegersisanappropriateuniverse givenauniverseu wede nethecomplementofasetaasaduadfxwx uandx foranysetau wehavethefollowinglaws ada adu sets wecanrewritedemorgan slaws withsetcomplements foranytwosetsb wehaveb cdb cdb twosetsaandbaredisjointiftheyhavenoelementsincommon thatis ifa acollectionsdfsigofnonemptysetsformsapartitionofasetsifthesetsarepairwisedisjoint thatis sandi jimplysi sjd andtheirunioniss thatis ssi inotherwords sformsapartitionofsifeachelementofsappearsinexactlyonesi thenumberofelementsinasetisthecardinality orsize oftheset denotedjsj twosetshavethesamecardinalityiftheirelementscanbeputintoaone correspondence thecardinalityoftheemptysetisj ifthecardinalityofasetisanaturalnumber wesaythesetis nite otherwise itisin nite anin nitesetthatcanbeputintoaone onecorrespondencewiththenaturalnumbersniscountablyin nite otherwise itisuncountable forexample theintegerszarecountable buttherealsrareuncountable foranytwo nitesetsaandb wehavetheidentityja bjdjajcjbjja fromwhichwecanconcludethatja bjjajcjbj ifaandbaredisjoint thenja bjd andthusja bjdjajcjbj ifab thenjajjbj nitesetofnelementsissometimescalledann setiscalledasingleton asubsetofkelementsofasetissometimescalledak subset wedenotethesetofallsubsetsofasets includingtheemptysetandsitself wecall sthepowersetofs forexample bgdf fag fbg bgg thepowersetofa nitesetshascardinality jsj seeexerciseb wesometimescareaboutsetlikestructuresinwhichtheelementsareordered anorderedpairoftwoelementsaandbisdenoted andisde nedformallyastheset dfa bgg theorderedpair isnotthesameastheorderedpair appendixbsets etc thecartesianproductoftwosetsaandb denotedab isthesetofallorderedpairssuchthatthe rstelementofthepairisanelementofaandthesecondisanelementofb moreformally abdf aandb forexample bgfa cgdf whenaandbare nitesets thecardinalityoftheircartesianproductisjabjdjajjbj thecartesianproductofnsetsa anisthesetofn tuplesa andf wai aiforid whosecardinalityisja anjdja jja jjanjifallsetsare nite wedenoteann foldcartesianproductoverasinglesetabythesetandaaa whosecardinalityisjanjdjajnifais nite wecanalsoviewann tupleasa nitesequenceoflengthn seepage exercisesb drawvenndiagramsthatillustratethe rstofthedistributivelaws provethegeneralizationofdemorgan slawstoany nitecollectionofsets anda anda relations provethegeneralizationofequation whichiscalledtheprincipleofinclu sionandexclusion anjdja jcja jccjanjja jja allpairs cja alltriples anj showthatthesetofoddnaturalnumbersiscountable showthatforany nitesets thepowerset shas jsjelements thatis thereare jsjdistinctsubsetsofs giveaninductivede nitionforann tuplebyextendingtheset theoreticde nitionforanorderedpair relationsabinaryrelationrontwosetsaandbisasubsetofthecartesianproductab wesometimeswritearb whenwesaythatrisabinaryrelationonaseta wemeanthatrisasubsetofaa forexample lessthan relationonthenaturalnumbersisthesetf nanda ann aryrelationonsetsa anisasubsetofa abinaryrelationraaisre exiveifaraforalla forexample arere exiverelationsonn isnot therelationrissymmetricifarbimpliesbraforalla forexample issymmetric arenot therelationristransitiveifarbandbrcimplyarc appendixbsets etc foralla forexample therelations aretransitive buttherelationrdf nandadb gisnot donotimply arelationthatisre exive symmetric andtransitiveisanequivalencerelation forexample isanequivalencerelationonthenaturalnumbers isnot ifrisanequivalencerelationonaseta thenfora theequivalenceclassofaistheset adfb awarbg thatis thesetofallelementsequivalenttoa forexample ifwede nerdf nandacbisanevennumberg thenrisanequivalencerelation sinceacaiseven exive acbisevenimpliesbcaiseven symmetric andacbisevenandbccisevenimplyacciseven transitive theequivalenceclassof andtheequivalenceclassof abasictheoremofequivalenceclassesisthefollowing theoremb anequivalencerelationisthesameasapartition theequivalenceclassesofanyequivalencerelationronasetaformapartitionofa andanypartitionofadeterminesanequivalencerelationonaforwhichthesetsinthepartitionaretheequivalenceclasses proofforthe rstpartoftheproof wemustshowthattheequivalenceclassesofrarenonempty pairwise disjointsetswhoseunionisa becauserisre ive andsotheequivalenceclassesarenonempty moreover sinceeveryelementa abelongstotheequivalenceclass theunionoftheequivalenceclassesisa itremainstoshowthattheequivalenceclassesarepairwisedisjoint thatis iftwoequivalenceclasses aand bhaveanelementcincommon thentheyareinfactthesameset supposethatarcandbrc bysymmetry crb andbytransitivity arb foranyarbitraryelementx wehavexraand bytransitivity xrb andthus similarly andthus forthesecondpartoftheproof letadfaigbeapartitionofa andde nerdf wthereexistsisuchthata aiandb aig weclaimthatrisanequivalencerelationona exivityholds sincea aiimpliesara symme tryholds becauseifarb thenaandbareinthesamesetai andhencebra ifarbandbrc thenallthreeelementsareinthesamesetai andthusarcandtransitivityholds toseethatthesetsinthepartitionaretheequivalence classesofr observethatifa thenx aimpliesx andx aiimpliesx abinaryrelationronasetaisantisymmetricifarbandbraimplyadb relations forexample relationonthenaturalnumbersisantisymmetric sinceabandbaimplyadb arelationthatisre exive antisymmetric andtransitiveisapartialorder andwecallasetonwhichapartialorderisde nedapartiallyorderedset forexample therelation isadescendantof isapartialorderonthesetofallpeople ifweviewindividualsasbeingtheirowndescendants inapartiallyorderedseta theremaybenosingle maximum elementasuchthatbraforallb instead thesetmaycontainseveralmaximalelementsasuchthatfornob whereb isitthecasethatarb forexample acollectionofdifferent sizedboxesmaycontainseveralmaximalboxesthatdon tinsideanyotherbox yetithasnosingle maximum boxintowhichanyother boxwill arelationronasetaisatotalrelationifforalla wehavearborbra orboth thatis ifeverypairingofelementsofaisrelatedbyr apartialorderthatisalsoatotalrelationisatotalorderorlinearorder forexample therelation isatotalorderonthenaturalnumbers butthe isadescendantof relationisnotatotalorderonthesetofallpeople sincethereareindividuals neitherofwhomisdescendedfromtheother atotalrelationthatistransitive notnecessarilyre exiveandantisymmetric isatotalpreorder exercisesb provethatthesubsetrelation onallsubsetsofzisapartialorderbutnotatotalorder showthatforanypositiveintegern therelation equivalentmodulon isanequiv alencerelationontheintegers wesaythatab modn ifthereexistsanintegerqsuchthatabdqn intowhatequivalenceclassesdoesthisrelationpartitiontheintegers giveexamplesofrelationsthatarea exiveandsymmetricbutnottransitive exiveandtransitivebutnotsymmetric symmetricandtransitivebutnotre exive tobeprecise inorderforthe tinside relationtobeapartialorder weneedtoviewaboxas ttinginsideitself appendixbsets etc letsbea niteset andletrbeanequivalencerelationonss showthatifinadditionrisantisymmetric thentheequivalenceclassesofswithrespecttoraresingletons professornarcissusclaimsthatifarelationrissymmetricandtransitive thenitisalsore exive heoffersthefollowingproof bysymmetry arbimpliesbra transitivity therefore impliesara istheprofessorcorrect functionsgiventwosetsaandb afunctionfisabinaryrelationonaandbsuchthatforalla thereexistspreciselyoneb bsuchthat thesetaiscalledthedomainoff andthesetbiscalledthecodomainoff wesometimeswritefwa andif wewritebdf sincebisuniquelydeterminedbythechoiceofa intuitively thefunctionfassignsanelementofbtoeachelementofa noelementofaisassignedtwodifferentelementsofb butthesameelementofbcanbeassignedtotwodifferentelementsofa forexample thebinaryrelationfdf nandbdamod gisafunctionfwn sinceforeachnaturalnumbera thereisexactlyonevaluebinf gsuchthatbdamod forthisexample etc incontrast thebinaryrelationgdf nandacbisevengisnotafunction arebothing andthusforthechoicead thereisnotpreciselyonebsuchthat givenafunctionfwa ifbdf wesaythataistheargumentoffandthatbisthevalueoffata wecande neafunctionbystatingitsvalueforeveryelementofitsdomain forexample wemightde nef nforn whichmeansfdf twofunctionsfandgareequaliftheyhavethesamedomainandcodomainandif forallainthedomain nitesequenceoflengthnisafunctionfwhosedomainisthesetofnintegersf weoftendenotea nitesequencebylistingitsvalues anin nitesequenceisafunctionwhosedomainisthesetnofnaturalnumbers forexample thefibonaccisequence nedbyrecurrence isthein nitesequenceh functions whenthedomainofafunctionfisacartesianproduct weoftenomittheextraparenthesessurroundingtheargumentoff forexample ifwehadafunctionfwa wewouldwritebdf insteadofbdf wealsocalleachaianargumenttothefunctionf thoughtechnicallythe argumenttofisthen tuple iffwa bisafunctionandbdf thenwesometimessaythatbistheimageofaunderf theimageofaseta aunderfisde nedbyf dfb bwbdf forsomea therangeoffistheimageofitsdomain thatis forexample therangeofthefunctionfwn nde nedbyf nisf dfmwmd nforsomen inotherwords thesetofnonnegativeevenintegers afunctionisasurjectionifitsrangeisitscodomain forexample thefunctionf dbn cisasurjectivefunctionfromnton sinceeveryelementinnappearsasthevalueoffforsomeargument incontrast thefunctionf nisnotasurjectivefunctionfromnton sincenoargumenttofcanproduce asavalue thefunctionf nis however asurjectivefunctionfromthenaturalnumberstotheevennumbers asurjectionfwa bissometimesdescribedasmappingaontob whenwesaythatfisonto wemeanthatitissurjective afunctionfwa bisaninjectionifdistinctargumentstofproducedistinctvalues thatis ifa impliesf forexample thefunctionf nisaninjectivefunctionfromnton sinceeachevennumberbistheimageunderfofatmostoneelementofthedomain namelyb thefunctionf dbn cisnotinjective sincethevalue isproducedbytwoarguments aninjectionissometimescalledaone onefunction afunctionfwa bisabijectionifitisinjectiveandsurjective forexample thefunctionf ndn eisabijectionfromntoz thefunctionisinjective sincenoelementofzistheimageofmorethanoneelementofn itissurjective sinceeveryelementofzappearsastheimageofsomeelementofn hence thefunctionisbijective abijectionissometimescalledaone onecorrespondence sinceitpairselementsinthedomainandcodomain abijectionfromasetatoitselfissometimescalledapermutation whenafunctionfisbijective wede neitsinversef asf daifandonlyiff appendixbsets etc forexample theinverseofthefunctionf ndn eisf mifm ifm exercisesb letaandbbe nitesets andletfwa bbeafunction showthata iffisinjective thenjajjbj iffissurjective thenjajjbj isthefunctionf dxc bijectivewhenthedomainandthecodomainaren isitbijectivewhenthedomainandthecodomainarez giveanaturalde nitionfortheinverseofabinaryrelationsuchthatifarelationisinfactabijectivefunction itsrelationalinverseisitsfunctionalinverse giveabijectionfromztozz graphsthissectionpresentstwokindsofgraphs directedandundirected certaindef initionsintheliteraturedifferfromthosegivenhere butforthemostpart thedifferencesareslight showshowwecanrepresentgraphsincom putermemory adirectedgraph ordigraph gisapair wherevisa nitesetandeisabinaryrelationonv thesetviscalledthevertexsetofg anditselementsarecalledvertices singular vertex theseteiscalledtheedgesetofg anditselementsarecallededges figureb isapictorialrepresentationofadirectedgraphonthevertexsetf verticesarerepresentedbycirclesinthe gure andedgesarerepresentedbyarrows notethatself loops edgesfromavertextoitself arepossible inanundirectedgraphgd theedgeseteconsistsofunorderedpairsofvertices ratherthanorderedpairs thatis anedgeisasetfu graphs figureb directedandundirectedgraphs adirectedgraphgd wherevdf gandedf theedge isaself loop anundirectedgraphgd wherevdf gandedf thevertex isisolated thesubgraphofthegraphinpart inducedbythevertexsetf vandu byconvention weusethenotation foranedge ratherthanthesetnotationfu andweconsider tobethesameedge inanundirectedgraph loopsareforbidden andsoeveryedgeconsistsoftwo distinctvertices figureb isapictorialrepresentationofanundirectedgraph onthevertexsetf manyde nitionsfordirectedandundirectedgraphsarethesame althoughcer taintermshaveslightlydifferentmeaningsinthetwocontexts isanedgeinadirectedgraphgd wesaythat isincidentfromorleavesvertexuandisincidenttoorentersvertex forexample theedgesleavingver tex infigureb theedgesenteringvertex isanedgeinanundirectedgraphgd wesaythat isincidentonverticesuand infigureb theedgesincidentonvertex isanedgeinagraphgd wesaythatvertexisadjacenttovertexu whenthegraphisundirected theadjacencyrelationissymmetric whenthegraphisdirected theadjacencyrelationisnotnecessarilysymmetric ifisadjacenttouinadirectedgraph wesometimeswriteu inparts offigureb vertex isadjacenttovertex sincetheedge belongstobothgraphs vertex isnotadjacenttovertex infigureb sincetheedge doesnotbelongtothegraph thedegreeofavertexinanundirectedgraphisthenumberofedgesincidentonit forexample vertex infigureb hasdegree avertexwhosedegreeis suchasvertex infigureb isisolated inadirectedgraph theout degreeofavertexisthenumberofedgesleavingit andthein degreeofavertexisthenumberofedgesenteringit thedegreeofavertexinadirectedgraphisitsin appendixbsets etc degreeplusitsout vertex infigureb hasin anddegree apathoflengthkfromavertexutoavertexu inagraphgd isasequenceh kiofverticessuchthatud andi eforid thelengthofthepathisthenumberofedgesinthepath thepathcontainsthevertices kandtheedges thereisalwaysa lengthpathfromutou ifthereisapathpfromutou wesaythatu isreachablefromuviap whichwesometimeswriteasupu ifgisdirected apathissimple ifallverticesinthepatharedistinct infigureb thepathh iisasimplepathoflength thepathh iisnotsimple asubpathofpathpdh kiisacontiguoussubsequenceofitsver tices thatis forany ijk thesubsequenceofverticeshiic jiisasubpathofp inadirectedgraph apathh kiformsacycleif dkandthepathcontainsatleastoneedge thecycleissimpleif inaddition karedistinct aself loopisacycleoflength twopathsh iandh iformthesamecycleifthereexistsanintegerjsuchthat icj modkforid infigureb thepathh iformsthesamecycleasthepathsh iandh thiscycleissimple butthecycleh iisnot thecycleh iformedbytheedge isaself loop adirectedgraphwithnoself loopsissimple inanundirectedgraph apathh kiformsacycleifk thecycleissimpleif karedistinct forexample infigureb thepathh iisasimplecycle agraphwithnocyclesisacyclic anundirectedgraphisconnectedifeveryvertexisreachablefromallothervertices theconnectedcomponentsofagrapharetheequivalenceclassesofverticesunderthe isreachablefrom relation thegraphinfigureb threeconnectedcomponents andf everyvertexinf gisreachablefromeveryothervertexinf anundirectedgraphisconnectedifithasexactlyoneconnectedcomponent theedgesofaconnectedcomponent arethosethatareincidentononlytheverticesofthecomponent inotherwords isanedgeofaconnectedcomponentonlyifbothuandareverticesofthecomponent adirectedgraphisstronglyconnectedifeverytwoverticesarereachablefromeachother thestronglyconnectedcomponentsofadirectedgrapharetheequiv someauthorsrefertowhatwecallapathasa andtowhatwecallasimplepathasjusta weusetheterms simplepath throughoutthisbookinamannerconsistentwith theirde nitions graphs uvwxyz uvwxy ggfigureb apairofisomorphicgraphs theverticesofthetopgrapharemappedtotheverticesofthebottomgraphbyf twographsthatarenotisomorphic sincethetopgraphhasavertexofdegree andthebottomgraphdoesnot alenceclassesofverticesunderthe aremutuallyreachable relation adirectedgraphisstronglyconnectedifithasonlyonestronglyconnectedcomponent thegraphinfigureb hasthreestronglyconnectedcomponents andf allpairsofverticesinf garemutuallyreachable thever ticesf gdonotformastronglyconnectedcomponent sincevertex cannotbereachedfromvertex twographsgd andg areisomorphicifthereexistsabijectionfwv suchthat eifandonlyif inotherwords wecanrelabeltheverticesofgtobeverticesofg maintain ingthecorrespondingedgesingandg figureb showsapairofiso morphicgraphsgandg withrespectivevertexsetsvdf gandv dfu themappingfromvtov givenbyf providestherequiredbijectivefunc tion thegraphsinfigureb arenotisomorphic althoughbothgraphshave verticesand edges thetopgraphhasavertexofdegree andthebottomgraphdoesnot wesaythatagraphg isasubgraphofgd ifv vande givenasetv thesubgraphofginducedbyv isthegraphg wheree ewu appendixbsets etc thesubgraphinducedbythevertexsetf ginfigureb appearsinfigureb andhastheedgesetf givenanundirectedgraphgd thedirectedversionofgisthedirectedgraphg ifandonlyif thatis wereplaceeachundirectededge ingbythetwodirectededges inthedirectedversion givenadirectedgraphgd theundirectedversionofgistheundirectedgraphg ifandonlyifu thatis theundirectedversioncontainstheedgesofg withtheirdirectionsremoved andwithself loopseliminated arethesameedgeinanundirectedgraph theundirectedversionofadirected graphcontainsitonlyonce evenifthedirectedgraphcontainsbothedges inadirectedgraphgd aneighborofavertexuisanyvertexthatisadjacenttouintheundirectedversionofg thatis isaneighborofuifu andeither eor inanundirectedgraph uandareneighborsiftheyareadjacent severalkindsofgraphshavespecialnames acompletegraphisanundirectedgraphinwhicheverypairofverticesisadjacent abipartitegraphisanundirectedgraphgd inwhichvcanbepartitionedintotwosetsv andv suchthat eimplieseitheru oru thatis alledgesgobetweenthetwosetsv andv anacyclic undirectedgraphisaforest andaconnected acyclic undirectedgraphisa seesectionb weoftentakethe rstlettersof directedacyclicgraph andcallsuchagraphadag therearetwovariantsofgraphsthatyoumayoccasionallyencounter amulti graphislikeanundirectedgraph butitcanhavebothmultipleedgesbetweenver ticesandself loops ahypergraphislikeanundirectedgraph buteachhyperedge ratherthanconnectingtwovertices connectsanarbitrarysubsetofvertices algorithmswrittenforordinarydirectedandundirectedgraphscanbeadaptedto runonthesegraphlikestructures thecontractionofanundirectedgraphgd byanedgeed isagraphg wherev dvfu fxgandxisanewvertex thesetofedgese isformedfromebydeletingtheedge foreachvertexwincidentonuor deletingwhicheverof isineandaddingthenewedge ineffect uandare contracted intoasinglevertex exercisesb attendeesofafacultypartyshakehandstogreeteachother andeachprofessor remembershowmanytimesheorsheshookhands attheendoftheparty departmentheadaddsupthenumberoftimesthateachprofessorshookhands trees showthattheresultisevenbyprovingthehandshakinglemma ifgd isanundirectedgraph thenx vdegree jej showthatifadirectedorundirectedgraphcontainsapathbetweentwoverticesuand thenitcontainsasimplepathbetweenuand showthatifadirectedgraphcontainsacycle thenitcontainsasimplecycle showthatanyconnected undirectedgraphgd satis esjejjvj verifythatinanundirectedgraph isreachablefrom relationisanequiv alencerelationontheverticesofthegraph whichofthethreepropertiesofan equivalencerelationholdingeneralforthe isreachablefrom relationonthe verticesofadirectedgraph whatistheundirectedversionofthedirectedgraphinfigureb whatisthe directedversionoftheundirectedgraphinfigureb showthatwecanrepresentahypergraphbyabipartitegraphifweletincidencein thehypergraphcorrespondtoadjacencyinthebipartitegraph hint letonesetofverticesinthebipartitegraphcorrespondtoverticesofthehypergraph andlettheothersetofverticesofthebipartitegraphcorrespondtohyperedges treesaswithgraphs therearemanyrelated butslightlydifferent notionsoftrees sectionpresentsde nitionsandmathematicalpropertiesofseveralkindsoftrees sections describehowwecanrepresenttreesincomputermemory freetreesasde nedinsectionb afreetreeisaconnected acyclic undirectedgraph weoftenomittheadjective whenwesaythatagraphisatree ifanundirected graphisacyclicbutpossiblydisconnected itisaforest manyalgorithmsthatwork appendixbsets etc figureb afreetree aforest agraphthatcontainsacycleandisthereforeneitheratreenoraforest fortreesalsoworkforforests figureb showsafreetree andfigureb showsaforest theforestinfigureb isnotatreebecauseitisnotconnected thegraphinfigureb isconnectedbutneitheratreenoraforest becauseit containsacycle thefollowingtheoremcapturesmanyimportantfactsaboutfreetrees theoremb propertiesoffreetrees letgd beanundirectedgraph thefollowingstatementsareequivalent gisafreetree anytwoverticesingareconnectedbyauniquesimplepath gisconnected butifanyedgeisremovedfrome theresultinggraphisdis connected gisconnected andjejdjvj gisacyclic andjejdjvj gisacyclic butifanyedgeisaddedtoe theresultinggraphcontainsacycle proof sinceatreeisconnected anytwoverticesingareconnectedbyatleastonesimplepath suppose forthesakeofcontradiction thatverticesuandareconnectedbytwodistinctsimplepathsp andp asshowninfigureb letwbethevertexatwhichthepaths rstdiverge thatis wisthe rstvertexonbothp andp whosesuccessoronp isxandwhosesuccessoronp isy wherex bethe rstvertexatwhichthepathsreconverge thatis isthe rstvertexfollowingwonp thatisalsoonp letp bethesubpathofp fromwthroughxto andletp bethesubpathofp fromwthroughyto pathsp andp sharenoverticesexcepttheirendpoints thepathobtainedbyconcatenatingp andthereverseofp isacycle whichcontradictsourassumption trees uwzvxyppfigureb astepintheproofoftheoremb gisafreetree anytwoverticesingareconnectedbyauniquesimplepath assumeforthesakeofcontradictionthatverticesuandareconnectedbytwodistinctsimplepathsp andp thesepaths rstdivergeatvertexw andthey rstreconvergeatvertex thepathp concatenatedwiththereverseofthepathp formsacycle whichyieldsthecontradiction thatgisatree ifgisatree therecanbeatmostonesimplepathbetweentwovertices ifanytwoverticesingareconnectedbyauniquesimplepath thengisconnected beanyedgeine thisedgeisapathfromuto andsoitmustbetheuniquepathfromuto ifweremove fromg thereisnopathfromuto andhenceitsremovaldisconnectsg byassumption thegraphgisconnected andbyexerciseb wehavejejjvj weshallprovejejjvj byinduction aconnectedgraphwithnd ornd verticeshasn edges supposethatghasn verticesandthatallgraphssatisfying withfewerthannverticesalsosatisfyjejjvj removinganarbitraryedgefromgseparatesthegraphintok connectedcomponents actuallykd eachcomponentsatis orelsegwouldnotsatisfy ifwevieweachconnectedcomponentvi withedgesetei asitsownfreetree thenbecauseeachcomponenthasfewerthanjvjvertices bytheinductivehypothesiswehavejeijjvij thenumberofedgesinallcomponentscombinedisatmostjvjkjvj addingintheremovededgeyieldsjejjvj supposethatgisconnectedandthatjejdjvj wemustshowthatgisacyclic supposethatghasacyclecontainingkvertices andwithoutlossofgeneralityassumethatthiscycleissimple letgkd bethesubgraphofgconsistingofthecycle notethatjvkjdjekjdk ifk jvj theremustbeavertexkc vvkthatisadjacenttosomever texi sincegisconnected negkc vkc ekc tobethesub graphofgwithvkc dvk fkc gandekc dek fikc notethatjvkc jdjekc jdkc ifkc jvj wecancontinue ninggkc inthesamemanner andsoforth untilweobtaingnd wherendjvj appendixbsets etc vndv andjenjdjvnjdjvj sincegnisasubgraphofg wehaveene andhencejejjvj whichcontradictstheassumptionthatjejdjvj gisacyclic supposethatgisacyclicandthatjejdjvj letkbethenumberofconnectedcomponentsofg eachconnectedcomponentisafreetreebyde nition andsince implies thesumofalledgesinallconnectedcom ponentsofgisjvjk consequently wemusthavekd andgisinfactatree implies anytwoverticesingareconnectedbyauniquesimplepath addinganyedgetogcreatesacycle supposethatgisacyclicbutthataddinganyedgetoecreatesacycle wemustshowthatgisconnected letuandbearbitraryverticesing ifuandarenotalreadyadjacent addingtheedge createsacycleinwhichalledgesbut belongtog thecycleminusedge mustcontainapathfromuto andsinceuandwerechosenarbitrarily gisconnected rootedandorderedtreesarootedtreeisafreetreeinwhichoneoftheverticesisdistinguishedfromtheothers wecallthedistinguishedvertextherootofthetree weoftenrefertoavertexofarootedtreeasanode ofthetree figureb showsarootedtreeonasetof nodeswithroot consideranodexinarootedtreetwithrootr wecallanynodeyontheuniquesimplepathfromrtoxanancestorofx ifyisanancestorofx thenxisadescendantofy everynodeisbothanancestorandadescendantofitself ifyisanancestorofxandx thenyisaproperancestorofxandxisaproperdescendantofy thesubtreerootedatxisthetreeinducedbydescendantsofx rootedatx forexample thesubtreerootedatnode infigureb containsnodes ifthelastedgeonthesimplepathfromtherootrofatreettoanodexis thenyistheparentofx andxisachildofy therootistheonlynodeintwithnoparent iftwonodeshavethesameparent theyaresiblings anodewithnochildrenisaleaforexternalnode anonleafnodeisaninternalnode theterm node isoftenusedinthegraphtheoryliteratureasasynonymfor vertex wereservetheterm node tomeanavertexofarootedtree trees height depth depth depth depth depth figureb rootedandorderedtrees arootedtreewithheight thetreeisdrawninastandardway theroot node isatthetop itschildren nodeswithdepth arebeneathit theirchildren nodeswithdepth arebeneaththem andsoforth ifthetreeisordered therelativeleft rightorderofthechildrenofanodematters otherwiseitdoesn anotherrootedtree asarootedtree itisidenticaltothetreein butasanorderedtreeitisdifferent sincethechildrenofnode appearinadifferentorder thenumberofchildrenofanodexinarootedtreetequalsthedegreeofx thelengthofthesimplepathfromtherootrtoanodexisthedepthofxint alevelofatreeconsistsofallnodesatthesamedepth theheightofanodeinatreeisthenumberofedgesonthelongestsimpledownwardpathfromthenodeto aleaf andtheheightofatreeistheheightofitsroot theheightofatreeisalso equaltothelargestdepthofanynodeinthetree anorderedtreeisarootedtreeinwhichthechildrenofeachnodeareordered thatis ifanodehaskchildren thenthereisa rstchild asecondchild andakthchild thetwotreesinfigureb aredifferentwhenconsideredtobeorderedtrees butthesamewhenconsideredtobejustrootedtrees binaryandpositionaltreeswede nebinarytreesrecursively abinarytreetisastructurede nedona nitesetofnodesthateithercontainsnonodes noticethatthedegreeofanodedependsonwhetherweconsiderttobearootedtreeorafreetree thedegreeofavertexinafreetreeis asinanyundirectedgraph thenumberofadjacentvertices inarootedtree however thedegreeisthenumberofchildren theparentofanodedoesnotcounttowarditsdegree appendixbsets etc figureb binarytrees abinarytreedrawninastandardway theleftchildofanodeisdrawnbeneaththenodeandtotheleft therightchildisdrawnbeneathandtotheright abinarytreedifferentfromtheonein theleftchildofnode andtherightchildisabsent theleftchildofnode isabsentandtherightchildis asorderedtrees thesetreesarethesame butasbinarytrees theyaredistinct thebinarytreein representedbytheinternalnodesofafullbinarytree anorderedtreeinwhicheachinternalnodehasdegree theleavesinthetreeareshownassquares iscomposedofthreedisjointsetsofnodes arootnode abinarytreecalleditsleftsubtree andabinarytreecalleditsrightsubtree thebinarytreethatcontainsnonodesiscalledtheemptytreeornulltree timesdenotednil iftheleftsubtreeisnonempty itsrootiscalledtheleftchildoftherootoftheentiretree likewise therootofanonnullrightsubtreeistherightchildoftherootoftheentiretree ifasubtreeisthenulltreenil wesaythatthechildisabsentormissing figureb showsabinarytree abinarytreeisnotsimplyanorderedtreeinwhicheachnodehasdegreeatmost forexample inabinarytree ifanodehasjustonechild thepositionofthechild whetheritistheleftchildortherightchild matters inanor deredtree thereisnodistinguishingasolechildasbeingeitherleftorright ureb showsabinarytreethatdiffersfromthetreeinfigureb becauseof thepositionofonenode consideredasorderedtrees however thetwotreesare identical wecanrepresentthepositioninginformationinabinarytreebytheinternalnodesofanorderedtree asshowninfigureb theideaistoreplaceeach missingchildinthebinarytreewithanodehavingnochildren theseleafnodes aredrawnassquaresinthe gure thetreethatresultsisafullbinarytree eachnodeiseitheraleaforhasdegreeexactly therearenodegree nodes conse quently theorderofthechildrenofanodepreservesthepositioninformation wecanextendthepositioninginformationthatdistinguishesbinarytreesfromorderedtreestotreeswithmorethan childrenpernode inapositionaltree trees height depth depth depth depth figureb acompletebinarytreeofheight leavesand internalnodes childrenofanodearelabeledwithdistinctpositiveintegers theithchildofanodeisabsentifnochildislabeledwithintegeri arytreeisapositionaltreeinwhichforeverynode allchildrenwithlabelsgreaterthankaremissing abinarytreeisak arytreewithkd acompletek arytreeisak arytreeinwhichallleaveshavethesamedepthandallinternalnodeshavedegreek figureb showsacompletebinarytreeofheight howmanyleavesdoesacompletek arytreeofheighthhave theroothaskchildrenatdepth eachofwhichhaskchildrenatdepth etc thenumberofleavesatdepthhiskh consequently theheightofacompletek arytreewithnleavesislogkn thenumberofinternalnodesofacompletek arytreeofheighthis ckck cckh xid kidkh byequation acompletebinarytreehas internalnodes exercisesb drawallthefreetreescomposedofthethreeverticesx drawalltherootedtreeswithnodesx withxastheroot drawalltheorderedtreeswithnodesx withxastheroot drawallthebinarytreeswithnodesx withxastheroot appendixbsets etc letgd beadirectedacyclicgraphinwhichthereisavertex vsuchthatthereexistsauniquepathfrom toeveryvertex provethattheundirectedversionofgformsatree showbyinductionthatthenumberofdegree nodesinanynonemptybinarytreeis fewerthanthenumberofleaves concludethatthenumberofinternalnodesinafullbinarytreeis fewerthanthenumberofleaves useinductiontoshowthatanonemptybinarytreewithnnodeshasheightatleastblgnc theinternalpathlengthofafullbinarytreeisthesum takenoverallinternalnodesofthetree ofthedepthofeachnode likewise theexternalpathlengthisthesum takenoverallleavesofthetree ofthedepthofeachleaf considerafull binarytreewithninternalnodes internalpathlengthi andexternalpathlengthe provethatedic letusassociatea dwitheachleafxofdepthdinabinarytreet andletlbethesetofleavesoft provethatpx thisisknownasthekraftinequality showthatifl theneverybinarytreewithlleavescontainsasubtreehavingbetweenl leaves inclusive problemsb graphcoloringgivenanundirectedgraphgd coloringofgisafunctioncwv gsuchthatc foreveryedge inotherwords thenumbers representthekcolors andadjacentverticesmusthavedifferentcolors showthatanytreeis colorable problemsforappendixb showthatthefollowingareequivalent gisbipartite gis colorable ghasnocyclesofoddlength letdbethemaximumdegreeofanyvertexinagraphg provethatwecancolorgwithdc colors showthatifghaso jvj edges thenwecancolorgwitho pjvj colors friendlygraphsrewordeachofthefollowingstatementsasatheoremaboutundirectedgraphs andthenproveit assumethatfriendshipissymmetricbutnotre exive anygroupofatleasttwopeoplecontainsatleasttwopeoplewiththesamenumberoffriendsinthegroup everygroupofsixpeoplecontainseitheratleastthreemutualfriendsoratleastthreemutualstrangers anygroupofpeoplecanbepartitionedintotwosubgroupssuchthatatleasthalfthefriendsofeachpersonbelongtothesubgroupofwhichthatpersonis notamember ifeveryoneinagroupisthefriendofatleasthalfthepeopleinthegroup thenthegroupcanbeseatedaroundatableinsuchawaythateveryoneisseated betweentwofriends bisectingtreesmanydivide conqueralgorithmsthatoperateongraphsrequirethatthegraph bebisectedintotwonearlyequal sizedsubgraphs whichareinducedbyapartition ofthevertices thisprobleminvestigatesbisectionsoftreesformedbyremovinga smallnumberofedges werequirethatwhenevertwoverticesendupinthesame subtreeafterremovingedges thentheymustbeinthesamepartition showthatwecanpartitiontheverticesofanyn vertexbinarytreeintotwosetsaandb suchthatjaj andjbj byremovingasingleedge showthattheconstant inpart isoptimalintheworstcasebygivinganexampleofasimplebinarytreewhosemostevenlybalancedpartitionupon removalofasingleedgehasjajd appendixbsets etc showthatbyremovingatmosto lgn edges wecanpartitiontheverticesofanyn vertexbinarytreeintotwosetsaandbsuchthatjajdbn candjbjddn appendixnotesg boolepioneeredthedevelopmentofsymboliclogic andheintroducedmanyofthebasicsetnotationsinabookpublishedin modernsettheorywascreated byg cantorduringtheperiod cantorfocusedprimarilyonsetsof nitecardinality theterm function isattributedtog leibniz whousedit torefertoseveralkindsofmathematicalformulas hislimitedde nitionhasbeen generalizedmanytimes graphtheoryoriginatedin whenl eulerproved thatitwasimpossibletocrosseachofthesevenbridgesinthecityofk onigsbergexactlyonceandreturntothestartingpoint thebookbyharary providesausefulcompendiumofmanyde nitionsandresultsfromgraphtheory ccountingandprobabilitythisappendixreviewselementarycombinatoricsandprobabilitytheory ifyouhaveagoodbackgroundintheseareas youmaywanttoskimthebeginningofthis appendixlightlyandconcentrateonthelatersections mostofthisbook schapters donotrequireprobability butforsomechaptersitisessential sectionc reviewselementaryresultsincountingtheory includingstandardformulasforcountingpermutationsandcombinations theaxiomsofprobability andbasicfactsconcerningprobabilitydistributionsformsectionc random variablesareintroducedinsectionc alongwiththepropertiesofexpectation andvariance sectionc investigatesthegeometricandbinomialdistributions thatarisefromstudyingbernoullitrials thestudyofthebinomialdistribution continuesinsectionc anadvanceddiscussionofthe tails ofthedistribution countingcountingtheorytriestoanswerthequestion howmany withoutactuallyenu meratingallthechoices forexample wemightask howmanydifferentn bitnumbersarethere howmanyorderingsofndistinctelementsarethere inthissection wereviewtheelementsofcountingtheory sincesomeofthematerial assumesabasicunderstandingofsets youmightwishtostartbyreviewingthe materialinsectionb rulesofsumandproductwecansometimesexpressasetofitemsthatwewishtocountasaunionofdisjointsetsorasacartesianproductofsets theruleofsumsaysthatthenumberofwaystochooseoneelementfromoneoftwodisjointsetsisthesumofthecardinalitiesofthesets thatis ifaandbaretwo nitesetswithnomembersincommon thenja bjdjajcjbj appendixccountingandprobabilityfollowsfromequation forexample eachpositiononacar slicenseplateisaletteroradigit thenumberofpossibilitiesforeachpositionistherefore sincethereare choicesifitisaletterand choicesifitisadigit theruleofproductsaysthatthenumberofwaystochooseanorderedpairisthenumberofwaystochoosethe rstelementtimesthenumberofwaystochoosethe secondelement thatis ifaandbaretwo nitesets thenjabjdjajjbj whichissimplyequation forexample ifanice creamparloroffers avorsoficecreamand toppings thenumberofpossiblesundaeswithonescoopoficecreamandonetoppingis stringsastringovera nitesetsisasequenceofelementsofs forexample thereare binarystringsoflength wesometimescallastringoflengthkak asubstrings ofastringsisanorderedsequenceofconsecutiveelementsofs substringofastringisasubstringoflengthk forexample isa substringof substringthatbeginsinposition isnotasubstringof wecanviewak stringoverasetsasanelementofthecartesianproductskofk tuples therearejsjkstringsoflengthk forexample thenumberofbinaryk stringsis intuitively toconstructak stringoverann wehavenwaystopickthe rstelement foreachofthesechoices wehavenwaystopickthesecondelement andsoforthktimes thisconstructionleadstothek foldproductnnndnkasthenumberofk strings permutationsapermutationofa nitesetsisanorderedsequenceofalltheelementsofs witheachelementappearingexactlyonce forexample ifsdfa thenshas permutations abc acb bac bca cab cba therearen permutationsofasetofnelements sincewecanchoosethe rstelementofthesequenceinnways thesecondinn ways thethirdinn ways andsoon permutationofsisanorderedsequenceofkelementsofs withnoele mentappearingmorethanonceinthesequence anordinarypermutationis ann permutationofann thetwelve permutationsofthesetfa dgare counting thenumberofk permutationsofann setisn nkc sincewehavenwaystochoosethe rstelement waystochoosethesecondelement andsoon untilwehaveselectedkelements thelastbeingaselectionfromtheremainingnkc elements combinationsak combinationofann setsissimplyak subsetofs forexample setfa dghassix combinations hereweusetheshorthandofdenotingthe subsetfa bgbyab andsoon wecanconstructak combinationofann setbychoosingkdistinct different elementsfromthen theorderinwhichweselecttheelementsdoesnotmatter wecanexpressthenumberofk combinationsofann setintermsofthenumberofk permutationsofann everyk combinationhasexactlyk permutationsofitselements eachofwhichisadistinctk permutationofthen thenumberofk combinationsofann setisthenumberofk permutationsdividedbyk fromequation thisquantityisn forkd thisformulatellsusthatthenumberofwaystochoose elementsfromann setis not binomialcoef cientsthenotationnk nchoosek denotesthenumberofk combinationsofann fromequation wehave thisformulaissymmetricinkandnk nnk appendixccountingandprobabilitythesenumbersarealsoknownasbinomialcoef cients duetotheirappearanceinthebinomialexpansion xcy ndnxkd xkynk aspecialcaseofthebinomialexpansionoccurswhenxdyd ndnxkd thisformulacorrespondstocountingthe nbinaryn stringsbythenumberof stheycontain nkbinaryn stringscontainexactlyk sincewehavenkwaystochoosekoutofthenpositionsinwhichtoplacethe manyidentitiesinvolvebinomialcoef cients theexercisesattheendofthissectiongiveyoutheopportunitytoproveafew binomialboundswesometimesneedtoboundthesizeofabinomialcoef cient wehavethelowerbound nkc dnkn nkc nkk takingadvantageoftheinequalityk kderivedfromstirling sapproxi mation weobtaintheupperbounds nkc nkk enkk forallintegersksuchthat wecanuseinduction seeexercisec toprovethebound counting nnkk whereforconvenienceweassumethat forkd wecanrewritethisboundas nnn isthe binary entropyfunctionandwhere forconvenience weassumethat sothath exercisesc howmanyk substringsdoesann stringhave consideridenticalk substringsatdifferentpositionstobedifferent howmanysubstringsdoesann stringhaveintotal ann input outputbooleanfunctionisafunctionfromftrue falsegntoftrue falsegm howmanyn input outputbooleanfunctionsarethere howmanyn input outputbooleanfunctionsarethere inhowmanywayscannprofessorssitaroundacircularconferencetable con sidertwoseatingstobethesameifonecanberotatedtoformtheother inhowmanywayscanwechoosethreedistinctnumbersfromthesetf gsothattheirsumiseven appendixccountingandprobabilityc provetheidentity dnk provetheidentity dnnk tochoosekobjectsfromn youcanmakeoneoftheobjectsdistinguishedandconsiderwhetherthedistinguishedobjectischosen usethisapproachtoprove usingtheresultofexercisec makeatablefornd knofthebinomialcoef cientsnkwith atthetop onthenextline andsoforth suchatableofbinomialcoef cientsiscalledpascal striangle provethatnxid showthatforanyintegersn theexpressionnkachievesitsmaximumvaluewhenkdbn corkddn arguethatforanyintegersn andjckn njck njk probability providebothanalgebraicproofandanargumentbasedonamethodforchoosingjckitemsoutofn giveanexampleinwhichequalitydoesnothold useinductiononallintegersksuchthat toproveinequality anduseequation toextendittoallintegersksuchthat usestirling sapproximationtoprovethat bydifferentiatingtheentropyfunctionh showthatitachievesitsmaximumvalueatd whatish showthatforanyintegern nxkd kdn probabilityprobabilityisanessentialtoolforthedesignandanalysisofprobabilisticandran domizedalgorithms thissectionreviewsbasicprobabilitytheory wede neprobabilityintermsofasamplespaces whichisasetwhoseele mentsarecalledelementaryevents wecanthinkofeachelementaryeventasapossibleoutcomeofanexperiment fortheexperimentof ippingtwodistinguish ablecoins witheachindividual ipresultinginahead oratail wecanviewthesamplespaceasconsistingofthesetofallpossible stringsoverfh sdfhh ttg appendixccountingandprobabilityaneventisasubset ofthesamplespaces forexample intheexperimentof ippingtwocoins theeventofobtainingoneheadandonetailisfht thg theeventsiscalledthecertainevent andtheevent iscalledthenullevent wesaythattwoeventsaandbaremutuallyexclusiveifa wesometimestreatanelementaryevents sastheeventfsg byde nition allelementaryeventsaremutuallyexclusive axiomsofprobabilityaprobabilitydistributionprfgonasamplespacesisamappingfromeventsofstorealnumberssatisfyingthefollowingprobabilityaxioms prfag foranyeventa prfsgd prfa bgdprfagcprfbgforanytwomutuallyexclusiveeventsaandb moregenerally forany niteorcountablyin nite sequenceofeventsa thatarepairwisemutuallyexclusive iai dxiprfaig wecallprfagtheprobabilityoftheeventa wenoteherethataxiom isanormalizationrequirement thereisreallynothingfundamentalaboutchoosing astheprobabilityofthecertainevent exceptthatitisnaturalandconvenient severalresultsfollowimmediatelyfromtheseaxiomsandbasicsettheory seesectionb thenullevent hasprobabilityprf ifab thenprfagprfbg usingatodenotetheeventsa thecomplementofa wehavepr prfag foranytwoeventsaandb prfa bgdprfagcprfbgprfa prfagcprfbg forageneralprobabilitydistribution theremaybesomesubsetsofthesamplespacesthatarenotconsideredtobeevents thissituationusuallyariseswhenthesamplespaceisuncountablyin nite themainrequirementforwhatsubsetsareeventsisthatthesetofeventsofasamplespacebeclosedundertheoperationsoftakingthecomplementofanevent formingtheunionofa niteorcountablenumberofevents andtakingtheintersectionofa niteorcountablenumberofevents mostoftheprobabilitydistributionsweshallseeareover niteorcountablesamplespaces andweshall generallyconsiderallsubsetsofasamplespacetobeevents anotableexceptionisthecontinuousuniformprobabilitydistribution whichweshallseeshortly probability inourcoin ippingexample supposethateachofthefourelementaryeventshasprobability thentheprobabilityofgettingatleastoneheadisprfhh thgdprfhhgcprfhtgcprfthgd alternatively sincetheprobabilityofgettingstrictlylessthanoneheadisprfttgd theprobabilityofgettingatleastoneheadis discreteprobabilitydistributionsaprobabilitydistributionisdiscreteifitisde nedovera niteorcountablyin nitesamplespace letsbethesamplespace thenforanyeventa prfagdxs aprfsg sinceelementaryevents speci callythoseina aremutuallyexclusive ifsis niteandeveryelementaryevents shasprobabilityprfsgd jsj thenwehavetheuniformprobabilitydistributionons insuchacasetheexperi mentisoftendescribedas pickinganelementofsatrandom asanexample considertheprocessof ippingafaircoin oneforwhichtheprobabilityofobtainingaheadisthesameastheprobabilityofobtainingatail ifwe ipthecoinntimes wehavetheuniformprobabilitydistributionde nedonthesamplespacesdfh tgn asetofsize wecanrepresenteachelementaryeventinsasastringoflengthnoverfh eachstringoccurringwithprobability theeventadfexactlykheadsandexactlynktailsoccurgisasubsetofsofsizejajdnk sincenkstringsoflengthnoverfh tgcontainexactlykh theprobabilityofeventaisthusprfagdnk continuousuniformprobabilitydistributionthecontinuousuniformprobabilitydistributionisanexampleofaprobabilitydistributioninwhichnotallsubsetsofthesamplespaceareconsideredtobe events thecontinuousuniformprobabilitydistributionisde nedoveraclosed interval bofthereals wherea ourintuitionisthateachpointinthein terval bshouldbe equallylikely thereareanuncountablenumberofpoints however soifwegiveallpointsthesame nite positiveprobability wecannotsi multaneouslysatisfyaxioms forthisreason wewouldliketoassociatea appendixccountingandprobabilityprobabilityonlywithsomeofthesubsetsofs insuchawaythattheaxiomsaresatis edfortheseevents foranyclosedinterval whereacdb thecontinuousuniformprobabilitydistributionde nestheprobabilityoftheevent dtobeprf dgddcba notethatforanypointxd theprobabilityofxis ifweremovetheendpointsofaninterval weobtaintheopeninterval axiom givesusprf dgdprf gen erally thesetofeventsforthecontinuousuniformprobabilitydistributioncontains anysubsetofthesamplespace bthatcanbeobtainedbya niteorcountableunionofopenandclosedintervals aswellascertainmorecomplicatedsets conditionalprobabilityandindependencesometimeswehavesomepriorpartialknowledgeabouttheoutcomeofanexper iment forexample supposethatafriendhas ippedtwofaircoinsandhastold youthatatleastoneofthecoinsshowedahead whatistheprobabilitythatboth coinsareheads theinformationgiveneliminatesthepossibilityoftwotails threeremainingelementaryeventsareequallylikely soweinferthateachoccurs withprobability sinceonlyoneoftheseelementaryeventsshowstwoheads theanswertoourquestionis conditionalprobabilityformalizesthenotionofhavingpriorpartialknowledgeoftheoutcomeofanexperiment theconditionalprobabilityofaneventagiventhatanothereventboccursisde nedtobeprfajbgdprfa bgprfbg wheneverprfbg weread prfajbg theprobabilityofagivenb intuitively sincewearegiventhateventboccurs theeventthataalsooccursisa thatis bisthesetofoutcomesinwhichbothaandboccur becausetheoutcomeisoneoftheelementaryeventsinb wenormalizetheprob abilitiesofalltheelementaryeventsinbbydividingthembyprfbg sothattheysumto theconditionalprobabilityofagivenbis therefore theratiooftheprobabilityofeventa btotheprobabilityofeventb intheexampleabove aistheeventthatbothcoinsareheads andbistheeventthatatleastonecoinisahead prfajbgd twoeventsareindependentifprfa bgdprfagprfbg whichisequivalent ifprfbg tothecondition probability prfajbgdprfag forexample supposethatwe iptwofaircoinsandthattheoutcomesareinde pendent thentheprobabilityoftwoheadsis nowsupposethatoneeventisthatthe rstcoincomesupheadsandtheothereventisthatthe coinscomeupdifferently eachoftheseeventsoccurswithprobability andtheprobabilitythatbotheventsoccuris accordingtothede nitionofindependence theeventsareindependent eventhoughyoumightthinkthatboth eventsdependonthe rstcoin finally supposethatthecoinsareweldedto gethersothattheybothfallheadsorbothfalltailsandthatthetwopossibilitiesare equallylikely thentheprobabilitythateachcoincomesupheadsis buttheprobabilitythattheybothcomeupheadsis consequently theeventthatonecomesupheadsandtheeventthattheothercomesupheadsarenot independent acollectiona anofeventsissaidtobepairwiseindependentifprfai ajgdprfaigprfajgforall wesaythattheeventsofthecollectionare mutually independentifeveryk subsetai aikofthecollection knand ikn satis esprfai aikgdprfai gprfai gprfaikg forexample supposewe iptwofaircoins leta betheeventthatthe rstcoinisheads leta betheeventthatthesecondcoinisheads andleta betheeventthatthetwocoinsaredifferent wehaveprfa prfa prfa prfa prfa prfa prfa sincefor wehaveprfai ajgdprfaigprfajgd theeventsa anda arepairwiseindependent theeventsarenotmutuallyinde pendent however becauseprfa andprfa gprfa gprfa appendixccountingandprobabilitybayes stheoremfromthede nitionofconditionalprobability andthecommutativelawa bdb itfollowsthatfortwoeventsaandb eachwithnonzeroprobability prfa bgdprfbgprfajbg dprfagprfbjag solvingforprfajbg weobtainprfajbgdprfagprfbjagprfbg whichisknownasbayes stheorem thedenominatorprfbgisanormalizingconstant whichwecanreformulateasfollows sincebd andsinceb aandb aaremutuallyexclusiveevents prfbgdprfb agcpr adprfagprfbjagcpr apr bja substitutingintoequation weobtainanequivalentformofbayes stheo rem prfajbgdprfagprfbjagprfagprfbjagcpr apr bja bayes stheoremcansimplifythecomputingofconditionalprobabilities forexample supposethatwehaveafaircoinandabiasedcointhatalwayscomesup heads werunanexperimentconsistingofthreeindependentevents wechoose oneofthetwocoinsatrandom ipthatcoinonce andthenwe ipitagain supposethatthecoinwehavechosencomesupheadsbothtimes whatistheprobabilitythatitisbiased wesolvethisproblemusingbayes stheorem letabetheeventthatwechoosethebiasedcoin andletbbetheeventthatthechosencoincomesupheadsbothtimes wewishtodetermineprfajbg wehaveprfagd prfbjagd andpr bjad hence prfajbgd exercisesc professorguildenstern ipsafair cointwice whatistheprobabilitythatprofessorrosencrantzobtainsmoreheads professorrosencrantz ipsafaircoinonce thanprofessorguildenstern probability proveboole sinequality forany niteorcountablyin nitesequenceofeventsa prfa gprfa gcprfa supposeweshuf eadeckof cards eachbearingadistinctnumberfrom tomixthecardsthoroughly wethenremovethreecards oneatatime fromthe deck whatistheprobabilitythatweselectthethreecardsinsorted increasing provethatprfajbgcpr ajbd provethatforanycollectionofeventsa prfa angdprfa gprfa gprfa gprfanja describeaprocedurethattakesasinputtwointegersaandbsuchthat usingfaircoin ips producesasoutputheadswithprobabilitya bandtailswithprobability giveaboundontheexpectednumberofcoin ips whichshouldbeo hint representa binbinary showhowtoconstructasetofneventsthatarepairwiseindependentbutsuchthatnosubsetofk ofthemismutuallyindependent twoeventsaandbareconditionallyindependent givenc ifprfa bjcgdprfajcgprfbjcg giveasimplebutnontrivialexampleoftwoeventsthatarenotindependentbutareconditionallyindependentgivenathirdevent youareacontestantinagameshowinwhichaprizeishiddenbehindoneof threecurtains youwillwintheprizeifyouselectthecorrectcurtain afteryou appendixccountingandprobabilityhavepickedonecurtainbutbeforethecurtainislifted theemceeliftsoneoftheothercurtains knowingthatitwillrevealanemptystage andasksifyouwould liketoswitchfromyourcurrentselectiontotheremainingcurtain howwould yourchanceschangeifyouswitch thisquestionisthecelebratedmontyhallproblem namedafteragame showhostwhooftenpresentedcontestantswithjustthisdilemma aprisonwardenhasrandomlypickedoneprisoneramongthreetogofree theothertwowillbeexecuted theguardknowswhichonewillgofreebutisforbid dentogiveanyprisonerinformationregardinghisstatus letuscalltheprisoners andz prisonerxaskstheguardprivatelywhichofyorzwillbeexe cuted arguingthatsincehealreadyknowsthatatleastoneofthemmustdie guardwon tberevealinganyinformationabouthisownstatus theguardtellsxthatyistobeexecuted prisonerxfeelshappiernow sincehe guresthateitherheorprisonerzwillgofree whichmeansthathisprobabilityofgoingfreeisnow isheright orarehischancesstill explain discreterandomvariablesa discrete randomvariablexisafunctionfroma niteorcountablyin nitesamplespacestotherealnumbers itassociatesarealnumberwitheachpossibleoutcomeofanexperiment whichallowsustoworkwiththeprobabilitydistribu tioninducedontheresultingsetofnumbers randomvariablescanalsobede ned foruncountablyin nitesamplespaces buttheyraisetechnicalissuesthatareun necessarytoaddressforourpurposes henceforth weshallassumethatrandom variablesarediscrete forarandomvariablexandarealnumberx wede netheeventxdxtobefs swx dxg prfxdxgdxs swx dxprfsg thefunctionf dprfxdxgistheprobabilitydensityfunctionoftherandomvariablex fromtheprobabilityaxioms prfxdxg andpxprfxdxgd asanexample considertheexperimentofrollingapairofordinary sideddice thereare possibleelementaryeventsinthesamplespace weassume discreterandomvariables thattheprobabilitydistributionisuniform sothateachelementaryevents sisequallylikely prfsgd netherandomvariablextobethemaximumofthetwovaluesshowingonthedice wehaveprfxd sincexassignsavalueof ofthe possibleelementaryevents namely weoftende neseveralrandomvariablesonthesamesamplespace ifxandyarerandomvariables thefunctionf dprfxdxandydygisthejointprobabilitydensityfunctionofxandy fora xedvaluey prfydygdxxprfxdxandydyg andsimilarly fora xedvaluex prfxdxgdxyprfxdxandydyg usingthede nition ofconditionalprobability wehaveprfxdxjydygdprfxdxandydygprfydyg wede networandomvariablesxandytobeindependentifforallxandy theeventsxdxandydyareindependentor equivalently ifforallxandy wehaveprfxdxandydygdprfxdxgprfydyg givenasetofrandomvariablesde nedoverthesamesamplespace wecande nenewrandomvariablesassums products orotherfunctionsoftheoriginal variables expectedvalueofarandomvariablethesimplestandmostusefulsummaryofthedistributionofarandomvariableisthe average ofthevaluesittakeson theexpectedvalue synonymously expectationormean ofadiscreterandomvariablexise xdxxxprfxdxg whichiswellde nedifthesumis niteorconvergesabsolutely sometimestheexpectationofxisdenotedbyxor whentherandomvariableisapparentfromcontext simplyby consideragameinwhichyou iptwofaircoins youearn foreachheadbutlose foreachtail theexpectedvalueoftherandomvariablexrepresenting appendixccountingandprobabilityyourearningsise prf sgc prf prf sgd theexpectationofthesumoftworandomvariablesisthesumoftheirexpecta tions thatis xcde xce whenevere xande yarede ned wecallthispropertylinearityofexpecta tion anditholdsevenifxandyarenotindependent italsoextendsto niteandabsolutelyconvergentsummationsofexpectations linearityofexpectationisthekeypropertythatenablesustoperformprobabilisticanalysesbyusingindicatorrandomvariables seesection ifxisanyrandomvariable anyfunctiong nesanewrandomvari ableg iftheexpectationofg isde ned thene xdxxg prfxdxg lettingg dax wehaveforanyconstanta axdae consequently expectationsarelinear foranytworandomvariablesxandyandanyconstanta axcdae xce whentworandomvariablesxandyareindependentandeachhasade nedexpectation xydxxxyxyprfxdxandydygdxxxyxyprfxdxgprfydygd xxxprfxdxg xyyprfydyg ingeneral whennrandomvariablesx xnaremutuallyindependent xnde discreterandomvariables whenarandomvariablextakesonvaluesfromthesetofnaturalnumbersndf wehaveaniceformulaforitsexpectation xid iprfxdigd xid prfxigprfxic xid prfxig sinceeachtermprfxigisaddedinitimesandsubtractedouti times exceptprfx whichisaddedin timesandnotsubtractedoutatall whenweapplyaconvexfunctionf toarandomvariablex jensen sin equalitygivesuse providedthattheexpectationsexistandare nite afunctionf isconvexifforallxandyandforall wehavef varianceandstandarddeviationtheexpectedvalueofarandomvariabledoesnottellushow spreadout thevariable svaluesare forexample ifwehaverandomvariablesxandyforwhichprfxd gdprfxd andprfyd gdprfyd thenbothe xande yare yettheactualvaluestakenonbyyarefartherfromthemeanthantheactualvaluestakenonbyx thenotionofvariancemathematicallyexpresseshowfarfromthemeanaran domvariable svaluesarelikelytobe thevarianceofarandomvariablexwithmeane xisvar xde dex xce xdex xce xdex xce xdex tojustifytheequalitye xde notethatbecausee xisarealnum berandnotarandomvariable soise theequalitye xde appendixccountingandprobabilityfollowsfromequation withade rewritingequation yieldsanexpressionfortheexpectationofthesquareofarandomvariable dvar xce thevarianceofarandomvariablexandthevarianceofaxarerelated seeexercisec var axda var whenxandyareindependentrandomvariables var xcdvar xcvar ingeneral ifnrandomvariablesx xnarepairwiseindependent thenvar nxid dnxid var thestandarddeviationofarandomvariablexisthenonnegativesquarerootofthevarianceofx thestandarddeviationofarandomvariablexissometimesdenotedxorsimplywhentherandomvariablexisunderstoodfromcontext withthisnotation thevarianceofxisdenoted exercisesc supposewerolltwoordinary sideddice whatistheexpectationofthesumofthetwovaluesshowing whatistheexpectationofthemaximumofthetwovaluesshowing anarraya ncontainsndistinctnumbersthatarerandomlyordered witheachpermutationofthennumbersbeingequallylikely whatistheexpectationoftheindexofthemaximumelementinthearray whatistheexpectationoftheindexoftheminimumelementinthearray acarnivalgameconsistsofthreediceinacage aplayercanbetadollaronany ofthenumbers thecageisshaken andthepayoffisasfollows iftheplayer snumberdoesn tappearonanyofthedice heloseshisdollar otherwise ifhisnumberappearsonexactlykofthethreedice forkd hekeepshisdollarandwinskmoredollars whatishisexpectedgainfromplayingthecarnivalgameonce thegeometricandbinomialdistributions arguethatifxandyarenonnegativerandomvariables thene max xce letxandybeindependentrandomvariables provethatf andg areindependentforanychoiceoffunctionsfandg letxbeanonnegativerandomvariable andsupposethate xiswellde ned provemarkov sinequality prfxtge forallt letsbeasamplespace andletxandx berandomvariablessuchthatx foralls provethatforanyrealconstantt prfxtgprfx whichislarger theexpectationofthesquareofarandomvariable orthesquare ofitsexpectation showthatforanyrandomvariablexthattakesononlythevalues wehavevar xde provethatvar axda var xfromthede nition ofvariance thegeometricandbinomialdistributionswecanthinkofacoin ipasaninstanceofabernoullitrial whichisanexperi mentwithonlytwopossibleoutcomes whichoccurswithprobabilityp andfailure whichoccurswithprobabilityqd whenwespeakofbernoullitrialscollectively wemeanthatthetrialsaremutuallyindependentand unlesswespeci callysayotherwise thateachhasthesameprobabilitypforsuccess appendixccountingandprobability figurec ageometricdistributionwithprobabilitypd ofsuccessandaprobabilityqd poffailure theexpectationofthedistributionis importantdistributionsarisefrombernoullitrials thegeometricdistributionandthebinomialdistribution thegeometricdistributionsupposewehaveasequenceofbernoullitrials eachwithaprobabilitypofsuc cessandaprobabilityqd poffailure howmanytrialsoccurbeforeweobtainasuccess letusde netherandomvariablexbethenumberoftrialsneededtoobtainasuccess thenxhasvaluesintherangef andfork prfxdkgdqk sincewehavek failuresbeforetheonesuccess aprobabilitydistributionsat isfyingequation issaidtobeageometricdistribution figurec illustratessuchadistribution thegeometricandbinomialdistributions assumingthatq wecancalculatetheexpectationofageometricdistribu tionusingidentity xkd kqk pdpq xkd kqkdpqq dpqqp onaverage ittakes ptrialsbeforeweobtainasuccess anintuitiveresult thevariance whichcanbecalculatedsimilarly butusingexercisea isvar xdq asanexample supposewerepeatedlyrolltwodiceuntilweobtaineitherasevenoraneleven ofthe possibleoutcomes yieldasevenand yieldan eleven theprobabilityofsuccessispd andwemustroll timesonaveragetoobtainasevenoreleven thebinomialdistributionhowmanysuccessesoccurduringnbernoullitrials whereasuccessoccurswithprobabilitypandafailurewithprobabilityqd netherandomvari ablextobethenumberofsuccessesinntrials thenxhasvaluesintherangef andforkd prfxdkgd pkqnk sincetherearenkwaystopickwhichkofthentrialsaresuccesses andtheprobabilitythateachoccursispkqnk aprobabilitydistributionsatisfyingequa tion issaidtobeabinomialdistribution forconvenience wede nethefamilyofbinomialdistributionsusingthenotationb kin figurec illustratesabinomialdistribution thename binomial comesfromtheright handsideofequation beingthekthtermoftheexpansionof pcq consequently sincepcqd appendixccountingandprobability figurec thebinomialdistributionb resultingfromnd bernoullitrials eachwithprobabilitypd ofsuccess theexpectationofthedistributionisnpd nxkd kin asaxiom oftheprobabilityaxiomsrequires wecancomputetheexpectationofarandomvariablehavingabinomialdistri butionfromequations letxbearandomvariablethatfollowsthebinomialdistributionb kin andletqd bythede nitionofexpec tation wehavee xdnxkd kprfxdkgdnxkd kin dnxkd pkqnkdnpnxkd qnk byequation dnpn xkd pkq thegeometricandbinomialdistributions dnpn xkd kin dnp byequation byusingthelinearityofexpectation wecanobtainthesameresultwithsub stantiallylessalgebra letxibetherandomvariabledescribingthenumberofsuccessesintheithtrial thene xidp andbylinearityofexpectation equation theexpectednumberofsuccessesforntrialsise xde nxid dnxid xidnxid pdnp wecanusethesameapproachtocalculatethevarianceofthedistribution usingequation wehavevar xide sincexionlytakesonthevalues wehavex idxi whichimpliese ide xidp hence var xidpp dpq tocomputethevarianceofx wetakeadvantageoftheindependenceofthentrials byequation var xdvar nxid dnxid var xidnxid pqdnpq asfigurec shows thebinomialdistributionb kin increaseswithkuntilitreachesthemeannp andthenitdecreases wecanprovethatthedistributionalwaysbehavesinthismannerbylookingattheratioofsuccessiveterms appendixccountingandprobabilityb kin dnkpkqnknk qnkc nkc nkc pkq pkkq thisratioisgreaterthan preciselywhen pkispositive conse quently kin fork thedistributionincreases andb kin fork thedistributiondecreases ifkd pisaninteger thenb kin andsothedistri butionthenhastwomaxima atkd pandatk dnpq otherwise itattainsamaximumattheuniqueintegerkthatliesintherangenpq thefollowinglemmaprovidesanupperboundonthebinomialdistribution lemmac letn letqd andlet thenb kin npkknqnknk proofusingequation wehaveb kin pkqnknkknnknkpkqnkdnpkknqnknk exercisesc verifyaxiom oftheprobabilityaxiomsforthegeometricdistribution howmanytimesonaveragemustwe faircoinsbeforeweobtain heads tails thegeometricandbinomialdistributions showthatb kin nkin whereqd showthatvalueofthemaximumofthebinomialdistributionb kin isapprox imately pnpq whereqd showthattheprobabilityofnosuccessesinnbernoullitrials eachwithprobabilitypd isapproximately showthattheprobabilityofexactlyonesuccessisalsoapproximately professorrosencrantz ipsafaircoinntimes andsodoesprofessorguildenstern showthattheprobabilitythattheygetthesamenumberofheadsis hint forprofessorrosencrantz callaheadasuccess forprofessorguildenstern atailasuccess useyourargumenttoverifytheidentitynxkd showthatfor kin whereh istheentropyfunction considernbernoullitrials whereforid theithtrialhasprobabil itypiofsuccess andletxbetherandomvariabledenotingthetotalnumberofsuccesses letppiforallid provethatfor prfx kgk xid iin letxbetherandomvariableforthetotalnumberofsuccessesinasetaofnbernoullitrials wheretheithtrialhasaprobabilitypiofsuccess andletx betherandomvariableforthetotalnumberofsuccessesinasecondseta ofnbernoullitrials wheretheithtrialhasaprobabilityp ipiofsuccess provethatfor appendixccountingandprobabilityprfx kgprfxkg hint showhowtoobtainthebernoullitrialsina byanexperimentinvolvingthetrialsofa andusetheresultofexercisec thetailsofthebinomialdistributiontheprobabilityofhavingatleast oratmost ksuccessesinnbernoullitrials eachwithprobabilitypofsuccess isoftenofmoreinterestthantheprobabilityofhavingexactlyksuccesses inthissection weinvestigatethetailsofthebinomialdistribution thetworegionsofthedistributionb kin thatarefarfromthemeannp weshallproveseveralimportantboundson thesumofalltermsin atail rstprovideaboundontherighttailofthedistributionb kin wecandetermineboundsonthelefttailbyinvertingtherolesofsuccessesandfailures theoremc considerasequenceofnbernoullitrials wheresuccessoccurswithprobabilityp letxbetherandomvariabledenotingthetotalnumberofsuccesses thenfor theprobabilityofatleastksuccessesisprfxkgdnxidkb iin proofforsf weletasdenotetheeventthattheithtrialisasuccessforeveryi clearlyprfasgdpkifjsjdk wehaveprfxkgdprfthereexistssf ngwjsjdkandasgdpr ngwjsjdkasxs ngwjsjdkprfasg byinequality thetailsofthebinomialdistribution thefollowingcorollaryrestatesthetheoremforthelefttailofthebinomialdistribution ingeneral weshallleaveittoyoutoadapttheproofsfromonetailto theother corollaryc considerasequenceofnbernoullitrials wheresuccessoccurswithprobabil ityp ifxistherandomvariabledenotingthetotalnumberofsuccesses thenfor theprobabilityofatmostksuccessesisprfxkgdkxid iin nnk nkd ournextboundconcernsthelefttailofthebinomialdistribution itscorollaryshowsthat farfromthemean thelefttaildiminishesexponentially theoremc considerasequenceofnbernoullitrials wheresuccessoccurswithprobabilitypandfailurewithprobabilityqd letxbetherandomvariabledenotingthetotalnumberofsuccesses thenfor theprobabilityoffewerthanksuccessesisprfx kgdk xid iin kqnpkb kin proofweboundtheseriespk iin byageometricseriesusingthetech niquefromsectiona forid wehavefromequa tion iin diq nic pkq appendixccountingandprobabilityifweletxdkq nnp pdkqnqpdknp itfollowsthatb iin iterativelyapplyingthisinequalitykitimes weobtainb iin xkib kin andhencek xid iin xid xkib kin kin xid xidx kin dkqnpkb kin corollaryc considerasequenceofnbernoullitrials wheresuccessoccurswithprobabilitypandfailurewithprobabilityqd thenfor knp theprobabilityoffewerthanksuccessesislessthanonehalfoftheprobabilityoffewerthankc successes proofbecauseknp wehavekqnpk qnp thetailsofthebinomialdistribution qnp sinceq lettingxbetherandomvariabledenotingthenumberofsuccesses theoremc andinequality implythattheprobabilityoffewerthanksuc cessesisprfx kgdk xid iin kin thuswehaveprfx kgprfx gdpk iin pkid iin dpk iin iin kin sincepk iin kin boundsontherighttailfollowsimilarly exercisec asksyoutoprovethem corollaryc considerasequenceofnbernoullitrials wheresuccessoccurswithprobabilityp letxbetherandomvariabledenotingthetotalnumberofsuccesses thenfornp theprobabilityofmorethanksuccessesisprfx kgdnxidkc iin pknpb kin corollaryc considerasequenceofnbernoullitrials wheresuccessoccurswithprobabilitypandfailurewithprobabilityqd thenfor npcn theprobabilityofmorethanksuccessesislessthanonehalfoftheprobabilityofmorethank successes thenexttheoremconsidersnbernoullitrials eachwithaprobabilitypiofsuccess forid asthesubsequentcorollaryshows wecanusethe appendixccountingandprobabilitytheoremtoprovideaboundontherighttailofthebinomialdistributionbysettingpidpforeachtrial theoremc considerasequenceofnbernoullitrials whereintheithtrial forid successoccurswithprobabilitypiandfailureoccurswithprobabilityqid letxbetherandomvariabledescribingthetotalnumberofsuccesses andletde thenforr prfxrgrr proofsinceforany thefunctione xisstrictlyincreasinginx prfxrgdpr wherewewilldetermine later usingmarkov sinequality weobtainpr ree thebulkoftheproofconsistsofboundingee xandsubstitutingasuit ablevaluefor ininequality weevaluateee usingthetechniqueofindicatorrandomvariables seesection letxidiftheithbernoullitrialisasuccessgforid thatis xiistherandomvari ablethatis iftheithbernoullitrialisasuccessand ifitisafailure xdnxid andbylinearityofexpectation xde nxid dnxid xidnxid whichimpliesxdnxid xipi toevaluateee wesubstituteforx obtainingee xdee pnid xipi nyid xipi dnyid xipi thetailsofthebinomialdistribution whichfollowsfrom sincethemutualindependenceoftherandomvari ablesxiimpliesthemutualindependenceoftherandomvariablese xipi seeexercisec bythede nitionofexpectation xipi pice qidpie qicqie pipie exp pie whereexp denotestheexponentialfunction exp dex inequality followsfromtheinequalities qie ande andthelastlinefollowsfrominequality consequently xdnyid xipi nyid exp pie dexp nxid pie dexpe sincedpnid therefore fromequation andinequalities itfollowsthatprfxrgexpe choosing dln seeexercisec weobtainprfxrgexpeln rrln dexp rrln der rdrr whenappliedtobernoullitrialsinwhicheachtrialhasthesameprobabilityofsuccess theoremc yieldsthefollowingcorollaryboundingtherighttailofa binomialdistribution appendixccountingandprobabilitycorollaryc considerasequenceofnbernoullitrials whereineachtrialsuccessoccurswithprobabilitypandfailureoccurswithprobabilityqd thenforr prfxnprgdnxkddnpcreb kin nperr proofbyequation wehavede xdnp exercisesc whichislesslikely obtainingnoheadswhenyou ipafaircoinntimes orobtainingfewerthannheadswhenyou ipthecoin ntimes provecorollariesc andc showthatk xid nknak kin foralla andallksuchthat provethatif andqd thenk xid piqni kqnpknpkknqnknk showthattheconditionsoftheoremc implythatprfxrg nrr similarly showthattheconditionsofcorollaryc implythatprfnpxrgnqerr problemsforappendixc considerasequenceofnbernoullitrials whereintheithtrial forid successoccurswithprobabilitypiandfailureoccurswithprobabilityqid letxbetherandomvariabledescribingthetotalnumberofsuccesses andletde showthatforr prfxrger hint provethatpie qicqie pie thenfollowtheoutlineoftheproofoftheoremc usingthisinequalityinplaceofinequality showthatchoosing dln minimizestheright handsideofinequal ity problemsc ballsandbins inthisproblem weinvestigatetheeffectofvariousassumptionsonthenumberof waysofplacingnballsintobdistinctbins supposethatthenballsaredistinctandthattheirorderwithinabindoesnotmatter arguethatthenumberofwaysofplacingtheballsinthebinsisbn supposethattheballsaredistinctandthattheballsineachbinareordered provethatthereareexactly bcn waystoplacetheballsinthebins hint considerthenumberofwaysofarrangingndistinctballsandb indistinguishablesticksinarow supposethattheballsareidentical andhencetheirorderwithinabindoesnotmatter showthatthenumberofwaysofplacingtheballsinthebinsisbcn hint ofthearrangementsinpart howmanyarerepeatediftheballsaremadeidentical supposethattheballsareidenticalandthatnobinmaycontainmorethanoneball sothatnb showthatthenumberofwaysofplacingtheballsisbn supposethattheballsareidenticalandthatnobinmaybeleftempty assumingthatnb showthatthenumberofwaysofplacingtheballsisn appendixccountingandprobabilityappendixnotesthe rstgeneralmethodsforsolvingprobabilityproblemswerediscussedinafamouscorrespondencebetweenb pascalandp defermat whichbeganin andinabookbyc huygensin rigorousprobabilitytheorybeganwiththe workofj bernoulliin anda demoivrein furtherdevelopmentsofthetheorywereprovidedbyp laplace poisson andc gauss sumsofrandomvariableswereoriginallystudiedbyp chebyshevanda markov kolmogorovaxiomatizedprobabilitytheoryin chernoff andhoeffding providedboundsonthetailsofdistributions seminalwork inrandomcombinatorialstructureswasdonebyp erd knuth andliu aregoodreferencesforelementarycombinatoricsandcounting standardtextbookssuchasbillingsley chung drake feller androzanov offercomprehensiveintroductionstoprobability dmatricesmatricesariseinnumerousapplications including butbynomeanslimitedto scienti ccomputing ifyouhaveseenmatricesbefore muchofthematerialinthis appendixwillbefamiliartoyou butsomeofitmightbenew sectiond covers basicmatrixde nitionsandoperations andsectiond presentssomebasicmatrix properties matricesandmatrixoperationsinthissection wereviewsomebasicconceptsofmatrixtheoryandsomefunda mentalpropertiesofmatrices matricesandvectorsamatrixisarectangulararrayofnumbers forexample ada isa matrixad aij whereforid andjd wedenotetheelementofthematrixinrowiandcolumnjbyaij weuseuppercaseletterstodenotematricesandcorrespondingsubscriptedlowercaseletterstodenotetheirelements wedenotethesetofallmnmatriceswithreal valuedentriesbyrmnand ingeneral thesetofmnmatriceswithentriesdrawnfromasetsbysmn thetransposeofamatrixaisthematrixatobtainedbyexchangingtherowsandcolumnsofa forthematrixaofequation appendixdmatricesatd avectorisaone dimensionalarrayofnumbers forexample isavectorofsize wesometimescallavectoroflengthnann vector weuselowercaseletterstodenotevectors andwedenotetheithelementofasize nvectorxbyxi forid wetakethestandardformofavectortobeasacolumnvectorequivalenttoann matrix thecorrespondingrowvectorisobtainedbytakingthetranspose xtd theunitvectoreiisthevectorwhoseithelementis andallofwhoseotherelementsare usually thesizeofaunitvectorisclearfromthecontext azeromatrixisamatrixallofwhoseentriesare suchamatrixisoftendenoted sincetheambiguitybetweenthenumber andamatrixof sisusuallyeasilyresolvedfromcontext ifamatrixof sisintended thenthesizeofthematrixalsoneedstobederivedfromthecontext squarematricessquarennmatricesarisefrequently severalspecialcasesofsquarematricesareofparticularinterest adiagonalmatrixhasaijd wheneveri becausealloftheoff diagonalelementsarezero wecanspecifythematrixbylistingtheelementsalongthe diagonal diag ann ann thennidentitymatrixinisadiagonalmatrixwith salongthediagonal inddiag matricesandmatrixoperations wheniappearswithoutasubscript wederiveitssizefromthecontext theithcolumnofanidentitymatrixistheunitvectorei atridiagonalmatrixtisoneforwhichtijd ifjijj nonzeroentriesappearonlyonthemaindiagonal immediatelyabovethemaindiagonal forid orimmediatelybelowthemaindiagonal tic iforid tdt tnn anupper triangularmatrixuisoneforwhichuijd ifi allentriesbelowthediagonalarezero unn anupper triangularmatrixisunitupper triangularifithasall salongthediagonal alower triangularmatrixlisoneforwhichlijd ifi allentriesabovethediagonalarezero lnn alower triangularmatrixisunitlower triangularifithasall salongthediagonal appendixdmatrices apermutationmatrixphasexactlyone ineachroworcolumn selsewhere anexampleofapermutationmatrixispd suchamatrixiscalledapermutationmatrixbecausemultiplyingavectorxbyapermutationmatrixhastheeffectofpermuting rearranging theelements ofx exercised exploresadditionalpropertiesofpermutationmatrices asymmetricmatrixasatis estheconditionadat forexample isasymmetricmatrix basicmatrixoperationstheelementsofamatrixorvectorarenumbersfromanumbersystem suchastherealnumbers thecomplexnumbers orintegersmoduloaprime thenumber systemde neshowtoaddandmultiplynumbers wecanextendthesede nitions toencompassadditionandmultiplicationofmatrices wede nematrixadditionasfollows ifad aij andbd bij aremnmatrices thentheirmatrixsumcd cij dacbisthemnmatrixde nedbycijdaijcbijforid mandjd thatis matrixadditionisperformedcomponentwise azeromatrixistheidentityformatrixaddition ifisanumberandad aij isamatrix thendaij isthescalarmultipleofaobtainedbymultiplyingeachofitselementsby asaspecialcase wede nethenegativeofamatrixad aij tobe sothattheijthentryofaisaij matricesandmatrixoperations weusethenegativeofamatrixtode nematrixsubtraction abdac wede nematrixmultiplicationasfollows westartwithtwomatricesaandbthatarecompatibleinthesensethatthenumberofcolumnsofaequalsthenumberofrowsofb ingeneral anexpressioncontainingamatrixproductabisalwaysassumedtoimplythatmatricesaandbarecompatible ifad aik isanmnmatrixandbd bkj isannpmatrix thentheirmatrixproductcdabisthempmatrixcd cij wherecijdnxkd aikbkj forid mandjd theproceduresquare matrix multiplyinsection implementsmatrixmultiplicationinthestraightfor wardmannerbasedonequation assumingthatthematricesaresquare mdndp tomultiplynnmatrices matrix multiplyper formsn multiplicationsandn additions andsoitsrunningtimeis matriceshavemany butnotall ofthealgebraicpropertiestypicalofnumbers identitymatricesareidentitiesformatrixmultiplication imadaindaforanymnmatrixa multiplyingbyazeromatrixgivesazeromatrix matrixmultiplicationisassociative cforcompatiblematricesa andc matrixmultiplicationdistributesoveraddi tion bcc dabcac bcc ddbdccd forn multiplicationofnnmatricesisnotcommutative forexample ifad andbd thenabd andbad appendixdmatriceswede nematrix vectorproductsorvector vectorproductsasifthevectorweretheequivalentn matrix ora nmatrix inthecaseofarowvector ifaisanmnmatrixandxisann vector thenaxisanm vector ifxandyaren vectors thenxtydnxid xiyiisanumber actuallya matrix calledtheinnerproductofxandy thema trixxytisannnmatrixzcalledtheouterproductofxandy ijdxiyj euclidean normkxkofann vectorxisde nedbykxkd ccx xtx thenormofxisitslengthinn dimensionaleuclideanspace exercisesd showthatifaandbaresymmetricnnmatrices thensoareacbandab provethat tdbtatandthatataisalwaysasymmetricmatrix provethattheproductoftwolower triangularmatricesislower triangular provethatifpisannnpermutationmatrixandaisannnmatrix thenthematrixproductpaisawithitsrowspermuted andthematrixproductapisawithitscolumnspermuted provethattheproductoftwopermutationmatricesis apermutationmatrix basicmatrixpropertiesinthissection wede nesomebasicpropertiespertainingtomatrices inverses lineardependenceandindependence rank anddeterminants wealsode nethe classofpositive nitematrices basicmatrixproperties matrixinverses ranks anddeterminantswede netheinverseofannnmatrixatobethennmatrix denoteda ifitexists suchthataa dinda forexample manynonzeronnmatricesdonothaveinverses amatrixwithoutaninverseiscallednoninvertible orsingular anexampleofanonzerosingularmatrixis ifamatrixhasaninverse itiscalledinvertible ornonsingular matrixinverses whentheyexist areunique seeexercised ifaandbarenonsingularnnmatrices theinverseoperationcommuteswiththetransposeoperation thevectorsx xnarelinearlydependentifthereexistcoef cientsc notallofwhicharezero suchthatc cccnxnd therowvectorsx andx arelinearlydependent forexample ifvectorsarenotlinearlydependent theyarelinearlyindependent forexample thecolumnsofanidentitymatrixarelinearlyindependent thecolumnrankofanonzeromnmatrixaisthesizeofthelargestsetoflinearlyindependentcolumnsofa similarly therowrankofaisthesizeofthelargestsetoflinearlyindependentrowsofa afundamentalpropertyofanymatrixaisthatitsrowrankalwaysequalsitscolumnrank sothatwecansimplyrefertotherankofa therankofanmnmatrixisanintegerbetween andmin inclusive therankofazeromatrixis andtherankofannnidentitymatrixisn analternate butequivalentandoftenmoreuseful nitionisthattherankofanonzeromnmatrixaisthesmallestnumberrsuchthatthereexistmatricesbandcofrespectivesizesmrandrnsuchthatadbc asquarennmatrixhasfullrankifitsrankisn anmnmatrixhasfullcolumnrankifitsrankisn thefollowingtheoremgivesafundamentalpropertyofranks appendixdmatricestheoremd asquarematrixhasfullrankifandonlyifitisnonsingular anullvectorforamatrixaisanonzerovectorxsuchthataxd thefollowingtheorem whoseproofisleftasexercised anditscorollaryrelatethenotionsofcolumnrankandsingularitytonullvectors theoremd amatrixahasfullcolumnrankifandonlyifitdoesnothaveanullvector corollaryd asquarematrixaissingularifandonlyifithasanullvector theijthminorofannnmatrixa forn isthe matrixa ijobtainedbydeletingtheithrowandjthcolumnofa wede nethedeterminantofannnmatrixarecursivelyintermsofitsminorsbydet ifnd nxjd cja jdet ifn theterm icjdet isknownasthecofactoroftheelementaij thefollowingtheorems whoseproofsareomittedhere expressfundamentalpropertiesofthedeterminant theoremd determinantproperties thedeterminantofasquarematrixahasthefollowingproperties ifanyroworanycolumnofaiszero thendet thedeterminantofaismultipliedbyiftheentriesofanyonerow oranyonecolumn ofaareallmultipliedby thedeterminantofaisunchangediftheentriesinonerow respectively col umn areaddedtothoseinanotherrow respectively thedeterminantofaequalsthedeterminantofat thedeterminantofaismultipliedby ifanytworows oranytwocolumns areexchanged foranysquarematricesaandb wehavedet ddet det basicmatrixproperties theoremd annnmatrixaissingularifandonlyifdet positive nitematricespositive nitematricesplayanimportantroleinmanyapplications annnmatrixaispositive niteifxtax foralln vectorsx forexample theidentitymatrixispositive nite sinceforanynonzerovector xtinxdxtxdnxid matricesthatariseinapplicationsareoftenpositive niteduetothefollowingtheorem theoremd foranymatrixawithfullcolumnrank thematrixataispositive nite proofwemustshowthatxt ata foranynonzerovectorx foranyvectorx ata byexercised dkaxk notethatkaxk isjustthesumofthesquaresoftheelementsofthevectorax therefore kaxk ifkaxk everyelementofaxis whichistosayaxd sinceahasfullcolumnrank axd impliesxd bytheoremd hence ataispositive nite exploresotherpropertiesofpositive nitematrices exercisesd provethatmatrixinversesareunique thatis ifbandcareinversesofa thenbdc provethatthedeterminantofalower triangularorupper triangularmatrixisequal totheproductofitsdiagonalelements provethattheinverseofalower triangular matrix ifitexists islower triangular appendixdmatricesd provethatifpisapermutationmatrix thenpisinvertible itsinverseispt andptisapermutationmatrix letaandbbennmatricessuchthatabdi provethatifa isobtainedfromabyaddingrowjintorowi thensubtractingcolumnifromcolumnjofbyieldstheinverseb ofa letabeanonsingularnnmatrixwithcomplexentries showthateveryentryofa isrealifandonlyifeveryentryofaisreal showthatifaisanonsingular symmetric nnmatrix thena issymmetric showthatifbisanarbitrarymnmatrix thenthemmmatrixgivenbytheproductbabtissymmetric provetheoremd thatis showthatamatrixahasfullcolumnrankifandonlyifaxd impliesxd hint expressthelineardependenceofonecolumnontheothersasamatrix vectorequation provethatforanytwocompatiblematricesaandb rank min rank rank whereequalityholdsifeitheraorbisanonsingularsquarematrix hint usethealternatede nitionoftherankofamatrix problemsd vandermondematrix givennumbersx provethatthedeterminantofthevandermondematrixv problemsforappendixd isdet xkxj hint multiplycolumnibyx andaddittocolumnic foridn andthenuseinduction permutationsde nedbymatrix vectormultiplicationovergf oneclassofpermutationsoftheintegersinthesetsndf gisde nedbymatrixmultiplicationovergf foreachintegerxinsn weviewitsbinaryrepresentationasann bitvectorx wherexdpn ifaisannnmatrixinwhicheachentryiseither thenwecande neapermutationmappingeachvaluexinsntothenumberwhosebinaryrepresentationisthematrix vectorproductax weperformallarithmeticovergf allvaluesareeither andwithoneexceptiontheusualrulesofadditionandmultiplicationapply theexceptionisthat youcanthinkofarithmeticovergf asbeingjustlikeregularintegerarithmetic exceptthatyouuseonlytheleastsigni cantbit asanexample fors thematrixad nesthefollowingpermutationa toseewhya observethat workingingf whichisthebinaryrepresentationof appendixdmatricesfortheremainderofthisproblem weworkovergf andallmatrixandvectorentriesare wede netherankofa matrix amatrixforwhicheachentryiseither overgf thesameasforaregularmatrix butwithallarithmeticthatdetermineslinearindependenceperformedovergf wede netherangeofannn matrixabyr dfywydaxforsomex sng sothatr isthesetofnumbersinsnthatwecanproducebymultiplyingeachvaluexinsnbya ifristherankofmatrixa provethatjr concludethatade nesapermutationonsnonlyifahasfullrank foragivennnmatrixaandagivenvaluey wede nethepreimageofybyp dfxwaxdyg sothatp isthesetofvaluesinsnthatmaptoywhenmultipliedbya ifristherankofnnmatrixaandy provethatjp andsupposewepartitionthesetsnintoblocksofconsec utivenumbers wheretheithblockconsistsofthe mnumbersi foranysubsetssn neb tobethesetofsize mblocksofsncontainingsomeelementofs asanexample whennd andsdf thenb consistsofblocks isinthe thblock sinceboth areinblock letrbetherankofthelowerleft msubmatrixofa thatis thematrixformedbytakingtheintersectionofthebottomnmrowsandtheleftmostmcolumnsofa letsbeanysize mblockofsn andlets dfywydaxforsomex provethatjb randthatforeachblockinb exactly mrnumbersinsmaptothatblock becausemultiplyingthezerovectorbyanymatrixyieldsazerovector thesetofpermutationsofsnde nedbymultiplyingbynn matriceswithfullrankovergf cannotincludeallpermutationsofsn letusextendtheclassofper mutationsde nedbymatrix vectormultiplicationtoincludeanadditiveterm thatx snmapstoaxcc wherecisann bitvectorandadditionisperformedovergf forexample whenad notesforappendixd andcd wegetthefollowingpermutationa wecallanypermutationthatmapsx sntoaxcc forsomenn matrixawithfullrankandsomen bitvectorc alinearpermutation useacountingargumenttoshowthatthenumberoflinearpermutationsofsnismuchlessthanthenumberofpermutationsofsn giveanexampleofavalueofnandapermutationofsnthatcannotbeachievedbyanylinearpermutation hint foragivenpermutation thinkabouthowmultiplyingamatrixbyaunitvectorrelatestothecolumnsofthematrix appendixnoteslinear algebratextbooksprovideplentyofbackgroundinformationonmatrices thebooksbystrang areparticularlygood bibliography miltonabramowitzandirenea stegun editors handbookofmathematicalfunctions dover adel vel ski ande landis analgorithmfortheorganizationofinformation sovietmathematicsdoklady alokaggarwalandjeffreyscottvitter theinput outputcomplexityofsortingandrelatedproblems communicationsoftheacm manindraagrawal neerajkayal andnitinsaxena primesisinp annalsofmathe matics alfredv aho johne hopcroft andjeffreyd ullman thedesignandanalysisofcomputeralgorithms addison wesley alfredv aho johne hopcroft andjeffreyd ullman datastructuresandalgorithms addison wesley ravindrak ahuja thomasl magnanti andjamesb orlin networkflows theory algorithms andapplications prenticehall ravindrak ahuja kurtmehlhorn jamesb orlin androberte tarjan fasteralgorithmsfortheshortestpathproblem journaloftheacm ravindrak ahujaandjamesb orlin afastandsimplealgorithmforthemaximum owproblem operationsresearch ravindrak ahuja jamesb orlin androberte tarjan improvedtimeboundsforthemaximum owproblem siamjournaloncomputing mikl osajtai nimrodmegiddo andorliwaarts improvedalgorithmsandanalysisforsecretaryproblemsandgeneralizations inproceedingsofthe thannualsymposiumonfoundationsofcomputerscience pages selimg akl thedesignandanalysisofparallelalgorithms prenticehall mohamadakraandlouaybazzi onthesolutionoflinearrecurrenceequations compu tationaloptimizationandapplications nogaalon generatingpseudo randompermutationsandmaximum owalgorithms formationprocessingletters bibliography arneandersson balancedsearchtreesmadesimple inproceedingsofthethirdworkshoponalgorithmsanddatastructures volume oflecturenotesincomputerscience pages springer arneandersson fasterdeterministicsortingandsearchinginlinearspace inproceedingsofthe thannualsymposiumonfoundationsofcomputerscience pages arneandersson torbenhagerup stefannilsson andrajeevraman sortinginlineartime journalofcomputerandsystemsciences tomm apostol calculus volume blaisdellpublishingcompany secondedition nimars arora robertd blumofe andc gregplaxton threadschedulingformultipro grammedmultiprocessors inproceedingsofthe thannualacmsymposiumonparallelalgorithmsandarchitectures pages sanjeevarora probabilisticcheckingofproofsandthehardnessofapproximationprob lems phdthesis universityofcalifornia berkeley sanjeevarora theapproximabilityofnp hardproblems inproceedingsofthe thannualacmsymposiumontheoryofcomputing pages sanjeevarora polynomialtimeapproximationschemesforeuclideantravelingsalesmanandothergeometricproblems journaloftheacm sanjeevaroraandcarstenlund hardnessofapproximations indorits hochbaum editor approximationalgorithmsfornp hardproblems pages pwspublishingcompany javeda aslam asimpleboundontheexpectedheightofarandomlybuiltbinarysearchtree technicalreporttr dartmouthcollegedepartmentofcomputerscience mikhailj atallah editor algorithmsandtheoryofcomputationhandbook crcpress ausiello crescenzi gambosi kann marchetti spaccamela andm protasi complexityandapproximation combinatorialoptimizationproblemsandtheirapprox imabilityproperties springer shaiavidanandarielshamir seamcarvingforcontent awareimageresizing acmtrans actionsongraphics article sarabaaseandalanvangelder computeralgorithms introductiontodesignandanal ysis addison wesley thirdedition ericbach privatecommunication ericbach theoreticalgorithms inannualreviewofcomputerscience volume pages annualreviews inc ericbachandjeffreyshallit algorithmicnumbertheory volumei cientalgorithms themitpress davidh bailey kinglee andhorstd simon usingstrassen salgorithmtoacceleratethesolutionoflinearsystems thejournalofsupercomputing bibliography surenderbaswana rameshhariharan andsandeepsen improveddecrementalalgo rithmsformaintainingtransitiveclosureandall pairsshortestpaths journalofalgorithms bayer symmetricbinaryb trees datastructureandmaintenancealgorithms actainformatica bayerande mccreight organizationandmaintenanceoflargeorderedindexes actainformatica pierrebeauchemin gillesbrassard claudecr epeau claudegoutier andcarlpomerance thegenerationofrandomnumbersthatareprobablyprime journalofcryptology richardbellman dynamicprogramming princetonuniversitypress richardbellman onaroutingproblem quarterlyofappliedmathematics michaelben lowerboundsforalgebraiccomputationtrees inproceedingsofthefifteenthannualacmsymposiumontheoryofcomputing pages michaela bender erikd demaine andmartinfarach colton cache obliviousb trees inproceedingsofthe stannualsymposiumonfoundationsofcomputerscience pages samuelw bentandjohnw john findingthemedianrequires ncomparisons inpro ceedingsoftheseventeenthannualacmsymposiumontheoryofcomputing pages jonl bentley writingef cientprograms prenticehall jonl bentley programmingpearls addison wesley jonl bentley dorotheahaken andjamesb saxe ageneralmethodforsolvingdivide conquerrecurrences sigactnews danielbienstockandbenjaminmcclosky tighteningsimplexmixed integersetswithguaranteedbounds optimizationonline july patrickbillingsley probabilityandmeasure johnwiley sons secondedition guye blelloch scanprimitivesandparallelvectormodels phdthesis departmentofelectricalengineeringandcomputerscience mit availableasmitlaboratoryforcomputersciencetechnicalreportmit lcs guye blelloch programmingparallelalgorithms communicationsoftheacm guye blelloch phillipb gibbons andyossimatias provablyef cientschedulingforlanguageswith grainedparallelism inproceedingsofthe thannualacmsymposiumonparallelalgorithmsandarchitectures pages manuelblum robertw floyd vaughanpratt ronaldl rivest androberte tarjan timeboundsforselection journalofcomputerandsystemsciences robertd blumofe christopherf joerg bradleyc kuszmaul charlese leiserson keithh randall andyulizhou cilk anef cientmultithreadedruntimesystem journalofparallelanddistributedcomputing bibliography robertd blumofeandcharlese leiserson schedulingmultithreadedcomputationsbyworkstealing journaloftheacm elabollob randomgraphs academicpress gillesbrassardandpaulbratley fundamentalsofalgorithmics prenticehall richardp brent theparallelevaluationofgeneralarithmeticexpressions journaloftheacm richardp brent animprovedmontecarlofactorizationalgorithm buhler lenstra andcarlpomerance factoringintegerswiththenumber eldsieve ina lenstraandh lenstra editors thedevelopmentofthenumberfieldsieve volume oflecturenotesinmathematics pages springer lawrencecarterandmarkn wegman universalclassesofhashfunctions journalofcomputerandsystemsciences barbarachapman gabrielejost andruudvanderpas usingopenmp portablesharedmemoryparallelprogramming themitpress bernardchazelle aminimumspanningtreealgorithmwithinverse ackermanntypecom plexity journaloftheacm josephcheriyanandtorbenhagerup arandomizedmaximum owalgorithm siamjournaloncomputing josephcheriyanands maheshwari analysisofpre owpushalgorithmsformaximumnetwork siamjournaloncomputing borisv cherkasskyandandrewv goldberg onimplementingthepush relabelmethodforthemaximum owproblem algorithmica borisv cherkassky andrewv goldberg andtomaszradzik shortestpathsalgorithms theoryandexperimentalevaluation mathematicalprogramming borisv cherkassky andrewv goldberg andcraigsilverstein buckets heaps listsandmonotonepriorityqueues siamjournaloncomputing chernoff ameasureofasymptoticef ciencyfortestsofahypothesisbasedonthesumofobservations annalsofmathematicalstatistics kailaichung elementaryprobabilitytheorywithstochasticprocesses springer chv atal agreedyheuristicfortheset coveringproblem mathematicsofoperationsresearch chv atal linearprogramming freemanandcompany chv atal klarner andd knuth selectedcombinatorialresearchproblems technicalreportstan computersciencedepartment stanforduniversity cilkarts inc burlington massachusetts cilk programmer sguide availableathttp www cilk com archive docs cilk bibliography alancobham theintrinsiccomputationaldif cultyoffunctions inproceedingsofthe congressforlogic methodology andthephilosophyofscience pages holland cohenandh lenstra primalitytestingandjacobisums mathematicsofcom putation comer theubiquitousb acmcomputingsurveys stephencook thecomplexityoftheoremprovingprocedures inproceedingsofthethirdannualacmsymposiumontheoryofcomputing pages jamesw cooleyandjohnw tukey analgorithmforthemachinecalculationofcomplexfourierseries mathematicsofcomputation doncoppersmith modi cationstothenumber eldsieve journalofcryptology doncoppersmithandshmuelwinograd matrixmultiplicationviaarithmeticprogression journalofsymboliccomputation thomash cormen thomassundquist andleonardf wisniewski asymptoticallytightboundsforperformingbmmcpermutationsonparalleldisksystems siamjournaloncomputing dondaileyandcharlese leiserson usingcilktowritemultiprocessorchessprograms inh vandenherikandb monien editors advancesincomputergames volume pages universityofmaastricht netherlands paolod albertoandalexandrunicolau adaptivestrassen smatrixmultiplication inproceedingsofthe stannualinternationalconferenceonsupercomputing pages june sanjoydasgupta christospapadimitriou andumeshvazirani algorithms mcgraw romandementiev lutzkettner jensmehnert andpetersanders engineeringasortedlistdatastructurefor bitkeys inproceedingsofthesixthworkshoponalgorithmengineer ingandexperimentsandthefirstworkshoponanalyticalgorithmicsandcombinatorics pages january camildemetrescuandgiuseppef italiano fullydynamicallpairsshortestpathswithrealedgeweights journalofcomputerandsystemsciences ericv denardoandbennettl fox shortest routemethods reaching pruning andbuckets operationsresearch martindietzfelbinger annakarlin kurtmehlhorn friedhelmmeyeraufderheide hansrohnert androberte tarjan dynamicperfecthashing upperandlowerbounds siamjournaloncomputing whit elddif eandmartine hellman newdirectionsincryptography ieeetransac tionsoninformationtheory dijkstra anoteontwoproblemsinconnexionwithgraphs numerischemathematik bibliography dinic algorithmforsolutionofaproblemofmaximum owinanetworkwithpowerestimation sovietmathematicsdoklady brandondixon monikarauch androberte tarjan veri cationandsensitivityanalysisofminimumspanningtreesinlineartime siamjournaloncomputing johnd dixon factorizationandprimalitytests theamericanmathematicalmonthly doritdor johanh astad staffanulfberg andurizwick onlowerboundsforselectingthemedian siamjournalondiscretemathematics doritdorandurizwick selectingthemedian siamjournaloncomputing doritdorandurizwick medianselectionrequires cncomparisons siamjournalondiscretemathematics alvinw drake fundamentalsofappliedprobabilitytheory mcgraw jamesr driscoll haroldn gabow ruthshrairman androberte tarjan relaxedheaps analternativetofibonacciheapswithapplicationstoparallelcomputation communica tionsoftheacm jamesr driscoll neilsarnak danield sleator androberte tarjan makingdatastructurespersistent journalofcomputerandsystemsciences derekl eager johnzahorjan andedwardd lazowska speedupversusef ciencyinparallelsystems ieeetransactionsoncomputers herbertedelsbrunner algorithmsincombinatorialgeometry volume ofeatcsmono graphsontheoreticalcomputerscience springer jackedmonds paths trees owers canadianjournalofmathematics jackedmonds matroidsandthegreedyalgorithm mathematicalprogramming jackedmondsandrichardm karp theoreticalimprovementsinthealgorithmicef ciencyfornetwork owproblems journaloftheacm shimoneven graphalgorithms computersciencepress williamfeller anintroductiontoprobabilitytheoryanditsapplications johnwiley sons thirdedition robertw floyd algorithm shortestpath communicationsoftheacm robertw floyd algorithm treesort communicationsoftheacm robertw floyd permutinginformationinidealizedtwo levelstorage inraymonde millerandjamesw thatcher editors complexityofcomputercomputations pages plenumpress bibliography robertw floydandronaldl rivest expectedtimeboundsforselection communica tionsoftheacm lestorr ford andd fulkerson flowsinnetworks princetonuniversitypress lestorr ford andselmerm johnson atournamentproblem theamericanmathe maticalmonthly michaell fredman newboundsonthecomplexityoftheshortestpathproblem siamjournaloncomputing michaell fredman anoskoml andendreszemer edi storingasparsetablewitho worstcaseaccesstime journaloftheacm michaell fredmanandmichaele saks thecellprobecomplexityofdynamicdatastruc tures inproceedingsofthetwentyfirstannualacmsymposiumontheoryofcomputing pages michaell fredmanandroberte tarjan fibonacciheapsandtheirusesinimprovednetworkoptimizationalgorithms journaloftheacm michaell fredmananddane willard surpassingtheinformationtheoreticboundwithfusiontrees journalofcomputerandsystemsciences michaell fredmananddane willard trans dichotomousalgorithmsforminimumspan ningtreesandshortestpaths journalofcomputerandsystemsciences matteofrigoandsteveng johnson thedesignandimplementationoffftw proceed ingsoftheieee matteofrigo charlese leiserson andkeithh randall theimplementationofthecilk multithreadedlanguage inproceedingsofthe acmsigplanconferenceonpro gramminglanguagedesignandimplementation pages haroldn gabow baseddepth rstsearchforstrongandbiconnectedcomponents informationprocessingletters haroldn gabow galil spencer androberte tarjan cientalgorithmsfor ingminimumspanningtreesinundirectedanddirectedgraphs combinatorica haroldn gabowandroberte tarjan alinear timealgorithmforaspecialcaseofdisjointsetunion journalofcomputerandsystemsciences haroldn gabowandroberte tarjan fasterscalingalgorithmsfornetworkproblems siamjournaloncomputing zvigalilandodedmargalit allpairsshortestdistancesforgraphswithsmallintegerlengthedges informationandcomputation zvigalilandodedmargalit allpairsshortestpathsforgraphswithsmallintegerlengthedges journalofcomputerandsystemsciences zvigalilandkunsoopark dynamicprogrammingwithconvexity concavityandsparsity theoreticalcomputerscience bibliography zvigalilandjoelseiferas optimalstringmatching journalofcomputerandsystemsciences igalgalperinandronaldl rivest scapegoattrees inproceedingsofthe thacm siamsymposiumondiscretealgorithms pages michaelr garey graham andj ullman worst caseanalyisofmemoryal locationalgorithms inproceedingsofthefourthannualacmsymposiumontheoryofcomputing pages michaelr gareyanddavids johnson computersandintractability aguidetothetheoryofnp completeness freeman saulgass linearprogramming methodsandapplications internationalthomsonpub lishing fourthedition anic agavril algorithmsforminimumcoloring maximumclique minimumcoveringbycliques andmaximumindependentsetofachordalgraph siamjournaloncomputing alangeorgeandjosephw hliu computersolutionoflargesparsepositivede nitesystems prenticehall gilbertande moore variable lengthbinaryencodings bellsystemtechnicaljournal michelx goemansanddavidp williamson improvedapproximationalgorithmsformaximumcutandsatis abilityproblemsusingsemide niteprogramming journaloftheacm michelx goemansanddavidp williamson theprimal dualmethodforapproximationalgorithmsanditsapplicationtonetworkdesignproblems indorits hochbaum editor approximationalgorithmsfornp hardproblems pages pwspublishingcom pany andrewv goldberg cientgraphalgorithmsforsequentialandparallelcomputers phdthesis departmentofelectricalengineeringandcomputerscience mit andrewv goldberg scalingalgorithmsfortheshortestpathsproblem siamjournaloncomputing andrewv goldbergandsatishrao beyondthe owdecompositionbarrier journaloftheacm andrewv goldberg evatardos androberte tarjan network owalgorithms inbern hardkorte aszl olov asz hansj urgenpr omel andalexanderschrijver editors paths flows andvlsi layout pages springer andrewv goldbergandroberte tarjan anewapproachtothemaximum owproblem journaloftheacm goldfarbandm todd linearprogramming ing nemhauser rinnooy kan andm todd editors handbookinoperationsresearchandmanagementscience vol optimization pages elseviersciencepublishers sha goldwasserandsilviomicali probabilisticencryption journalofcomputerandsystemsciences bibliography sha goldwasser silviomicali andronaldl rivest adigitalsignatureschemesecureagainstadaptivechosen messageattacks siamjournaloncomputing geneh golubandcharlesf vanloan matrixcomputations thejohnshopkinsuni versitypress thirdedition gonnet handbookofalgorithmsanddatastructures addison wesley rafaelc gonzalezandricharde woods digitalimageprocessing addison wesley michaelt goodrichandrobertotamassia datastructuresandalgorithmsinjava johnwiley sons michaelt goodrichandrobertotamassia algorithmdesign foundations analysis andinternetexamples johnwiley sons ronaldl graham boundsforcertainmultiprocessoranomalies bellsystemtechnicaljournal ronaldl graham anef cientalgorithmfordeterminingtheconvexhullofa niteplanarset informationprocessingletters ronaldl grahamandpavolhell onthehistoryoftheminimumspanningtreeproblem annalsofthehistoryofcomputing ronaldl graham donalde knuth andorenpatashnik concretemathematics addison wesley secondedition davidgries thescienceofprogramming springer otschel aszl olov asz andalexanderschrijver geometricalgorithmsandcombi natorialoptimization springer leoj guibasandrobertsedgewick adichromaticframeworkforbalancedtrees inproceedingsofthe thannualsymposiumonfoundationsofcomputerscience pages dangus eld algorithmsonstrings trees andsequences computerscienceandcom putationalbiology cambridgeuniversitypress halberstamandr ingram editors themathematicalpapersofsirwilliamrowanhamilton volumeiii algebra cambridgeuniversitypress yijiehan improvedfastintegersortinginlinearspace inproceedingsofthe thacm siamsymposiumondiscretealgorithms pages yijiehan ano loglogn logn timealgorithmforallpairsshortestpath algo rithmica frankharary graphtheory addison wesley gregoryc harfstandedwardm reingold apotential basedamortizedanalysisoftheunion nddatastructure sigactnews hartmanisandr stearns onthecomputationalcomplexityofalgorithms transac tionsoftheamericanmathematicalsociety bibliography michaelt heideman donh johnson andc sidneyburrus gaussandthehistoryofthefastfouriertransform ieeeasspmagazine monikar henzingerandvalerieking fullydynamicbiconnectivityandtransitiveclo inproceedingsofthe thannualsymposiumonfoundationsofcomputerscience pages monikar henzingerandvalerieking randomizedfullydynamicgraphalgorithmswithpolylogarithmictimeperoperation journaloftheacm monikar henzinger satishrao andharoldn gabow computingvertexconnectivity newboundsfromoldtechniques journalofalgorithms nicholasj higham exploitingfastmatrixmultiplicationwithinthelevel blas acmtransactionsonmathematicalsoftware danielhillisandjr guyl steele dataparallelalgorithms communicationsoftheacm hoare algorithm partition andalgorithm communicationsoftheacm hoare quicksort computerjournal dorits hochbaum cientboundsforthestableset vertexcoverandsetpackingprob lems discreteappliedmathematics dorits hochbaum editor approximationalgorithmsfornp hardproblems pwspub lishingcompany hoeffding onthedistributionofthenumberofsuccessesinindependenttrials annalsofmathematicalstatistics michahofri probabilisticanalysisofalgorithms springer michahofri analysisofalgorithms oxforduniversitypress johne hopcroftandrichardm karp ann algorithmformaximummatchingsinbipartitegraphs siamjournaloncomputing johne hopcroft rajeevmotwani andjeffreyd ullman introductiontoautomatathe ory languages andcomputation addisonwesley thirdedition johne hopcroftandroberte tarjan cientalgorithmsforgraphmanipulation com municationsoftheacm johne hopcroftandjeffreyd ullman setmergingalgorithms siamjournaloncom puting johne hopcroftandjeffreyd ullman introductiontoautomatatheory languages andcomputation addison wesley ellishorowitz sartajsahni andsanguthevarrajasekaran computeralgorithms com putersciencepress huandm shing computationofmatrixchainproducts parti siamjournaloncomputing huandm shing computationofmatrixchainproducts partii siamjournaloncomputing bibliography huanda tucker optimalcomputersearchtreesandvariable lengthalphabeticcodes siamjournalonappliedmathematics davida huffman amethodfortheconstructionofminimum redundancycodes pro ceedingsoftheire stevenhuss lederman elainem jacobson jeremyr johnson annatsao andthomasturnbull implementationofstrassen salgorithmformatrixmultiplication inproceedingsofthe acm ieeeconferenceonsupercomputing article oscarh ibarraandchule kim fastapproximationalgorithmsfortheknapsackandsumofsubsetproblems journaloftheacm isaacandr singleton sortingbyaddresscalculation journaloftheacm jarvis ontheidenti cationoftheconvexhullofa nitesetofpointsintheplane informationprocessingletters davids johnson approximationalgorithmsforcombinatorialproblems journalofcom puterandsystemsciences davids johnson thenp completenesscolumn anongoingguide thetaleofthesec ondprover journalofalgorithms donaldb johnson cientalgorithmsforshortestpathsinsparsenetworks journaloftheacm richardjohnsonbaughandmarcusschaefer algorithms pearsonprenticehall karatsubaandyu ofman multiplicationofmultidigitnumbersonautomata sovietphysics doklady translationofanarticleindokladyakademiinauksssr davidr karger philipn klein androberte tarjan arandomizedlinear timealgorithmto ndminimumspanningtrees journaloftheacm davidr karger daphnekoller andstevenj phillips findingthehiddenpath timeboundsforall pairsshortestpaths siamjournaloncomputing howardkarloff linearprogramming birkh auser karmarkar anewpolynomial timealgorithmforlinearprogramming combinatorica richardm karp reducibilityamongcombinatorialproblems inraymonde millerandjamesw thatcher editors complexityofcomputercomputations pages plenumpress richardm karp anintroductiontorandomizedalgorithms discreteappliedmathemat ics richardm karpandmichaelo rabin cientrandomizedpattern matchingalgorithms ibmjournalofresearchanddevelopment karzanov determiningthemaximal owinanetworkbythemethodofpre ows sovietmathematicsdoklady bibliography valerieking asimplerminimumspanningtreeveri cationalgorithm algorithmica valerieking satishrao androberte tarjan afasterdeterministicmaximum owalgo rithm journalofalgorithms jeffreyh kingston algorithmsanddatastructures correctness analysis addison wesley secondedition kirkpatrickandr seidel theultimateplanarconvexhullalgorithm siamjournaloncomputing philipn kleinandneale approximationalgorithmsfornp hardoptimizationproblems incrchandbookonalgorithms pages crcpress jonkleinbergand evatardos algorithmdesign addison wesley donalde knuth fundamentalalgorithms volume oftheartofcomputerprogram ming addison wesley thirdedition donalde knuth seminumericalalgorithms volume oftheartofcomputerprogram ming addison wesley thirdedition donalde knuth sortingandsearching volume oftheartofcomputerprogramming addison wesley secondedition donalde knuth optimumbinarysearchtrees actainformatica donalde knuth bigomicronandbigomegaandbigtheta sigactnews donalde knuth jamesh morris andvaughanr pratt fastpatternmatchinginstrings siamjournaloncomputing koml linearveri cationforspanningtrees combinatorica bernhardkorteandl aszl olov asz mathematicalstructuresunderlyinggreedyalgorithms inf gecseg editor fundamentalsofcomputationtheory volume oflecturenotesincomputerscience pages springer bernhardkorteandl aszl olov asz structuralpropertiesofgreedoids combinatorica bernhardkorteandl aszl olov asz greedoids astructuralframeworkforthegreedyalgorithm inw pulleybank editor progressincombinatorialoptimization pages academicpress bernhardkorteandl aszl olov asz greedoidsandlinearobjectivefunctions siamjournalonalgebraicanddiscretemethods dexterc kozen thedesignandanalysisofalgorithms springer davidw krumme georgecybenko andk venkataraman gossipinginminimaltime siamjournaloncomputing josephb kruskal ontheshortestspanningsubtreeofagraphandthetravelingsalesmanproblem proceedingsoftheamericanmathematicalsociety leslielamport howtomakeamultiprocessorcomputerthatcorrectlyexecutesmultipro cessprograms ieeetransactionsoncomputers bibliography eugenel lawler combinatorialoptimization networksandmatroids holt rinehart andwinston eugenel lawler lenstra rinnooykan andd shmoys editors thetravelingsalesmanproblem johnwiley sons lee analgorithmforpathconnectionanditsapplications iretransactionsonelectroniccomputers tomleighton tightboundsonthecomplexityofparallelsorting ieeetransactionsoncomputers tomleighton notesonbettermastertheoremsfordivide conquerrecurrences classnotes availableathttp citeseer ist psu edu html october tomleightonandsatishrao multicommoditymax owmin cuttheoremsandtheiruseindesigningapproximationalgorithms journaloftheacm daanleijenandjuddhall optimizemanagedcodeformulti coremachines msdnmagazine october debraa leleweranddaniels hirschberg datacompression acmcomputingsurveys lenstra lenstra manasse andj pollard thenumber eldsieve ina lenstraandh lenstra editors thedevelopmentofthenumberfieldsieve volume oflecturenotesinmathematics pages springer lenstra factoringintegerswithellipticcurves annalsofmathematics levin universalsortingproblems problemyperedachiinformatsii inrussian ananylevitin introductiontothedesign analysisofalgorithms addison wesley harryr lewisandchristosh papadimitriou elementsofthetheoryofcomputation prenticehall secondedition liu introductiontocombinatorialmathematics mcgraw aszl olov asz ontheratioofoptimalintegralandfractionalcovers discretemathemat ics aszl olov aszandm plummer matchingtheory volume ofannalsofdiscretemathematics northholland brucem maggsandsergea plotkin minimum costspanningtreeasapath ndingproblem informationprocessingletters michaelmain datastructuresandotherobjectsusingjava addison wesley udimanber introductiontoalgorithms acreativeapproach addison wesley conradomart nezandsalvadorroura randomizedbinarysearchtrees journaloftheacm williamj masekandmichaels paterson afasteralgorithmcomputingstringeditdis tances journalofcomputerandsystemsciences bibliography maurer ottmann andh implementingdictionariesusingbinarytreesofverysmallheight informationprocessingletters ernstw mayr hansj urgenpr omel andangelikasteger editors lecturesonproofveri cationandapproximationalgorithms volume oflecturenotesincomputerscience springer mcgeoch allpairsshortestpathsandtheessentialsubgraph algorithmica mcilroy akilleradversaryforquicksort software practiceandexperience kurtmehlhorn sortingandsearching volume ofdatastructuresandalgorithms springer kurtmehlhorn graphalgorithmsandnp completeness volume ofdatastructuresandalgorithms springer kurtmehlhorn multidimensionalsearchingandcomputationalgeometry volume ofdatastructuresandalgorithms springer kurtmehlhornandstefann aher boundedordereddictionariesino loglogn timeando informationprocessingletters kurtmehlhornandstefann aher leda aplatformforcombinatorialandgeometriccomputing cambridgeuniversitypress alfredj menezes paulc vanoorschot andscotta vanstone handbookofappliedcryptography crcpress garyl miller riemann shypothesisandtestsforprimality journalofcomputerandsystemsciences johnc mitchell foundationsforprogramminglanguages themitpress josephs mitchell guillotinesubdivisionsapproximatepolygonalsubdivisions asim plepolynomial timeapproximationschemeforgeometrictsp mst andrelatedprob lems siamjournaloncomputing louismonier algorithmesdefactorisationd entiers phdthesis universit eparis sud louismonier evaluationandcomparisonoftwoef cientprobabilisticprimalitytestingalgorithms theoreticalcomputerscience edwardf moore theshortestpaththroughamaze inproceedingsoftheinternationalsymposiumonthetheoryofswitching pages harvarduniversitypress rajeevmotwani joseph sef naor andprabakharraghavan randomizedapproxima tionalgorithmsincombinatorialoptimization indorithochbaum editor approximationalgorithmsfornp hardproblems chapter pages pwspublishingcompany rajeevmotwaniandprabhakarraghavan randomizedalgorithms cambridgeuniversitypress munroandv raman faststablein placesortingwitho datamoves algorithmica bibliography nievergeltande reingold binarysearchtreesofboundedbalance siamjournaloncomputing ivannivenandherberts zuckerman anintroductiontothetheoryofnumbers johnwiley sons fourthedition alanv oppenheimandronaldw schafer withjohnr buck discrete timesignalprocessing prenticehall secondedition alanv oppenheimandalans willsky withs hamidnawab signalsandsystems prenticehall secondedition jamesb orlin apolynomialtimeprimalnetworksimplexalgorithmforminimumcost ows mathematicalprogramming josepho rourke computationalgeometryinc cambridgeuniversitypress secondedition christosh papadimitriou computationalcomplexity addison wesley christosh papadimitriouandkennethsteiglitz combinatorialoptimization algorithmsandcomplexity prenticehall michaels paterson progressinselection inproceedingsofthefifthscandinavianwork shoponalgorithmtheory pages mihaip atras cuandmikkelthorup spacetrade offsforpredecessorsearch inpro ceedingsofthe thannualacmsymposiumontheoryofcomputing pages mihaip atras cuandmikkelthorup randomizationdoesnothelpsearchingpredecessors inproceedingsofthe thacm siamsymposiumondiscretealgorithms pages pavela pevzner computationalmolecularbiology analgorithmicapproach themitpress stevenphillipsandjefferywestbrook onlineloadbalancingandnetwork inpro ceedingsofthe thannualacmsymposiumontheoryofcomputing pages pollard amontecarlomethodforfactorization pollard factoringwithcubicintegers ina lenstraandh lenstra editors thedevelopmentofthenumberfieldsieve volume oflecturenotesinmathematics pages springer carlpomerance onthedistributionofpseudoprimes mathematicsofcomputation carlpomerance editor proceedingsoftheamssymposiainappliedmathematics com putationalnumbertheoryandcryptography americanmathematicalsociety williamk pratt digitalimageprocessing johnwiley sons fourthedition francop preparataandmichaelianshamos computationalgeometry anintroduction springer bibliography williamh saula teukolsky williamt vetterling andbrianp flannery numer icalrecipesinc theartofscienti ccomputing cambridgeuniversitypress secondedition williamh saula teukolsky williamt vetterling andbrianp flannery numer icalrecipes theartofscienti ccomputing cambridgeuniversitypress thirdedition prim shortestconnectionnetworksandsomegeneralizations bellsystemtechnicaljournal williampugh skiplists aprobabilisticalternativetobalancedtrees communicationsoftheacm paulw purdom andcynthiaa theanalysisofalgorithms holt rinehart andwinston michaelo rabin probabilisticalgorithms inj traub editor algorithmsandcom plexity newdirectionsandrecentresults pages academicpress michaelo rabin probabilisticalgorithmfortestingprimality journalofnumbertheory raghavanandc thompson randomizedrounding atechniqueforprovablygoodalgorithmsandalgorithmicproofs combinatorica rajeevraman recentresultsonthesingle sourceshortestpathsproblem sigactnews jamesreinders intelthreadingbuildingblocks ttingc formulti coreprocessorparallelism reillymedia inc edwardm reingold urgnievergelt andnarsinghdeo combinatorialalgorithms oryandpractice prenticehall edwardm reingold kennethj urban anddavidgries pstringmatchingrevisited informationprocessingletters hansriesel primenumbersandcomputermethodsforfactorization volume ofprogressinmathematics birkh auser secondedition ronaldl rivest adishamir andleonardm adleman amethodforobtainingdigitalsignaturesandpublic keycryptosystems communicationsoftheacm seealsou patent herbertrobbins aremarkonstirling sformula americanmathematicalmonthly rosenkrantz stearns andp lewis ananalysisofseveralheuristicsforthetravelingsalesmanproblem siamjournaloncomputing salvadorroura animprovedmastertheoremfordivide conquerrecurrences inproceedingsofautomata languagesandprogramming thinternationalcolloquium icalp volume oflecturenotesincomputerscience pages springer rozanov probabilitytheory aconcisecourse dover bibliography sahniandt gonzalez completeapproximationproblems journaloftheacm sch onhage paterson andn pippenger findingthemedian journalofcomputerandsystemsciences alexanderschrijver theoryoflinearandintegerprogramming johnwiley sons alexanderschrijver pathsand ows ahistoricalsurvey cwiquarterly robertsedgewick implementingquicksortprograms communicationsoftheacm robertsedgewick algorithms addison wesley secondedition robertsedgewickandphilippeflajolet anintroductiontotheanalysisofalgorithms addison wesley raimundseidel ontheall pairs shortest pathprobleminunweightedundirectedgraphs journalofcomputerandsystemsciences raimundseidelandc aragon randomizedsearchtrees algorithmica aosetubalandjo aomeidanis introductiontocomputationalmolecularbiology pwspublishingcompany clifforda shaffer apracticalintroductiontodatastructuresandalgorithmanalysis prenticehall secondedition jeffreyshallit originsoftheanalysisoftheeuclideanalgorithm historiamathematica michaeli shamosanddanhoey geometricintersectionproblems inproceedingsofthe thannualsymposiumonfoundationsofcomputerscience pages sharir astrong connectivityalgorithmanditsapplicationsindata owanalysis com putersandmathematicswithapplications davidb shmoys computingnear optimalsolutionstocombinatorialoptimizationprob lems inwilliamcook aszl olov asz andpaulseymour editors combinatorialopti mization volume ofdimacsseriesindiscretemathematicsandtheoreticalcomputerscience americanmathematicalsociety avishoshanandurizwick allpairsshortestpathsinundirectedgraphswithintegerweights inproceedingsofthe thannualsymposiumonfoundationsofcomputersci ence pages michaelsipser introductiontothetheoryofcomputation thomsoncoursetechnology secondedition stevens skiena thealgorithmdesignmanual springer secondedition danield sleatorandroberte tarjan adatastructurefordynamictrees journalofcomputerandsystemsciences bibliography danield sleatorandroberte tarjan adjustingbinarysearchtrees journaloftheacm joelspencer tenlecturesontheprobabilisticmethod volume ofcbms nsfregionalconferenceseriesinappliedmathematics societyforindustrialandappliedmathematics daniela spielmanandshang huateng smoothedanalysisofalgorithms whythesim plexalgorithmusuallytakespolynomialtime journaloftheacm gilbertstrang introductiontoappliedmathematics wellesley cambridgepress gilbertstrang linearalgebraanditsapplications thomsonbrooks cole fourthedition volkerstrassen gaussianeliminationisnotoptimal numerischemathematik szymanski aspecialcaseofthemaximalcommonsubsequenceproblem technicalreporttr computersciencelaboratory princetonuniversity roberte tarjan depth rstsearchandlineargraphalgorithms siamjournaloncom puting roberte tarjan ciencyofagoodbutnotlinearsetunionalgorithm journaloftheacm roberte tarjan aclassofalgorithmswhichrequirenonlineartimetomaintaindisjointsets journalofcomputerandsystemsciences roberte tarjan datastructuresandnetworkalgorithms societyforindustrialandappliedmathematics roberte tarjan amortizedcomputationalcomplexity siamjournalonalgebraicanddiscretemethods roberte tarjan classnotes disjointsetunion cos princetonuniversity roberte tarjanandjanvanleeuwen worst caseanalysisofsetunionalgorithms jour naloftheacm georgeb thomas mauriced weir joelhass andfrankr giordano thomas calculus addison wesley eleventhedition mikkelthorup fasterdeterministicsortingandpriorityqueuesinlinearspace inpro ceedingsofthe thacm siamsymposiumondiscretealgorithms pages mikkelthorup undirectedsingle sourceshortestpathswithpositiveintegerweightsinlineartime journaloftheacm mikkelthorup onrampriorityqueues siamjournaloncomputing richardtolimieri myoungan andchaolu mathematicsofmultidimensionalfouriertransformalgorithms springer secondedition vanemdeboas preservingorderinaforestinlessthanlogarithmictime inproceedingsofthe thannualsymposiumonfoundationsofcomputerscience pages bibliography vanemdeboas preservingorderinaforestinlessthanlogarithmictimeandlinearspace informationprocessingletters vanemdeboas kaas ande zijlstra designandimplementationofanef cientpriorityqueue mathematicalsystemstheory janvanleeuwen editor handbookoftheoreticalcomputerscience volumea algo rithmsandcomplexity elseviersciencepublishersandthemitpress charlesvanloan computationalframeworksforthefastfouriertransform societyforindustrialandappliedmathematics robertj vanderbei linearprogramming foundationsandextensions kluweracademicpublishers vijayv vazirani approximationalgorithms springer rakeshm verma generaltechniquesforanalyzingrecursivealgorithmswithapplications siamjournaloncomputing haowangandbilllin pipelinedvanemdeboastree algorithms analysis andap plications thieeeinternationalconferenceoncomputercommunications pages antonyf ware fastapproximatefouriertransformsforirregularlyspaceddata siamreview stephenwarshall atheoremonbooleanmatrices journaloftheacm michaels waterman introductiontocomputationalbiology maps sequencesandgenomes chapman hall markallenweiss datastructuresandproblemsolvingusingc addison wesley secondedition markallenweiss datastructuresandproblemsolvingusingjava addison wesley thirdedition markallenweiss datastructuresandalgorithmanalysisinc addison wesley thirdedition markallenweiss datastructuresandalgorithmanalysisinjava addison wesley secondedition hasslerwhitney ontheabstractpropertiesoflineardependence americanjournalofmathematics herberts wilf algorithmsandcomplexity akpeters secondedition williams algorithm heapsort communicationsoftheacm shmuelwinograd onthealgebraiccomplexityoffunctions inactesducongr esinterna tionaldesmath ematiciens volume pages andrewc yao alowerboundto ndingconvexhulls journaloftheacm cheeyap arealelementaryapproachtothemasterrecurrenceandgeneralizations publishedmanuscript availableathttp nyu edu yap papers july bibliography yinyuye interiorpointalgorithms theoryandanalysis johnwiley sons danielzwillinger editor crcstandardmathematicaltablesandformulae chapman hall crcpress stedition indexthisindexusesthefollowingconventions numbersarealphabetizedasifspelledout forexample isindexedasifitwere fourtree anentryreferstoaplaceotherthanthemaintext thepagenumberisfollowedby atag forexercise forproblem gure andn forfootnote atagged pagenumberoftenindicatesthe rstpageofanexerciseorproblem whichisnot necessarilythepageonwhichthereferenceactuallyappears goldenratio conjugateofthegoldenratio euler sphifunction approximationalgorithm notation notation notation notation notation notation notation notation notation notation setmember notasetmember emptylanguage emptyset subset propersubset suchthat setintersection setunion setdifference owvalue lengthofastring setcardinality cartesianproduct crossproduct sequence standardencoding euclideannorm factorial ceiling oor lowersquareroot uppersquareroot sum adjacencyrelation reachabilityrelation not groupoperator convolutionoperator index closureoperator dividesrelation not dividerelation equivalentmodulon notequivalentmodulon equivalenceclassmodulon additionmodulon multiplicationmodulon legendresymbol emptystring pre xrelation suf xrelation aboverelation commentsymbol greater thanrelation thanrelation polynomial timereducibilityrelation abeliangroup aboverelation absentchild absolutelyconvergentseries absorptionlawsforsets abstractproblem acceptablepairofintegers acceptancebyanalgorithm bya niteautomaton acceptingstate accountingmethod forbinarycounters fordynamictables forstackoperations ackermann sfunction activity selectionproblem acyclicgraph relationtomatroids addinstruction additionofbinaryintegers ofmatrices modulon ofpolynomials additivegroupmodulon addressing seeopen addresshashtableadd subarray adjacency listrepresentation replacedbyahashtable adjacency matrixrepresentation adjacencyrelation adjacentvertices admissibleedge admissiblenetwork adversary aggregateanalysis forbinarycounters forbreadth rstsearch fordepth rstsearch fordijkstra salgorithm fordisjoint setdatastructures fordynamictables forfibonacciheaps forgraham sscan fortheknuth morris prattalgorithm forprim salgorithm forrod cutting forshortestpathsinadag forstackoperations aggregate akra bazzimethodforsolvingarecurrence algorithm correctnessof originofword runningtimeof asatechnology alice allocate node allocate allocationofobjects pairsshortestpaths indynamicgraphs densegraphs floyd warshallalgorithmfor johnson salgorithmfor bymatrixmultiplication byrepeatedsquaring alphabet amortizedanalysis accountingmethodof aggregateanalysis index forbit reversalpermutation forbreadth rstsearch fordepth rstsearch fordijkstra salgorithm fordisjoint setdatastructures fordynamictables forfibonacciheaps forthegenericpush relabelalgorithm forgraham sscan fortheknuth morris prattalgorithm formakingbinarysearchdynamic potentialmethodof forrestructuringred blacktrees forself organizinglistswithmove forshortestpathsinadag forstacksonsecondarystorage forweight balancedtrees amortizedcostintheaccountingmethod inaggregateanalysis inthepotentialmethod ancestor leastcommon andfunction andgate inpseudocode antiparalleledges antisymmetricrelation segments intersect approximationbyleastsquares ofsummationbyintegrals approximationalgorithm forbinpacking formax cnfsatis ability formaximumclique formaximummatching formaximumspanningtree formaximum weightcut formax cnfsatis ability forminimum weightvertexcover forparallelmachinescheduling randomized forsetcover forsubsetsum fortraveling salesmanproblem forvertexcover forweightedsetcover knapsackproblem approximationerror approximationratio approximationscheme approx min approx subset sum approx tsp tour approx vertex arbitrage arc seeedgeargumentofafunction arithmeticinstructions arithmetic modular arithmeticseries arithmeticwithin nities array monge passingasaparameter articulationpoint assignmentmultiple satisfying truth associativelawsforsets associativeoperation asymptoticallylarger asymptoticallynonnegative asymptoticallypositive asymptoticallysmaller asymptoticallytightbound asymptoticef ciency asymptoticlowerbound asymptoticnotation andgraphalgorithms andlinearityofsummations asymptoticupperbound attributeofanobject augmentationofa augmentingdatastructures augmentingpath authentication indexautomaton nite matching auxiliaryhashfunction auxiliarylinearprogram average caserunningtime avl insert avltree axioms forprobability babyface backedge backsubstitution instance balance balancedsearchtreeaa trees avltrees trees neighbortrees blacktrees scapegoattrees splaytrees treaps trees trees balancedtrees ballsandbins apseudoprime basecase indna basicfeasiblesolution basicsolution basicvariable basisfunction bayes stheorem bellman ford bellman fordalgorithm forall pairsshortestpaths injohnson salgorithm andobjectivefunctions tosolvesystemsofdifferenceconstraints yen simprovementto below bernoullitrial andballsandbins andstreaks caserunningtime bfs biased random biconnectedcomponent ohnotation omeganotation bijectivefunction binarycharactercode binarycounteranalyzedbyaccountingmethod analyzedbyaggregateanalysis analyzedbypotentialmethod reversed binaryentropyfunction binarygcdalgorithm binaryheap seeheapbinaryrelation binarysearch withfastinsertion ininsertionsort inmultithreadedmerging insearchingb trees binary binarysearchtree trees avltrees deletionfrom withequalkeys insertioninto neighbortrees maximumkeyof minimumkeyof optimal predecessorin querying randomlybuilt convertingof scapegoattrees searching forsorting splaytrees successorin andtreaps balancedtrees seealsored blacktreebinary treeproperty intreaps min heapproperty index binarytree numberofdifferentones representationof superimposeduponabitvector seealsobinarysearchtreebinomialcoef cient binomialdistribution andballsandbins maximumvalueof tailsof binomialexpansion binomialheap binomialtree binpacking bipartitegraph corresponding ownetworkof regular andhypergraphs bipartitematching hopcroft karpalgorithmfor birthdayparadox bisectionofatree bitoniceuclideantraveling salesmanproblem bitonicsequence bitonictour bitoperation ineuclid salgorithm reversalpermutation reverse reversedbinarycounter reversed increment bitvector height blackvertex blocking blockstructureinpseudocode bob boole sinequality booleancombinationalcircuit booleancombinationalelement booleanconnective booleanformula booleanfunction booleanmatrixmultiplication bor uvka salgorithm bottleneckspanningtree bottlenecktraveling salesmanproblem bottomofastack rod upmethod fordynamicprogramming boundasymptoticallytight asymptoticlower asymptoticupper onbinomialcoef cients onbinomialdistributions polylogarithmic onthetailsofabinomialdistribution seealsolowerboundsboundarycondition inarecurrence boundaryofapolygon boundingasummation nesting branchingfactor inb trees branchinstructions breadth rstsearch inmaximum andshortestpaths similaritytodijkstra salgorithm breadth rsttree bridge comparedwithred blacktrees creating deletionfrom fullnodein heightof insertioninto minimumdegreeof minimumkeyof propertiesof searching splittinganodein trees delete insert indexb insert nonfull split bubblesort bucket bucketsort bucket sort max heap max heap min heap butter yoperation inpseudocode cache cachehit cachemiss cacheobliviousness caching callinamultithreadedcomputation ofasubroutine byvalue calledge cancellationlemma cancellationof canonicalformfortaskscheduling capacityofacut ofanedge residual ofavertex capacityconstraint cardinalityofaset carmichaelnumber cartesianproduct cartesiansum cascadingcut cascading catalannumbers ceilingfunction inmastertheorem ceilinginstruction certainevent certi cateinacryptosystem forveri cationalgorithms chained hash delete chained hash insert chained hash chaining chainofaconvexhull changingakey inafibonacciheap changingvariables inthesubstitutionmethod charactercode chess playingprogram childinabinarytree inamultithreadedcomputation inarootedtree childlistinafibonacciheap chineseremaindertheorem chipmultiprocessor chirptransform choosenk cilk cilk ciphertext circuitbooleancombinational depthof forfastfouriertransform circuit circuitsatis ability circular doublylinkedlistwithasentinel circularlinkedlist seealsolinkedlistclasscomplexity equivalence classi cationofedgesinbreadth rstsearch indepth rstsearch inamultithreadeddag clause cleanarea clique approximationalgorithmfor clique closedinterval closedsemiring closestpair nding closest pointheuristic index closuregroupproperty ofalanguage operator transitive seetransitiveclosureclusterinabitvectorwithasuperimposedtreeofconstantheight forparallelcomputing inprotovanemdeboasstructures invanemdeboastrees clustering cnf conjunctivenormalform cnfsatis ability coarseningleavesofrecursioninmergesort whenrecursivelyspawning code huffman codeword codomain coef cientbinomial ofapolynomial inslackform coef cientrepresentation andfastmultiplication cofactor coinchanging colinearity collision resolutionbychaining resolutionbyopenaddressing collision resistanthashfunction coloring ofared treenode majororder columnrank columnsort columnvector combination combinationalcircuit combinationalelement combinestep individe conquer comment inpseudocode commodity commondivisor greatest seegreatestcommondivisorcommonmultiple commonsubexpression commonsubsequence longest commutativelawsforsets commutativeoperation compactify compactlist compact compact comparablelinesegments exchange exchangeoperation comparisonsort andbinarysearchtrees randomized andselection compatibleactivities compatiblematrices competitiveanalysis complementofanevent ofagraph ofalanguage schur ofaset complementaryslackness completegraph completek arytree seealsoheapcompletenessofalanguage completestep completiontime complexityclass npc complexitymeasure complexnumbersinvertingmatricesof multiplicationof complexrootofunity interpolationat componentbiconnected connected stronglyconnected indexcomponentgraph compositenumber witnessto composition ofmultithreadedcomputations computationaldepth computationalgeometry computationalproblem computationdag computation multithreaded compute prefix function compute transition function concatenationoflanguages ofstrings concreteproblem concurrencykeywords concurrencyplatform conditionalbranchinstruction conditionalindependence conditionalprobability con guration conjugateofthegoldenratio conjugatetranspose conjunctivenormalform connectedcomponent identi edusingdepth rstsearch identi edusingdisjoint setdatastructures connected components connectedgraph connective complexityclass conquerstep individe conquer conservationof consistencyofliterals sequential consolidate consolidatingafibonacci heaprootlist constraint difference equality inequality linear nonnegativity tight violationof constraintgraph inapath continuationedge continuousuniformprobabilitydistribution contractionofadynamictable ofamatroid ofanundirectedgraphbyanedge controlinstructions convergenceproperty convergentseries convertingbinarytodecimal convexcombinationofpoints convexfunction convexhull convexlayers convexpolygon convexset convolution convolutiontheorem copyinstruction correctnessofanalgorithm corresponding ownetworkforbipartitematching countablyin niteset counter seebinarycountercounting probabilistic countingsort inradixsort counting sort couponcollector sproblem coverpath byasubset vertex covertical veb credit criticaledge criticalpathofadag ofamultithreadedcomputation crossacut crossedge crossproduct index cryptosystem cubicspline currencyexchange curve tting cutcapacityof cascading ofa ownetwork minimum net owacross ofanundirectedgraph weightof rod cutting inafibonacciheap cycleofagraph hamiltonian minimummean negative seenegative weightcycleandshortestpaths cyclicgroup cyclicrotation cycling ofsimplexalgorithm dag seedirectedacyclicgraphdag shortest paths aryheap inshortest pathsalgorithms data movementinstructions data parallelmodel datastructure trees augmentationof avltrees binarysearchtrees binomialheaps bitvectors trees deques dictionaries addresstables fordisjointsets fordynamicgraphs dynamicsets dynamictrees exponentialsearchtrees fibonacciheaps fusiontrees hashtables heaps intervaltrees neighbortrees linkedlists mergeableheap statistictrees persistent potentialof priorityqueues protovanemdeboasstructures queues radixtrees blacktrees relaxedheaps rootedtrees scapegoattrees onsecondarystorage skiplists splaytrees stacks treaps heaps trees trees vanemdeboastrees balancedtrees datatype deadline deallocationofobjects decisionbyanalgorithm decisionproblem andoptimizationproblems decisiontree decrease decreasingakeyinfibonacciheaps heaps decrement degeneracy degreeofabinomial treeroot maximum ofafibonacciheap minimum ofab ofanode ofapolynomial ofavertex indexdegree bound delete delete larger deletionfrombinarysearchtrees fromabitvectorwithasuperimposedbinarytree fromabitvectorwithasuperimposedtreeofconstantheight fromb trees fromchainedhashtables fromdirect addresstables fromdynamictables fromfibonacciheaps fromheaps fromintervaltrees fromlinkedlists fromopen addresshashtables fromorder statistictrees fromprotovanemdeboasstructures fromqueues fromred blacktrees fromstacks fromsweep linestatuses heaps fromvanemdeboastrees demorgan slawsforpropositionallogic forsets densegraph dense densityofprimenumbers ofarod dependenceandindicatorrandomvariables linear seealsoindependencedepthaverage ofanodeinarandomlybuiltbinarysearchtree ofacircuit ofanodeinarootedtree ofquicksortrecursiontree ofastack depth determinationproblem depth rstforest depth rstsearch ndingarticulationpoints bridges andbiconnectedcomponents ndingstronglyconnectedcomponents intopologicalsorting depth rsttree deque dequeue derivativeofaseries descendant destinationvertex det seedeterminantdeterminacyrace determinant andmatrixmultiplication deterministicalgorithm multithreaded deterministic dfs dfs dft discretefouriertransform diagonalmatrix lupdecompositionof diameterofatree differenceconstraints differenceequation seerecurrencedifferenceofsets symmetric differentiationofaseries digitalsignature digraph seedirectedgraphdijkstra dijkstra salgorithm forall pairsshortestpaths implementedwithafibonacciheap implementedwithamin heap withintegeredgeweights injohnson salgorithm similaritytobreadth rstsearch similaritytoprim salgorithm address delete directaddressing address insert address addresstable directedacyclicgraph dag index andbackedges andcomponentgraphs andhamiltonianpaths longestsimplepathin forrepresentingamultithreadedcomputation sourceshortest pathsalgorithmfor topologicalsortof directedgraph pairsshortestpathsin constraintgraph eulertourof hamiltoniancycleof andlongestpaths pathcoverof pertchart semiconnected shortestpathin sourceshortestpathsin singlyconnected squareof transitiveclosureof transposeof universalsinkin seealsodirectedacyclicgraph graph networkdirectedsegment directedversionofanundirectedgraph direction dirtyarea discharge dischargeofanover owingvertex discoveredvertex discoverytime indepth rstsearch discretefouriertransform discretelogarithm discretelogarithmtheorem discreteprobabilitydistribution discreterandomvariable disjoint setdatastructure analysisof inconnectedcomponents indepthdetermination disjoint forestimplementationof inkruskal salgorithm linear timespecialcaseof linked listimplementationof inoff lineleastcommonancestors inoff lineminimum intaskscheduling disjoint setforest analysisof rankpropertiesof seealsodisjoint setdatastructuredisjointsets disjunctivenormalform disk diskdrive seealsosecondarystoragedisk disk distanceedit euclidean manhattan ofashortestpath distributedmemory distributionbinomial continuousuniform discrete geometric ofinputs ofprimenumbers probability sparse hulled uniform distributivelawsforsets divergentseries conquermethod analysisof forbinarysearch forconversionofbinarytodecimal forfastfouriertransform ndingtheclosestpairofpoints ndingtheconvexhull formatrixinversion formatrixmultiplication formaximum subarrayproblem formergesort formultiplication indexformultithreadedmatrixmultiplication formultithreadedmergesort forquicksort relationtodynamicprogramming forselection solvingrecurrencesfor forstrassen salgorithm divideinstruction dividesrelation dividestep individe conquer divisionmethod divisiontheorem divisor seealsogreatestcommondivisordna dnf disjunctivenormalform not dividerelation domain dominatesrelation doublehashing doublylinkedlist seealsolinkedlistdownto inpseudocode regulargraph duality weak duallinearprogram dummykey dynamicgraph pairsshortestpathsalgorithmsfor datastructuresfor minimum spanning treealgorithmfor transitiveclosureof dynamicmultithreadedalgorithm seemultithreadedalgorithmdynamicmultithreading dynamicorderstatistics dynamic programmingmethod foractivityselection forall pairsshortestpaths forbitoniceuclideantraveling salesmanproblem forbreakingastring comparedwithgreedyalgorithms foreditdistance elementsof forfloyd warshallalgorithm forinventoryplanning forlongestcommonsubsequence forlongestpalindromesubsequence forlongestsimplepathinaweighteddirectedacyclicgraph formatrix chainmultiplication andmemoization foroptimalbinarysearchtrees optimalsubstructurein overlappingsubproblemsin forprintingneatly reconstructinganoptimalsolutionin relationtodivide conquer forrod cutting forseamcarving forsigningfreeagents downwithmemoization fortransitiveclosure forviterbialgorithm knapsackproblem dynamicset seealsodatastructuredynamictable analyzedbyaccountingmethod analyzedbyaggregateanalysis analyzedbypotentialmethod loadfactorof dynamictree expectedvalue rstform earlytask admissible antiparallel attributesof bridge capacityof classi cationinbreadth rstsearch classi cationindepth rstsearch index continuation critical inadmissible negative residual return saturated spawn weightof edgeconnectivity edgeset editdistance edmonds karpalgorithm elementaryevent elementaryinsertion elementofaset ellipsoidalgorithm elliptic curvefactorizationmethod elseif inpseudocode inpseudocode emptylanguage emptyset emptysetlaws emptystack emptystring emptytree encodingofprobleminstances endpointofaninterval ofalinesegment enqueue enteringavertex enteringvariable entropyfunction densegraph universalhashfunction equalityoffunctions linear ofsets equalityconstraint andinequalityconstraints tight violationof equationandasymptoticnotation normal recurrence seerecurrenceequivalenceclass modulon equivalence modular equivalencerelation andmodularequivalence equivalentlinearprograms error inpseudocode escapeproblem euclid euclid salgorithm euclideandistance euclideannorm euler sconstant euler sphifunction euler stheorem eulertour andhamiltoniancycles evaluationofapolynomial derivativesof atmultiplepoints eventpoint pointschedule subset sum excess exchangeproperty exclusionandinclusion executeasubroutine expansionofadynamictable expectation seeexpectedvalueexpectedrunningtime expectedvalue ofabinomialdistribution ofageometricdistribution ofanindicatorrandomvariable exploredvertex exponentialfunction exponentialheight exponentialsearchtree exponentialseries exponentiationinstruction exponentiation modular extended rod indexextended euclid extend shortest paths extensionofaset exteriorofapolygon externalnode externalpathlength extractingthemaximumkeyfromd aryheaps frommax heaps extractingtheminimumkeyfromfibonacciheaps heaps fromyoungtableaus extract max extract min factor twiddle factorialfunction factorization unique failure inabernoullitrial faircoin fan farkas slemma farthest pairproblem faster pairs shortest paths fastfouriertransform fft circuitfor iterativeimplementationof multidimensional multithreadedalgorithmfor recursiveimplementationof usingmodulararithmetic feasibilityproblem feasiblelinearprogram feasibleregion feasiblesolution fermat stheorem fft seefastfouriertransformfftw fib fib heap fib heap decrease fib heap delete fib heap extract min fib heap insert fib heap link fib heap prune fib heap union fibonacciheap changingakeyin comparedwithbinaryheaps creating decreasingakeyin deletionfrom indijkstra salgorithm extractingtheminimumkeyfrom insertioninto injohnson salgorithm maximumdegreeof minimumkeyof potentialfunctionfor inprim salgorithm pruning runningtimesofoperationson uniting fibonaccinumbers computationof fifo rst rst seealsoqueue nal statefunction nalstrand depth max crossing subarray maximum subarray ndpath disjoint forestimplementationof linked listimplementationof nishedvertex nishingtime indepth rstsearch andstronglyconnectedcomponents nishtime inactivityselection niteautomaton forstringmatching finite automaton matcher nitegroup nitesequence niteset rst theuristic rst rst seealsoqueue xed lengthcode index oating pointdatatype oorfunction inmastertheorem oorinstruction aggregate augmentationof blocking cancellationof excess integer valued net acrossacut valueof owconservation ownetwork correspondingtoabipartitegraph cutof withmultiplesourcesandsinks floyd warshall floyd warshall floyd warshallalgorithm multithreaded ford fulkerson ford fulkersonmethod ford fulkerson depth rst disjoint inpseudocode andloopinvariants formalpowerseries formulasatis ability forwardedge forwardsubstitution fouriertransform seediscretefouriertransform fastfouriertransformfractionalknapsackproblem freeagent freeingofobjects freelist freetree frequencydomain fullbinarytree relationtooptimalcode fullnode fullrank fullwalkofatree fullyparenthesizedmatrix chainproduct fullypolynomial timeapproximationscheme forsubsetsum function ackermann basis convex nal hash seehashfunctionlinear objective potential pre quadratic reduction suf transition functionaliteration fundamentaltheoremoflinearprogramming furthest futurestrategy fusiontree fuzzysorting gabow sscalingalgorithmforsingle sourceshortestpaths gapcharacter gapheuristic garbagecollection gate gaussianelimination gcd seegreatestcommondivisorgeneralnumber eldsieve generatingfunction generatorofasubgroup ofzn generic mst generic relabel genericpush relabelalgorithm geometricdistribution andballsandbins geometricseries geometry computational giftwrapping indexglobalvariable goldberg salgorithm seepush relabelalgorithmgoldenratio gossiping graft graham sscan graham scan graph adjacency listrepresentationof adjacency matrixrepresentationof algorithmsfor andasymptoticnotation attributesof breadth rstsearchof coloringof complementof component constraint dense depth rstsearchof dynamic dense hamiltonian incidencematrixof interval nonhamiltonian shortestpathin singlyconnected sparse static subproblem tourof weighted seealsodirectedacyclicgraph directedgraph ownetwork undirectedgraph treegraphicmatroid graph isomorphism grayvertex greatestcommondivisor gcd binarygcdalgorithmfor euclid salgorithmfor withmorethantwoarguments recursiontheoremfor greedoid greedy greedy activity selector greedyalgorithm foractivityselection forcoinchanging comparedwithdynamicprogramming dijkstra salgorithm elementsof forfractionalknapsackproblem greedy choicepropertyin forhuffmancode kruskal salgorithm andmatroids forminimumspanningtree formultithreadedscheduling foroff linecaching optimalsubstructurein prim salgorithm forsetcover fortaskscheduling onaweightedmatroid forweightedsetcover greedy choiceproperty ofactivityselection ofhuffmancodes ofaweightedmatroid greedyscheduler greedy grid cyclic operator guessingthesolution inthesubstitutionmethod cnfsatis ability openinterval hall stheorem haltingproblem halvinglemma ham cycle hamiltoniancycle hamiltoniangraph hamiltonianpath ham handle handshakinglemma index harmonicnumber harmonicseries hash delete hashfunction auxiliary collision resistant divisionmethodfor universal multiplicationmethodfor universal hashing withchaining universal inmemoization withopenaddressing perfect toreplaceadjacencylists universal hash insert hash hashtable dynamic secondary seealsohashinghashvalue checkproblem headinadiskdrive ofalinkedlist ofaqueue heap analyzedbypotentialmethod binomial building comparedwithfibonacciheaps ary deletionfrom indijkstra salgorithm extractingthemaximumkeyfrom fibonacci seefibonacciheapasgarbage collectedstorage heightof inhuffman salgorithm toimplementamergeableheap increasingakeyin insertioninto injohnson salgorithm max heap maximumkeyof mergeable seemergeableheapmin heap inprim salgorithm asapriorityqueue relaxed runningtimesofoperationson andtreaps heap decrease heap delete heap extract max heap extract min heap increase heap maximum heap minimum heapproperty maintenanceof binary treeproperty heapsort heapsort heel heightofabinomialtree ofab ofad aryheap ofadecisiontree exponential ofaheap ofanodeinaheap ofanodeinatree ofared blacktree ofatree height balancedtree heightfunction inpush relabelalgorithms hereditaryfamilyofsubsets hermitianmatrix highendpointofaninterval highfunction hire assistant hiringproblem probabilisticanalysisof hitcache spurious indexhoare partition hopcroft karp hopcroft karpbipartitematchingalgorithm horizontalray horner srule intherabin karpalgorithm huffman huffmancode hull convex humangenomeproject hyperedge hypergraph andbipartitegraphs idealparallelcomputer idempotencylawsforsets identity identitymatrix inpseudocode image imagecompression inadmissibleedge incidence incidencematrixanddifferenceconstraints ofadirectedgraph ofanundirectedgraph inclusionandexclusion incompletestep increase increasingakey inamax heap increment incrementaldesignmethod ndingtheconvexhull indentationinpseudocode independenceofevents ofrandomvariables ofsubproblemsindynamicprogramming independentfamilyofsubsets independentset oftasks independentstrands indexfunction indexofanelementofzn indicatorrandomvariable inanalysisofexpectedheightofarandomlybuiltbinarysearchtree inanalysisofinsertingintoatreap inanalysisofstreaks inanalysisofthebirthdayparadox inapproximationalgorithmformax cnfsatis ability inboundingtherighttailofthebinomialdistribution inbucketsortanalysis expectedvalueof inhashinganalysis inhiring problemanalysis andlinearityofexpectation inquicksortanalysis inrandomized selectionanalysis inuniversal hashinganalysis inducedsubgraph inequalityconstraint andequalityconstraints inequality linear infeasiblelinearprogram infeasiblesolution nitesequence niteset nitesum nity arithmeticwith initialize preflow initialize simplex initialize source initialstrand injectivefunction innerproduct inordertreewalk inorder placesorting inputtoanalgorithm toacombinationalcircuit distributionof toalogicgate sizeof inputalphabet insert insertionintobinarysearchtrees index intoabitvectorwithasuperimposedbinarytree intoabitvectorwithasuperimposedtreeofconstantheight intob trees intochainedhashtables intod aryheaps intodirect addresstables intodynamictables elementary intofibonacciheaps intoheaps intointervaltrees intolinkedlists intoopen addresshashtables intoorder statistictrees intoprotovanemdeboasstructures intoqueues intored blacktrees intostacks intosweep linestatuses intotreaps into heaps intovanemdeboastrees intoyoungtableaus insertionsort inbucketsort comparedwithmergesort comparedwithquicksort decisiontreefor inmergesort inquicksort usingbinarysearch insertion sort instanceofanabstractproblem ofaproblem instructionsoftherammodel integerdatatype integerlinearprogramming integers integer valued integralitytheorem integral toapproximatesummations integrationofaseries interiorofapolygon interior pointmethod intermediatevertex internalnode internalpathlength interpolationbyacubicspline interpolationbyapolynomial atcomplexrootsofunity intersectionofchords determining forasetoflinesegments determining fortwolinesegments oflanguages ofsets interval fuzzysortingof interval delete intervalgraph interval insert interval interval exactly intervaltree intervaltrichotomy intractability invalidshift inventoryplanning inverseofabijectivefunction inagroup ofamatrix multiplicative modulon inversioninaself organizinglist inasequence inverter invertiblematrix isolatedvertex isomorphicgraphs iteratedfunction iteratedlogarithmfunction iterative fft iterative iterfunction jarvis smarch jensen sinequality johnson indexjohnson salgorithm joiningofred blacktrees trees jointprobabilitydensityfunction josephuspermutation karmarkar salgorithm karp sminimummean weightcyclealgorithm arytree cnf coloring combination conjunctivenormalform kernelofapolygon dummy interpretedasanaturalnumber median ofab treenode public secret static keywords inpseudocode multithreaded killeradversary forquicksort kirchhoff scurrentlaw kleenestar kmpalgorithm kmp matcher knapsackproblemfractional neighbortree knot ofaspline knuth morris prattalgorithm permutation kraftinequality kruskal salgorithm withintegeredgeweights sorted subset substring kthpower universalhashing lagrange sformula lagrange stheorem lam stheorem completenessof provingnp completenessof veri cationof rst seealsostacklatetask layersconvex maximal lca lcm leastcommonmultiple lcs lcs leadingsubmatrix leaf leastcommonancestor leastcommonmultiple squaresapproximation leavingavertex leavingvariable leftchild siblingrepresentation rotate leftrotation leftspine leftsubtree legendresymbol lengthofapath ofasequence ofaspine ofastring levelofafunction ofatree levelfunction lexicographicallylessthan lexicographicsorting binarylogarithm iteratedlogarithmfunction lgk exponentiationoflogarithms lglg compositionoflogarithms lifo rst index seealsostacklightedge linearconstraint lineardependence linearequality linearequationssolvingmodular solvingsystemsof solvingtridiagonalsystemsof linearfunction linearindependence linearinequality linear inequalityfeasibilityproblem linearityofexpectation andindicatorrandomvariables linearityofsummations linearorder linearpermutation linearprobing linearprogramming algorithmsfor applicationsof dualityin ellipsoidalgorithmfor ndinganinitialsolutionin fundamentaltheoremof interior pointmethodsfor karmarkar salgorithmfor andmaximum andminimum costcirculation andminimum andminimum costmulticommodity andmulticommodity simplexalgorithmfor andsingle pairshortestpath andsingle sourceshortestpaths slackformfor standardformfor seealsointegerlinearprogramming integerprogramminglinear programmingrelaxation linearsearch linearspeedup linesegment comparable determiningturnof determiningwhetheranyintersect determiningwhethertwointersect linkofbinomialtrees offibonacci heaproots oftreesinadisjoint setforest link linkedlist compact deletionfrom toimplementdisjointsets insertioninto neighborlist searching organizing seelinkedlistlist delete delete insert insert literal ohnotation omeganotation distance naturallogarithm loadfactorofadynamictable ofahashtable loadinstruction localvariable logarithmfunction discrete iterated logicalparallelism logicgate longestcommonsubsequence longestpalindromesubsequence longest longest longestsimplecycle longestsimplepath inanunweightedgraph inaweighteddirectedacyclicgraph lookup chain indexloop inpseudocode parallel loopinvariant forbreadth rstsearch forbuildingaheap forconsolidatingtherootlistofafibonacciheap fordeterminingtherankofanelementinanorder statistictree fordijkstra salgorithm andforloops forthegenericminimum spanning treemethod forthegenericpush relabelalgorithm forgraham sscan forheapsort forhorner srule forincreasingakeyinaheap initializationof forinsertionsort maintenanceof formerging formodularexponentiation originof forpartitioning forprim salgorithm fortherabin karpalgorithm forrandomlypermutinganarray forred blacktreeinsertion fortherelabel frontalgorithm forsearchinganintervaltree forthesimplexalgorithm forstring matchingautomata andtermination lowendpointofaninterval lowerboundsonapproximations asymptotic foraveragesorting onbinomialcoef cients forcompartingwaterjugs forconvexhull fordisjoint setdatastructures ndingtheminimum ndingthepredecessor forlengthofanoptimaltraveling salesmantour formedian nding formerging forminimum weightvertexcover formultithreadedcomputations andpotentialfunctions forpriority queueoperations andrecurrences forsimultaneousminimumandmaximum forsizeofanoptimalvertexcover forsorting forstreaks onsummations lowermedian lowersquareroot lower triangularmatrix lowfunction ludecomposition decomposition lupdecomposition computationof ofadiagonalmatrix inmatrixinversion andmatrixmultiplication ofapermutationmatrix useof lup decomposition lup mainmemory heap disjoint forestimplementationof linked listimplementationof makespan manhattandistance markednode markov sinequality mastermethodforsolvingarecurrence mastertheorem proofof matchedvertex matchingbipartite index maximal maximum andmaximum perfect ofstrings weightedbipartite matricmatroid matrix additionof adjacency conjugatetransposeof determinantof diagonal hermitian identity incidence inversionof lower triangular multiplicationof seematrixmultiplicationnegativeof permutation predecessor productof withavector pseudoinverseof scalarmultipleof subtractionof symmetric symmetricpositive nite toeplitz transposeof transposeof multithreaded tridiagonal unitlower triangular unitupper triangular upper triangular vandermonde matrix chainmultiplication matrix chain multiplymatrix chain matrixmultiplication forall pairsshortestpaths boolean andcomputingthedeterminant conquermethodfor andlupdecomposition andmatrixinversion multithreadedalgorithmfor pan smethodfor strassen salgorithmfor matrix matrix vectormultiplication multithreaded withrace matroid fortaskscheduling mat vec mat vec loop mat vec max cnfsatis ability max cutproblem max scaling max owmin cuttheorem max heap building ary deletionfrom extractingthemaximumkeyfrom inheapsort increasingakeyin insertioninto maximumkeyof asamax priorityqueue mergeable max heapify max heap insert buildingaheapwith max heapproperty maintenanceof maximalelement ofapartiallyorderedset maximallayers maximalmatching maximalpoint maximalsubset inamatroid maximizationlinearprogram andminimizationlinearprograms maximum inbinarysearchtrees ofabinomialdistribution inabitvectorwithasuperimposedbinarytree inabitvectorwithasuperimposedtreeofconstantheight index nding inheaps inorder statistictrees inprotovanemdeboasstructures inred blacktrees invanemdeboastrees maximum maximumbipartitematching hopcroft karpalgorithmfor maximumdegree inafibonacciheap maximum edmonds karpalgorithmfor ford fulkersonmethodfor asalinearprogram andmaximumbipartitematching relabelalgorithmsfor relabel frontalgorithmfor scalingalgorithmfor updating maximummatching maximumspanningtree maximum subarrayproblem max priorityqueue max cnfsatis ability maybe mst maybe mst maybe mst seeexpectedvaluemeanweightofacycle median multithreadedalgorithmfor ofsortedlists oftwosortedlists weighted mediankey ofab treenode median memberofaset membershipinprotovanemdeboasstructures invanemdeboastrees memoization memoized rod memoized rod aux memoized matrix chain memory memoryhierarchy merge mergeableheap binomialheaps linked listimplementationof relaxedheaps runningtimesofoperationson heaps seealsofibonacciheapmergeablemax heap mergeablemin heap merge lists mergesort comparedwithinsertionsort multithreadedalgorithmfor useofinsertionsortin merge sort merge sort mergingofksortedlists lowerboundsfor multithreadedalgorithmfor oftwosortedarrays miller rabin miller rabinprimalitytest min gap min heap analyzedbypotentialmethod building ary indijkstra salgorithm inhuffman salgorithm injohnson salgorithm mergeable asamin priorityqueue inprim salgorithm min heapify min heap insert min heapordering min heapproperty maintenanceof intreaps binary treeproperty minimizationlinearprogram andmaximizationlinearprograms minimum inbinarysearchtrees index inabitvectorwithasuperimposedbinarytree inabitvectorwithasuperimposedtreeofconstantheight inb trees infibonacciheaps nding inorder statistictrees inprotovanemdeboasstructures inred blacktrees heaps invanemdeboastrees minimum minimum costcirculation minimum minimum costmulticommodity minimum costspanningtree seeminimumspanningtreeminimumcut minimumdegree ofab minimummean weightcycle minimumnode ofafibonacciheap minimumpathcover minimumspanningtree inapproximationalgorithmfortraveling salesmanproblem bor uvka salgorithmfor ondynamicgraphs genericmethodfor kruskal salgorithmfor prim salgorithmfor relationtomatroids minimum weightspanningtree seeminimumspanningtreeminimum weightvertexcover minorofamatrix min priorityqueue inconstructinghuffmancodes indijkstra salgorithm inprim salgorithm missingchild mod modifyingoperation modulararithmetic modularequivalence modularexponentiation modular exponentiation modularlinearequations modular linear equation solver modulo mongearray monotonesequence monotonicallydecreasing monotonicallyincreasing montyhallproblem frontheuristic mst kruskal mst prim mst reduce greater multicommodity minimum multicorecomputer multidimensionalfastfouriertransform multigraph convertingtoequivalentundirectedgraph multiple ofanelementmodulon leastcommon scalar multipleassignment multiplesourcesandsinks multiplicationofcomplexnumbers conquermethodfor ofmatrices seematrixmultiplicationofamatrixchain matrix vector multithreaded modulon ofpolynomials multiplicationmethod multiplicativegroupmodulon multiplicativeinverse modulon multiplyinstruction multipop multiprocessor multipush indexmultiset multithreadedalgorithm forcomputingfibonaccinumbers forfastfouriertransform floyd warshallalgorithm forludecomposition forlupdecomposition formatrixinversion formatrixmultiplication formatrixtranspose formatrix vectorproduct formedian formergesorting formerging fororderstatistics forpartitioning forpre xcomputation forquicksort forreduction forasimplestencilcalculation forsolvingsystemsoflinearequations strassen salgorithm multithreadedcomposition multithreadedcomputation multithreadedscheduling mutuallyexclusiveevents mutuallyindependentevents setofnaturalnumbers naivealgorithm forstringmatching naive matcher naturalcubicspline naturalnumbers keysinterpretedas negativeofamatrix negative weightcycleanddifferenceconstraints andrelaxation andshortestpaths negative weightedges neighborhood neighborlist nestedparallelism nestingboxes net owacrossacut networkadmissible ownetworkresidual forsorting nil node seealsovertexnonbasicvariable nondeterministicmultithreadedalgorithm nondeterministicpolynomialtime seealsonpnonhamiltoniangraph noninstance noninvertiblematrix nonnegativityconstraint nonoverlappablestringpattern nonsaturatingpush nonsingularmatrix nontrivialpower nontrivialsquarerootof modulon pathproperty normalequation normofavector notfunction notasetmember notequivalent notgate complexityclass npc complexityclass completeness ofthecircuit satis abilityproblem ofthecliqueproblem ofdeterminingwhetherabooleanformulaisatautology oftheformula satis abilityproblem ofthegraph coloringproblem ofthehalf cnfsatis abilityproblem ofthehamiltonian cycleproblem ofthehamiltonian pathproblem index oftheindependent setproblem ofintegerlinearprogramming ofthelongest cycleproblem proving ofalanguage ofschedulingwithpro tsanddeadlines oftheset coveringproblem oftheset partitionproblem ofthesubgraph isomorphismproblem ofthesubset sumproblem ofthe cnf satis abilityproblem ofthetraveling salesmanproblem ofthevertex coverproblem integerprogramming tuple nullevent nulltree nullvector eldsieve numericalstability vector notation notation notation notation allocationandfreeingof arrayimplementationof passingasparameter objectivefunction objectivevalue obliviouscompare exchangealgorithm occurrenceofapattern minimum lineproblemcaching leastcommonancestors minimum omega notation approximationalgorithm passmethod onecorrespondence onefunction lineconvex hullproblem linehiringproblem maximum linemultithreadedscheduler ontofunction addresshashtable withdoublehashing withlinearprobing withquadraticprobing openinterval openmp optimalbinarysearchtree optimal bst optimalobjectivevalue optimalsolution optimalsubset ofamatroid optimalsubstructureofactivityselection ofbinarysearchtrees indynamicprogramming ofthefractionalknapsackproblem ingreedyalgorithms ofhuffmancodes oflongestcommonsubsequences ofmatrix chainmultiplication ofrod cutting ofshortestpaths ofunweightedshortestpaths ofweightedmatroids ofthe knapsackproblem optimalvertexcover optimizationproblem approximationalgorithmsfor anddecisionproblems orfunction orderofagroup linear partial total orderedpair orderedtree orderofgrowth indexorderstatistics dynamic multithreadedalgorithmfor statistictree querying orgate origin inpseudocode orthonormal rank rank outerproduct outputofanalgorithm ofacombinationalcircuit ofalogicgate overdeterminedsystemoflinearequations owofaqueue ofastack owingvertex dischargeof overlappingintervals ndingall pointofmaximumoverlap overlappingrectangles overlappingsubproblems overlapping suf xlemma complexityclass packagewrapping pageonadisk ordered pairwisedisjointsets pairwiseindependence pairwiserelativelyprime palindrome pan smethodformatrixmultiplication parallelalgorithm seealsomultithreadedalgorithmparallelcomputer ideal parallelfor inpseudocode parallelismlogical ofamultithreadedcomputation nested ofarandomizedmultithreadedalgorithm parallelloop parallel schedulingproblem parallelpre parallelrandom accessmachine parallelslackness ruleofthumb parallel strandsbeinglogicallyin parameter costsofpassing parentinabreadth rsttree inamultithreadedcomputation inarootedtree parenthesisstructureofdepth rstsearch parenthesistheorem parenthesizationofamatrix chainproduct parsetree partiallyorderedset partialorder partition partition partitionfunction partitioning aroundmedianof elements hoare smethodfor multithreadedalgorithmfor randomized partitionofaset pascal striangle augmenting critical hamiltonian longest shortest seeshortestpathssimple weightof pathcompression pathcover pathlength ofatree relaxationproperty index instringmatching nonoverlappable patternmatching seestringmatchingpenalty perfecthashing perfectlinearspeedup perfectmatching permutation reversal josephus permutation linear inplace random ofaset uniformrandom permutationmatrix lupdecompositionof permute cyclic permute sorting permute permute without identity persistentdatastructure persistent insert pertchart fib phase oftherelabel frontalgorithm phifunction pisano delete pivotinlinearprogramming inludecomposition inquicksort pivot platter matrix recursive merge merge sort pointer arrayimplementationof trailing valuerepresentation polarangle pollard srhoheuristic pollard rho polygon kernelof shaped polylogarithmicallybounded polynomial additionof asymptoticbehaviorof coef cientrepresentationof derivativesof evaluationof interpolationby multiplicationof valuerepresentationof polynomial growthcondition polynomiallybounded polynomiallyrelated polynomial timeacceptance polynomial timealgorithm polynomial timeapproximationscheme formaximumclique polynomial timecomputability polynomial timedecision polynomial timereducibility polynomial timesolvability polynomial timeveri cation pop popfromarun timestack positionaltree positive nitematrix celocationproblem postordertreewalk potentialfunction forlowerbounds potentialmethod forbinarycounters fordisjoint setdatastructures fordynamictables forfibonacciheaps forthegenericpush relabelalgorithm formin heaps forrestructuringred blacktrees forself organizinglistswithmove forstackoperations potential ofadatastructure powerofanelement modulon indexkth nontrivial powerseries powerset prfg probabilitydistribution pram predecessorinbinarysearchtrees inabitvectorwithasuperimposedbinarytree inabitvectorwithasuperimposedtreeofconstantheight inbreadth rsttrees inb trees inlinkedlists inorder statistictrees inprotovanemdeboasstructures inred blacktrees inshortest pathstrees invanemdeboastrees predecessor predecessormatrix predecessorsubgraphinall pairsshortestpaths inbreadth rstsearch indepth rstsearch insingle sourceshortestpaths predecessor subgraphproperty preemption pre xofasequence ofastring pre xcode pre xcomputation pre xfunction pre functioniterationlemma pre preimageofamatrix preorder total preordertreewalk presorting prim salgorithm withanadjacencymatrix inapproximationalgorithmfortraveling salesmanproblem implementedwithafibonacciheap implementedwithamin heap withintegeredgeweights similaritytodijkstra salgorithm forsparsegraphs primalitytesting miller rabintest pseudoprimalitytesting primallinearprogram primaryclustering primarymemory primedistributionfunction primenumber densityof primenumbertheorem primitiverootofzn principalrootofunity principleofinclusionandexclusion pairs shortest rod intersecting segments lcs optimal parens priorityqueue inconstructinghuffmancodes indijkstra salgorithm heapimplementationof lowerboundsfor max priorityqueue min priorityqueue withmonotoneextractions inprim salgorithm protovanemdeboasstructureimplementationof vanemdeboastreeimplementationof seealsobinarysearchtree binomialheap fibonacciheapprobabilisticallycheckableproof probabilisticanalysis ofapproximationalgorithmformax cnfsatis ability andaverageinputs ofaveragenodedepthinarandomlybuiltbinarysearchtree ofballsandbins ofbirthdayparadox ofbucketsort ofcollisions index ofconvexhulloverasparse hulleddistribution lecomparison offuzzysortingofintervals ofhashingwithchaining ofheightofarandomlybuiltbinarysearchtree ofhiringproblem ofinsertionintoabinarysearchtreewithequalkeys oflongest probeboundforhashing oflowerboundforsorting ofmiller rabinprimalitytest andmultithreadedalgorithms ofon linehiringproblem ofopen addresshashing ofpartitioning ofperfecthashing ofpollard srhoheuristic ofprobabilisticcounting ofquicksort ofrabin karpalgorithm andrandomizedalgorithms ofrandomizedselection ofsearchingacompactlist ofslot sizeboundforchaining ofsortingpointsbydistancefromorigin ofstreaks ofuniversalhashing probabilisticcounting probability probabilitydensityfunction probabilitydistribution probabilitydistributionfunction probesequence probing seealsolinearprobing quadraticprobing doublehashingproblemabstract computational concrete decision intractable optimization solutionto tractable procedure cartesian inner ofmatrices outer ofpolynomials ruleof scalar professionalwrestler programcounter programming seedynamicprogramming linearprogrammingproperancestor properdescendant propersubgroup propersubset protovanemdeboasstructure clusterin comparedwithvanemdeboastrees deletionfrom insertioninto maximumin membershipin minimumin predecessorin successorin summaryin proto veb insert proto veb member proto veb minimum proto vebstructure seeprotovanemdeboasstructureproto veb successor prune searchmethod pruningafibonacciheap scan scan scan scan scan pseudocode pseudoinverse pseudoprime pseudoprime pseudorandom numbergenerator matrix indexp transpose publickey public keycryptosystem pushpush relabeloperation stackoperation pushontoarun timestack pushoperation inpush relabelalgorithms nonsaturating saturating relabelalgorithm basicoperationsin bydischarginganover owingvertexofmaximumheight ndamaximumbipartitematching gapheuristicfor genericalgorithm withaqueueofover owingvertices relabel frontalgorithm quadraticfunction quadraticprobing quadraticresidue quantile query queue inbreadth rstsearch implementedbystacks linked listimplementationof priority seepriorityqueueinpush relabelalgorithms quicksort analysisof average caseanalysisof comparedwithinsertionsort comparedwithradixsort withequalelementvalues goodworst caseimplementationof killeradversary withmedian multithreadedalgorithmfor randomizedversionof stackdepthof recursiveversionof useofinsertionsortin worst caseanalysisof quicksort quicksort setofrealnumbers rabin karpalgorithm rabin karp matcher radixsort comparedwithquicksort radix sort radixtree ram random random accessmachine parallel randomizedalgorithm andaverageinputs comparisonsort forfuzzysortingofintervals forhiringproblem forinsertionintoabinarysearchtreewithequalkeys formax cnfsatis ability miller rabinprimalitytest multithreaded forpartitioning forpermutinganarray pollard srhoheuristic andprobabilisticanalysis quicksort randomizedrounding forsearchingacompactlist forselection universalhashing worst caseperformanceof randomized hire assistant randomized partition randomized quicksort relationtorandomlybuiltbinarysearchtrees randomizedrounding randomized randomize index randomlybuiltbinarysearchtree random numbergenerator randompermutation uniform random sample randomsampling random randomvariable indicator seeindicatorrandomvariablerange ofamatrix rankcolumn ofamatrix ofanodeinadisjoint setforest ofanumberinanorderedset inorder statistictrees rateofgrowth ray delete delete fixup enumerate insert insert fixup transplant reachabilityinagraph realnumbers reconstructinganoptimalsolution indynamicprogramming rectangle recurrence solutionbyakra bazzimethod solutionbymastermethod solutionbyrecursion treemethod solutionbysubstitutionmethod recurrenceequation seerecurrencerecursion recursiontree inproofofmastertheorem andthesubstitutionmethod recursive activity selector recursivecase recursive fft recursive matrix chain blacktree augmentationof comparedwithb trees deletionfrom indeterminingwhetheranylinesegmentsintersect forenumeratingkeysinarange heightof insertioninto joiningof maximumkeyof minimumkeyof predecessorin propertiesof relaxed restructuring rotationin searchingin successorin seealsointervaltree statistictreereduce reduced spacevanemdeboastree reducibility reductionalgorithm reductionfunction reduction ofanarray exiverelation exivityofasymptoticnotation feasible regularitycondition rejectionbyanalgorithm bya niteautomaton relabel relabeledvertex relabeloperation inpush relabelalgorithms relabel relabel frontalgorithm phaseof relation relativelyprime relax relaxationofanedge linearprogramming indexrelaxedheap relaxedred blacktree releasetime remainder remainderinstruction repeatedsquaringforall pairsshortestpaths forraisinganumbertoapower inpseudocode repetitionfactor ofastring repetition matcher representativeofaset reset residualcapacity residualedge residualnetwork residue respectingasetofedges returnedge return inpseudocode returninstruction reweightinginall pairsshortestpaths insingle sourceshortestpaths rhoheuristic approximationalgorithm rightchild conversion righthorizontalray rotate rightrotation rightspine rightsubtree rod cutting rootofatree ofunity ofzn rootedtree representationof rootlist ofafibonacciheap rotationcyclic inared blacktree rotationalsweep rounding randomized majororder rowrank rowvector rsapublic keycryptosystem vebtree ruleofproduct ruleofsum runningtime average expected ofagraphalgorithm andmultithreadedcomputation orderofgrowth rateofgrowth worst sabermetrics safeedge component samplespace sampling satellitedata satis ability satis ableformula satisfyingassignment saturatededge saturatingpush scalar owproduct scalarmultiple scalinginmaximum insingle sourceshortestpaths scan scan scapegoattree schedule scheduler formultithreadedcomputations centralized greedy stealingalgorithmfor scheduling schurcomplement index schurcomplementlemma scramble seamcarving searching binarysearch inbinarysearchtrees inb trees inchainedhashtables incompactlists indirect addresstables foranexactinterval inintervaltrees linearsearch inlinkedlists inopen addresshashtables inprotovanemdeboasstructures inred blacktrees inanunsortedarray invanemdeboastrees searchtree seebalancedsearchtree binarysearchtree exponentialsearch intervaltree optimalbinarysearchtree statistictree blacktree splaytree treesecondaryclustering secondaryhashtable secondarystoragesearchtreefor stackson bestminimumspanningtree secretkey seedirectedsegment linesegmentsegments intersect selection ofactivities andcomparisonsorts inexpectedlineartime multithreaded inorder statistictrees inworst caselineartime selectionsort selectorvertex loop organizinglist semiconnectedgraph sentinel sequence bitonic nite nite inversionin probe sequentialconsistency serialalgorithmversusparallelalgorithm serialization ofamultithreadedalgorithm series strandsbeinglogicallyin cardinality convex difference independent intersection member notamember union coveringproblem weighted partitionproblem shadowofapoint sharedmemory ssort shift instringmatching shiftinstruction circuitingoperator shortest shortestpaths pairs bellman fordalgorithmfor withbitonicpaths andbreadth rstsearch convergencepropertyof anddifferenceconstraints dijkstra salgorithmfor inadirectedacyclicgraph densegraphs estimateof floyd warshallalgorithmfor gabow sscalingalgorithmfor johnson salgorithmfor asalinearprogram andlongestpaths indexbymatrixmultiplication andnegative weightcycles withnegative weightedges pathpropertyof optimalsubstructureof relaxationpropertyof predecessor subgraphpropertyof problemvariants andrelaxation byrepeatedsquaring destination source treeof triangleinequalityof inanunweightedgraph upper boundpropertyof inaweightedgraph sibling sideofapolygon signature simplecycle simplegraph simplepath longest simplepolygon simplestencilcalculation simpleuniformhashing simplex simplex simplexalgorithm destinationshortestpaths pairshortestpath asalinearprogram sourceshortestpaths bellman fordalgorithmfor withbitonicpaths anddifferenceconstraints dijkstra salgorithmfor inadirectedacyclicgraph densegraphs gabow sscalingalgorithmfor asalinearprogram andlongestpaths singleton singlyconnectedgraph singlylinkedlist seealsolinkedlistsingularmatrix singularvaluedecomposition sinkvertex sizeofanalgorithm sinput ofabinomialtree ofabooleancombinationalcircuit ofaclique ofaset ofasubtreeinafibonacciheap ofavertexcover skiplist slack slackform uniquenessof slacknesscomplementary parallel slackvariable slotofadirect accesstable ofahashtable pairs shortest paths smoothedanalysis socrates solutiontoanabstractproblem toacomputationalproblem toaconcreteproblem feasible infeasible optimal toasystemoflinearequations sortedlinkedlist seealsolinkedlistsorting bubblesort bucketsort columnsort comparisonsort countingsort fuzzy heapsort insertionsort index sorting lexicographic inlineartime lowerboundsfor mergesort byobliviouscompare exchangealgorithms inplace ofpointsbypolarangle probabilisticlowerboundfor quicksort radixsort selectionsort ssort stable tableofrunningtimes topological usingabinarysearchtree withvariable lengthitems sortinglemma sortingnetwork sourcevertex spanlaw spanningtree bottleneck maximum veri cationof seealsominimumspanningtreespan ofamultithreadedcomputation sparsegraph pairsshortestpathsfor andprim salgorithm sparse hulleddistribution spawn inpseudocode spawnedge speedup ofarandomizedmultithreadedalgorithm spindle spineofastring matchingautomaton ofatreap splaytree spline splittingofb treenodes trees splittingsummations spurioushit squarematrix matrix matrix recursive squareofadirectedgraph squareroot moduloaprime squaring repeatedforall pairsshortestpaths forraisinganumbertoapower stabilitynumerical ofsortingalgorithms stack ingraham sscan implementedbyqueues linked listimplementationof operationsanalyzedbyaccountingmethod operationsanalyzedbyaggregateanalysis operationsanalyzedbypotentialmethod forprocedureexecution onsecondarystorage stack empty standarddeviation standardencoding standardform shapedpolygon startstate starttime stateofa niteautomaton staticgraph staticsetofkeys staticthreading stencil stencilcalculation stirling sapproximation storagemanagement storeinstruction straddle strand nal independent initial logicallyinparallel indexlogicallyinseries strassen salgorithm multithreaded streaks strictlydecreasing strictlyincreasing stringmatching basedonrepetitionfactors niteautomata withgapcharacters knuth morris prattalgorithmfor naivealgorithmfor rabin karpalgorithmfor matchingautomaton stronglyconnectedcomponent decompositioninto strongly connected components stronglyconnectedgraph subgraph predecessor seepredecessorsubgraphsubgraph isomorphismproblem subgroup subpath subproblemgraph subroutinecalling executing subsequence subset hereditaryfamilyof independentfamilyof subset sum subset sumproblemapproximationalgorithmfor completenessof withunarytarget substitutionmethod andrecursiontrees substring subtractinstruction subtractionofmatrices subtree maintainingsizesof inorder statistictrees inabernoullitrial successorinbinarysearchtrees inabitvectorwithasuperimposedbinarytree inabitvectorwithasuperimposedtreeofconstantheight ndingith ofanodeinanorder statistictree inlinkedlists inorder statistictrees inprotovanemdeboasstructures inred blacktrees invanemdeboastrees successor suchthat suf suf xfunction suf functioninequality suf functionrecursionlemma sum cartesian nite ofmatrices ofpolynomials ruleof telescoping sum arrays sum arrays summaryinabitvectorwithasuperimposedtreeofconstantheight inprotovanemdeboasstructures invanemdeboastrees summation inasymptoticnotation bounding formulasandpropertiesof linearityof summationlemma supercomputer superpolynomialtime supersink supersource surjection svd sweeping rotational index sweepline sweep linestatus symboltable symmetricdifference symmetricmatrix symmetricpositive nitematrix symmetricrelation symmetryof notation sync inpseudocode systemofdifferenceconstraints systemoflinearequations delete insert tailofabinomialdistribution ofalinkedlist ofaqueue tailrecursion recursive quicksort target tarjan soff lineleast ancestorsalgorithm task taskparallellibrary taskscheduling tautology taylorseries telescopingseries telescopingsum testingofprimality ofpseudoprimality text instringmatching thenclause theta notation thread threadingbuildingblocks cnf cnf cnfsatis ability approximationalgorithmfor cnfsatis ability conjunctivenormalform tightconstraint seerunningtimetimedomain memorytrade timestamp toeplitzmatrix inpseudocode downmethod fordynamicprogramming topofastack topologicalsort incomputingsingle sourceshortestpathsinadag topological sort totalorder totalpathlength totalpreorder totalrelation tourbitonic euler ofagraph tractability trailingpointer transitionfunction transitiveclosure andbooleanmatrixmultiplication ofdynamicgraphs transitive closure transitiverelation transitivityofasymptoticnotation transplant transposeconjugate ofadirectedgraph ofamatrix ofamatrix multithreaded transposesymmetryofasymptoticnotation traveling salesmanproblemapproximationalgorithmfor bitoniceuclidean bottleneck completenessof withthetriangleinequality withoutthetriangleinequality indextraversalofatree treap treap insert trees avl binary seebinarytreebinomial bisectionof breadth rst trees decision depth rst diameterof dynamic fullwalkof fusion heap height balanced heightof interval minimumspanning seeminimumspanningtreeoptimalbinarysearch statistic parse recursion seered blacktreerooted scapegoat seesearchtreeshortest paths spanning seeminimumspanningtree spanningtreesplay treap vanemdeboas walkof balancedtrees delete treeedge insert maximum minimum predecessor successor treewalk trial bernoulli trialdivision triangleinequality forshortestpaths triangularmatrix trichotomy interval trichotomypropertyofrealnumbers tridiagonallinearsystems tridiagonalmatrix trie radixtree trim trimmingalist trivialdivisor truthassignment truthtable tsp tuple twiddlefactor cnf cnfsatis ability cnfsatis ability passmethod heap joining splitting unary unboundedlinearprogram unconditionalbranchinstruction uncountableset underdeterminedsystemoflinearequations owofaqueue ofastack undirectedgraph articulationpointof biconnectedcomponentof bridgeof cliquein coloringof index computingaminimumspanningtreein convertingto fromamultigraph regular grid hamiltonian independentsetof matchingof nonhamiltonian vertexcoverof seealsographundirectedversionofadirectedgraph uniformhashing uniformprobabilitydistribution uniformrandompermutation unionofdynamicsets seeunitingoflanguages ofsets union disjoint forestimplementationof linked listimplementationof unionbyrank uniquefactorizationofintegers unitingoffibonacciheaps ofheaps oflinkedlists heaps unitlower triangularmatrix timetask unitupper triangularmatrix unitvector universalcollectionofhashfunctions universalhashing universalsink universe ofkeysinvanemdeboastrees universesize unmatchedvertex unsortedlinkedlist seealsolinkedlistuntil inpseudocode unweightedlongestsimplepaths unweightedshortestpaths upperbound upper boundproperty uppermedian uppersquareroot upper triangularmatrix validshift valueofa ofafunction objective valueoverreplacementplayer vandermondematrix vanemdeboastree clusterin comparedwithprotovanemdeboasstructures deletionfrom insertioninto maximumin membershipin minimumin predecessorin withreducedspace successorin summaryin var variance variablebasic entering leaving nonbasic inpseudocode random slack seealsoindicatorrandomvariablevariable lengthcode variance ofabinomialdistribution ofageometricdistribution veb empty insert vebtree seevanemdeboastreeveb delete veb insert veb maximum veb member veb minimum veb predecessor veb successor indexvector convolutionof crossproductof orthonormal intheplane venndiagram veri cation ofspanningtrees veri cationalgorithm vertexarticulationpoint attributesof capacityof inagraph intermediate isolated owing ofapolygon relabeled selector vertexcover vertex vertex coverproblemapproximationalgorithmfor completenessof vertexset violation ofanequalityconstraint virtualmemory viterbialgorithm vorp walkofatree weakduality weightofacut ofanedge ofapath balancedtree weightedbipartitematching weightedmatroid weightedmedian weightedset coveringproblem weighted unionheuristic weightedvertexcover weightfunctionforagraph inaweightedmatroid inpseudocode paththeorem whitevertex widget witness witness tothecompositenessofanumber worklaw ofamultithreadedcomputation stealingschedulingalgorithm worst caserunningtime yen simprovementtothebellman fordalgorithm fasttrie youngtableau setofintegers equivalenceclassesmodulon elementsofmultiplicativegroupmodulon zcn nonzeroelementsofzn zeromatrix zeroofapolynomialmoduloaprime integerprogramming knapsackproblem sortinglemma zonk", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [
    "DZ"
   ], 
   "first_name": "Timothy", 
   "first_major": 25, 
   "subscriptions": [
    6
   ], 
   "gpa": "0.000", 
   "campus_involvement": [
    141
   ], 
   "languages": [
    57
   ], 
   "profile_created": true, 
   "school_year": 1, 
   "graduation_year": 4, 
   "previous_employers": [
    19
   ], 
   "website": "", 
   "second_major": 24, 
   "resume": "student/student/kaler_timothy_tfk@mit.edu_2011-09-04-15-47-02.pdf", 
   "user": 149, 
   "industries_of_interest": [
    1
   ], 
   "act": 36, 
   "date_created": "2011-09-04 15:39:53"
  }
 }, 
 {
  "pk": 139, 
  "model": "student.student", 
  "fields": {
   "last_name": "Shen", 
   "last_updated": "2011-09-06 06:58:14", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " angela shen pacific apt cambridge rshen sloan mit edu education mit sloan management cambridge candidate mba june finance active member management consulting club external relations asian business club gmat shanghai jiaotong university shanghai china economics awarded guanghua scholarship merit based teaching assistant international fudan university shanghai china bachelor environmental studies won national scholarship leadership academic excellence vigilant investment management beijing china consultant oak investment partners leading multi stage venture firm associate chinese entry strategy leading lithium ion battery maker presented recommendations directors project funding evaluated potential partner opportunities china technology york usa analyst planning pension funding functional member designed implemented database forecast pension funded status volatile conditions developed tools investment committee pension risk tolerance supporting efforts optimize structure motors shanghai china bangkok thailand planning specialist international operations promoted analyst established global evaluation criteria manage engineering budget partnered finance program management strategic priorities initiated customer voc research refined pricing strategy pickup trucks thailand resulting revenue increase achieved expenditure savings scenario analysis asia pacific countries formulated budget outlook roadmap alternative fuel projects asia latin america member streamline project budget approval countries reducing regional review forum analyst promoted within years ahead peers boston consulting shanghai china associate formulated chinese entry proposal identified acquisition targets automotive component supplier interviews research shanghai china intern project management developed account receivable tracking database integrated financial data newly acquired interacted clients payment schedules project progress updates activities interests advisor supedeco senegal ngo project invasive plants into charcoal volunteer english teacher organizer rural elementary schools china enjoy cooking china cuisine local newspaper freelancer prose movie review writer", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [
    "CN"
   ], 
   "first_name": "Rongshan", 
   "first_major": 23, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.700", 
   "campus_involvement": [], 
   "languages": [
    3, 
    43, 
    48, 
    108, 
    134
   ], 
   "profile_created": true, 
   "school_year": 5, 
   "graduation_year": 1, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/shen_rongshan_rshen@mit.edu_2011-09-04-18-37-57.pdf", 
   "user": 151, 
   "industries_of_interest": [
    2, 
    37, 
    12, 
    28, 
    41, 
    42
   ], 
   "act": null, 
   "date_created": "2011-09-04 17:11:33"
  }
 }, 
 {
  "pk": 140, 
  "model": "student.student", 
  "fields": {
   "last_name": "Isava", 
   "last_updated": "2011-09-06 06:58:14", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " bcd cefb yxyy yxyy ghiij bpp", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Monica", 
   "first_major": 26, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.900", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/isava_monica_misava@mit.edu_2011-09-04-18-27-42.pdf", 
   "user": 152, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-04 18:26:00"
  }
 }, 
 {
  "pk": 141, 
  "model": "student.student", 
  "fields": {
   "last_name": "Yuen", 
   "last_updated": "2011-09-06 06:58:20", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": 2270, 
   "sat_v": 700, 
   "sat_w": 770, 
   "keywords": " pak yan daisy yuen staten campus memorial cambridge pyyuen mit edu education massachusetts institute technology cambridge expected june bachelor mechanical engineering relevant courses manufacturing toy designing mechanics materials dynamics thermal fluids engineering measurement instrumentation numerical computation mechanical engineers linear algebra differential equations physics newtonian mechanics electricity magnetism microeconomics macroeconomics microeconomics theory public policy finance theory equivalent staten technical york valedictorian students june skills computer solidworks matlab google sketch adobe illustrator adobe photoshop python java microsoft excel powerpoint chinese texts typing lab skills prototyping jet engineering drawing fluent cantonese english conversational mandarin chinese proficient chinese literacy saathi sterilization module designer feb designed solid modeled solidworks prototyped sterilization module saathi developer manufacturing uses banana fiber sanitary napkins developing regions module sterilization consisted germicidal lamps conveyor ventilation requirements module sterilize effectively mit manufacture feb designed solid modeled solidworks prototyped motorized mobile pump pump positive displacement pump consisted coupled motors chamber piston slider crank mechanism capable inflating rubber balloon liters volts mit designing jan designed layout circulation mock restaurant using google sketch ideated mobile uses hidden screen ordering user interface innovation designed prototyped mock audio turns whenever lifted mit vortical research lab undergraduate researcher jan backbone scholar online encyclopedia renewable called repedia composing introductory entries biofuels companies ekman layer transport mit toy feb designed fabricated students alpha prototype toy multi player players weighted objects blown fan tested boston museum presented prototype audience consisting mit faculty students toy representatives leadership mit china club mit mentorship committee jan coordinated directed mit toy making workshop consisting participants coordinated directed mit chinese culture playgroup days consisting participants organized presented meetings publicity events website http pyyuen weebly com index html", 
   "looking_for": [
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Pak Yan", 
   "first_major": 26, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.900", 
   "campus_involvement": [
    83, 
    183
   ], 
   "languages": [
    3, 
    45, 
    47, 
    106
   ], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [], 
   "website": "http://pyyuen.weebly.com/index.html", 
   "second_major": null, 
   "resume": "student/student/yuen_pak yan_pyyuen@mit.edu_2011-09-04-18-38-43.pdf", 
   "user": 153, 
   "industries_of_interest": [
    2, 
    3, 
    7, 
    37, 
    12, 
    13, 
    27, 
    28, 
    43
   ], 
   "act": null, 
   "date_created": "2011-09-04 18:31:07"
  }
 }, 
 {
  "pk": 142, 
  "model": "student.student", 
  "fields": {
   "last_name": "Pham", 
   "last_updated": "2011-09-06 06:58:20", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": 690, 
   "keywords": " ijj", 
   "looking_for": [
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "VN"
   ], 
   "first_name": "Thai", 
   "first_major": 25, 
   "subscriptions": [
    6
   ], 
   "gpa": "5.000", 
   "campus_involvement": [
    377, 
    415
   ], 
   "languages": [
    3, 
    46, 
    70, 
    147
   ], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [
    15, 
    73
   ], 
   "website": "", 
   "second_major": 14, 
   "resume": "student/student/pham_thai_tmbtw@mit.edu_2011-09-04-20-33-37.pdf", 
   "user": 154, 
   "industries_of_interest": [
    7, 
    37, 
    38, 
    20, 
    27, 
    28, 
    34, 
    40, 
    42
   ], 
   "act": null, 
   "date_created": "2011-09-04 20:10:05"
  }
 }, 
 {
  "pk": 143, 
  "model": "student.student", 
  "fields": {
   "last_name": "Yang", 
   "last_updated": "2011-09-06 07:00:20", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " address emily yang address memorial epyang mit edu mistweave court cambridge newark education massachusetts institute technology cambridge candidate bachelor mechanical engineering jun prior relevant coursework mechanics materials differential equations intro matlab relevant coursework mechanics materials dynamics thermal fluids engineering electronics mechanical engineers charter wilmington wilmington valedictorian students jun joint enrollment university delaware multivariable calculus ordinary differential equations research undergraduate researcher dept mechanical engineering newark university delaware aug characterization novel efficient flapping mav asymmetric flapping inspired thorax diptera sunil agrawal graduate candidate joon park optimized layered mechanism asymmetrically flapping micro vehicle mav using matlab author conference submitted ieee international conference robotics automation icra september senior research project dept university delaware newark haiqiang chen graduate candidate hudaa neetoo jul jun investigated effects using edible chitosan based antimicrobial coatings enhance safety foods using bacterial culture vacuum packaging statistical analysis research assistant dept physical therapy university delaware newark collaboration departments physical therapy mechanical engineering jun sept utilization mobility socialization needs cole galloway graduate candidate christina ragonesi students observed effects independently controlled robotic locomotion socioemotional development non typically developing toddler limited mobility collected data video footage worked closely undergrads graduate students perform analysis using howes peer reported troubleshooted robot mechanical issues fifth author abstract presented international conference infant studies icis baltimore employment mathplus program hockessin aug aug teaching assistant aug aug individually mentored instructed graders program homework math problems leadership mit association taiwanese students ats sept social dec executive members coordinate campus events per semester promote appreciation knowledge taiwanese culture lunar festival coordinated volunteers different traditional cooked dishes attendees strait taiwan coordinated volunteers transform mit stata into taiwanese participants chinese american community folk troupe hockessin sept jun teaching assistant sept jun dancers weekly rehearsals monthly performances coordinated dances edited events performances implemented streamlined organization audio visual media performance venues macy thanksgiving parade nyc national theatre washington kennedy washington skills conversational mandarin computer matlab microsoft powerpoint excel awards united states presidential scholar recognition siemens award advanced placement national merit scholarship recipient society engineers swe del mar peninsula scholarship", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Emily", 
   "first_major": 26, 
   "subscriptions": [
    6
   ], 
   "gpa": "5.000", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 2, 
   "graduation_year": 3, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/yang_emily_epyang@mit.edu_2011-09-04-20-58-42.pdf", 
   "user": 155, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-04 20:57:31"
  }
 }, 
 {
  "pk": 144, 
  "model": "student.student", 
  "fields": {
   "last_name": "Harmon", 
   "last_updated": "2011-09-06 06:58:20", 
   "sat_m": 750, 
   "graduation_month": "4", 
   "older_than_21": "N", 
   "sat_t": 2010, 
   "sat_v": 600, 
   "sat_w": 660, 
   "keywords": " abc cbdb efc vhc znn znn pef", 
   "looking_for": [
    2
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Chyleigh", 
   "first_major": 8, 
   "subscriptions": [
    6
   ], 
   "gpa": "3.700", 
   "campus_involvement": [
    14, 
    103
   ], 
   "languages": [
    3, 
    128
   ], 
   "profile_created": true, 
   "school_year": 2, 
   "graduation_year": 3, 
   "previous_employers": [], 
   "website": "", 
   "second_major": 18, 
   "resume": "student/student/harmon_chyleigh_chyleigh@mit.edu_2011-09-05-00-12-15.pdf", 
   "user": 156, 
   "industries_of_interest": [
    4, 
    6, 
    11, 
    12, 
    18
   ], 
   "act": 30, 
   "date_created": "2011-09-05 00:11:21"
  }
 }, 
 {
  "pk": 145, 
  "model": "student.student", 
  "fields": {
   "last_name": "Chehrazi", 
   "last_updated": "2011-09-06 06:58:20", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " ariana chehrazi memorial cambridge phone email chehrazi mit edu education massachusetts institute technology cambridge candidate bachelor biology gpa minor economics concentration spanish relevant coursework intro statistical economics challenge poverty organic chemistry genetics biochemistry differential equations university cambridge abroad cambridge sciences tripos biological upper honors relevant coursework microeconomics macroeconomics developmental biology neurobiology mit ambassadors cambridge president president member represents mit alumni alumni events conferences tours provides tours mit guest alumni monthly ambassador meetings officer meetings meetings alumni association schedule ambassador interviews restructure tour route information organize ambassador mit campus tour training sessions investigate secure ambassador opportunities events opportunities website aid appropriate ambassadors specific events tours diagnostics cambridge research intern developed tested based diagnostic spoilage used developing performed literature searches relevant fields planned executed chemical biological based experiments diagnostic scientist project organized priced ordered laboratory equipment supplies scheduled acted contact safety inspections presented research bimonthly meetings centro biologia severo ochoa madrid spain research assistant wandosell laboratory evaluated effects alzheimer treatment mutant mice via biological assays including pcr western blot elisa immunoassays responsible mice conducted research spanish usc program los angeles research assistant baudry laboratory investigated effects estrogen treatment molecular pathway function calpain protease brain conducted biological assays including western blots handled animals ucla emergency medicine los angeles web research assistant david schriger organized executed data collection analysis research project comparing web medical journals published author subsequent feb edition annals emergency medicine reality los angeles assistant secretary edited commercial industrial estate appraisal reports content grammar marlborough los angeles counselor teaching assistant instructed assisted grading graders math directed motivated graders theatrical production designed costumes customized supervised olds athletics planned executed trips campers skills proficient spanish computer microsoft understanding python leadership activities sigma kappa sorority standards committee mit senior planning committee mit varsity crew mit athletic advisory committee executive community service cambridge university american society founding member webmaster cambridge christ college hippolytans sports society mit leadershape program jan mit freshman leadership program aug", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Ariana", 
   "first_major": 5, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.200", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/chehrazi_ariana_chehrazi@mit.edu_2011-09-05-00-31-44.pdf", 
   "user": 157, 
   "industries_of_interest": [
    4, 
    37, 
    38, 
    18, 
    30
   ], 
   "act": null, 
   "date_created": "2011-09-05 00:25:54"
  }
 }, 
 {
  "pk": 146, 
  "model": "student.student", 
  "fields": {
   "last_name": "Wu", 
   "last_updated": "2011-09-06 06:58:20", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": 2230, 
   "sat_v": 740, 
   "sat_w": 690, 
   "keywords": " feng memorial cambridge fwu mit edu objective seeking fulltime project management consulting software business development particularly interested engaging clients development teams creative effective business technology strategies solutions education massachusetts institute technology cambridge candidate bachelor computer engineering relevant courses software engineering algorithms computer communication systems buckingham browne nichols cambridge national merit finalist certificate honor scholar distinction sapient global markets boston intern june august desktop application development data visualizations financial data independently fleshed research application designed implemented visualizations ramped business application development methodology consulting operations robert taylor network inc cambridge research intern project manager february june technology launch rrtn org rrtn net adias org formed leveraged business partnerships solutions clientele mit media laboratory cambridge urop intern software engineer january august modeled analyzed economic exchanges peer peer lending community programmed experimental platform myopic equilibriums bartering systems mit shakespeare project mit hyperstudio cambridge media producer june september analyzed edited prepared videos asian shakespeare productions shakespeare asia project designed populated metadata database hundreds video clips built yourself cambridge designer software engineer june august designed coded robotics using elementary students activities treasurer project coordinator interests alpha kappa psi mit administration photography staff tech mit leadershape battlecode competition skills technology proficiencies java python html css javascript cmss sql matlab experienced agile waterfall development project planning management excellent technical presentation writing skills presented executives grants etc knowledge advanced calculus linear algebra statistics discrete mathematics familiar adobe photoshop adobe lightroom pro ibm lotuslive", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Feng", 
   "first_major": 12, 
   "subscriptions": [], 
   "gpa": "4.200", 
   "campus_involvement": [], 
   "languages": [
    3, 
    47
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/wu_feng_fwu@mit.edu_2011-09-05-00-30-57.pdf", 
   "user": 158, 
   "industries_of_interest": [
    37, 
    38, 
    36
   ], 
   "act": null, 
   "date_created": "2011-09-05 00:30:04"
  }
 }, 
 {
  "pk": 147, 
  "model": "student.student", 
  "fields": {
   "last_name": "Adjodah", 
   "last_updated": "2011-09-06 06:58:20", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " dhavald adjodahtechnology policyprogram mitesdmassachusettsinstituteoftechnologyvoice amesst email nuclearr gmail comcambridge usacontacttoapplymyskillsinmathematicalmodelingandmyleadershipexperiencefrominternationaldevelopmentprojectstoobjectivequantitativelyandqualitativelyunderstandandimprovecomplexsocial economicandtechnicalsystems massachusettsinstituteoftechnology classof gremath educationm degreeinthetechnologyandpolicyprogram engineeringsystemsdivisions withafocusinsystemsdynamicsmodelingandoperationalmanagementanalysisofcomplexenterprises massachusettsinstituteoftechnology classof gpa satmath degreeinphysicswithaconcentrationinsocialandenvironmentalnon linearmodelingawards meritfellowshipsandgrants legatumcenterseedgrantforentrepreneurshipelorantafellowshipforindependentresearchschoolofengineeringglobalvillagefellowshipforsustainablesolutiondesignrelevantcourseworkincludes mathematicalmodeling modelingenvironmentalcomplexity grad nonlineardynamicsii continuumsystems nonlineardynamicsi chaos statisticalphysicsi softwareconstruction thenatureofmathematicalmodeling gradmas internationaldevelopment development lab lab development developmentven tures mas jgrad solvingcomplexproblems introductiontosystemdynamics grad introductiontourbandesignanddevelopment managerialpsychologylab operationsconsulting rickshawbank guwahati indiafebtodec experienceworkedwiththecenterforruraldevelopmenttodesignmoretrickshawsandimprovetheirbusinessmodel designedandbuiltalighter saferandstrongerrickshawprototype investigatedthemodelandlogisticsofrickshawbankthroughinterviewsanddatacollection helpedrickshawbankinitscurrenttransitiontoaorganizationforeasierscalability solarwaterdistillerdesign blueenergy nicaraguafebtojune designedanautonomoussolarwaterdistillerforhybridrenewableenergystoragesystems investigatedtheconstraintsandneedsofngoblueenergyandlocalsthroughinterviewsanddatacollection usedtechniquesofparticipatorydevelopmentfeedbackandco creationtoevolveseveraldesigniterations createdahigh yieldindustrial gradedistilledwaterproducerwellbelowmaterialandcostconstraints prey predatordynamicsresearch mauritiuswildlifefoundation mauritiusjunetoaugust builtmathematicalmodelsofprey predatordynamicsofendangeredspecieslivingwithinnaturereserves collectedspeciesdatainthewithlocalscientistsandfromarchives researchedtheoreticalmodelsdescribinginterspeciesdynamicsandusedcollecteddatatoverifymodels discoveredthatfeedingofbirdsdisruptsnaturallifecycleandbehaviorofspecies capillaryself assemblyoffloatingbodies mitdept ofmathematics cambridge majantojune researchedtheself assemblypatternofellipticalgbodiesonthesurfaceofarecordedexperimentaldataofthetime evolutionbehaviorofthebodies workedunderinstructorsunghwanjungtoapplyelectromagnetismmodelstosmall scalesystem workedunderstudentresearcherleericketsontoverifymodelsusingimageanalysisanddiscretemethods skillssystemsmodelinganddataanalysisusingmatlab java pythonandvensim systemsdynamics advancedsoftwaredesignwithtexperienceinjava investigationofsocial andtechnicalproblemswithinacommunityandenterprisewithinternationalexpe rienceinnicaragua tanzania mauritius icelandandindia photography portraitwithmajorgalleryexpositionandinternationalpublications languages fluent kreol french africancreole french english matlab java python competent hindi mathematica", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Dhaval", 
   "first_major": 46, 
   "subscriptions": [
    6
   ], 
   "gpa": "5.000", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 5, 
   "graduation_year": 2, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/adjodah_dhaval_dhaval@mit.edu_2011-09-05-01-51-09.pdf", 
   "user": 159, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-05 01:50:19"
  }
 }, 
 {
  "pk": 148, 
  "model": "student.student", 
  "fields": {
   "last_name": "Copeland", 
   "last_updated": "2011-09-06 06:58:20", 
   "sat_m": null, 
   "graduation_month": "1", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " christopher copeland memorial cambridge ccopelan mit edu education massachusetts institute technology mit cambridge pre candidate nuclear engineering expected candidate nuclear engineering expected candidate technology policy expected gpa coursework applied nuclear physics electromagnetic interactions nuclear dynamics neutron interactions applications radiation safety detector laboratory economic analysis business decisions technology public policy risk decision analysis central challenges american national security strategy technology public policy policy modeling coding fortran simulation tools mcnpx geant lean sigma methods certified lai lean academy yale university management haven certificate pre mba leadership program morehouse college atlanta physics minor mathematics gpa magna cum laude phi beta kappa relevant coursework quantum mechanics probability statistics lawrence livermore national laboratory livermore physics directorate intern collaborated advanced antineutrino detector analyzing technical political economic applications contemporary antineutrino detectors songs designs international domestic lwr safeguards alternate applications plutonium disposition relates russian plutonium management disposition agreement pmda potential future agreements capacities tokyo tokyo japan advanced nuclear systems canes research scholar collaborated members structural materials engineering novel evaluation techniques software using electron backscatter diffraction ebsd plastic strain along grain boundaries austenitic stainless structural materials used tepco nuclear thermal facilities results minimize internal costs increase productivity revenue brookhaven national laboratory upton dept homeland security research intern analyzed damage czt crystals receiving massive doses proton neutron radiation exceeding mev yielded discovery isotopes activated crystal previously observed research provides insight using czt detector technology homeland security preventing dissemination dangerous nuclear detector technology satellite technology universit louis pasteur strasbourg france nuclear physics research intern collaborated french scientists governmental officials optimal options nuclear waste disposal analyzed deposition properties colloid znse substrates simulate migration rates geological disposed radioactive imaging techniques xrd afm interference microscopy atr ftir sem used migration rates routes morehouse medicine atlanta researcher developed program analyze construct relationships specified gene groups attributed causing hypertension vessels program currently being used bioinformatics laboratory numerous applications gene characterization various hypertension cases lawrence livermore national laboratory livermore suli research intern engineered apparatus simulate tritium diffusity different metals fusion processes national ignitions facility developed decontamination methods yielded reusable parts resulted expected reduction costs per fusion analyzed calculated dose response relationship functions species dna content chromosome response ion chamber tritium betas gammas university michigan ann arbor nasa research apprentice fabricated artificial membrane vesicles using remodeled sonication observed applications electroporation electroperturbation technologies upon membranes research yielded opportunities liposomal therapy drug gene delivery systems leadership community service member mit sloan business club sbc consulting focus webpage development students interested curious consulting including profiles enabling interactions students firms focus planned events activities christopher copeland memorial cambridge ccopelan mit edu graduate resident tutor grt mit undergraduate dormitory residence hall peer leader fostering supportive positive living environment building community atmosphere residents implementing mechanisms personal growth stress management facilitating positive interpersonal relationships implementing community standards enhancing security college access coach breakthrough cambridge dynamic tuition academic preparation grade students various boston public schools college application critiques edited essays assisting searches research resume building scholarship searches applications business strategy member rateitgreen com building conjunction mit ventureships program development effective strategy marketing outreach programs affordable practical marketing planning building pricing research corresponding secretary morehouse government association administered individuals secretaries delegated duties capacities webmasters staff databases committee public relations department etc program omega psi phi fraternity inc senior research assistant physics research laboratory coordinated research students performing diffractive optics research primarily concentrating crossed phase elements micro optics intracavity laser systems polarization phenomena executive treasurer executive secretary applied engineering response organization allocated funding research projects programs participated throughout southeastern supervised physics oriented research individuals addition typical secretarial duties pltl tutor leader calculus encouraged peers achieve academic mathematics eliminating authoritative dynamic typically professor relationship mentor tutor aero rockbridge elementary honors awards acheivements golden international honour society sigma sigma national physics honor society epsilon national mathematics honor society outstanding engineering atlanta university engineering program national society collegiate scholars beta kappa chi national scientific honor society scholarships fellowships mit lemelson presidential fellowship department homeland security scholar mbrs scholar lsamp scholar publications effects proton fluences czt detectors dept tritium diffusivity metals response tritium monitor gammas dose response relationship function species dna content chromosomes analysis irradiation damage cdznte crystal detectors journal undergraduate research department", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Christopher", 
   "first_major": 29, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.200", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 5, 
   "graduation_year": 1, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/copeland_christopher_ccopelan@mit.edu_2011-09-05-02-18-16.pdf", 
   "user": 160, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-05 02:14:45"
  }
 }, 
 {
  "pk": 149, 
  "model": "student.student", 
  "fields": {
   "last_name": "Gupta", 
   "last_updated": "2011-09-06 06:58:20", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": 2340, 
   "sat_v": 740, 
   "sat_w": 800, 
   "keywords": " ghdi igh qjj qjj", 
   "looking_for": [
    2, 
    4
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Anika", 
   "first_major": 24, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.800", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 2, 
   "graduation_year": 3, 
   "previous_employers": [
    15
   ], 
   "website": "", 
   "second_major": 23, 
   "resume": "student/student/gupta_anika_anikag@mit.edu_2011-09-05-03-00-15.pdf", 
   "user": 161, 
   "industries_of_interest": [
    17, 
    30
   ], 
   "act": 34, 
   "date_created": "2011-09-05 02:56:12"
  }
 }, 
 {
  "pk": 150, 
  "model": "student.student", 
  "fields": {
   "last_name": "Gu", 
   "last_updated": "2011-09-06 06:59:58", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": 2330, 
   "sat_v": 730, 
   "sat_w": 800, 
   "keywords": " youyang yygu mit edu memorial cambridge education massachusetts institute technology cambridge sep jun expected electrical engineering computer management completed courses variable calculus multivariable calculus classical mechanics introduction solid chemistry probabilistic systems analysis principles biology american foreign policy nanomaker electricity magnetism ase linear algebra ase planned introduction electrical engineering computer mathematics computer principles microeconomics differential equations introduction linguistics stanford university palo alto sep jun gpa math linear algebra multivariable calculus henry gunn palo alto sep jun gpa newsweek wilky designs web marketing business apr founder designer launched creative marketing business based entirely taught web graphic expertise developed business helping businesses non profits universities schools achieve goals enhancing technical proficiency currently developing android application enriches ability notepad via java clark scholars program texas tech university jun aug research intern department chemical engineering developed tested methods optimize encapsulation biopharmaceuticals within exine sporopollenin twelve students selected applicants participate paid research internship author publication characterization drug encapsulation lycopodium clavatum university illinois aug sept intern production audio documentary hidden discrimination intercollegiate athletics university illinois leadership activities gunn future business leaders america sep jun president oversaw business projects recruitment directed weekly meetings invited former mayor guest speaker formed marketing partnership givology inc environmental league bay sep jun president liaison environmental clubs bay schools exchange ideas awareness respective communities effectively actions gunn math circles aug jun vice president expanding member students varying levels skills mathematics california mathematics jul awesomemath program aug faculty actions committee representative sep jun www youyanggu com skills awards honors programming java scheme html xhtml css php mysql languages mandarin native french years technical skills android app development video production editing graphic spreadsheets databases desktop publishing web national scholar eleven advanced placement tests intel talent semifinalist toshiba nsta exploravision awards regional winner lowe scholarship recipient silicon engineering council scholarship award fbla leadership conference banking financial systems business math coca cola scholars semifinalist gunn department mathematics award berkeley model united nations conference research award santa clara mathematics association contest calculus qualifier american invitational mathematics examination aime www youyanggu com", 
   "looking_for": [
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "CN"
   ], 
   "first_name": "Youyang", 
   "first_major": 15, 
   "subscriptions": [
    6
   ], 
   "gpa": "5.000", 
   "campus_involvement": [], 
   "languages": [
    3, 
    48, 
    70
   ], 
   "profile_created": true, 
   "school_year": 1, 
   "graduation_year": 4, 
   "previous_employers": [], 
   "website": "http://youyanggu.com/", 
   "second_major": 23, 
   "resume": "student/student/gu_youyang_yygu@mit.edu_2011-09-05-14-56-28.pdf", 
   "user": 162, 
   "industries_of_interest": [
    7, 
    13, 
    15, 
    19, 
    20, 
    27, 
    28, 
    43, 
    41, 
    34, 
    36, 
    42
   ], 
   "act": 35, 
   "date_created": "2011-09-05 03:20:47"
  }
 }, 
 {
  "pk": 151, 
  "model": "student.student", 
  "fields": {
   "last_name": "Bender", 
   "last_updated": "2011-09-06 06:58:20", 
   "sat_m": 760, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": 2160, 
   "sat_v": 690, 
   "sat_w": 710, 
   "keywords": " address permanent address bay doe boston woodlands william bender bbender mit edu education massachusetts institute technology cambridge massachusetts dual chemical biological engineering economics gpa minor studies member tau beta national engineering honor society london economics political london united kingdom intermediate macroeconomics intermediate microeconomics courses academy technology woodlands texas graduated gpa honors houston basketball scholar athlete clark scholar bausch lomb scholar distinction national merit scholarship program national honor society activities varsity basketball starting guard robotics alpha theta math reading writing appalachia pittsburgh pennsylvania completions engineering intern cycle optimization completions efficiency analysis transitions pad preparation fracking mit undergraduate research program cambridge massachusetts cleaning recycling drilling fluids research increase efficiency pressure designed remove drilling fines findings technologies etszone woodlands texas internship computer network consulting managed information teams dallas houston uploaded multimedia data corporate network huntsman advanced research woodlands texas chemical engineer internships foam designed operated reactor establish vapor phase nitrile mixing upgraded memory foam properties bedding performed flammability tests assess safety published article huntsman newsletter describing results clark scholars texas tech university lubbock texas research internship diagnosed presented effects production propagation velocity nano sized thermite national aeronautics administration houston texas nasa internship ray diffraction cyanobacteria research application potential settlement activities leadership athletics varsity mit basketball guard ncaa tournament appearances improved player award academic conference leadership lambda chi alpha fraternity coached local grade boys basketball sacristan edwards church volunteer landscaped boston public schools assisted mit tech catholic community church skills fluent english french dual citizenship belgium java matlab computer activities tennis waterskiing traveling tubing coin collection watching houston sports teams", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [
    "BE", 
    "US"
   ], 
   "first_name": "William", 
   "first_major": 7, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.600", 
   "campus_involvement": [], 
   "languages": [
    3, 
    71
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [
    68
   ], 
   "website": "", 
   "second_major": 14, 
   "resume": "student/student/bender_william_bbender@mit.edu_2011-09-05-04-10-23.pdf", 
   "user": 163, 
   "industries_of_interest": [
    4, 
    6, 
    37, 
    38, 
    12, 
    13, 
    29, 
    31
   ], 
   "act": 33, 
   "date_created": "2011-09-05 04:00:25"
  }
 }, 
 {
  "pk": 152, 
  "model": "student.student", 
  "fields": {
   "last_name": "Comis", 
   "last_updated": "2011-09-06 06:59:45", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " sara comis memorial education massachusetts institute technology cambridge candidate bachelor engineering mechanical engineering concentration sustainablity minor applied international studies burchard scholar june gpa relevant courses ecology civil environmental engineering globalization ecology engineering sustainability thermal fluids engineering manufacturing engineering systems analysis environmental impact research undergraduate research opportunities mit cambridge intelligence laboratory mechanical engineering february june collected analyzed accelerometer data vehicle fuel efficiency susan murcott research assistant january reviewed edited complied sourcebook arsenic contamination worldwide publication sadoway materials engineering january mastered dsc tga various electrolytes battery ilan institute nanotechnology advanced materials bina ramat ilan israel lab assistant june august prepared slurries carbon nanotubes activated carbon dye sensitized solar cells starters funding provided mit international technology initiative karen foundation tamaula mexico project coordinator january built cisterns conducted surveys sanitation mexico without running taught community sanitize using solar radiation instead chlorine reduce chemical burns increased community storage capacity funding provided public service grant university florida training program gainsville lab assistant mastered tencor profilometer evaporator capacitance meter assembled used spin coater manufacture capacitors completed research project presented received awards presentation leadership leadership society engineers swe conference logistics coordinator hired contractors career printed programs bottles representatives planning volunteers volunteer placement mccormick dorm dining worked dorm chef demand residents increased dining consumers worked dining advisory committee dining implemented roles swe executive secretary years mit varsity athlete mentee ussf referee mccormick dish closet skills hebrew intermediate fluent spanish excel java vensim proficiency cad proficiency keycreator solidworks", 
   "looking_for": [
    4
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Sara", 
   "first_major": 26, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.900", 
   "campus_involvement": [
    343, 
    371, 
    279
   ], 
   "languages": [
    3, 
    79, 
    129
   ], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [
    13
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/comis_sara_sracomis@mit.edu_2011-09-05-07-02-35.pdf", 
   "user": 164, 
   "industries_of_interest": [
    12, 
    13, 
    29, 
    30, 
    31
   ], 
   "act": 32, 
   "date_created": "2011-09-05 06:57:15"
  }
 }, 
 {
  "pk": 153, 
  "model": "student.student", 
  "fields": {
   "last_name": "Lu", 
   "last_updated": "2011-09-06 06:59:45", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " jingxiao ames cambridge jxlu mit edu education massachusetts institute technology cambridge sep june candidate bachelor mathematics economics gpa coursework includes economics finance theory probabilities statistics analysis research hakuhodo inc tokyo japan june aug research assistant brainstorm advertising ideas japanese government promote japan earthquake image around conduct surveys data various places analyze results surveys scanning materials innovative innovation workshop economics research prof heidi williams cambridge sep dec research assistant analyzed around data cancer pharmacy using excel coding python utilized data gain insights influence introduction drug cancer pharmacy chengdu juxin ltd chengdu china june july manager assistant helped yin manager trading department review international contracts net composed contract microscopic imported japan contacted local banks issue credit ensure payment estate sales prediction research project lynn feb aug research assistant utilized google insight raw data estate related words coded python stata analyze raw data google insight hpi data fhfa housing sales data census bureau prediction future housing sales estate insight activities chinese undergraduate association cusa mar founder president created cusa organized phone conference beijing university alpha kappa psi professional business fraternity sep june alumni relations created akpsi mit chapter friends mit established chapter persons established connections akpsi alumni boston contacted around alumni regular basis idc microfinance china oct sep senior member developed business curriculum migrant workers farmers business china conducted yunnan province china curriculum target honors awards mathematics contest modeling meritorious winner usa mathematics olympiad participant american mathematics competition arkansas tae kwon conference medalist skills interests languages mandarin fluent japanese intermediate programming python stata mathematica excel interests weiqi tae kwon poker games games soccer badminton", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Jingxiao", 
   "first_major": 25, 
   "subscriptions": [
    10, 
    7, 
    5, 
    6, 
    9
   ], 
   "gpa": "4.800", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/lu_jingxiao_jxlu@mit.edu_2011-09-05-09-05-37.pdf", 
   "user": 165, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-05 08:43:26"
  }
 }, 
 {
  "pk": 154, 
  "model": "student.student", 
  "fields": {
   "last_name": "Cao", 
   "last_updated": "2011-09-06 15:57:07", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": 2360, 
   "sat_v": 760, 
   "sat_w": 800, 
   "keywords": " yifan cao manchester brookline mail ycao mit edu phone education relevant coursework senior mit mathematics economics gpa relevant linear algebra statistical learning data mining taught principles applied mathematics statistics applications probability random variables undergraduate seminar discrete mathematics econometrics microeconomic theory public policy intermediate microeconomics intermediate macroeconomics economics international labor economics introduction algorithms computer taught python introduction matlab graduated choate rosemary hall math writing zeta beta tau fraternity mit chapter brotherhood development director brookline acted chapter beta eta meaning getting acquainted mit fraternity organized retreats incoming entire brotherhood hampshire cape cod conducted events brothers competition nsf reu paradigms information retrieval funded researcher san marcos participated national foundation funded program research data mining worked entire research formulating topic conducting background reading analysis working research titled assessing quantitative significance sequential patterns nominated conference reu scholarships nsf reu program accomplishments sinopec trading shipping intern hong kong regulated schedules pickups shipments sinopec hong kong neighboring ports established template used keeping inventory stock asia plants responsible inspection maintenance hong kong storage mit media lab ecology undergraduate researcher cambridge worked giving characters project involved giving fonts handwriting included writing testing sample code processing analyzing fonts font recognition software font recognition kanji based languages worked coding mide multi perspective interface software development environments programming interface combines coding visual perspectives technology languages years java python extensive matlab stata objective processing eager languages fluent english chinese mandarin years spanish worked extensively latex microsoft excel powerpoint honors awards usa math olympiad qualifier amc winner aig foundation scholarship recipient member mit trinity college firefighting robot contest activities zeta beta tau fraternity chapter brotherhood development director writer sports mit newspaper tech regional moderator solving online math forum www artofproblemsolving com", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Yifan", 
   "first_major": 25, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.300", 
   "campus_involvement": [
    70, 
    167, 
    175, 
    386, 
    455
   ], 
   "languages": [
    3, 
    48, 
    128
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [
    15
   ], 
   "website": "", 
   "second_major": 14, 
   "resume": "student/student/cao_yifan_ycao90@mit.edu_2011-09-06-15-57-06.pdf", 
   "user": 166, 
   "industries_of_interest": [
    7, 
    37, 
    38, 
    11, 
    19, 
    24, 
    25, 
    27, 
    28, 
    34, 
    40, 
    42
   ], 
   "act": null, 
   "date_created": "2011-09-05 09:17:28"
  }
 }, 
 {
  "pk": 155, 
  "model": "student.student", 
  "fields": {
   "last_name": "Lynch", 
   "last_updated": "2011-09-06 06:59:45", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " naomi lynch vassar cambridge phone email lynch mit edu education massachusetts institute technology mit cambridge june candidate aeronautical astronautical engineering gpa professional accenture technology analyst intern boston jun aug developed sap graphical user interfaces manufacturing processes authored testing documentation used developers constructing sap functionality developed detailed timeline deliverables testing delivery teams authored tracking spreadsheets presented client weekly basis daily status meeting onshore offshore testing progress deliverables pratt whitney structural engineering intern middletown jun aug performed structures intern within pressure compressor hpc department developing testing hardware generation jet engines developed hpc hardware testing roadmap overlooked testing analyzed resulting data presented results peers georgia institute technology flight dynamics intern atlanta jun aug designed prototype rig launch adhere micro aircraft vehicle mav upright structure eventually used military surveillance missions learned basics concepts flight systems flight jacobs technology aerodynamics engineering intern eglin jun aug tested improved graphical user interface inconsistencies software ultimately grid coordinates aircraft cfd grids instruction manual defining uses input fields within user interface professional development mba jumpstart ugrad diversity forum participant philadelphia aug selected participant rigorous seminar focused exposing students financial consulting industries interactive sessions business specific simulations networking sessions interacted ugrad peers perform starbucks profit margins represented presenting recommendation consultants management leadership tomorrow mlt career preparation fellow york jul selected intense career development program designed improve professional skills monthly assignments assessments quarterly seminars hosted mlt corporate partners collaborated mlt peers marketing strategies target representatives conducted benefit analysis mills cereal products mit laureates leaders fellow cambridge selected program designed motivate underrepresented minorities pursue advanced degrees faculty interaction academic development workshops graduate information sessions leadership mit latino cultural lcc director finance jun manage budget closely affiliated lcc organizations maintain accuracy financial records compile letters intent used references meetings mit activities representatives lobby additional funding cultural events mit minority business association mmba founder vice president treasurer sept jun attended meetings national mba association representatives intentions organization ensure intentions national association desires along confirming steps completed become official chapter organized career focused events mmba career implemented ideas further organization expose mmba greater opportunities attract members developed mmba mentorship program recruiting mentors mentees organizing professional development events networking sessions mentees skills activities technical skills java matlab microsoft suite activities american institute aeronautics astronautics aiaa", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Naomi", 
   "first_major": 1, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.200", 
   "campus_involvement": [
    248
   ], 
   "languages": [
    3
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [
    19, 
    70
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/lynch_naomi_n_lynch@mit.edu_2011-09-05-10-42-09.pdf", 
   "user": 167, 
   "industries_of_interest": [
    37, 
    38
   ], 
   "act": null, 
   "date_created": "2011-09-05 09:20:14"
  }
 }, 
 {
  "pk": 156, 
  "model": "student.student", 
  "fields": {
   "last_name": "Macdonald", 
   "last_updated": "2011-09-06 06:59:45", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": "", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Ruaridh", 
   "first_major": 29, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.300", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/macdonald_ruaridh_rmacd@mit.edu_2011-09-05-09-35-59_2.pdf", 
   "user": 168, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-05 09:30:25"
  }
 }, 
 {
  "pk": 157, 
  "model": "student.student", 
  "fields": {
   "last_name": "Sternberg", 
   "last_updated": "2011-09-06 06:59:45", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " address david sternberg address vassar davister mit edu springbank lane cambridge wayne citizen objective obtain challenging internship aerospace further knowledge preparation graduate education massachusetts institute technology cambridge candidate bachelor aerospace engineering minor technology society june gpa merit scholarship relevant courses newtonian physics multivariable calculus solid chemistry probabilistic systems analysis java programming thermodynamics aerodynamics materials structures signals systems dynamics principles automatic fluid dynamics structural dynamics propulsion haverford haverford cum laude society gpa june loras college dubuque credit college engineering robotics franklin olin college nasa jet propulsion laboratory pasadena comet sample return prototyper tester analyst developed tested analyzed comet sample return tools jpl mission created comet simulant comparatively tested performance prototyped existing technologies machined tools creating solidworks models data collection analysis proposal writing spheres mit cambridge engineering machining urop intern zero robotics researcher january provided mechanical cad modeling machining improved battery holders expansion covers docking mechanisms satellites further mission capabilities lab international models prototypes conducted experiments effectiveness teams designs zero robotics stem competitions lego mindstorms designing programming testing piasecki aircraft corporation essington uav flight research intern fcs iii uavs restore flight readiness hands remove slop improve performance lighten components designed manufactured tested components washington naval washington navsea intern interim secret clearance january calculated analyzed loads applied helicopter tiedowns reduce radar signature ddg destroyers assisted testing lidar anemometer meteorology incorporation into systems supported systems engineering handling piasecki aircraft corporation essington research intern video recorded flights assisted resource procurement enhanced documentation cataloguing project plans components speedhawk ahead schedule completion leadership activities mit unified grader lab grade students assignments weekly lab teaching assistant associate advisor closely prof miller advise incoming freshmen mit uav mit rocket payload challenge intern unified flying competition volunteer american helicopter museum chester running flight simulator visitors taught basics helicopter flight per olds memberships mit uav mit rocket mit satellite aircraft owners pilot association aero club experimental aircraft association boston chapter mit aero club american institute aeronautics astronautics skills awards microsoft java programming matlab solidworks dwg trueview manufacturing launch model rockets aircraft engineering release defective report mylar drawing creation filing naui certified scuba diver private pilot july drexel university award william wallace prize rensselaer polytechnic institute medal prize latin honor society john lober prize mathematics barton sensenig prize federal reserve philadelphia prize economics", 
   "looking_for": [
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "David", 
   "first_major": 1, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.800", 
   "campus_involvement": [
    149, 
    308, 
    320
   ], 
   "languages": [
    3
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [
    15, 
    38
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/sternberg_david_davister@mit.edu_2011-09-05-09-36-42.pdf", 
   "user": 169, 
   "industries_of_interest": [
    3, 
    13, 
    17
   ], 
   "act": null, 
   "date_created": "2011-09-05 09:34:12"
  }
 }, 
 {
  "pk": 158, 
  "model": "student.student", 
  "fields": {
   "last_name": "Chen", 
   "last_updated": "2011-09-06 06:59:45", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": 2350, 
   "sat_v": 750, 
   "sat_w": 800, 
   "keywords": " linda xinlin chen chenl mit edu education massachusetts institute technology cambridge candidate physics philosophy jun expected gpa relevant coursework intro gender studies intro psychology psychology gender volunteer mit leadership training institute cambridge community service project mentor sep weekly activities workshops local students promote leadership skills teamwork community awareness mentees development service project implement community mit experimental cambridge associate advisor feb associate advisor mit freshmen mentor mit freshmen regarding college government institute blind chandigarh india volunteer jul visually impaired students english internship chitkara university rajpura india physics teacher jun taught algebra based mechanics eleventh students chitkara university campus rajpura india responsible aspects classroom including lectures labs testing grading prepared document lab activity suggestions tailored structure resources university collaborated teachers incorporate applications into physics curriculum mit cambridge interviewer feb interview female mit alumnae stories used education social sciences research mit cremona italy physics teaching assistant jan taught physics schools cremona italy january conducted lectures labs designed activities emphasize innovation hands learning mit materials engineering cambridge research assistant jarillo herrero jan sep designed performed experiments quantum information applications involved levels experimental procedure including cleanroom fabrication electronic devices operation fridge atomic microscopy matlab analysis presented results meeting trained incoming graduate lab equipment software mit laboratory nuclear cambridge research assistant neutrino jan aug software organize data apparatus designed directly mit experimental cambridge teaching assistant feb sept dec tutored college freshmen advanced electricity magnetism discussion groups greek philosophy math skills completed hrs domestic violence training conducted asian task domestic violence matlab python authorized harvard nanoscale systems cleanroom user trained afm sem electron beam lithography thermal evaporator fluent mandarin chinese address amherst cambridge address san jose", 
   "looking_for": [
    1, 
    3, 
    2, 
    4
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Linda", 
   "first_major": 31, 
   "subscriptions": [
    6
   ], 
   "gpa": "5.000", 
   "campus_involvement": [
    126
   ], 
   "languages": [
    48
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [
    15
   ], 
   "website": "", 
   "second_major": 21, 
   "resume": "student/student/chen_linda_chenl@mit.edu_2011-09-05-10-13-37.pdf", 
   "user": 170, 
   "industries_of_interest": [
    38, 
    11, 
    18
   ], 
   "act": null, 
   "date_created": "2011-09-05 09:55:21"
  }
 }, 
 {
  "pk": 159, 
  "model": "student.student", 
  "fields": {
   "last_name": "Zhang", 
   "last_updated": "2011-09-05 10:08:12", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": null, 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": null, 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Yi", 
   "first_major": 7, 
   "subscriptions": [
    6
   ], 
   "gpa": null, 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": false, 
   "school_year": null, 
   "graduation_year": null, 
   "previous_employers": [], 
   "website": null, 
   "second_major": null, 
   "resume": "", 
   "user": 171, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-05 10:08:11"
  }
 }, 
 {
  "pk": 160, 
  "model": "student.student", 
  "fields": {
   "last_name": "Railey", 
   "last_updated": "2011-09-06 06:59:45", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " kristen railey krailey mit edu commonwealth ave boston portfolio located www kristenrailey com kristen railey rights reserved education massachusetts institute technology cambridge candidate mechanical engineering concentration visual arts gpa johnson johnson raritan intern information technology digital marketing designed implemented streamline simplify requirements capture digital marketing services collected feedback players evaluated existing documents relevancy deployed delivery managers around produced business tiered campaign management service businesses johnson johnson interviewed assess solutions demand created tiered initialized contract negotiations transitioned project rollout collaborated projects including website training materials web developers presented audiences vps directors managers internship sports tech institute lufbra university loughborough research intern sports technology institute analyzed breast movement sports bras codamotion capture leading sports bra manufacturer moving comfort collaborated aid speedo conducted strength tests fabric nike presented executives reebok cantebury wheelchair developing countries cambridge prototyped wheelchair lightweight frame detachable backrest active wheelchair users developing countries worked community partner guatemala transitions perfect wheelchair presented fully integrated wheelchair semester lab showcase robotics cambridge engineered electro mechanical robot blows balloon remote acquired knowledge learned management decision making toy cambridge ideated prototyped outdoor toys finalized speeder february presented prototype audience included representatives hasbro mit faculty students alumni filed provisional patent pitched toy leaders toy photographed featured september issue popular magazine article awesome college labs leadership gordon engineering leadership program cambridge weekly engineering labs intensive workshops project based learning feedback january sigma kappa logistics cambridge organizing talent competition participants largest philanthropy sorority january sigma kappa sisterhood cambridge planning organizing sisterhood retreats events budget january scount award summit launched series youth triathlon clinics local ymca january june received ymca youth service award featured ledger independent drum summit member summit august june extracurricular activities varsity lightweight crew mit cycling club scholars chamber society swe sigma kappa sorority", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Kristen", 
   "first_major": 26, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.100", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/railey_kristen_krailey@mit.edu_2011-09-05-10-45-11.pdf", 
   "user": 172, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-05 10:33:38"
  }
 }, 
 {
  "pk": 161, 
  "model": "student.student", 
  "fields": {
   "last_name": "McAlpine", 
   "last_updated": "2011-09-06 06:59:45", 
   "sat_m": null, 
   "graduation_month": "4", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " eggh iej rxb srf lbm pcc qoapar lbm lbm lbm qsg wea", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Cameron", 
   "first_major": 7, 
   "subscriptions": [
    6
   ], 
   "gpa": "3.000", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/mcalpine_cameron_mcalpine@mit.edu_2011-09-05-11-53-55.pdf", 
   "user": 173, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-05 11:51:57"
  }
 }, 
 {
  "pk": 162, 
  "model": "student.student", 
  "fields": {
   "last_name": "Hilk", 
   "last_updated": "2011-09-06 16:15:17", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": 2400, 
   "sat_v": 800, 
   "sat_w": 800, 
   "keywords": " ggd iggb", 
   "looking_for": [
    2
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Theodore", 
   "first_major": 12, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.900", 
   "campus_involvement": [
    463, 
    472, 
    449, 
    335, 
    466, 
    403
   ], 
   "languages": [
    3, 
    127
   ], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [
    15, 
    4, 
    9
   ], 
   "website": "", 
   "second_major": 25, 
   "resume": "student/student/hilk_theodore_thilk@mit.edu_2011-09-06-16-15-17.pdf", 
   "user": 174, 
   "industries_of_interest": [
    19, 
    28, 
    43, 
    34, 
    40
   ], 
   "act": 36, 
   "date_created": "2011-09-05 12:16:55"
  }
 }, 
 {
  "pk": 163, 
  "model": "student.student", 
  "fields": {
   "last_name": "Diaz", 
   "last_updated": "2011-09-06 06:34:28", 
   "sat_m": 750, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": 730, 
   "sat_w": null, 
   "keywords": " qmcq wxl enc ocg cem mqmc menn qpq enc mep mep ccm enc", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Abismael", 
   "first_major": 7, 
   "subscriptions": [
    13, 
    7, 
    8, 
    6
   ], 
   "gpa": "4.600", 
   "campus_involvement": [
    24
   ], 
   "languages": [
    3, 
    129
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/diaz_abismael_abidiaz@mit.edu_2011-09-05-14-12-00.pdf", 
   "user": 175, 
   "industries_of_interest": [
    4, 
    6, 
    38, 
    11, 
    13
   ], 
   "act": null, 
   "date_created": "2011-09-05 13:09:12"
  }
 }, 
 {
  "pk": 164, 
  "model": "student.student", 
  "fields": {
   "last_name": "Wang", 
   "last_updated": "2011-09-06 06:59:45", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " ccd msa gpb gdg ddo gdd gqd cbw gcd egp ccd aaj cbw cbg cbw bgc idd xqq brn pbgd lqd", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Yingxia", 
   "first_major": 7, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.400", 
   "campus_involvement": [
    471, 
    173, 
    343, 
    385
   ], 
   "languages": [
    3, 
    47
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/wang_yingxia_insia@mit.edu_2011-09-05-13-27-10.pdf", 
   "user": 176, 
   "industries_of_interest": [
    4, 
    6, 
    38, 
    13, 
    18, 
    30
   ], 
   "act": null, 
   "date_created": "2011-09-05 13:20:34"
  }
 }, 
 {
  "pk": 166, 
  "model": "student.student", 
  "fields": {
   "last_name": "Liu", 
   "last_updated": "2011-09-06 06:34:28", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": 2300, 
   "sat_v": 760, 
   "sat_w": 740, 
   "keywords": " bohan liu bjliu mit edu maseeh hall memorial cambridge education massachusetts institute technology cambridge candidate biology minor management september june honors mit haskell ina gordon scholar henry scholar gpa relevant coursework projected micro economics global health delivery management negotiation marketing management nuts bolts business plans globalization university cambridge emmanuel college cambridge cambridge mit exchange program sciences tripos october june relevant coursework pathology philosophy medicine biochemistry iberian international nano technology laboratory braga portugal intern researcher june august optimized production magnetic sensors novel spintronics nano magnetic biosensor improved sensor sensitivity levels pathogens salmonella boston college agent boston agent fundraising representative february contributed successful fundraising campaign fiscal contacted alumni fundraising efforts organized reunions department chemical engineering mit cambridge researcher lab assistant june september collaborated pasteur institute biopod prototype optimize protein production coli served teaching assistant bioprocessing mit extra curriculars intercollegiate taiwanese american students association itasa cambridge public relations november april prepared bid packet helped secure mit itasa conference bid contacted colleges served conference liaison attendees total global initiatives symposium national taiwan university taipei taiwan delegate presenter june represented northeastern participated conference president taiwan presented benefits technologies methods implementation mit competition cambridge participant january developed presented business model novel bicycle turning volunteer massachusetts hospital boston patient escort distinguished volunteer service pin october transported patients throughout hospital answered inquiries visitors educational studies program mit cambridge teacher january june july taught micro economics neuroscience weeks students skills languages english native speaker mandarin chinese native speaker spanish fluency skills microsoft excel powerpoint adobe indesign autocad", 
   "looking_for": [
    1, 
    3, 
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Bohan", 
   "first_major": 5, 
   "subscriptions": [
    10, 
    7, 
    8, 
    6
   ], 
   "gpa": "4.300", 
   "campus_involvement": [
    1, 
    41, 
    58, 
    474, 
    334
   ], 
   "languages": [
    3, 
    48, 
    128
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [
    15
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/liu_bohan_bjliu@mit.edu_2011-09-05-14-46-34.pdf", 
   "user": 178, 
   "industries_of_interest": [
    4, 
    37, 
    38, 
    15, 
    18, 
    27, 
    28, 
    34
   ], 
   "act": null, 
   "date_created": "2011-09-05 14:36:22"
  }
 }, 
 {
  "pk": 167, 
  "model": "student.student", 
  "fields": {
   "last_name": "Turner", 
   "last_updated": "2011-09-06 06:34:28", 
   "sat_m": 710, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": 1920, 
   "sat_v": 670, 
   "sat_w": 540, 
   "keywords": "", 
   "looking_for": [
    3, 
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Taneah", 
   "first_major": 6, 
   "subscriptions": [
    6
   ], 
   "gpa": "3.500", 
   "campus_involvement": [
    359
   ], 
   "languages": [
    1
   ], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [
    15
   ], 
   "website": "", 
   "second_major": 2, 
   "resume": "student/student/turner_taneah_tj7891@mit.edu_2011-09-05-14-54-03.pdf", 
   "user": 179, 
   "industries_of_interest": [
    1, 
    37, 
    38, 
    11, 
    14, 
    15, 
    17, 
    25, 
    30
   ], 
   "act": null, 
   "date_created": "2011-09-05 14:46:37"
  }
 }, 
 {
  "pk": 168, 
  "model": "student.student", 
  "fields": {
   "last_name": "Lai", 
   "last_updated": "2011-09-06 07:00:12", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " erica lai memorial cambridge ridge holmdel elai mit edu education research honors awards activities skillsmassachusetts institute technology cambridge candidate materials engineering june gpa relevant courses fundamentals materials engineering materials laboratory mathematical methods materials scientists engineers introduction solid chemistry others microeconomic theory public policy microeconomics differential equations holmdel holmdel june gpa salutatorian undergraduate research opportunities program sadoway cambridge mit department materials engineering implementing signal processing analysis tools development unique electrochemical measurement methods developing experimental electrolysis experiments applying projects synthesizing without carbon environmentally friendly production undergraduate research opportunities program hamad schifferli cambridge january mit department mechanical engineering analyzed structure bimetallic nanoparticles increase kinetics fuel battery reactions simons research program stony brook june august stony brook university department physics astronomy simulated using molecular dynamics analyzed systems via novel nanobubbles approach further understand anomalous properties awarded siemens competition semifinalist intel talent semifinalist research density effects formation nanobubbles source anomalies mit educational council cambridge september december intern emails phone calls regarding interviews mit application york telecom corporation eatontown information management intern created informative dashboards within corporation independently implemented capability host charts legends diagonal labels used java google web toolkit icampus technology innovation prize winner teams april intel talent semifinalist january siemens competition semifinalist october national merit scholarship winner presidential scholars program semifinalist april national youth jersey delegate perfect april national scholar congressional award medal october mit housing mit pit orchestra musical director flutist january april mit educational studies program esp teacher playing polymers putty society engineers swe keys empowering youth keys mentor february mit representative september computer java fortran labview linux unix excel powerpoint machining", 
   "looking_for": [
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Erica", 
   "first_major": 24, 
   "subscriptions": [
    6
   ], 
   "gpa": "5.000", 
   "campus_involvement": [
    24, 
    41, 
    126, 
    135, 
    475, 
    343, 
    476
   ], 
   "languages": [
    3, 
    47, 
    107, 
    128, 
    133
   ], 
   "profile_created": true, 
   "school_year": 2, 
   "graduation_year": 3, 
   "previous_employers": [
    15
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/lai_erica_elai@mit.edu_2011-09-05-15-53-13.pdf", 
   "user": 180, 
   "industries_of_interest": [
    6, 
    12, 
    13, 
    29
   ], 
   "act": 36, 
   "date_created": "2011-09-05 15:46:03"
  }
 }, 
 {
  "pk": 169, 
  "model": "student.student", 
  "fields": {
   "last_name": "Wakim", 
   "last_updated": "2011-09-06 06:34:28", 
   "sat_m": null, 
   "graduation_month": "0", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " ghassan wakim maverick phone boston email gwakim alum mit edu education massachusetts institute technology mit cambridge usa masters chemical engineering university ottawa ottawa canada bachelor applied chemical engineering bachelor biochemistry cabotresearch engineer billerica usa aug recommended modifications existing production units accommodate newly developed determined implemented suite analytical methods assess performance newly developed novartis agresearch engineer san carlos usa jun jul investigated ability spray drying technology manufacture uniform inhalation powders introduced non invasive inspection techniques ensure inhalation powder integrity established optimal operation sealing conditioning inhalation powders massachusetts institute technologyteacher assistant cambridge usa jan assisted instructors preparing developed solutions assignments exams thermodynamics undergraduate chemical engineering students imperial limited exxon mobil operations junior engineer sarnia canada aug designed emergency shutdown systems minimize impact recovery continuity troubleshooted operation quench circuit enhance separation developed implemented procedure detect quantify reduce valve leakage flare developed online tools assigned targets variables quantify minimize opportunities university ottawaresearch assistant ottawa canada sep thesis project cod alkalinity ammonia concentration particle distribution summary skills arabic solid background honeywell unisim chemical simulator matlab java awards achievements ottawa merit scholarship academic excellence training services amideast scholarship awarded students lebanon", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [
    "CA", 
    "LB"
   ], 
   "first_name": "Ghassan", 
   "first_major": 7, 
   "subscriptions": [
    13, 
    12, 
    6
   ], 
   "gpa": "4.500", 
   "campus_involvement": [], 
   "languages": [
    3, 
    36, 
    71
   ], 
   "profile_created": true, 
   "school_year": 5, 
   "graduation_year": 1, 
   "previous_employers": [
    13, 
    45
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/wakim_ghassan_gwakim@alum.mit.edu_2011-09-05-20-01-11.pdf", 
   "user": 182, 
   "industries_of_interest": [
    12, 
    13, 
    31
   ], 
   "act": null, 
   "date_created": "2011-09-05 19:52:05"
  }
 }, 
 {
  "pk": 170, 
  "model": "student.student", 
  "fields": {
   "last_name": "Darby", 
   "last_updated": "2011-09-06 06:34:28", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": 1900, 
   "sat_v": 510, 
   "sat_w": 590, 
   "keywords": " campus address memorial cambridge jared darby jdarby mit edu permanent address paddock court asbury objective fully workplace receiving balanced education college career gaining education massachusetts institute technology department mechanical engineering gpa minor theater arts hunterdon regional gpa achievements national honors society parliamentarian future business leaders america peer leadership member paul robeson youth achievement award athletics express times academic lineman football county conference lineman football football hunterdon warren county shotput champion participated varsity basketball years juanes research mit june helped ongoing theoretical experimental research related geological carbon dioxide sequestration assisting execution fluid mechanics experiments physics subsurface injection migration trapping york mellon june august interned domestic government securities dept broker dealer services designed helped program online database audit confirmations monitored monetary transactions banks community services habitat humanity bethlehem presbyterian church mission members bethlehem presbyterian church pittstown watertown roofs disadvantaged couldn afford renovate homes hunterdon football volunteered counsel elementary junior football activities mit football mit alpha tau omega fraternity undergraduate alum", 
   "looking_for": [
    1, 
    2
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Jared", 
   "first_major": 26, 
   "subscriptions": [
    6
   ], 
   "gpa": "3.430", 
   "campus_involvement": [], 
   "languages": [
    3, 
    128
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [], 
   "website": "", 
   "second_major": 28, 
   "resume": "student/student/darby_jared_jdarby@mit.edu_2011-09-05-20-40-08.pdf", 
   "user": 183, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-05 20:37:15"
  }
 }, 
 {
  "pk": 171, 
  "model": "student.student", 
  "fields": {
   "last_name": "Hsu", 
   "last_updated": "2011-09-06 06:34:28", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " university address memorial cambridge terence hsu terenceh mit edu address lee brookline education massachusetts institute technology gpa cambridge candidate management mathematics minor economics expected graduation june relevant coursework micro macroeconomics combinatorial analysis differential equations probability random variables finance theory options futures markets corporate financial accounting optimization methods buckingham browne nichols cambridge cum laude society citation honor national scholar graduation june panagora asset management boston quantitative analyst equity stock selector june conducted projects management active international absolute return portfolios including building excel based proprietary database provided insight into fundamental basis active portfolio weights examined arbitrage spreads researched mispricing opportunities specialized deals attended observed presentations sector specific economics focused analysts understand apply fundamental knowledge factor determination stock selector strategy utilized bloomberg marketqa research fundamentals spacs equity etfs international spin offs researched historical performance equities involved changes within prominent benchmark indices russell mit sloan management cambridge undergraduate researcher information aggregation strategy december july compiled comprehensive reports online aggregator roles transforming electronic distribution focus global distribution systems airfare analysis software modified role traditional agencies used analogous research topics online stock brokerages identify winning aggregation strategies insurance project sponsor modeled questions efficiency mit developed dynamics defined methods leverage existing assets used simulation methods evaluate strategic management improvements aggregation marketing utilization sales networks natixis private equity asia beijing china analyst research researched chinese colorized fertilizer bag regarding prospective synthetic materials niche unique dynamics previously unexplored focus targeted export potential overseas regulations international competition strategy capabilities helped structure business primary oem manufacturer global supplier aiming brand independence outside domestic sphere mainland china rackemann sawyer brewster boston intern litigation estates department assisted estate cases litigation department created detailed accounts taxes deeds performed holdings valuations modeled operational cash flows requiring attention detail precision accuracy various pressures leadership activities sloan business club director operations sloan liaison organized geared towards students interested finance consulting managed organize banquet budget attending firms campus resume firm sponsorship invoicing internal external correspondence logistics attendees connected streamlined finance consulting events sloan liaison maintained spearheading grants donations firm sponsorships phi beta epsilon fraternity treasurer helped manage transactions per including payments vendors tax forms contract negotiations chef payment collection forty active members streamlined financial records document files archives designed macros efficiently maintain budget expenditures mit emerson scholarship award recipient piano performance actively participates private piano lessons accompaniment scholars ensembles theory classes scholarship panel recognized achievements included award england conservatory boston prize harvard musical association awards mit resonance cappella former assistant director directed fifteen member campus performances various volunteer paid events around boston skills interests programming bloomberg html java latex mathematica matlab python software excel microsoft adobe photoshop adobe dreamweaver idle eclipse quickbooks foreign languages english cantonese native mandarin conversational french advanced", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Terence", 
   "first_major": 25, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.600", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/hsu_terence_terenceh@mit.edu_2011-09-05-23-22-42.pdf", 
   "user": 184, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-05 21:17:36"
  }
 }, 
 {
  "pk": 172, 
  "model": "student.student", 
  "fields": {
   "last_name": "Chen", 
   "last_updated": "2011-09-06 07:00:13", 
   "sat_m": 750, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": 2320, 
   "sat_v": 800, 
   "sat_w": 770, 
   "keywords": "", 
   "looking_for": [
    3, 
    2
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Deborah", 
   "first_major": 12, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.250", 
   "campus_involvement": [
    159, 
    386, 
    476
   ], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 2, 
   "graduation_year": 3, 
   "previous_employers": [
    15
   ], 
   "website": "", 
   "second_major": 14, 
   "resume": "student/student/chen_deborah_deborahc@mit.edu_2011-09-06-02-17-31_2.pdf", 
   "user": 185, 
   "industries_of_interest": [
    37, 
    13, 
    15, 
    19, 
    20, 
    27, 
    28, 
    43, 
    41, 
    34, 
    36, 
    40
   ], 
   "act": null, 
   "date_created": "2011-09-05 22:32:27"
  }
 }, 
 {
  "pk": 173, 
  "model": "student.student", 
  "fields": {
   "last_name": "Zhao", 
   "last_updated": "2011-09-06 07:00:12", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": 2150, 
   "sat_v": 660, 
   "sat_w": 690, 
   "keywords": " nilu zhao woodside memorial cambridge nzhao mit edueducation massachusetts institute technology cambridge mechanical engineering economics expected date graduation stuyvesant york june projects seaglass carousel battery park york structural drawings thecarousel using autocad rhinoalice mural hosted arts designed public recreational mural chambers greenwich downtown manhattanmuseum york neighborhood explorers designed planned community upper manhattan builtwork intern engineering firm gilsanz murray stefick llp york guideline structural calculations participated firm projectsintern architecture firm david smotrich partners llp york nysummer worked drawings checked accuracy visited construction sitesteacher assistant asian american coalition education bayside assisted graders math satii math icompetitions schneider electrics semifinalistspring project regenerated consumptionskills computer languages scheme netlogocomputer words excel autocad google sketchup rhinolanguage chinesemandarin", 
   "looking_for": [
    2, 
    4
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Nilu", 
   "first_major": 26, 
   "subscriptions": [
    6
   ], 
   "gpa": "5.000", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 2, 
   "graduation_year": 3, 
   "previous_employers": [], 
   "website": "", 
   "second_major": 14, 
   "resume": "student/student/zhao_nilu_nzhao1@mit.edu_2011-09-05-23-03-18.pdf", 
   "user": 186, 
   "industries_of_interest": [
    38, 
    13, 
    15, 
    17, 
    42
   ], 
   "act": null, 
   "date_created": "2011-09-05 22:33:03"
  }
 }, 
 {
  "pk": 174, 
  "model": "student.student", 
  "fields": {
   "last_name": "Lv", 
   "last_updated": "2011-09-06 06:34:28", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " wener albany cambridge lvwener mit edu education massachusetts institute technology cambridge candidate mechanical engineering gpa june business coursework finance theory business analysis using financial statements advanced corporate finance evaluating biomedical business concept competitive decision making negotiation innovation teams strategic decision making sciences award prize mit harvard consulting competition outstanding youth tsinghua university beijing china technology january bachelor technology july award outstanding thesis award annual scholarships consultant excelingo cambridge provided recommendations client advertising revenue model social network oriented marketing strategies learning software developed app advertising strategy analyzing comparable products created innovative quantitative evaluation model facebook related marketing approaches presented recommendations client results used client raising consultant mit innovation teams cambridge january initiated commercialization analysis ophthalmology education software researched chain india china developed regional pricing schemes surveyed potential user hospitals physicians interviewed licensing experts stakeholder entities delivered presentation commercialization report client providing recommendations partnership licensing financing strategies implementation roadmap research assistant harvard mit health sciences technology cambridge optimized imaging cardiac arrhythmia surgeries accelerated imaging algorithm verify performing surgeries swine authored grant proposal received further financial nih project leader lizheng instruments corporation shenzhen china invented moisture sensor cosmetic commercialized leading negotiated suppliers purchase developed prototype products generated profit greater precision lower costs competitors reduced labor costs optimizing assembly quality procedures leadership president mit chinese students scholars association cssa cambridge managed members executive largest chinese massachusetts sponsorship contracts budgets recruiting sponsors funded organized events doubled annual revenue increased net asset delivered attendees boston hall representing chinese students massachusetts founder president zhongshan students association america founded managed member association raising sponsorships executive member mit consulting club cambridge organized weekly discussions graduate students economics topics consulting cases publications patents patents issued commercialized refereed journal proceeding papers additional information versed different chinese dialects including mandarin cantonese", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [
    "CN"
   ], 
   "first_name": "Wener", 
   "first_major": 26, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.900", 
   "campus_involvement": [], 
   "languages": [
    3, 
    45, 
    48
   ], 
   "profile_created": true, 
   "school_year": 6, 
   "graduation_year": 1, 
   "previous_employers": [
    15
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/lv_wener_lvwener@mit.edu_2011-09-05-22-52-24.pdf", 
   "user": 187, 
   "industries_of_interest": [
    37, 
    27, 
    28, 
    41, 
    42
   ], 
   "act": null, 
   "date_created": "2011-09-05 22:44:27"
  }
 }, 
 {
  "pk": 175, 
  "model": "student.student", 
  "fields": {
   "last_name": "Lloyd", 
   "last_updated": "2011-09-06 06:34:28", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " abd cfh abd abd axd abd gkv lloyd margaret mission offers unique challenges terrascope freshmen mit department undergradute education news january available http due mit edu news mission offers unique challenges terrascope freshmen bruijin hayse hens lloyd helping engineering students american society engineering education awards honors nominee columbia scholastic association award recognizes superior journalists american newspapers magazines nominated japan crisis mit reacts march article mit newspaper tech burchard scholar distinguishes mit undergraduates excellence humanities", 
   "looking_for": [
    1, 
    4
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Margaret", 
   "first_major": 7, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.800", 
   "campus_involvement": [
    471, 
    117, 
    284, 
    291, 
    386, 
    279, 
    476
   ], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [
    59, 
    15
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/lloyd_margaret_maglloyd@mit.edu_2011-09-05-23-03-39.pdf", 
   "user": 188, 
   "industries_of_interest": [
    4, 
    6, 
    37, 
    38, 
    13, 
    14, 
    17, 
    18, 
    32
   ], 
   "act": 35, 
   "date_created": "2011-09-05 22:51:15"
  }
 }, 
 {
  "pk": 176, 
  "model": "student.student", 
  "fields": {
   "last_name": "Mittal", 
   "last_updated": "2011-09-06 06:34:29", 
   "sat_m": 800, 
   "graduation_month": "1", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": 720, 
   "sat_w": null, 
   "keywords": " sukant mittal anderson apt boston sukant mit edu education harvard massachusetts institute technology mit candidate health sciences technology medical engineering medical physics management minor gpa relevant coursework marketing strategy finance theory nuts bolts business plans johnson johnson excellence scholar national foundation scholar harvard mit health sciences technology graduate fellowship funding stipend tuition clinical focus medical hospital rotations harvard medical massachusetts institute technology mit electrical engineering computer sciences gpa mit national institute health nih scholar students mit masters thesis micro patterned arrays detecting dna damage university california irvine biomedical engineering gpa summa cum laude dean merit chang pin chung award excellence research henry samueli foundation fellowship recipient students whitaker foundation fellowship recipient students university delhi india electronics engineering transferred irvine gpa summa cum laude recipient university delhi fellowship students massachusetts hospital research assistant leading member research across massachusetts hospital mit boston university easy based diagnostic device applications metastatic cancer hiv tuberculosis device holds advantage having sensitivity specificity ability patient samples times faster existing devices jan mar biosystems startup biomedical device boston marketing intern worked directly marketing business launching diagnostic products assessment prioritize countries launch based attractiveness markets findings presented marketing oct nov localytics inc startup mobile analytics cambridge analyst segmented analyzed competitive landscape startup mobile phone analytics results presented founders marketing massachusetts institute technology research assistant developed novel device inter relationship dna damaging effects ray radiation liver cells device clinical applications setting radiation thresholds treating tumors results published thesis mit university california irvine undergraduate research assistant designed miniaturized micro pumps micro valves automation execution complex algorithms dispensing reagents induce cancer movement sukant mittal anderson apt boston sukant mit edu edwards lifesciences valve irvine intern worked accelerated valve analyzer used testing fatigue durability prosthetic mechanical valves results published internal journal presented engineering leadership mit global startup workshop gsw iceland content organizer logistical oversight publicity member organizing mit conference iceland budget conference attendees responsible finalizing content conference responsible organizing logistics speakers attendees iceland responsible publicizing conference driving attendance conference consulting club mit founding member helped recruit executive committee consulting club mit engineers initiated moderated leap panel discussion phd candidates switch consulting organized session workshops indian students association mit public relations organized social events indian associations schools boston responsible fund raising mit graduate council alumni network united nations delhi india founder yamuna founded initiative yamuna goal stopping industrial pollution yamuna compiled report detailed analysis chemical composition adverse effects waste report used court rulings industries bid penalize relocate publications patents francis lin sukant mittal noo jeon generation dynamic temporal spatial concentration gradients using microfluidic device lab chip sukant mittal james mutamba sangeeta bhatia micropatterned arrays detecting dna damage mit thesis sukant mittal ian wong shannon stott mehmet toner rare throughput capture microfluidic device porous surfaces biophysical journal submitted march sukant mittal ali ahmet yanik hatice altug mehmet toner tunable silicon membranes capturing antigen specific cells applied physics letters submitted february provisional patent porous membranes disease specific capture activites interests ping pong champion delhi india tennis squash golf marathons organizing lab events boston", 
   "looking_for": [
    1, 
    3, 
    2, 
    4
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Sukant", 
   "first_major": 19, 
   "subscriptions": [
    10, 
    12, 
    7, 
    8, 
    6
   ], 
   "gpa": "5.000", 
   "campus_involvement": [
    54, 
    128, 
    161, 
    169, 
    319
   ], 
   "languages": [
    1, 
    84
   ], 
   "profile_created": true, 
   "school_year": 6, 
   "graduation_year": 1, 
   "previous_employers": [
    15
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/mittal_sukant_sukant@mit.edu_2011-09-06-01-38-14.pdf", 
   "user": 189, 
   "industries_of_interest": [
    4, 
    37, 
    38
   ], 
   "act": null, 
   "date_created": "2011-09-06 01:27:44"
  }
 }, 
 {
  "pk": 177, 
  "model": "student.student", 
  "fields": {
   "last_name": "Ung", 
   "last_updated": "2011-09-06 06:34:29", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " education massachusetts institute technology mit cambridge june candidate computer minor economics gpa relevant coursework probabilistic systems analysis differential equations analysis algorithms software construction computational structures implementation microeconomics econometrics manatee mhs bradenton barclays york technology analyst june august sql scripts data quality framework scripts generate emails tasks loading information into database integrate informational feeds into framework department eecs mit cambridge lab assistant introduction eecs february december provided feedback guidance completing labs prepared equipment lab labs thomson reuters eagan technology intern june august created web user interface user database improved efficiency server code scripts testing software tmx promoted testing tools codebase biweekly basis perceptual lab mit cambridge undergraduate research assistant june march analyzed amplification detecting shoplifters focusing shoplifting hiding items into backpack differentiated difference heavier backpacks lighter backpacks gathered standardized videos analyzed using matlab department physics mit cambridge undergraduate tutor grader physics august january tutored students graded papers skills programmed java python matlab scripts sql mysql javascript jquery dojo html css william ung address vassar cambridge willcu mit edu address ave bradenton", 
   "looking_for": [
    1, 
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "William", 
   "first_major": 12, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.500", 
   "campus_involvement": [], 
   "languages": [
    3
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/ung_william_willcu@mit.edu_2011-09-06-01-33-21.pdf", 
   "user": 190, 
   "industries_of_interest": [
    7, 
    37, 
    38, 
    15, 
    19, 
    20, 
    27, 
    28, 
    43, 
    36, 
    40, 
    42
   ], 
   "act": 32, 
   "date_created": "2011-09-06 01:29:16"
  }
 }, 
 {
  "pk": 178, 
  "model": "student.student", 
  "fields": {
   "last_name": "Lerner", 
   "last_updated": "2011-09-06 06:34:29", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": 2380, 
   "sat_v": 800, 
   "sat_w": 780, 
   "keywords": " benjaminlernerkaramazov mit edu amherstst cambridge educationmassachusettsinstituteoftechnology cambridge maclassof bachelorofscienceinmathematics expectedjune concentrationinhistory undergraduategpa selectcourses graduatecourse algebraictopology algebraiccombinatorics complexanalysis analysis manifolds analysisofalgorithms nonlineardynamics wavemechanics quantumphysics microeconomics financetheory seminarinnuclearscience seminarinplasmaphysics stuyvesanthighschool newyork nyclassof satscore math reading writing skillstinpython sage sql andlatex familiarwithmathematica matlab excelandmsfluentinrussian advancedleveljapanese passedactuarialexamwithperfectscore examp probability takenmay technicalanalysistraininginstocks optionsandoptionspreads futures andcurrencytrading workexperiencecitadelsummer workedastechnologyinterninthesecuritiesdepartment completedtwoprojects automatedorderreportingfortradingsystems andanalyzedtheimpactoforderwonsystemperformance rimcapitaljanuary internedwithaadvisor studiedvalueinvesting portfolioanalysis andmarkettiming withparticularemphasisonetfsandthe marketcrash mitopencoursewarejanuary presentcurrentlytranscribingnuclearsciencecoursenotesfortheopencoursewarewebsite previouslytranscribedphysicsnotesandeditedback endhtmlforjapanesecourses researchalgebraiccombinatoricsresearch uropinmathematics analyzedthestructureofpureo sequencestheoreticallyandcomputationally workedthroughoutthesemesterwithprofessorfabriziozanello algebraictopologyresearch uropinmathematics investigatedthesteenrodalgebraformedbythecohomologyofrp aswellascertainmodulesoverthisalgebra workedthroughoutthesemesterwithprofessormarkbehrens plasmaphysicsresearchatstuyvesanthighschoolseptember january assistedinconstructionofthemergingspheromakexperimentusinganovelcoaxialplasmagundesign competitionsinmathematicsplacedintop inthe putnamexam spaperforthe mathcontestinmodelingrankedas meritorious memberofthe stplaceteamatthe americanregionalmathematicsleague memberofthe stplaceteamatthe harvard mitmathcontest additionaleducationalexperiencemathteamcaptainjanuary june lectureddailyforothermathteammembers topicsincludedcombinatorics probability numbertheory algebra discretemathematics geometryandcalculus otheruniversitycoursesfall studiedquantummechanicsatcolumbiauniversityandrealanalysisi iiatnewyorkuniversity hobbiesandactivitiesgoclub vicepresident tournamentdirector treasurer strategygames sciencefiction", 
   "looking_for": [
    1, 
    3, 
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Benjamin", 
   "first_major": 25, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.200", 
   "campus_involvement": [
    162
   ], 
   "languages": [
    3, 
    95, 
    123
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [
    71
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/lerner_benjamin_bgitman@mit.edu_2011-09-06-02-39-15.pdf", 
   "user": 191, 
   "industries_of_interest": [
    37, 
    38, 
    15, 
    19, 
    20, 
    27, 
    43, 
    41, 
    34, 
    36, 
    40, 
    42
   ], 
   "act": 36, 
   "date_created": "2011-09-06 02:36:18"
  }
 }, 
 {
  "pk": 179, 
  "model": "student.student", 
  "fields": {
   "last_name": "Gorman", 
   "last_updated": "2011-09-06 16:13:08", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": 2350, 
   "sat_v": 800, 
   "sat_w": 750, 
   "keywords": " danielle gorman western ave phone cambridge email dgorman mit edu education massachusetts institute technology mit june candidate bachelor economics gpa relevant coursework econometrics linear algebra management communication microeconomic theory statistical methods economics finance theory math verbal writing leadership american parliamentary debate mit cambridge president oversaw logistical operations mit debate its executive administered annual budget reviewed budget reports sustainability represented mit tournaments including worlds championship botswana vice president tournaments coordinated attendees organized managed public debate forums foster improvement formal communication argumentation skills mit graduate undergraduate increased club membership means campus events publicity efforts sigma kappa sorority theta lambda chapter mit boston public relations jan dec organized publicity campaign variety attendees oliver wyman york consultant june aug researched strategies business underwriting focus strategies used online merchant acquirers produced excel prototype obligor rating regulatory compliant created processed analyzed raw data default rates services client highlights schools program crema italy mit teaching ambassador sept feb developed creating debate curriculum pacioli technical institute implemented pilot program lectures brainstorming sessions rounds harvard model congress cambridge senior staff oct feb chaired committee homeland security composed delegates aided students creation legislative bills signed into hmc president skills microsoft microsoft excel microsoft powerpoint adobe photoshop matlab awards american parliamentary debate association awards national presidential scholar semi finalist national merit scholar byrd scholar", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Danielle", 
   "first_major": 14, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.500", 
   "campus_involvement": [
    113, 
    330, 
    386
   ], 
   "languages": [
    127
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [
    8
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/gorman_danielle_dgorman@mit.edu_2011-09-06-16-13-08.pdf", 
   "user": 192, 
   "industries_of_interest": [
    37
   ], 
   "act": null, 
   "date_created": "2011-09-06 09:54:34"
  }
 }, 
 {
  "pk": 180, 
  "model": "student.student", 
  "fields": {
   "last_name": "Fabre", 
   "last_updated": "2011-09-06 10:10:31", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " andrea fabre memorial cambridge mail andreafe mit edu education massachusetts institute technology mit cambridge candidate chemical engineering political biology minors gpa june relevant skills languages fluent spanish conversational english intermediate french catalan programming matlab java research ample doing research labs protein simulation laboratory atomistic molecular mechanics massachusetts institute technology cambridge january intermediate filament simulation researcher examined intermediate filaments influence behavior used computational modeling simulations analyze effects vimetin protein filaments mutations procter gamble gillette boston june august research intern designed executed technical analytical tests variety products overall performance analyzed results combination highest potential emerging markets developed tests recommendations further studies bcs mcgovern institute brain research massachusetts institute technology cambridge october december video analyst developed automated computer vision monitoring analysis mouse behavior cage analyzed mice videos training computer recognized software confused movements difficulties detecting having darkness institut quimic sarri barcelona spain august rapid manufacturing member searched biocompatible powder binder printing used printer complex objects analyzed composition corp binder powder plus printer produced hydroxyapatite industrial printer binder institute laboratory laboratory massachusetts institute technology cambridge january june research assistant cancer behavior analysis forty thirty cancer cultures differentiation analyzed proteins synthesized cells exposed different types conditions massachusetts hospital richard simches research boston september january research assistant extraterrestrial genomes project worked finding primer bind living organism gene collected genomic data different organisms analyzed data similarities gene performed dna extraction analysis ordinary massachusetts institute technology cambridge august volunteer tutor generation college program clarified biology mathematics chemistry concepts students advised encouraged students further education edinburg edinburg august june biology tutor uil biology helper taught advanced biology ninth tenth students prepared students advanced biology tests academic honors mit laureates leaders scholar scholar invited presidential inauguration university interscholastic league uil medal physics medals chemistry biology superintendent academic excellence award interests activities mit resident associate advisor society engineers lil coordinator brain trust networking community service amnesty international member network sloan undergraduate operations", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Andrea", 
   "first_major": 7, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.500", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/fabre_andrea_andreafe@mit.edu_2011-09-06-10-10-31.pdf", 
   "user": 193, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-06 10:09:29"
  }
 }, 
 {
  "pk": 209, 
  "model": "student.student", 
  "fields": {
   "last_name": "Petters", 
   "last_updated": "2011-09-06 22:27:16", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " dmitrij petters memorial cambridge phone dpetters mit edu education massachusetts institute technology gpa bachelor computer electrical engineering mathematics cambridge sep math physic awards parsons brinkerhoff national scholarship sparling scholarship bellevue rotary club scholarship recipient relevant coursework software construction digital communication systems intro algorithms computation structures bellevue college gpa supplemented curriculum associate engineering transfer distinction bellevue sep jun athena research software engineer extern york jan feb created risk graphing utility used trader data simulate activity transfer into cache graph exposure limits versus used highcharts extjs pion networking boost libraries backend extjs plugin export gridpanels its subclasses csv xls thomson reuters software development intern eagan jun aug worked member website vertical fixed priority bugs developed features attended planning meetings developed data mining script used extract pertinent info tens thousands logs added automated entry into flagship westlawnext akamai pinging servers crafted interactive javascript widgets custom validation jquery plug mail text areas rbm technologies software engineer extern cambridge jan feb developed ruby rails mobile visual merchandising manager app retail workers digital pictures fixtures upload textures onto respective models programmed automated rml based report using rml pdf conversion library summarized advertising campaigns cellular firms verizon mobile mit agelab undergraduate researcher cambridge oct combined python pil ffmpeg video overlay showed simulation video looking given skewed gaze data translated researched possibility heads display projected windshield laboratory using facelab gaze tracking data correction algorithms user selections visually activities leadership sbc sloan business club entrepreneurship project development leader cambridge feb developer sbconnect django employer interaction webapp featuring events invitations resume creation etc collaborating designer github currently working resume parsing backend ajax filtering consulting client development cambridge nov oct furthered makes non organizations worked internal development mit bhs outdoor indoor varsity runner cambridge aug bhs improvement previous skills interests technical java python django javascript jquery extjs css latex languages fluent russian interests ted talks hockey entrepreneurship", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Dmitrij", 
   "first_major": 12, 
   "subscriptions": [
    6
   ], 
   "gpa": "5.000", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/petters_dmitrij_dpetters@mit.edu_2011-09-06-22-27-16.pdf", 
   "user": 222, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-06 22:26:42"
  }
 }, 
 {
  "pk": 184, 
  "model": "student.student", 
  "fields": {
   "last_name": "Ooi", 
   "last_updated": "2011-09-06 11:04:03", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " boonteikooicontactinformationcurrentaddressemail boonteik mit edu memorialdrive phone cambridge maeducationmassachusettsinstituteoftechnologycambridge macandidateforb inmathematics electricalengineering computersciencejun cumulativegpa relevantcourses performanceengineering computersystemengineering advancedalgorithms elementofsoftwareconstruction theoryofcomputation computationstructure stochasticprocessachievements performanceengineeringfinalderby bestperformancenationalphysicsolympiad individual stplace recordbreakingscoreof nationalmathematicsolympiad ndplacenanyangconcepttest ofthe malaysianstoreceivemedalawardexperiencemicrosoftcorporationredmond wasoftwaredeveloperintern windowslivedivisionmay aug addedsupportforfullreadandwriteaccesstothewindowslivecalendarandcontactsserviceapiforthirdpartydeveloperswrotecodeinc forparsingandprocessingofhttprequestmitcomputerscienceandintelligencelaboratorycambridge mastudentresearcher supercomputinggroupnov presentimplementedadynamicmemoryallocatorfortheruntimesystemofcilkmultithreadedplatformmothelinuxkernalcodeforthatandwrotethetestcasesincendecatechnologiesinc cambridge masoftwaredeveloperintern scalability performancedivisionmay jul programmedinc forthebackenddevelopmentofendeca squeryevaluationengineidenproblemsinanewfeaturethatwasoverlookedmitcomputerscienceandintelligencelaboratorycambridge mastudentresearcher softwaredesigngroupfeb assistedindevelopingtheimperativeextensionofalloysoftwaremodelinglanguagebuiltalibraryofexamplesandmakecomparisonwithanothersimilarlanguagemitmathematicsandeecsdepartmentcambridge madepartmenttutorsept presenttutorintermediatealgorithmsandsomeotherclassesfor hours weekleadershipmitmalaysianstudentassociationcambridge mapresidentfeb feb extendedmembershipbeyondmittoallmalaysiansinbostonareaandmanagedbudgetforalleventsskillsprogramming java python mandarin cantonese malayactivities contractbridge badminton basketball soccer", 
   "looking_for": [
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "MY"
   ], 
   "first_name": "Boon", 
   "first_major": 25, 
   "subscriptions": [
    6
   ], 
   "gpa": "5.000", 
   "campus_involvement": [
    463, 
    50, 
    476
   ], 
   "languages": [
    3, 
    44, 
    47, 
    94, 
    107, 
    133
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [
    11
   ], 
   "website": "", 
   "second_major": 15, 
   "resume": "student/student/ooi_boon_boonteik@mit.edu_2011-09-06-11-04-02.pdf", 
   "user": 197, 
   "industries_of_interest": [
    7, 
    37, 
    38, 
    19, 
    27, 
    28, 
    43, 
    36, 
    40
   ], 
   "act": null, 
   "date_created": "2011-09-06 10:56:23"
  }
 }, 
 {
  "pk": 185, 
  "model": "student.student", 
  "fields": {
   "last_name": "Rijal", 
   "last_updated": "2011-09-06 08:42:00", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": null, 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": null, 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Ram", 
   "first_major": null, 
   "subscriptions": [
    6
   ], 
   "gpa": null, 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": false, 
   "school_year": null, 
   "graduation_year": null, 
   "previous_employers": [], 
   "website": null, 
   "second_major": null, 
   "resume": "", 
   "user": 198, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-06 10:58:08"
  }
 }, 
 {
  "pk": 186, 
  "model": "student.student", 
  "fields": {
   "last_name": "Lin", 
   "last_updated": "2011-09-06 11:14:48", 
   "sat_m": 770, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": 2370, 
   "sat_v": 800, 
   "sat_w": 800, 
   "keywords": " stephaniey linpresentaddress massachusettsavecambridge sylin mit edupermanentaddress coachlightdrivepoughkeepsie sylin mit edueducationmassachusettsinstituteoftechnology cambridge mab inmathematicswithcomputerscience expectedjune relevantcompletedcoursework honorsmultivariablecalculus tialequations lin earalgebra honorsrealanalysis introductiontoeecs combinatorialanalysis principlesofappliedmathematics seminarinlogic professionalexperiencewebsitedesignconsultantforanthropologynowanthropologynow designedandcodedanewwebsitedesignfortheanthropologynowmagazine statisticalanalystmassachusettsinstituteoftechnologysloanschoolofmanagement collectedandperformedpreliminaryanalysisofdataontheectsoffundingonscienresearch singaporeuniversityoftechnologyanddesigncurriculumdesignermassachusettsinstituteoftechnologymathematicsdepartment wrotelessonplansforsutd stialequationsandlinearalgebracourses appliedlinearalgebratextbookeditormassachusettsinstituteoftechnologymathematicsdepartment workedwithalanedelmantohistextbookonrandomizedeigenvalues theartofproblemsolvingcompanyassistantinstructortheartofproblemsolving assistedinalgebra combinatorics andcontestmathclassesfortheartofproblemsolvingcompany leadershipandserviceexperiencemid hudsonmathcircleheadcoach founderself employed formedamathcircledesignedtointerestlocalstudentsincompetitivemathematics expandedthecirclefrom studentstoover withadditionalstudentsonthewaitlist placedthreestudentsinthetoptenatthenewyorkstatemathcountscompetition campusambassadorteachforchina presentscoutedcandidatesfortheteachforchinaprogram workedtoimprovethevisibilityofteachforchinaonmit scampus treasurer publicitychairfortheharvard mitmathtournamentmassachusettsinstituteoftechnology harvarduniversity presentdevelopedsponsorshipswithlocalandnationalandtechnologyincreasedfundingfrom duringyearintheposition honorsprudentialspiritawardsgoldmedal raytheonmathherofinalist raytheonmathmovesubonusstudygrant scholarship", 
   "looking_for": [
    2
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Stephanie", 
   "first_major": 25, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.100", 
   "campus_involvement": [
    41, 
    175
   ], 
   "languages": [
    3, 
    47
   ], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [
    15
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/lin_stephanie_sylin07@mit.edu_2011-09-06-11-14-48.pdf", 
   "user": 199, 
   "industries_of_interest": [
    37, 
    38, 
    11, 
    15, 
    19, 
    27, 
    28, 
    43, 
    30, 
    32, 
    40, 
    42
   ], 
   "act": null, 
   "date_created": "2011-09-06 11:08:22"
  }
 }, 
 {
  "pk": 187, 
  "model": "student.student", 
  "fields": {
   "last_name": "Murphy", 
   "last_updated": "2011-09-06 11:17:57", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": 2250, 
   "sat_v": 710, 
   "sat_w": 740, 
   "keywords": " calley murphy clmurphy mit edu address permanent address memorial cambridge bloomfield hills objective obtain internship enable contribute corporation skills relevant intended education massachusetts institute technology cambridge applied mathematics gpa seaholm birmingham gpa weighted bloomfield surf club bloomfield hills worked assistant coach lifeguard private lesson instructor coached lessons competitive swimming ages monitored lifeguard duties schedules managed facility operations basis mit department chemistry nocera cambridge worked lab nocera studying electrode kinetics prepared tested activities nickel cobalt films varying thicknesses splitting catalysts beachwood recreation association troy worked lifeguard lesson instructor certified cpr aid aed lifeguarding private tutor birmingham helped students improve academic skills resulting significantly improved scores provided specific focused tutoring activities mit varsity swimming diving ncaa diii conference holder ncaa national qualifier mit club polo cwpa secretary mit intramural polo resident associate advisor advisor freshmen rooming dorm daper advisory member department athletics physical education recreation mit orientation leader academic national merit scholar awards bausch lomb honorary award rennsalear medal award math michigan athletics association scholar athlete award michigan math prize finalist", 
   "looking_for": [
    2
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Calley", 
   "first_major": 25, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.800", 
   "campus_involvement": [
    471, 
    280, 
    339, 
    461, 
    430
   ], 
   "languages": [
    3
   ], 
   "profile_created": true, 
   "school_year": 2, 
   "graduation_year": 3, 
   "previous_employers": [], 
   "website": "", 
   "second_major": 14, 
   "resume": "student/student/murphy_calley_clmurphy@mit.edu_2011-09-06-11-17-56.pdf", 
   "user": 200, 
   "industries_of_interest": [
    7, 
    37, 
    38, 
    13, 
    20, 
    24, 
    27, 
    28, 
    43, 
    40, 
    42
   ], 
   "act": 36, 
   "date_created": "2011-09-06 11:11:05"
  }
 }, 
 {
  "pk": 188, 
  "model": "student.student", 
  "fields": {
   "last_name": "Katz", 
   "last_updated": "2011-09-06 11:03:59", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": null, 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": null, 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Rena", 
   "first_major": null, 
   "subscriptions": [
    6
   ], 
   "gpa": null, 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": false, 
   "school_year": null, 
   "graduation_year": null, 
   "previous_employers": [], 
   "website": null, 
   "second_major": null, 
   "resume": "", 
   "user": 201, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-06 11:23:39"
  }
 }, 
 {
  "pk": 189, 
  "model": "student.student", 
  "fields": {
   "last_name": "Dubbin", 
   "last_updated": "2011-09-06 11:40:01", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " karen dubbin address electronic address address memorial kdubbs mit edu amberwoods cambridge boca raton objective seeking apply education biosciences chemical polymer technologies related fields education massachusetts institute technology mit cambridge bachelor candidate materials engineering minor biomedical engineering june includes polymer physics molecular cellular tissue biomechanics materials processing organic biomaterials chemistry biochemistry mechanical properties materials biomaterials tissue interactions microstructural evolution materials introduction computers engineering solving electronic optical magnetic properties materials introduction materials physics mechanics electricity magnetism materials laboratory organic chemistry introductory biology awards recognitions poster award materials laboratory spanish boca raton gpa weighted awards recognitions salutatorian scholar distinction national merit commended scholar research gore associates medical products elkton internship developing testing determining constitutive properties tissues multiaxial loading designed mechanical setup pressurized disc biaxial testing used literature validated testing setup using silicone developed program using matlab analyze data stress strain response tested tissues stress strain response assessed strain measurement using digital image correlation stress strain response hyperelatic models using abaqus mit department mechanical engineering cambridge undergraduate research opportunity ian hunter bioinstrumentation lab developing tissue analogue tympanic membrane testing novel needleless injector collagen gels using different linkers mimic mechanical properties tympanic membrane tested properties collagen gels using dynamic mechanical analysis dma massachusetts hospital wellman photomedicine boston internship tissue engineering studying photochemical tissue bonding ptb silk scaffolds tendon repair using rabbit model extracted silk fibroin silkworm cocoons employed electrospinning technique construct silk mats scaffold tissue engineering characterized silk mats using scanning electron microscopy fourier transform infrared ftir performed mechanical testing healed rabbit tendons using tensiometer mit department materials engineering cambridge laboratory studying various properties used dynamic scattering characterize solvent quality used differential scanning calorimetry phase diagram mixture lauric stearic acids employed vicker hardness testing scanning electron microscopy ray diffraction characterize properties whitehead institute biomedical research cambridge undergraduate research opportunity program mit whitehead institute lodish lab researching metalloprotease mmp cleavage extracellular domain ecd transmembrane proteins ectodomain cleavage created mef lines expressing epidermal growth factor egf reporters using retroviral infection cleavage via facs assay assessed alkaline phosphatase activity supernatant shed ectodomain adam knockouts uncleaved using facs assay role adams cleavage pathway publications dang michelle karen dubbin antonio aiello monika hartmann harvey lodish andreas herrlich epidermal growth factor egf ligand release substrate specific disintegrin metalloproteases adams involves different protein kinase pkc isoenzymes depending stimulus journal biological chemistry american society biochemistry molecular biology mar web skills interests tissue culture western blotting pcr facs analysis java matlab extracurricular activities burton lab mit treasurer recyclemania spanish debate founder peace founder national honor society spanish", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Karen", 
   "first_major": 24, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.700", 
   "campus_involvement": [
    261, 
    303, 
    476
   ], 
   "languages": [
    3, 
    70
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/dubbin_karen_kdubbs@mit.edu_2011-09-06-11-40-01.pdf", 
   "user": 202, 
   "industries_of_interest": [
    4, 
    13, 
    18
   ], 
   "act": 35, 
   "date_created": "2011-09-06 11:28:33"
  }
 }, 
 {
  "pk": 190, 
  "model": "student.student", 
  "fields": {
   "last_name": "Liu", 
   "last_updated": "2011-09-06 11:50:10", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " ruiyi millie liu albany apt cambridge ruiyi liu sloan mit edu education mit sloan management cambridge candidate finance june organizations management consulting club finance club future coursework analytics finance investments advanced corporate finance gpa university toronto toronto canada bachelor business administration specialist program management program mathematics placed honor consecutive years graduated distinction overall gpa rotman trading challenge expensave canada inc toronto canada leading canadian tax consulting serving fortune clients april july consultant directly assisted partners researching service lines development partnerships local players service lines expected increase revenues facilitated review services efficiently effectively addressed causes variation eliminated redundant tasks workflow shorten review cycle initiated intern recruiting improved knowledge transfer mentoring training analysts conducted tax legal research clients positioned collaborated generate multi revenue cowin ltd shenzhen china chinese domestic private equity firm february april investment analyst sourced deals evaluated opportunities health collaborated cases across health service commodity goods retailing agricultural packaging technology industries advised governmental innovation fund screening proposals preparing memorandums potential targets performed business due diligence interviewed coos directors project managers target competitors academic researchers valuation drafted presented comprehensive investment proposals multi deals synthesizing business valuation analysis developed using dcf model irr model multiple shangzhuang cosmetics international toronto canada chinese cosmetics retailer june september import purchasing buyer identified needs chinese positioned appropriate products clients investigating products canadian forecasting sales trends negotiated pricing suppliers increase profit margin average built business relationships multiple canadian manufacturers improved receiving shipping packaging customs clearance attain savings pricewaterhousecoopers toronto canada expatriate tax associate resources services february provided prudent professional image clients accurately performed multiple tax compliances attention details researched legislation international tax issues assessed clients needs identify optimal solutions communicated collaborated senior professionals exceptional player tight deadlines additional information chartered financial analyst cfa candidate proficient mandarin conversant cantonese knowledge spanish enjoy playing basketball travelling backpacked across countries continents sailing", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [
    "CN"
   ], 
   "first_name": "Ruiyi", 
   "first_major": 23, 
   "subscriptions": [
    6
   ], 
   "gpa": "5.000", 
   "campus_involvement": [
    334
   ], 
   "languages": [
    3, 
    44, 
    48, 
    127
   ], 
   "profile_created": true, 
   "school_year": 5, 
   "graduation_year": 1, 
   "previous_employers": [], 
   "website": "http://www.linkedin.com/profile/view?id=107285923&trk=tab_pro", 
   "second_major": null, 
   "resume": "student/student/liu_ruiyi_ruiyiliu@mit.edu_2011-09-06-11-50-10.pdf", 
   "user": 203, 
   "industries_of_interest": [
    37, 
    27
   ], 
   "act": null, 
   "date_created": "2011-09-06 11:37:42"
  }
 }, 
 {
  "pk": 191, 
  "model": "student.student", 
  "fields": {
   "last_name": "Benitez", 
   "last_updated": "2011-09-06 11:48:27", 
   "sat_m": 760, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": 780, 
   "keywords": " sergio benitez memorial cambridge sbenitez mit edu education massachusetts institute technology cambridge candidate electrical engineering computer gpa june relevant coursework introduction algorithms elements software construction computation structures linear algebra mobile technology leo cigarroa laredo valedictorian gpa google inc bold practicum associate intern gmail performance jun aug improved trace analysis software adding trace delimited file readers statistical analysis tools rolling gradient calculator kernel trace counter designed implemented anomaly detection algorithm gmail data startup engineering beverly nov designed developed documented enterprise infrastructure streaming web application needs startup peers deliver based documents mit entrepreneurship review cto founding technical cambridge mar jan founded developed maintained technical facets publication including web programming database server configuration developed novel content interaction features innovative elements increased readership interactivity infinity studios ceo web designer programmer laredo jul jun founded web development studio emphasis assembled teams scalable applications internationally consulted companies individuals strategic internet ventures skills programming computer programming java python ruby risc assembly web programming html css php mysql javascript ruby rails developed implemented json xml http apis computer program specific various version systems git perforce subversion various software libraries jquery node deployment aws rds heroku communication conducting investor meetings technology demos public relations ceremonies achievements awards computer user interface software award mit project award eecs dorm representative mit simmons hall miscellaneous accomplished recognized classical saxophonist", 
   "looking_for": [
    2, 
    4
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Sergio", 
   "first_major": 15, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.800", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [
    12
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/benitez_sergio_sbenitez@mit.edu_2011-09-06-11-43-35.pdf", 
   "user": 204, 
   "industries_of_interest": [
    13, 
    15, 
    20, 
    36
   ], 
   "act": 32, 
   "date_created": "2011-09-06 11:38:26"
  }
 }, 
 {
  "pk": 192, 
  "model": "student.student", 
  "fields": {
   "last_name": "Wang", 
   "last_updated": "2011-09-06 11:51:51", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": 2330, 
   "sat_v": 800, 
   "sat_w": 730, 
   "keywords": " jerry shida wang memorial phone cambridge email jswang mit edu education massachusetts institute technology mit cambridge candidate electrical engineering computer minor biology june gpa cumulative relevant coursework algorithms biochemistry circuits computation structures computational biology diff linear algebra microcomputer lab microeconomics organic chemistry probability quantitative physiology signals systems jamison partners york programming analyst jun developed models predicting derivative pricing demand developed forecasting model matlab massachusetts hospital boston radiation oncology physics extern jan programs generate clinically significant computer visualization models scans computed radiological lengths isolated tumors generated models bose corporation stow digital signal processing intern jun sep developed tests bose digital signal processing modules matlab overhauled automotive systems code testing developing automated scripts python mit laboratory electromagnetic electronic systems cambridge research associate jun jun developed improved algorithms analyzing abp qrs waveforms implemented batch signal processing patient data tufts health watertown web portal development intern jun sep programs debug software development architecture produced diagnostic reports errors skills interests computer java python matlab vba linux unix windows xml sql cvs eclipse weka productivity software excel powerpoint access fluent mandarin chinese leadership mit hssp teacher mit eta kappa hkn tutoring organizing tutoring services entire electrical engineering computer department tutor students electrical engineering computer classes mit tau beta tbp club fellowship conducts interviews reviews proposal club funding tpb asian american association webmaster historian maintained overhauled club website cultural planned logistics multi club cultural attended phi beta epsilon fraternity manager planned implemented refurbishing oversaw hours distributed members preparation academic awards honors department education presidential scholar national merit scholar united states america mathematics olympiad qualifier tau beta national honor society member eta kappa national honor society member", 
   "looking_for": [], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Jerry", 
   "first_major": 15, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.800", 
   "campus_involvement": [
    463, 
    32, 
    141, 
    468, 
    380, 
    476
   ], 
   "languages": [
    3, 
    48
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/wang_jerry_jswang@mit.edu_2011-09-06-11-51-51.pdf", 
   "user": 205, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-06 11:48:02"
  }
 }, 
 {
  "pk": 193, 
  "model": "student.student", 
  "fields": {
   "last_name": "Garay", 
   "last_updated": "2011-09-06 12:04:19", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " education sept june massachusetts institute technology cambridge candidate bachelor electrical engineering computer relevant coursework probability discrete mathematics computer applied electricity magnetism introduction differential equations professional mar mit kerberos consortium cambridge programmer porting kerberos authentication protocol android planning safely implement security features nov dept introductions cambridge undergraduate created custom linux distribution lab laptops troubleshoot maintain lab servers network infrastructure laptops students understand lab hours oct mit information tour cambridge tour publicly mit official campus tours nov dept sana mobile health cambridge undergraduate researcher oscilloscope used phones remote rural areas june sept dept physics laboratory nuclear cambridge undergraduate researcher studied methods analysis higgs boson added linux computers cluster used data analysis diagnose troubleshoot linux computers problems maintained stability node computer cluster july aug media lab sportsemble project cambridge undergraduate researcher implemented wireless amplifier medical diagnosis device leadership march greek intervarsity christian fellowship cambridge president christians fraternities sororities minister living groups organize campus events christian fellowships sept sept galena minorities achieving reno founder president organized mentoring improve minority education helped minority students into college skills fluent languages spanish java python bash familiar languages honors gates millennium scholar interests research interests wireless communications mobile platforms innovative interfaces relationship computation quantum computing particle physics keeping events securities investing staying date mobile technological advancements carlos garay bay boston cgaray mit edu", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Carlos", 
   "first_major": 12, 
   "subscriptions": [
    6
   ], 
   "gpa": "3.700", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/garay_carlos_cgaray@mit.edu_2011-09-06-12-04-19.pdf", 
   "user": 206, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-06 12:01:26"
  }
 }, 
 {
  "pk": 194, 
  "model": "student.student", 
  "fields": {
   "last_name": "Nguyen", 
   "last_updated": "2011-09-06 12:37:29", 
   "sat_m": 790, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": 2120, 
   "sat_v": 640, 
   "sat_w": 690, 
   "keywords": " viet tran nguyen vassar cambridge viettran mit edu education massachuset institute technology sept cambridge bachelor coursework electrical engineering telecommunication minor applied mathematics highline community college sept jun des moines gpa phi theta kappa international junior college academic honorary graduation honors honors scholar program participant emphasis electrical engineering gia dinh sept sept chi minh viet nam graduation classification graduation employment teaching assistant aug highline community college des moines collaborate instructors multilevel math veterans grade exam instruction students math tutor jan jun highline community college des moines paid competence tutoring math courses offered highline advanced calculus differential equation linear algebra hours per physics tutor sept highline community college des moines paid ability tutor physics courses offered highline physics waves thermodynamics hours per honors awards highest scholastic achievement mathematics highline community college des moines annual award given highline community college outstanding achievement mathematics highest scholastic achievement engineering highline community college des moines annual award given highline community college outstanding achievement engineering hcc math sept jan highline community college des moines ranked math competition given american mathematical association colleges amatyc highest scholastic achievement physics highline community college des moines annual award given highline community college outstanding achievement physics richard plagge mathematics scholarship highline community college des moines awarded upper mathematics highline community college activities community service presenter quinquennial math conference highline community college des moines cooperate instructor kepler model solar using mathematica assist instructor seminar session math conference across washington oregon demonstrate project skills bilingual vietnamese native english", 
   "looking_for": [
    2
   ], 
   "countries_of_citizenship": [
    "VN"
   ], 
   "first_name": "Viet-Tran", 
   "first_major": 16, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.800", 
   "campus_involvement": [
    407, 
    415
   ], 
   "languages": [
    2, 
    147
   ], 
   "profile_created": true, 
   "school_year": 2, 
   "graduation_year": 3, 
   "previous_employers": [], 
   "website": "http://www.facebook.com/Viet.Tran.NGUYEN", 
   "second_major": 25, 
   "resume": "student/student/nguyen_viet-tran_viettran@mit.edu_2011-09-06-12-37-28.pdf", 
   "user": 207, 
   "industries_of_interest": [
    13, 
    20
   ], 
   "act": null, 
   "date_created": "2011-09-06 12:20:29"
  }
 }, 
 {
  "pk": 195, 
  "model": "student.student", 
  "fields": {
   "last_name": "Wang", 
   "last_updated": "2011-09-06 13:01:14", 
   "sat_m": 790, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": 2260, 
   "sat_v": 700, 
   "sat_w": 770, 
   "keywords": " alex wanguniversity address memorial cambridge address poinsettia richardson alexwang mit edu education massachusetts institute technology cambridge macandidate computer mathematics expected graduation june gpa plano senior plano txinternational baccalaureate diploma recipient aug june gpa weighted national honor society vice president york nydatabase developer intern june developed database tracking aid developers tracking causes broken jobs sql analyzed improved accuracy intelligent estimates model using statistical methods sql cooliris inc palo alto casoftware development extern jan designed user interface liveshare photo sharing iphone application planned launch pitchbook content management ipad application focused storing information decks mit collective intelligence cambridge maundergraduate research assistant sept dec developed online multiplayer portal designed collective intelligence players recording actions user university texas dallas nanotech laboratory richardson txindependent researcher mar dec developed microbial fuel utilized bacteria rhodoferax ferrireducens generate electricity optimized fuel testing variables anode cathode anode cathode anode cathode medium leadership activities mit undergraduate association sept senator legislation represented undergraduate students weekly senate meetings dining committee member worked developing dining mit students provided options nutrition sergeant arms maintained security weekly senate meetings mit association activities asa sept mit undergraduate association representative asa represented undergraduate association biweekly asa meetings relayed information opinions asamit techfair sept corporate relations member pitches provided information various companies microsoft techfair worked companies sponsorship allowed expo products logistics member coordinated techfair worked companies shipment materials booking hotel rooms mit sloan business club sept marketing member developed club marketing strategy freshman chosen selected awards recognitions usa tennis nationals boys boys quarterfinalist intel international engineering finalist siemens competition semifinalist national merit scholarship program finalist scholarship recipient texas educators association violin qualifier skills interests programming java python ruby rails objective csoftware unix eclipse svn git adobe dreamweaver microsoft netbeans xcodegeneral hobbies tennis fencing basketball weightlifting biking", 
   "looking_for": [
    3, 
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Alex", 
   "first_major": 12, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.500", 
   "campus_involvement": [
    334, 
    376, 
    387
   ], 
   "languages": [
    3, 
    48, 
    127
   ], 
   "profile_created": true, 
   "school_year": 2, 
   "graduation_year": 3, 
   "previous_employers": [
    64
   ], 
   "website": "", 
   "second_major": 25, 
   "resume": "student/student/wang_alex_alexwang@mit.edu_2011-09-06-13-01-14.pdf", 
   "user": 208, 
   "industries_of_interest": [
    34, 
    40
   ], 
   "act": 35, 
   "date_created": "2011-09-06 12:42:09"
  }
 }, 
 {
  "pk": 196, 
  "model": "student.student", 
  "fields": {
   "last_name": "St. John", 
   "last_updated": "2011-09-06 13:12:23", 
   "sat_m": 760, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": 2180, 
   "sat_v": 750, 
   "sat_w": 670, 
   "keywords": " education massachusetts institute technology mit candidate bachelor mechanical engineeringrelevant courses thermal fluids engineering mechanics materials dynamics controls manufacturing physics measurement instrumentation multivariable calculus differential equationsgpa cumulative gpa georgetown relevant courses physics calculusgpa experiencecenter urop rohsenhow kendall labundergraduate research project researched compared methods desalination designed built humidification tower experimental desalination plantnasa robotics lab goddard flight intern measured reverse engineered cad models flight hardware using mer measurement laser tracker trained robot safety operated emergency buttons grader graded sets mechanics materials classsmart cities urop mit media lab undergraduate research project worked graduate undergraduate students designed machined parts modules prototype using solidworks cad software cnc machining equipment skillsmechanical engineering solidworks cad software mastercam familiarity cnc machining equipmentlanguage spanish skillscomputer matlab including simulinkother excellent drawing skills maximus johnmaximuss mit edu address bay boston address nwwashington cambridge presentwashington cambridge majune presentgreenbelt mdjan feb cambridge maoct dec june september", 
   "looking_for": [
    1, 
    3, 
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Maximus", 
   "first_major": 26, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.100", 
   "campus_involvement": [
    365
   ], 
   "languages": [
    3, 
    127
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/st. john_maximus_maximuss@mit.edu_2011-09-06-13-12-23.pdf", 
   "user": 209, 
   "industries_of_interest": [
    2, 
    3, 
    12, 
    13, 
    15, 
    29, 
    31
   ], 
   "act": null, 
   "date_created": "2011-09-06 13:01:18"
  }
 }, 
 {
  "pk": 197, 
  "model": "student.student", 
  "fields": {
   "last_name": "Simosa", 
   "last_updated": "2011-09-06 13:47:12", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " jorge simosa address jdsimosa mit edu address memorial cambridge miami education massachusetts institute technology mit cambridge jun candidate bachelor electrical engineering computer eecs candidate minor management coursework includes communication systems networks microcomputer lab computer engineering computational structures digital systems introduction communication signal processing probability statistics elements software construction finance theory microeconomics macroeconomics gpa cisco systems san jose jun aug hardware engineering intern internship servers access switches virtualization business working implementation verification infrastructure solutions dynamic data involved verilog hardware writing scripts unix based environment latency access switch weekly presentations fellow colleagues manager principles concepts switch perl scripts verify hardware pin lists required fabrication purposes university catalonia uoc public university navarre upna barcelona pamplona spain jun aug junior researcher misti spain participant research stage spanish universities misti spain program collaboratively participated numerous research projects covering topics structural reliability mathematical learning submitted technical papers journal publications conference proceedings presented mathematical operations research learning euro conference lisbon mit global education career development cambridge sep worker assistant desk reception responsibilities included scheduling interaction fielded inquiries undergraduates graduate students phd candidates alumni employers arranged appointments career counselors prepared campus interviews leadership mit macgregor cambridge jan intramural sports manage dormitory sports teams encourage sportsmanship principles mit undergraduate opportunities program cambridge oct sep participant participated leadership advancement programs engineering projects visioning exercises engaged active networking professionals leading organizations mit undergraduate association cambridge sep former senator dorm representat participated writing legislation discussing issues concerning mit mit society hispanic engineers shpe cambridge sep member membership largest hispanic organization engineers leadership building events networking employers skills fluent spanish learning italian computer java python verilog perl circuit oscilloscopes familiar emacs unix fpgas logic analyzer html programming cmos logic", 
   "looking_for": [], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Jorge", 
   "first_major": 15, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.400", 
   "campus_involvement": [
    341
   ], 
   "languages": [
    3, 
    129
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [
    67
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/simosa_jorge_jdsimosa@mit.edu_2011-09-06-13-47-12.pdf", 
   "user": 210, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-06 13:44:27"
  }
 }, 
 {
  "pk": 198, 
  "model": "student.student", 
  "fields": {
   "last_name": "Nixon", 
   "last_updated": "2011-09-06 14:15:54", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " farr nixon fayefaye mit edu apt cambridge education pursuing urban studies planning massachusetts institute technology mit graduation date june project manager enbici bicycle sharing program urban logistics utl mexico designed logistical framework marketing business project proposed program local government leaders within delegations reference florencia serrania utl manager florenciaserrania com transportation intern cambridge community development department october august cambridge established zoning ordinances bicycle infrastructure policy taskforce prepared maps sketches drafts bicycle parking installations reference cara seiderman transportation program manager research assistant massachusetts hospital mgh october july boston crafted grant applications research proposals assisted research data collection analyses presentations reference margaret merlino laboratory supervisor database developer department filemaker inc inc santa clara developed database solutions increase productivity per department marketed products providing customer reference jeffrey benjamin department manager certified developer extracurricular volunteer assistant culture technology program november reference gediminas urbonas associate professor blogger member mit scholars program consultant association saa mit january reference sam magee coordinator programs president queer looking tech qwllts mit academic reference abigail francis assistant director expertiseesri arcgis adobe creative suite python visual programming", 
   "looking_for": [
    1, 
    3, 
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Farre", 
   "first_major": 34, 
   "subscriptions": [
    6
   ], 
   "gpa": "3.900", 
   "campus_involvement": [
    478, 
    343, 
    479, 
    406, 
    476
   ], 
   "languages": [
    3, 
    127
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [
    33, 
    15
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/nixon_farre_fayefaye@mit.edu_2011-09-06-14-15-54.pdf", 
   "user": 211, 
   "industries_of_interest": [
    1, 
    37, 
    38, 
    12, 
    13, 
    14, 
    17, 
    25, 
    29, 
    30
   ], 
   "act": 31, 
   "date_created": "2011-09-06 14:06:09"
  }
 }, 
 {
  "pk": 199, 
  "model": "student.student", 
  "fields": {
   "last_name": "Li", 
   "last_updated": "2011-09-06 14:35:38", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " xin cynthia mail xinqili mit edu phone address memorial cambridge education massachusetts institute technolog cambridge candidate bachelor biological engineering gpa minor applied international studies internships mit grant college program cambridge research intern feb research environmental pollution caused pharmaceuticals personal products massachusetts waters contact insurance companies pharmacies hospitals residents information pharmaceutical disposals assess fate abundance disposed chemicals future environmental regulations helmholtz environmental research dept ecotoxicology leipzig germany research intern june aug effects environmental pollutants proposed mathematical modeling regulate disposal pollutants toxic effects marine species techniques learned included cytotoxicity embryo toxicity tests deutsche bahn berlin germany intern april participate communication technologies deutsche bahn employees examine available technologies improve efficiency quality transportation systems minimizing financial expense harvard mit health technology sangeeta bhatia lab cambridge research intern jan oct assist throughput screening chemicals proteins promote liver growth drugs artificial liverlab techniques learned urea assay western blotting fluorescence activated sorting enzyme linked immunosorbent assay mit dept biological engineering lab cambridge research intern feb assist research phosphorylation pathways initiated growth factors tgf beta egf breast cancer cells activation proteins growth factors perform tasks western blotting gel electrophoresis protein quantification leaderships mit amnesty international cambridge executive committee sep rights related issues ranging genocides environmental health rights awareness campus organizing events guest lectures intellectuals victims rights violations mit braintrust cambridge executive committee sep assist organizing lectures regarding brain disorders public awareness brain related diseases activities patients suffered brain disorders picnicking watching concerts etc activities skills extracurriculum concert choir ceramics sailing languages english chinese mandarin cantonese german", 
   "looking_for": [
    1, 
    3
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "XIN QI", 
   "first_major": 4, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.600", 
   "campus_involvement": [
    20, 
    65, 
    83, 
    104, 
    226, 
    479, 
    476
   ], 
   "languages": [
    3, 
    48, 
    74
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/li_xin qi_xinqili@mit.edu_2011-09-06-14-29-02.pdf", 
   "user": 212, 
   "industries_of_interest": [
    6, 
    38, 
    12, 
    25, 
    29, 
    35
   ], 
   "act": null, 
   "date_created": "2011-09-06 14:26:41"
  }
 }, 
 {
  "pk": 200, 
  "model": "student.student", 
  "fields": {
   "last_name": "Gearreald", 
   "last_updated": "2011-09-06 15:29:39", 
   "sat_m": 780, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": 2280, 
   "sat_v": 760, 
   "sat_w": 740, 
   "keywords": "", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Tull", 
   "first_major": 23, 
   "subscriptions": [
    6
   ], 
   "gpa": "3.600", 
   "campus_involvement": [
    49, 
    350
   ], 
   "languages": [
    3, 
    94
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [
    15
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/gearreald_tull_thetull@mit.edu_2011-09-06-15-29-39.pdf", 
   "user": 213, 
   "industries_of_interest": [
    7, 
    37, 
    15, 
    19, 
    27, 
    28, 
    41, 
    34
   ], 
   "act": 33, 
   "date_created": "2011-09-06 15:16:15"
  }
 }, 
 {
  "pk": 201, 
  "model": "student.student", 
  "fields": {
   "last_name": "Chen", 
   "last_updated": "2011-09-06 15:27:54", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " anthony tony chen tchen mit edu address address hereford boston slane clemmons education massachusetts institute technology jun candidate bachelors electrical engineering computer cambridge candidate minor management relevant courses differential equations introduction algorithms finance theory microeconomics aug intern winston salem developed operational asset lending monitor thousands local clients presented future project goals senior management within gym pact jan developer boston development gym pact com fitness motivation program helps its members gym awarded into startup chile incubator chile statsheet incorporated aug intern research park developed website content sports statistical website managed content used automated summaries differing tones outcomes leadership waterford coach clemmons coached member ranging eighteen managed staff assistant coaches supervisors maintained safety budget management parental relationships corporate sponsors website management chi phi fraternity sept officer boston epsilon manager responsible maintaining historical landmark steward responsible purchasing entire communicating chef meals activities mit varsity swimming sept national american cambridge mit web programming competition jan finalist cambridge mit medlinks sept medlink cambridge skills interests proficient java python ruby golf fishing", 
   "looking_for": [
    2
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Anthony", 
   "first_major": 15, 
   "subscriptions": [
    6
   ], 
   "gpa": "3.700", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/chen_anthony_tchen91@mit.edu_2011-09-06-15-27-54.pdf", 
   "user": 214, 
   "industries_of_interest": [
    7, 
    37, 
    38, 
    13, 
    15, 
    19, 
    20, 
    27, 
    28
   ], 
   "act": null, 
   "date_created": "2011-09-06 15:25:33"
  }
 }, 
 {
  "pk": 202, 
  "model": "student.student", 
  "fields": {
   "last_name": "Wu", 
   "last_updated": "2011-09-06 16:09:47", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "N", 
   "sat_t": 2340, 
   "sat_v": 740, 
   "sat_w": 800, 
   "keywords": " albert college memorial cambridge rambling scotch plains albertyfwu mit edu education massachusetts institute technology cambridge candidate bachelor eecs economics sept june relevant coursework quantum mechanics physics iii introduction eecs differential equations principles microeconomics union county scotch plains june physics math chemistry chinese skills python matlab working knowledge mandarin cantonese mit sloan management professor andrew cambridge research assistant june compiling analyzing historical index data variety investment vehicles model analyzing aforementioned data using statistics sharpe ratio autocorrelation coefficients matlab programming excel mit media lab ego cambridge research assistant june assisting creating software framework user interface visualize decentralized user centered social architecture storing discovering sharing information expandable applications location reviews buying selling goods developed geographic location shortener geo api url shortener using google maps api tornado web server facilitate user location sharing mit relate cambridge research assistant jan modeled assessment data thousands physics students using item response theory customized responsive online learning students math president sept june organized math weekly monthly meetings practices scheduled math contests events awards physics olympiad semifinalist usa mathematical talent medalist jersey math league central jersey math league", 
   "looking_for": [
    3, 
    2, 
    4
   ], 
   "countries_of_citizenship": [
    "HK", 
    "US"
   ], 
   "first_name": "Albert", 
   "first_major": 12, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.600", 
   "campus_involvement": [
    465, 
    476
   ], 
   "languages": [
    3, 
    44, 
    47, 
    70, 
    107
   ], 
   "profile_created": true, 
   "school_year": 2, 
   "graduation_year": 3, 
   "previous_employers": [
    15
   ], 
   "website": "", 
   "second_major": 14, 
   "resume": "student/student/wu_albert_awu92@mit.edu_2011-09-06-16-09-47.pdf", 
   "user": 215, 
   "industries_of_interest": [
    20, 
    27, 
    28, 
    43, 
    41, 
    36, 
    40
   ], 
   "act": null, 
   "date_created": "2011-09-06 16:05:15"
  }
 }, 
 {
  "pk": 203, 
  "model": "student.student", 
  "fields": {
   "last_name": "Betser", 
   "last_updated": "2011-09-06 17:26:09", 
   "sat_m": 800, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": 2340, 
   "sat_v": 740, 
   "sat_w": 800, 
   "keywords": " dina betser canon beverly hills dbetser mit edu education massachusetts institute technology cambridge gpa bachelor engineering candidate electrical engineering computer minor performance relevant coursework software construction algorithms computation structures artificial intelligence user interface optimization methods graduation date june june eng cambridge university computer laboratory cambridge participant cambridge mit exchange program september june computer tripos google inc june eng internship involving developing service agreements computing services mit eecs department cambridge january eta kappa tutor introductory python january lab assistant introductory python iap answered questions graded assignments google inc june august software engineering intern infrastructure resource management generated metrics internal used allocating compute resources products within google helped achieve objective reduce fulfillment resource requests technologies used python mysql specific data storage backends june august bold practicum engineering intern gmail spam abuse delivery created analyze spam report feedback generate outbound rules ward spam campaigns various google services worked closely consumer operations representative define project priorities project involved coding testing python javascript css html sawzall processing scripting mit collective intelligence cambridge september february researcher professor thomas malone contributed handbook collective intelligence hci organizing content creating templates content within handbook using mediawiki syntax automated updating examples wiki utilizing python scripts reference http bjt aerospace corporation segundo june september intern knowledge management project included portal development aeropedia wiki project presented aeropedia project communities leaders summit august skills experienced proficient python java html css javascript bash scripting matlab glpk prolog leadership associate advisor eecs prof constantinos daskalakis advice sophomores mit hillel mit conservative minyan service organizer adult representative pre frosh liaison coordinator mit alpha epsilon phi sorority scholarship social philanthropy member educator etc cambridge university jewish society webmaster dec june cambridge university google ambassador participant leadershape institute january awards mit phi beta kappa tau beta eta kappa mit autonomous robot competition january overall competition anita borg memorial scholarship finalist society engineers mit scholarship recipient mit web programming competition semifinalist adobe prizewinner january mit panhellenic association member interests clarinetist mit ensemble mit chamber society stanford orchestra languages spanish hebrew miscellaneous running swimming musical theater cooking folk dancing nerdy jokes", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Dina", 
   "first_major": 12, 
   "subscriptions": [
    12, 
    6
   ], 
   "gpa": "4.900", 
   "campus_involvement": [
    9, 
    141, 
    380
   ], 
   "languages": [
    3, 
    128
   ], 
   "profile_created": true, 
   "school_year": 5, 
   "graduation_year": 1, 
   "previous_employers": [
    12
   ], 
   "website": "http://www.linkedin.com/in/dinabetser", 
   "second_major": null, 
   "resume": "student/student/betser_dina_dbetser@mit.edu_2011-09-06-17-26-09.pdf", 
   "user": 216, 
   "industries_of_interest": [
    37, 
    38, 
    11, 
    15, 
    20, 
    36
   ], 
   "act": null, 
   "date_created": "2011-09-06 17:11:40"
  }
 }, 
 {
  "pk": 204, 
  "model": "student.student", 
  "fields": {
   "last_name": "Jazouli", 
   "last_updated": "2011-09-06 17:29:15", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " redwane thomas jazouli pacific cambridge redwane jazouli sloan mit edu education mit sloan management cambridge candidate finance june currently enrolled parallel ensae paristech selected relevant coursework financial markets quantitative finance corporate finance business aspects studying stewart myers douglas breeden andrew kevin john cox nobel prize laureate robert merton gre below ensae paristech paris france paris graduate economics statistics finance founding member paris institute technology candidate economics statistics finance june majoring quantitative finance relevant coursework including financial instruments risk theory stochastic calculus conducted applied programming project automatic trading trend following learning applied mathematics project statistics modeling monte carlo simulation optimization lycee prive saint jean passy paris france preparatory classes mathematics economics completed relevant coursework mathematics economics geopolitics focus global financial markets ranked french lycee victor hugo marrakech morocco scientific baccalaureate equivalent levels mathematics primary secondary studies diploma awarded honors eki metrics consulting paris france consulting resorting quantitative modeling analysis its clients optimize investments jan jun intern junior consultant forecast data mining developed econometric models forecast leading manufacturer optimize its production created statistical models scoring methods data mining processes analyze french leading manufacturer increase its marketing efficiency edf trading markets limited commodities electricity trading paris france intern trading analyst jun dec designed forecast pricing models nuclear production improve ahead trading revenues operational activity provided forecasting pricing ahead intraday electricity traders elaborated trading strategies worked financial risk management issues french central directorate monetary financial statistics paris france intern credit analyst jul aug analyzed french banking request french government created tools predict evolution credit volumes france following financial crisis optimized financial matrix balancing routines national accounts skills languages extracurricular activities fluent french arabic spanish computer skills latex python vba sas stata spss eviews matlab sql bloomberg community ensae events manager organized weekly events travels conferences sport tournaments role included planning budget management negotiation management sponsoring research communication campaigns sports member ensae paristech handball triple moroccan handball champion", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [
    "FR", 
    "MA"
   ], 
   "first_name": "Redwane", 
   "first_major": 23, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.000", 
   "campus_involvement": [], 
   "languages": [
    3, 
    36, 
    72, 
    128
   ], 
   "profile_created": true, 
   "school_year": 5, 
   "graduation_year": 1, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/jazouli_redwane_rjazouli@mit.edu_2011-09-06-17-29-15.pdf", 
   "user": 217, 
   "industries_of_interest": [
    38, 
    12, 
    15, 
    19, 
    25, 
    27, 
    28, 
    31, 
    41, 
    34, 
    40, 
    42
   ], 
   "act": null, 
   "date_created": "2011-09-06 17:18:46"
  }
 }, 
 {
  "pk": 205, 
  "model": "student.student", 
  "fields": {
   "last_name": "Zhu", 
   "last_updated": "2011-09-06 17:23:47", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " henry zhu beacon boston hxzhu mit edu education massachusetts institute technology cambridge bachelors management finance concentration minor mathematics economics relative investments finance theory accounting calculus probability managerial communications macroeconomics microeconomics gpa council committee member overland park kansas honors scholar presidential volunteer service award principal honors gpa graduating professional american investments kansas management intern developed implemented comprehensive mutual fund sales collaborated managers fund information growth equity fixed income asset allocation alternatives conducted qualitative research naming mutual fund launch presented research findings corporate strategy terrain integrated marketing kansas brand ambassador successfully promoted chevrolet automobile brand sporting events collected analyzed consumer data automobile ownership preferences enterprise overland park consistently managed inventoried based enterprise developed presented entrepreneurial business won competition competing member deca association marketing students leadership volunteer mit ncaa varsity baseball significant contributor pitcher ncaa regional varsity letters earned date kansas eastern kansas league scholar athlete delta upsilon fraternity boston undergraduate advisory member community service secretary facilitated communication delta upsilon international provincial chapter presidents leadership institute conference participant organized carried community service events boston metropolitan documented chapter meetings historical recordkeeping youth volunteer corps greater kansas shawnee mission participated community service projects throughout metropolitan habitat humanity restore harvesters bridging gap recycling plus hours dedicated technical skills fluent english conversational mandarin chinese spanish microsoft processing excel spreadsheets powerpoint presentations morningstar certification", 
   "looking_for": [
    2
   ], 
   "countries_of_citizenship": [], 
   "first_name": "Henry", 
   "first_major": 23, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.440", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/zhu_henry_hxzhu@mit.edu_2011-09-06-17-23-46.pdf", 
   "user": 218, 
   "industries_of_interest": [
    37, 
    38, 
    27, 
    28, 
    43, 
    41, 
    34
   ], 
   "act": null, 
   "date_created": "2011-09-06 17:19:30"
  }
 }, 
 {
  "pk": 206, 
  "model": "student.student", 
  "fields": {
   "last_name": "Gopal", 
   "last_updated": "2011-09-06 19:49:30", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": null, 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": null, 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Vineet", 
   "first_major": null, 
   "subscriptions": [
    6
   ], 
   "gpa": null, 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": false, 
   "school_year": null, 
   "graduation_year": null, 
   "previous_employers": [], 
   "website": null, 
   "second_major": null, 
   "resume": "", 
   "user": 219, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-06 21:21:09"
  }
 }, 
 {
  "pk": 207, 
  "model": "student.student", 
  "fields": {
   "last_name": "Chen", 
   "last_updated": "2011-09-06 22:41:20", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " shuang chen education massachusetts institute technology mit cambridge candidate bachelor management concentration marketing gpa june relevant coursework management communication undergraduates microeconomics corporate financial accounting marketing management multivariable calculus tencent boston concord marketing consultant weaknesses weekly assisted marketing director rebranding performed translation critical planning documents chinese english china scranton scranton assistant manager managed restaurant staff manager absent mediated employee disputes coordinated staff orders handled customer complaints customers positive feedback customer referral increased skills computer microsoft java programming mandarin chinese fluent english fluent leadership mit undergraduate association cambridge simmons hall dormitory senator sept pres represented mit dormitory simmons hall mit undergraduate association senate gathered signatures constituents petition dining presented senate passed legislation halt implementation dining activities reading cooking biking asian american association chinese club association taiwanese students", 
   "looking_for": [], 
   "countries_of_citizenship": [], 
   "first_name": "Shuang", 
   "first_major": 23, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.300", 
   "campus_involvement": [], 
   "languages": [], 
   "profile_created": true, 
   "school_year": 3, 
   "graduation_year": 2, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/chen_shuang_shuang61@mit.edu_2011-09-06-22-41-20.pdf", 
   "user": 220, 
   "industries_of_interest": [], 
   "act": null, 
   "date_created": "2011-09-06 21:25:34"
  }
 }, 
 {
  "pk": 208, 
  "model": "student.student", 
  "fields": {
   "last_name": "Oliver", 
   "last_updated": "2011-09-07 00:34:45", 
   "sat_m": 740, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": 2190, 
   "sat_v": 710, 
   "sat_w": 740, 
   "keywords": " mhnh pqh nfr mgh nsn nfr ozf nfr nfr nfr", 
   "looking_for": [
    1
   ], 
   "countries_of_citizenship": [
    "US"
   ], 
   "first_name": "Monica", 
   "first_major": 9, 
   "subscriptions": [
    6
   ], 
   "gpa": "4.400", 
   "campus_involvement": [
    39, 
    248, 
    271, 
    341
   ], 
   "languages": [
    3, 
    129, 
    115, 
    71
   ], 
   "profile_created": true, 
   "school_year": 4, 
   "graduation_year": 1, 
   "previous_employers": [
    25
   ], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/oliver_monica_mco@mit.edu_2011-09-07-00-34-45.pdf", 
   "user": 221, 
   "industries_of_interest": [
    37
   ], 
   "act": null, 
   "date_created": "2011-09-06 21:53:21"
  }
 }, 
 {
  "pk": 210, 
  "model": "student.student", 
  "fields": {
   "last_name": "Lim", 
   "last_updated": "2011-09-06 23:15:20", 
   "sat_m": null, 
   "graduation_month": "5", 
   "older_than_21": "Y", 
   "sat_t": null, 
   "sat_v": null, 
   "sat_w": null, 
   "keywords": " terence ying fan lim albany cambridge terence sloan mit edu education mit sloan management cambridge candidate finance june member investment management club quantitative finance club anticipated coursework fixed income foreign exchange investments options futures ntu nanyang business singapore bachelor business banking finance gpa honors summa cum laude dbs medal awarded ranked banking finance students research thesis seeking arbitrage chinese companies listed hkse sgx uob prize awarded research cohort business students citigroup singapore management associate equity research associate commodities financial institutions supported analysts analyzing financial services commodity chain management companies authored monthly report provided updates analyses economic trends impacting banks analyzed effects asset price crash singapore banks non performing loans report featured conducted interviews attended analyst meetings commodity firm olam international olam stock rallied target price within sales commercial credit cards citibusiness commercial cards acquisitions increase total prospective clients collaborated streamlined submission days days associate global transaction services regional structured engaged marketing activities preparing marketing including presentations external clients prepared financing used training regional sales personnel resulted renewed deals corporate clients associates singapore quantitative research intern created portfolio rebalancing solutions optimized return risk tracking error across multiple asset classes authored portfolio reallocation strategy managerial reallocation currency hedging strategy report institutional clients capitaland singapore business development associate conducted research tlook industrial leadership cfa global investment research competition global competition competed universities worldwide compiled presented investment report comfortdelgro panel judges initiated dec throughout competition apr ntu investment club president committee directed club members organized investment seminars attracted raised historic sponsorship funds program promote financial literacy amongst youths additional skills interests passed cfa mandarin native programming matlab excel vba volunteer organized donations taught craft classes orphans siem reap cambodia interests guitar sailing traveling", 
   "looking_for": [
    1, 
    3, 
    2
   ], 
   "countries_of_citizenship": [
    "SG"
   ], 
   "first_name": "Terence", 
   "first_major": 23, 
   "subscriptions": [
    6
   ], 
   "gpa": "5.000", 
   "campus_involvement": [], 
   "languages": [
    48, 
    3
   ], 
   "profile_created": true, 
   "school_year": 5, 
   "graduation_year": 1, 
   "previous_employers": [], 
   "website": "", 
   "second_major": null, 
   "resume": "student/student/lim_terence_tlim@mit.edu_2011-09-06-23-15-20.pdf", 
   "user": 223, 
   "industries_of_interest": [
    19, 
    28, 
    43, 
    41
   ], 
   "act": null, 
   "date_created": "2011-09-06 23:00:25"
  }
 }, 
 {
  "pk": 33, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-29 20:16:03", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 33, 
   "date_created": "2011-08-29 20:16:03"
  }
 }, 
 {
  "pk": 181, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 10:43:42", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 181, 
   "date_created": "2011-09-06 10:43:42"
  }
 }, 
 {
  "pk": 31, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-29 20:03:50", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 31, 
   "date_created": "2011-08-29 20:03:50"
  }
 }, 
 {
  "pk": 30, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-29 20:03:05", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 30, 
   "date_created": "2011-08-29 20:03:05"
  }
 }, 
 {
  "pk": 34, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-29 20:16:09", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 34, 
   "date_created": "2011-08-29 20:16:09"
  }
 }, 
 {
  "pk": 35, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-29 20:16:50", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 35, 
   "date_created": "2011-08-29 20:16:50"
  }
 }, 
 {
  "pk": 36, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-29 20:17:28", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 36, 
   "date_created": "2011-08-29 20:17:28"
  }
 }, 
 {
  "pk": 37, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-29 20:58:54", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 37, 
   "date_created": "2011-08-29 20:58:54"
  }
 }, 
 {
  "pk": 38, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-29 21:00:58", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 38, 
   "date_created": "2011-08-29 21:00:58"
  }
 }, 
 {
  "pk": 39, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-29 21:01:44", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 39, 
   "date_created": "2011-08-29 21:01:44"
  }
 }, 
 {
  "pk": 40, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-29 21:22:19", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 40, 
   "date_created": "2011-08-29 21:22:19"
  }
 }, 
 {
  "pk": 41, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-29 21:26:04", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 41, 
   "date_created": "2011-08-29 21:26:04"
  }
 }, 
 {
  "pk": 42, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-29 21:45:00", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 42, 
   "date_created": "2011-08-29 21:45:00"
  }
 }, 
 {
  "pk": 43, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-29 21:46:35", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 43, 
   "date_created": "2011-08-29 21:46:35"
  }
 }, 
 {
  "pk": 44, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-29 21:49:46", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 44, 
   "date_created": "2011-08-29 21:49:46"
  }
 }, 
 {
  "pk": 45, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-29 22:07:04", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 45, 
   "date_created": "2011-08-29 22:07:04"
  }
 }, 
 {
  "pk": 46, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-29 22:09:17", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 46, 
   "date_created": "2011-08-29 22:09:17"
  }
 }, 
 {
  "pk": 47, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-29 22:24:34", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 47, 
   "date_created": "2011-08-29 22:24:34"
  }
 }, 
 {
  "pk": 48, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-29 23:04:52", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 48, 
   "date_created": "2011-08-29 23:04:52"
  }
 }, 
 {
  "pk": 49, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-29 23:05:00", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 49, 
   "date_created": "2011-08-29 23:05:00"
  }
 }, 
 {
  "pk": 50, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-29 23:17:38", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 50, 
   "date_created": "2011-08-29 23:17:38"
  }
 }, 
 {
  "pk": 51, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-30 00:00:09", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 51, 
   "date_created": "2011-08-30 00:00:09"
  }
 }, 
 {
  "pk": 52, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-30 00:00:23", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 52, 
   "date_created": "2011-08-30 00:00:23"
  }
 }, 
 {
  "pk": 53, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-30 00:03:35", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 53, 
   "date_created": "2011-08-30 00:03:35"
  }
 }, 
 {
  "pk": 54, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-30 00:05:41", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 54, 
   "date_created": "2011-08-30 00:05:41"
  }
 }, 
 {
  "pk": 55, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-30 00:16:05", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 55, 
   "date_created": "2011-08-30 00:16:05"
  }
 }, 
 {
  "pk": 56, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-30 00:19:45", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 56, 
   "date_created": "2011-08-30 00:19:45"
  }
 }, 
 {
  "pk": 57, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-30 01:24:03", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 57, 
   "date_created": "2011-08-30 01:24:03"
  }
 }, 
 {
  "pk": 58, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-30 02:30:16", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 58, 
   "date_created": "2011-08-30 02:30:16"
  }
 }, 
 {
  "pk": 59, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-30 08:56:08", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 59, 
   "date_created": "2011-08-30 08:56:08"
  }
 }, 
 {
  "pk": 60, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-30 09:13:54", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 60, 
   "date_created": "2011-08-30 09:13:54"
  }
 }, 
 {
  "pk": 61, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-30 09:21:19", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 61, 
   "date_created": "2011-08-30 09:21:19"
  }
 }, 
 {
  "pk": 62, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-30 10:35:26", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 62, 
   "date_created": "2011-08-30 10:35:26"
  }
 }, 
 {
  "pk": 66, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-30 12:27:25", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 66, 
   "date_created": "2011-08-30 12:27:25"
  }
 }, 
 {
  "pk": 70, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-30 14:51:36", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 70, 
   "date_created": "2011-08-30 14:51:36"
  }
 }, 
 {
  "pk": 71, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-30 17:19:49", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 71, 
   "date_created": "2011-08-30 17:19:49"
  }
 }, 
 {
  "pk": 72, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-30 17:21:46", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 72, 
   "date_created": "2011-08-30 17:21:46"
  }
 }, 
 {
  "pk": 75, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-30 21:49:56", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 75, 
   "date_created": "2011-08-30 21:49:56"
  }
 }, 
 {
  "pk": 76, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-31 00:06:22", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 76, 
   "date_created": "2011-08-31 00:06:22"
  }
 }, 
 {
  "pk": 77, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-31 01:03:26", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 77, 
   "date_created": "2011-08-31 01:03:26"
  }
 }, 
 {
  "pk": 79, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-31 12:20:44", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 79, 
   "date_created": "2011-08-31 12:20:44"
  }
 }, 
 {
  "pk": 84, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-08-31 13:35:10", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 84, 
   "date_created": "2011-08-31 13:35:10"
  }
 }, 
 {
  "pk": 87, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-01 12:14:58", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 87, 
   "date_created": "2011-09-01 12:14:58"
  }
 }, 
 {
  "pk": 88, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-01 12:24:28", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 88, 
   "date_created": "2011-09-01 12:24:28"
  }
 }, 
 {
  "pk": 89, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-01 12:54:36", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 89, 
   "date_created": "2011-09-01 12:54:36"
  }
 }, 
 {
  "pk": 90, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-01 13:36:08", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 90, 
   "date_created": "2011-09-01 13:36:08"
  }
 }, 
 {
  "pk": 91, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-01 14:44:59", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 91, 
   "date_created": "2011-09-01 14:44:59"
  }
 }, 
 {
  "pk": 92, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-01 15:14:58", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 92, 
   "date_created": "2011-09-01 15:14:58"
  }
 }, 
 {
  "pk": 93, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-01 16:34:01", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 93, 
   "date_created": "2011-09-01 16:34:01"
  }
 }, 
 {
  "pk": 94, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-01 18:52:06", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 94, 
   "date_created": "2011-09-01 18:52:06"
  }
 }, 
 {
  "pk": 95, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-01 19:13:33", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 95, 
   "date_created": "2011-09-01 19:13:33"
  }
 }, 
 {
  "pk": 96, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-01 19:26:04", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 96, 
   "date_created": "2011-09-01 19:26:04"
  }
 }, 
 {
  "pk": 97, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-01 19:36:35", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 97, 
   "date_created": "2011-09-01 19:36:35"
  }
 }, 
 {
  "pk": 98, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-01 19:38:11", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 98, 
   "date_created": "2011-09-01 19:38:11"
  }
 }, 
 {
  "pk": 99, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-01 19:38:20", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 99, 
   "date_created": "2011-09-01 19:38:20"
  }
 }, 
 {
  "pk": 100, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-01 19:38:21", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 100, 
   "date_created": "2011-09-01 19:38:21"
  }
 }, 
 {
  "pk": 101, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-01 19:53:10", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 101, 
   "date_created": "2011-09-01 19:53:10"
  }
 }, 
 {
  "pk": 102, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-01 20:54:49", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 102, 
   "date_created": "2011-09-01 20:54:49"
  }
 }, 
 {
  "pk": 104, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-01 23:38:01", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 104, 
   "date_created": "2011-09-01 23:38:01"
  }
 }, 
 {
  "pk": 105, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-02 00:12:27", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 105, 
   "date_created": "2011-09-02 00:12:27"
  }
 }, 
 {
  "pk": 106, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-02 00:21:07", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 106, 
   "date_created": "2011-09-02 00:21:07"
  }
 }, 
 {
  "pk": 107, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-02 01:27:12", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 107, 
   "date_created": "2011-09-02 01:27:12"
  }
 }, 
 {
  "pk": 108, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-02 08:19:43", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 108, 
   "date_created": "2011-09-02 08:19:43"
  }
 }, 
 {
  "pk": 109, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-02 08:53:36", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 109, 
   "date_created": "2011-09-02 08:53:36"
  }
 }, 
 {
  "pk": 110, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-02 09:32:00", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 110, 
   "date_created": "2011-09-02 09:32:00"
  }
 }, 
 {
  "pk": 111, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-02 10:39:51", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 111, 
   "date_created": "2011-09-02 10:39:51"
  }
 }, 
 {
  "pk": 112, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-02 10:59:42", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 112, 
   "date_created": "2011-09-02 10:59:42"
  }
 }, 
 {
  "pk": 113, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-02 11:18:07", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 113, 
   "date_created": "2011-09-02 11:18:07"
  }
 }, 
 {
  "pk": 114, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-02 12:25:36", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 114, 
   "date_created": "2011-09-02 12:25:36"
  }
 }, 
 {
  "pk": 115, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-02 12:32:27", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 115, 
   "date_created": "2011-09-02 12:32:27"
  }
 }, 
 {
  "pk": 116, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-02 12:42:27", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 116, 
   "date_created": "2011-09-02 12:42:27"
  }
 }, 
 {
  "pk": 117, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-02 12:58:38", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 117, 
   "date_created": "2011-09-02 12:58:38"
  }
 }, 
 {
  "pk": 118, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-02 14:03:26", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 118, 
   "date_created": "2011-09-02 14:03:26"
  }
 }, 
 {
  "pk": 119, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-02 14:43:48", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 119, 
   "date_created": "2011-09-02 14:43:48"
  }
 }, 
 {
  "pk": 120, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-02 15:26:35", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 120, 
   "date_created": "2011-09-02 15:26:35"
  }
 }, 
 {
  "pk": 121, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-02 15:47:30", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 121, 
   "date_created": "2011-09-02 15:47:30"
  }
 }, 
 {
  "pk": 122, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-02 18:58:32", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 122, 
   "date_created": "2011-09-02 18:58:32"
  }
 }, 
 {
  "pk": 123, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-02 20:34:26", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 123, 
   "date_created": "2011-09-02 20:34:26"
  }
 }, 
 {
  "pk": 124, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-03 00:12:47", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 124, 
   "date_created": "2011-09-03 00:12:47"
  }
 }, 
 {
  "pk": 125, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-03 05:23:17", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 125, 
   "date_created": "2011-09-03 05:23:17"
  }
 }, 
 {
  "pk": 128, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-03 12:08:31", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 128, 
   "date_created": "2011-09-03 12:08:31"
  }
 }, 
 {
  "pk": 129, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-03 12:44:59", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 129, 
   "date_created": "2011-09-03 12:44:59"
  }
 }, 
 {
  "pk": 130, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-03 18:48:42", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 130, 
   "date_created": "2011-09-03 18:48:42"
  }
 }, 
 {
  "pk": 131, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-03 19:38:43", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 131, 
   "date_created": "2011-09-03 19:38:43"
  }
 }, 
 {
  "pk": 132, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-04 11:41:06", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 132, 
   "date_created": "2011-09-04 11:41:06"
  }
 }, 
 {
  "pk": 133, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-04 13:38:13", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 133, 
   "date_created": "2011-09-04 13:38:13"
  }
 }, 
 {
  "pk": 134, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-04 13:39:06", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 134, 
   "date_created": "2011-09-04 13:39:06"
  }
 }, 
 {
  "pk": 135, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-04 13:47:12", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 135, 
   "date_created": "2011-09-04 13:47:12"
  }
 }, 
 {
  "pk": 136, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-04 14:05:34", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 136, 
   "date_created": "2011-09-04 14:05:34"
  }
 }, 
 {
  "pk": 137, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-04 15:39:53", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 137, 
   "date_created": "2011-09-04 15:39:53"
  }
 }, 
 {
  "pk": 138, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-04 16:58:47", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 138, 
   "date_created": "2011-09-04 16:58:47"
  }
 }, 
 {
  "pk": 139, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-04 17:11:33", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 139, 
   "date_created": "2011-09-04 17:11:33"
  }
 }, 
 {
  "pk": 140, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-04 18:26:00", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 140, 
   "date_created": "2011-09-04 18:26:00"
  }
 }, 
 {
  "pk": 141, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-04 18:31:07", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 141, 
   "date_created": "2011-09-04 18:31:07"
  }
 }, 
 {
  "pk": 142, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-04 20:10:05", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 142, 
   "date_created": "2011-09-04 20:10:05"
  }
 }, 
 {
  "pk": 143, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-04 20:57:31", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 143, 
   "date_created": "2011-09-04 20:57:31"
  }
 }, 
 {
  "pk": 144, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 00:11:21", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 144, 
   "date_created": "2011-09-05 00:11:21"
  }
 }, 
 {
  "pk": 145, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 00:25:54", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 145, 
   "date_created": "2011-09-05 00:25:54"
  }
 }, 
 {
  "pk": 146, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 00:35:58", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": false, 
   "student": 146, 
   "date_created": "2011-09-05 00:30:04"
  }
 }, 
 {
  "pk": 147, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 01:50:19", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 147, 
   "date_created": "2011-09-05 01:50:19"
  }
 }, 
 {
  "pk": 148, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 02:14:45", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 148, 
   "date_created": "2011-09-05 02:14:45"
  }
 }, 
 {
  "pk": 149, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 02:56:12", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 149, 
   "date_created": "2011-09-05 02:56:12"
  }
 }, 
 {
  "pk": 150, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 03:20:47", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 150, 
   "date_created": "2011-09-05 03:20:47"
  }
 }, 
 {
  "pk": 151, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 04:00:25", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 151, 
   "date_created": "2011-09-05 04:00:25"
  }
 }, 
 {
  "pk": 152, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 06:57:15", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 152, 
   "date_created": "2011-09-05 06:57:15"
  }
 }, 
 {
  "pk": 153, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 08:43:26", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 153, 
   "date_created": "2011-09-05 08:43:26"
  }
 }, 
 {
  "pk": 154, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 09:17:28", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 154, 
   "date_created": "2011-09-05 09:17:28"
  }
 }, 
 {
  "pk": 155, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 09:20:14", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 155, 
   "date_created": "2011-09-05 09:20:14"
  }
 }, 
 {
  "pk": 156, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 09:30:25", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 156, 
   "date_created": "2011-09-05 09:30:25"
  }
 }, 
 {
  "pk": 157, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 09:34:12", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 157, 
   "date_created": "2011-09-05 09:34:12"
  }
 }, 
 {
  "pk": 158, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 09:55:21", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 158, 
   "date_created": "2011-09-05 09:55:21"
  }
 }, 
 {
  "pk": 159, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 10:08:11", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 159, 
   "date_created": "2011-09-05 10:08:11"
  }
 }, 
 {
  "pk": 160, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 10:33:38", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 160, 
   "date_created": "2011-09-05 10:33:38"
  }
 }, 
 {
  "pk": 161, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 11:51:57", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 161, 
   "date_created": "2011-09-05 11:51:57"
  }
 }, 
 {
  "pk": 162, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 12:16:55", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 162, 
   "date_created": "2011-09-05 12:16:55"
  }
 }, 
 {
  "pk": 163, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 13:09:12", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 163, 
   "date_created": "2011-09-05 13:09:12"
  }
 }, 
 {
  "pk": 164, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 13:20:34", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 164, 
   "date_created": "2011-09-05 13:20:34"
  }
 }, 
 {
  "pk": 165, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 14:21:14", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 165, 
   "date_created": "2011-09-05 14:21:14"
  }
 }, 
 {
  "pk": 166, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 14:36:22", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 166, 
   "date_created": "2011-09-05 14:36:22"
  }
 }, 
 {
  "pk": 167, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 14:46:37", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 167, 
   "date_created": "2011-09-05 14:46:37"
  }
 }, 
 {
  "pk": 168, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 15:46:03", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 168, 
   "date_created": "2011-09-05 15:46:03"
  }
 }, 
 {
  "pk": 169, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 19:52:05", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 169, 
   "date_created": "2011-09-05 19:52:05"
  }
 }, 
 {
  "pk": 170, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 20:37:15", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 170, 
   "date_created": "2011-09-05 20:37:15"
  }
 }, 
 {
  "pk": 171, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 21:17:36", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 171, 
   "date_created": "2011-09-05 21:17:36"
  }
 }, 
 {
  "pk": 172, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 22:32:27", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 172, 
   "date_created": "2011-09-05 22:32:27"
  }
 }, 
 {
  "pk": 173, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 22:33:03", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 173, 
   "date_created": "2011-09-05 22:33:03"
  }
 }, 
 {
  "pk": 174, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 22:44:27", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 174, 
   "date_created": "2011-09-05 22:44:27"
  }
 }, 
 {
  "pk": 175, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-05 22:51:15", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 175, 
   "date_created": "2011-09-05 22:51:15"
  }
 }, 
 {
  "pk": 176, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 01:27:44", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 176, 
   "date_created": "2011-09-06 01:27:44"
  }
 }, 
 {
  "pk": 177, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 01:29:16", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 177, 
   "date_created": "2011-09-06 01:29:16"
  }
 }, 
 {
  "pk": 178, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 02:36:18", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 178, 
   "date_created": "2011-09-06 02:36:18"
  }
 }, 
 {
  "pk": 179, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 09:54:34", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 179, 
   "date_created": "2011-09-06 09:54:34"
  }
 }, 
 {
  "pk": 180, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 10:09:29", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 180, 
   "date_created": "2011-09-06 10:09:29"
  }
 }, 
 {
  "pk": 182, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 10:44:15", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 182, 
   "date_created": "2011-09-06 10:44:15"
  }
 }, 
 {
  "pk": 209, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 22:26:42", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 209, 
   "date_created": "2011-09-06 22:26:42"
  }
 }, 
 {
  "pk": 184, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 10:56:23", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 184, 
   "date_created": "2011-09-06 10:56:23"
  }
 }, 
 {
  "pk": 185, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 10:58:08", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 185, 
   "date_created": "2011-09-06 10:58:08"
  }
 }, 
 {
  "pk": 186, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 11:08:22", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 186, 
   "date_created": "2011-09-06 11:08:22"
  }
 }, 
 {
  "pk": 187, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 11:11:05", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 187, 
   "date_created": "2011-09-06 11:11:05"
  }
 }, 
 {
  "pk": 188, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 11:23:39", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 188, 
   "date_created": "2011-09-06 11:23:39"
  }
 }, 
 {
  "pk": 189, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 11:28:33", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 189, 
   "date_created": "2011-09-06 11:28:33"
  }
 }, 
 {
  "pk": 190, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 11:37:42", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 190, 
   "date_created": "2011-09-06 11:37:42"
  }
 }, 
 {
  "pk": 191, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 11:38:26", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 191, 
   "date_created": "2011-09-06 11:38:26"
  }
 }, 
 {
  "pk": 192, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 11:48:02", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 192, 
   "date_created": "2011-09-06 11:48:02"
  }
 }, 
 {
  "pk": 193, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 12:01:26", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 193, 
   "date_created": "2011-09-06 12:01:26"
  }
 }, 
 {
  "pk": 194, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 12:20:29", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 194, 
   "date_created": "2011-09-06 12:20:29"
  }
 }, 
 {
  "pk": 195, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 12:42:09", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 195, 
   "date_created": "2011-09-06 12:42:09"
  }
 }, 
 {
  "pk": 196, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 13:01:18", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 196, 
   "date_created": "2011-09-06 13:01:18"
  }
 }, 
 {
  "pk": 197, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 13:44:27", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 197, 
   "date_created": "2011-09-06 13:44:27"
  }
 }, 
 {
  "pk": 198, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 14:06:09", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 198, 
   "date_created": "2011-09-06 14:06:09"
  }
 }, 
 {
  "pk": 199, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 14:26:41", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 199, 
   "date_created": "2011-09-06 14:26:41"
  }
 }, 
 {
  "pk": 200, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 15:16:15", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 200, 
   "date_created": "2011-09-06 15:16:15"
  }
 }, 
 {
  "pk": 201, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 15:25:33", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 201, 
   "date_created": "2011-09-06 15:25:33"
  }
 }, 
 {
  "pk": 202, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 16:05:15", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 202, 
   "date_created": "2011-09-06 16:05:15"
  }
 }, 
 {
  "pk": 203, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 17:11:40", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 203, 
   "date_created": "2011-09-06 17:11:40"
  }
 }, 
 {
  "pk": 204, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 17:18:46", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 204, 
   "date_created": "2011-09-06 17:18:46"
  }
 }, 
 {
  "pk": 205, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 17:19:30", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 205, 
   "date_created": "2011-09-06 17:19:30"
  }
 }, 
 {
  "pk": 206, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 21:21:09", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 206, 
   "date_created": "2011-09-06 21:21:09"
  }
 }, 
 {
  "pk": 207, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 21:25:34", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 207, 
   "date_created": "2011-09-06 21:25:34"
  }
 }, 
 {
  "pk": 208, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 21:53:21", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 208, 
   "date_created": "2011-09-06 21:53:21"
  }
 }, 
 {
  "pk": 210, 
  "model": "student.studentpreferences", 
  "fields": {
   "email_on_new_subscribed_employer_event": true, 
   "last_updated": "2011-09-06 23:00:25", 
   "email_on_invite_to_private_event": true, 
   "email_on_invite_to_public_event": true, 
   "student": 210, 
   "date_created": "2011-09-06 23:00:25"
  }
 }, 
 {
  "pk": 33, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 19, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 33, 
   "date_created": "2011-08-29 20:16:03"
  }
 }, 
 {
  "pk": 181, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 7, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 181, 
   "date_created": "2011-09-06 10:43:42"
  }
 }, 
 {
  "pk": 31, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 17, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 31, 
   "date_created": "2011-08-29 20:03:50"
  }
 }, 
 {
  "pk": 30, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 18, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 30, 
   "date_created": "2011-08-29 20:03:05"
  }
 }, 
 {
  "pk": 34, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 17, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 34, 
   "date_created": "2011-08-29 20:16:09"
  }
 }, 
 {
  "pk": 35, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 18, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 35, 
   "date_created": "2011-08-29 20:16:50"
  }
 }, 
 {
  "pk": 36, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 15, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 36, 
   "date_created": "2011-08-29 20:17:28"
  }
 }, 
 {
  "pk": 37, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-08-29 20:58:54", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 37, 
   "date_created": "2011-08-29 20:58:54"
  }
 }, 
 {
  "pk": 38, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 16, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 38, 
   "date_created": "2011-08-29 21:00:58"
  }
 }, 
 {
  "pk": 39, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-08-29 21:01:44", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 39, 
   "date_created": "2011-08-29 21:01:44"
  }
 }, 
 {
  "pk": 40, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-08-29 21:22:19", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 40, 
   "date_created": "2011-08-29 21:22:19"
  }
 }, 
 {
  "pk": 41, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 16, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 41, 
   "date_created": "2011-08-29 21:26:04"
  }
 }, 
 {
  "pk": 42, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-08-29 21:45:00", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 42, 
   "date_created": "2011-08-29 21:45:00"
  }
 }, 
 {
  "pk": 43, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 15, 
   "last_updated": "2011-09-06 11:59:51", 
   "resume_view_count": 1, 
   "add_to_resumebook_count": 1, 
   "student": 43, 
   "date_created": "2011-08-29 21:46:35"
  }
 }, 
 {
  "pk": 44, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 14, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 44, 
   "date_created": "2011-08-29 21:49:46"
  }
 }, 
 {
  "pk": 45, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-08-29 22:07:04", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 45, 
   "date_created": "2011-08-29 22:07:04"
  }
 }, 
 {
  "pk": 46, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-08-29 22:09:17", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 46, 
   "date_created": "2011-08-29 22:09:17"
  }
 }, 
 {
  "pk": 47, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-08-29 22:24:34", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 47, 
   "date_created": "2011-08-29 22:24:34"
  }
 }, 
 {
  "pk": 48, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-08-29 23:04:52", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 48, 
   "date_created": "2011-08-29 23:04:52"
  }
 }, 
 {
  "pk": 49, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-08-29 23:05:00", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 49, 
   "date_created": "2011-08-29 23:05:00"
  }
 }, 
 {
  "pk": 50, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 15, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 50, 
   "date_created": "2011-08-29 23:17:38"
  }
 }, 
 {
  "pk": 51, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 13, 
   "last_updated": "2011-09-06 11:59:51", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 51, 
   "date_created": "2011-08-30 00:00:09"
  }
 }, 
 {
  "pk": 52, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-08-30 00:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 52, 
   "date_created": "2011-08-30 00:00:23"
  }
 }, 
 {
  "pk": 53, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 16, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 53, 
   "date_created": "2011-08-30 00:03:35"
  }
 }, 
 {
  "pk": 54, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 16, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 54, 
   "date_created": "2011-08-30 00:05:41"
  }
 }, 
 {
  "pk": 55, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-08-30 00:16:05", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 55, 
   "date_created": "2011-08-30 00:16:05"
  }
 }, 
 {
  "pk": 56, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 17, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 56, 
   "date_created": "2011-08-30 00:19:45"
  }
 }, 
 {
  "pk": 57, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 14, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 57, 
   "date_created": "2011-08-30 01:24:03"
  }
 }, 
 {
  "pk": 58, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-08-30 02:30:16", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 58, 
   "date_created": "2011-08-30 02:30:16"
  }
 }, 
 {
  "pk": 59, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 14, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 59, 
   "date_created": "2011-08-30 08:56:08"
  }
 }, 
 {
  "pk": 60, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 14, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 60, 
   "date_created": "2011-08-30 09:13:54"
  }
 }, 
 {
  "pk": 61, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 14, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 61, 
   "date_created": "2011-08-30 09:21:19"
  }
 }, 
 {
  "pk": 62, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 16, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 62, 
   "date_created": "2011-08-30 10:35:26"
  }
 }, 
 {
  "pk": 66, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 15, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 66, 
   "date_created": "2011-08-30 12:27:25"
  }
 }, 
 {
  "pk": 70, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 4, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 70, 
   "date_created": "2011-08-30 14:51:36"
  }
 }, 
 {
  "pk": 71, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-08-30 17:19:49", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 71, 
   "date_created": "2011-08-30 17:19:49"
  }
 }, 
 {
  "pk": 72, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 15, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 72, 
   "date_created": "2011-08-30 17:21:46"
  }
 }, 
 {
  "pk": 75, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-08-30 21:49:56", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 75, 
   "date_created": "2011-08-30 21:49:56"
  }
 }, 
 {
  "pk": 76, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 15, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 76, 
   "date_created": "2011-08-31 00:06:22"
  }
 }, 
 {
  "pk": 77, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-08-31 01:03:26", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 77, 
   "date_created": "2011-08-31 01:03:26"
  }
 }, 
 {
  "pk": 79, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 15, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 79, 
   "date_created": "2011-08-31 12:20:44"
  }
 }, 
 {
  "pk": 84, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-08-31 13:35:10", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 84, 
   "date_created": "2011-08-31 13:35:10"
  }
 }, 
 {
  "pk": 87, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 16, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 87, 
   "date_created": "2011-09-01 12:14:58"
  }
 }, 
 {
  "pk": 88, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 14, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 88, 
   "date_created": "2011-09-01 12:24:28"
  }
 }, 
 {
  "pk": 89, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 14, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 89, 
   "date_created": "2011-09-01 12:54:36"
  }
 }, 
 {
  "pk": 90, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 17, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 90, 
   "date_created": "2011-09-01 13:36:08"
  }
 }, 
 {
  "pk": 91, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 13, 
   "last_updated": "2011-09-06 11:59:51", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 91, 
   "date_created": "2011-09-01 14:44:59"
  }
 }, 
 {
  "pk": 92, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 15, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 92, 
   "date_created": "2011-09-01 15:14:58"
  }
 }, 
 {
  "pk": 93, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 14, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 93, 
   "date_created": "2011-09-01 16:34:01"
  }
 }, 
 {
  "pk": 94, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 14, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 94, 
   "date_created": "2011-09-01 18:52:06"
  }
 }, 
 {
  "pk": 95, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 15, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 95, 
   "date_created": "2011-09-01 19:13:33"
  }
 }, 
 {
  "pk": 96, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 14, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 96, 
   "date_created": "2011-09-01 19:26:04"
  }
 }, 
 {
  "pk": 97, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 15, 
   "last_updated": "2011-09-06 11:59:52", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 97, 
   "date_created": "2011-09-01 19:36:35"
  }
 }, 
 {
  "pk": 98, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 15, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 98, 
   "date_created": "2011-09-01 19:38:11"
  }
 }, 
 {
  "pk": 99, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 15, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 99, 
   "date_created": "2011-09-01 19:38:20"
  }
 }, 
 {
  "pk": 100, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 14, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 100, 
   "date_created": "2011-09-01 19:38:21"
  }
 }, 
 {
  "pk": 101, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 15, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 101, 
   "date_created": "2011-09-01 19:53:10"
  }
 }, 
 {
  "pk": 102, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-01 20:54:49", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 102, 
   "date_created": "2011-09-01 20:54:49"
  }
 }, 
 {
  "pk": 104, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-01 23:38:01", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 104, 
   "date_created": "2011-09-01 23:38:01"
  }
 }, 
 {
  "pk": 105, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 16, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 105, 
   "date_created": "2011-09-02 00:12:27"
  }
 }, 
 {
  "pk": 106, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 15, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 106, 
   "date_created": "2011-09-02 00:21:07"
  }
 }, 
 {
  "pk": 107, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 13, 
   "last_updated": "2011-09-06 11:59:52", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 107, 
   "date_created": "2011-09-02 01:27:12"
  }
 }, 
 {
  "pk": 108, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 14, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 108, 
   "date_created": "2011-09-02 08:19:43"
  }
 }, 
 {
  "pk": 109, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 15, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 109, 
   "date_created": "2011-09-02 08:53:36"
  }
 }, 
 {
  "pk": 110, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 13, 
   "last_updated": "2011-09-06 11:59:52", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 110, 
   "date_created": "2011-09-02 09:32:00"
  }
 }, 
 {
  "pk": 111, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 13, 
   "last_updated": "2011-09-06 11:59:51", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 111, 
   "date_created": "2011-09-02 10:39:51"
  }
 }, 
 {
  "pk": 112, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 14, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 112, 
   "date_created": "2011-09-02 10:59:42"
  }
 }, 
 {
  "pk": 113, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 12, 
   "last_updated": "2011-09-06 11:57:50", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 113, 
   "date_created": "2011-09-02 11:18:07"
  }
 }, 
 {
  "pk": 114, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 14, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 114, 
   "date_created": "2011-09-02 12:25:36"
  }
 }, 
 {
  "pk": 115, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 14, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 115, 
   "date_created": "2011-09-02 12:32:27"
  }
 }, 
 {
  "pk": 116, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 15, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 116, 
   "date_created": "2011-09-02 12:42:27"
  }
 }, 
 {
  "pk": 117, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 15, 
   "last_updated": "2011-09-06 11:59:52", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 117, 
   "date_created": "2011-09-02 12:58:38"
  }
 }, 
 {
  "pk": 118, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 14, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 118, 
   "date_created": "2011-09-02 14:03:26"
  }
 }, 
 {
  "pk": 119, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 14, 
   "last_updated": "2011-09-06 11:59:51", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 119, 
   "date_created": "2011-09-02 14:43:48"
  }
 }, 
 {
  "pk": 120, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 17, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 120, 
   "date_created": "2011-09-02 15:26:35"
  }
 }, 
 {
  "pk": 121, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-02 15:47:30", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 121, 
   "date_created": "2011-09-02 15:47:30"
  }
 }, 
 {
  "pk": 122, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 14, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 122, 
   "date_created": "2011-09-02 18:58:32"
  }
 }, 
 {
  "pk": 123, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 17, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 123, 
   "date_created": "2011-09-02 20:34:26"
  }
 }, 
 {
  "pk": 124, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-03 00:12:47", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 124, 
   "date_created": "2011-09-03 00:12:47"
  }
 }, 
 {
  "pk": 125, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 14, 
   "last_updated": "2011-09-06 11:59:51", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 125, 
   "date_created": "2011-09-03 05:23:17"
  }
 }, 
 {
  "pk": 128, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 19, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 128, 
   "date_created": "2011-09-03 12:08:31"
  }
 }, 
 {
  "pk": 129, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 16, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 129, 
   "date_created": "2011-09-03 12:44:59"
  }
 }, 
 {
  "pk": 130, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 15, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 130, 
   "date_created": "2011-09-03 18:48:42"
  }
 }, 
 {
  "pk": 131, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-03 19:38:43", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 131, 
   "date_created": "2011-09-03 19:38:43"
  }
 }, 
 {
  "pk": 132, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-04 11:41:06", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 132, 
   "date_created": "2011-09-04 11:41:06"
  }
 }, 
 {
  "pk": 133, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 15, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 133, 
   "date_created": "2011-09-04 13:38:13"
  }
 }, 
 {
  "pk": 134, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 15, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 134, 
   "date_created": "2011-09-04 13:39:06"
  }
 }, 
 {
  "pk": 135, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 14, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 135, 
   "date_created": "2011-09-04 13:47:12"
  }
 }, 
 {
  "pk": 136, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-04 14:05:34", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 136, 
   "date_created": "2011-09-04 14:05:34"
  }
 }, 
 {
  "pk": 137, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-04 15:39:53", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 137, 
   "date_created": "2011-09-04 15:39:53"
  }
 }, 
 {
  "pk": 138, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 17, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 138, 
   "date_created": "2011-09-04 16:58:47"
  }
 }, 
 {
  "pk": 139, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 16, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 139, 
   "date_created": "2011-09-04 17:11:33"
  }
 }, 
 {
  "pk": 140, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 14, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 140, 
   "date_created": "2011-09-04 18:26:00"
  }
 }, 
 {
  "pk": 141, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 17, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 141, 
   "date_created": "2011-09-04 18:31:07"
  }
 }, 
 {
  "pk": 142, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 16, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 142, 
   "date_created": "2011-09-04 20:10:05"
  }
 }, 
 {
  "pk": 143, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 12, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 143, 
   "date_created": "2011-09-04 20:57:31"
  }
 }, 
 {
  "pk": 144, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 13, 
   "last_updated": "2011-09-06 11:59:51", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 144, 
   "date_created": "2011-09-05 00:11:21"
  }
 }, 
 {
  "pk": 145, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 16, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 145, 
   "date_created": "2011-09-05 00:25:54"
  }
 }, 
 {
  "pk": 146, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 17, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 146, 
   "date_created": "2011-09-05 00:30:04"
  }
 }, 
 {
  "pk": 147, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 15, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 1, 
   "add_to_resumebook_count": 1, 
   "student": 147, 
   "date_created": "2011-09-05 01:50:19"
  }
 }, 
 {
  "pk": 148, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 14, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 148, 
   "date_created": "2011-09-05 02:14:45"
  }
 }, 
 {
  "pk": 149, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 14, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 149, 
   "date_created": "2011-09-05 02:56:12"
  }
 }, 
 {
  "pk": 150, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 15, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 150, 
   "date_created": "2011-09-05 03:20:47"
  }
 }, 
 {
  "pk": 151, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 17, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 151, 
   "date_created": "2011-09-05 04:00:25"
  }
 }, 
 {
  "pk": 152, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 15, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 152, 
   "date_created": "2011-09-05 06:57:15"
  }
 }, 
 {
  "pk": 153, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 17, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 153, 
   "date_created": "2011-09-05 08:43:26"
  }
 }, 
 {
  "pk": 154, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-05 09:17:28", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 154, 
   "date_created": "2011-09-05 09:17:28"
  }
 }, 
 {
  "pk": 155, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 17, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 155, 
   "date_created": "2011-09-05 09:20:14"
  }
 }, 
 {
  "pk": 156, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 14, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 156, 
   "date_created": "2011-09-05 09:30:25"
  }
 }, 
 {
  "pk": 157, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 17, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 157, 
   "date_created": "2011-09-05 09:34:12"
  }
 }, 
 {
  "pk": 158, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 14, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 158, 
   "date_created": "2011-09-05 09:55:21"
  }
 }, 
 {
  "pk": 159, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-05 10:08:11", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 159, 
   "date_created": "2011-09-05 10:08:11"
  }
 }, 
 {
  "pk": 160, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 14, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 160, 
   "date_created": "2011-09-05 10:33:38"
  }
 }, 
 {
  "pk": 161, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 13, 
   "last_updated": "2011-09-06 11:59:51", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 161, 
   "date_created": "2011-09-05 11:51:57"
  }
 }, 
 {
  "pk": 162, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-05 12:16:55", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 162, 
   "date_created": "2011-09-05 12:16:55"
  }
 }, 
 {
  "pk": 163, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 10, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 163, 
   "date_created": "2011-09-05 13:09:12"
  }
 }, 
 {
  "pk": 164, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 16, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 164, 
   "date_created": "2011-09-05 13:20:34"
  }
 }, 
 {
  "pk": 165, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 9, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 165, 
   "date_created": "2011-09-05 14:21:14"
  }
 }, 
 {
  "pk": 166, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 9, 
   "last_updated": "2011-09-06 20:55:57", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 166, 
   "date_created": "2011-09-05 14:36:22"
  }
 }, 
 {
  "pk": 167, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 8, 
   "last_updated": "2011-09-06 20:54:13", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 167, 
   "date_created": "2011-09-05 14:46:37"
  }
 }, 
 {
  "pk": 168, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 17, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 168, 
   "date_created": "2011-09-05 15:46:03"
  }
 }, 
 {
  "pk": 169, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 11, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 169, 
   "date_created": "2011-09-05 19:52:05"
  }
 }, 
 {
  "pk": 170, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 7, 
   "last_updated": "2011-09-06 11:59:51", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 170, 
   "date_created": "2011-09-05 20:37:15"
  }
 }, 
 {
  "pk": 171, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 6, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 171, 
   "date_created": "2011-09-05 21:17:36"
  }
 }, 
 {
  "pk": 172, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 14, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 172, 
   "date_created": "2011-09-05 22:32:27"
  }
 }, 
 {
  "pk": 173, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 16, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 173, 
   "date_created": "2011-09-05 22:33:03"
  }
 }, 
 {
  "pk": 174, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 7, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 174, 
   "date_created": "2011-09-05 22:44:27"
  }
 }, 
 {
  "pk": 175, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 5, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 175, 
   "date_created": "2011-09-05 22:51:15"
  }
 }, 
 {
  "pk": 176, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 13, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 176, 
   "date_created": "2011-09-06 01:27:44"
  }
 }, 
 {
  "pk": 177, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 14, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 177, 
   "date_created": "2011-09-06 01:29:16"
  }
 }, 
 {
  "pk": 178, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 13, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 178, 
   "date_created": "2011-09-06 02:36:18"
  }
 }, 
 {
  "pk": 179, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-06 09:54:34", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 179, 
   "date_created": "2011-09-06 09:54:34"
  }
 }, 
 {
  "pk": 180, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 7, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 180, 
   "date_created": "2011-09-06 10:09:29"
  }
 }, 
 {
  "pk": 182, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 7, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 182, 
   "date_created": "2011-09-06 10:44:15"
  }
 }, 
 {
  "pk": 209, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-06 22:26:42", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 209, 
   "date_created": "2011-09-06 22:26:42"
  }
 }, 
 {
  "pk": 184, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 9, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 184, 
   "date_created": "2011-09-06 10:56:23"
  }
 }, 
 {
  "pk": 185, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-06 10:58:08", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 185, 
   "date_created": "2011-09-06 10:58:08"
  }
 }, 
 {
  "pk": 186, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 7, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 186, 
   "date_created": "2011-09-06 11:08:22"
  }
 }, 
 {
  "pk": 187, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 7, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 187, 
   "date_created": "2011-09-06 11:11:05"
  }
 }, 
 {
  "pk": 188, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-06 11:23:39", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 188, 
   "date_created": "2011-09-06 11:23:39"
  }
 }, 
 {
  "pk": 189, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 6, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 189, 
   "date_created": "2011-09-06 11:28:33"
  }
 }, 
 {
  "pk": 190, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 4, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 190, 
   "date_created": "2011-09-06 11:37:42"
  }
 }, 
 {
  "pk": 191, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 7, 
   "last_updated": "2011-09-06 12:00:02", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 191, 
   "date_created": "2011-09-06 11:38:26"
  }
 }, 
 {
  "pk": 192, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 4, 
   "last_updated": "2011-09-06 12:00:23", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 1, 
   "student": 192, 
   "date_created": "2011-09-06 11:48:02"
  }
 }, 
 {
  "pk": 193, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-06 12:01:26", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 193, 
   "date_created": "2011-09-06 12:01:26"
  }
 }, 
 {
  "pk": 194, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-06 12:20:29", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 194, 
   "date_created": "2011-09-06 12:20:29"
  }
 }, 
 {
  "pk": 195, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-06 12:42:09", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 195, 
   "date_created": "2011-09-06 12:42:09"
  }
 }, 
 {
  "pk": 196, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-06 13:01:18", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 196, 
   "date_created": "2011-09-06 13:01:18"
  }
 }, 
 {
  "pk": 197, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-06 13:44:27", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 197, 
   "date_created": "2011-09-06 13:44:27"
  }
 }, 
 {
  "pk": 198, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-06 14:06:09", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 198, 
   "date_created": "2011-09-06 14:06:09"
  }
 }, 
 {
  "pk": 199, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-06 14:26:41", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 199, 
   "date_created": "2011-09-06 14:26:41"
  }
 }, 
 {
  "pk": 200, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-06 15:16:15", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 200, 
   "date_created": "2011-09-06 15:16:15"
  }
 }, 
 {
  "pk": 201, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-06 15:25:33", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 201, 
   "date_created": "2011-09-06 15:25:33"
  }
 }, 
 {
  "pk": 202, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-06 16:05:15", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 202, 
   "date_created": "2011-09-06 16:05:15"
  }
 }, 
 {
  "pk": 203, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-06 17:11:40", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 203, 
   "date_created": "2011-09-06 17:11:40"
  }
 }, 
 {
  "pk": 204, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-06 17:18:46", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 204, 
   "date_created": "2011-09-06 17:18:46"
  }
 }, 
 {
  "pk": 205, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-06 17:19:30", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 205, 
   "date_created": "2011-09-06 17:19:30"
  }
 }, 
 {
  "pk": 206, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-06 21:21:09", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 206, 
   "date_created": "2011-09-06 21:21:09"
  }
 }, 
 {
  "pk": 207, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-06 21:25:34", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 207, 
   "date_created": "2011-09-06 21:25:34"
  }
 }, 
 {
  "pk": 208, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-06 21:53:21", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 208, 
   "date_created": "2011-09-06 21:53:21"
  }
 }, 
 {
  "pk": 210, 
  "model": "student.studentstatistics", 
  "fields": {
   "shown_in_results_count": 0, 
   "last_updated": "2011-09-06 23:00:25", 
   "resume_view_count": 0, 
   "add_to_resumebook_count": 0, 
   "student": 210, 
   "date_created": "2011-09-06 23:00:25"
  }
 }, 
 {
  "pk": 88, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:16", 
   "code": "YOVjzn", 
   "last_updated": "2011-08-29 20:13:16", 
   "used": false
  }
 }, 
 {
  "pk": 87, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:16", 
   "code": "hRV4C7", 
   "last_updated": "2011-08-29 20:13:16", 
   "used": false
  }
 }, 
 {
  "pk": 86, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:16", 
   "code": "L7k7SF", 
   "last_updated": "2011-08-29 20:13:16", 
   "used": false
  }
 }, 
 {
  "pk": 85, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:16", 
   "code": "63eRZM", 
   "last_updated": "2011-08-29 20:13:16", 
   "used": false
  }
 }, 
 {
  "pk": 84, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:16", 
   "code": "Nf564y", 
   "last_updated": "2011-08-29 20:13:16", 
   "used": false
  }
 }, 
 {
  "pk": 83, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:16", 
   "code": "LbcX9w", 
   "last_updated": "2011-08-29 20:13:16", 
   "used": false
  }
 }, 
 {
  "pk": 82, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:16", 
   "code": "ZQSQ8Q", 
   "last_updated": "2011-08-29 20:13:16", 
   "used": false
  }
 }, 
 {
  "pk": 81, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:16", 
   "code": "VHsQ6g", 
   "last_updated": "2011-08-29 20:13:16", 
   "used": false
  }
 }, 
 {
  "pk": 80, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:16", 
   "code": "ZdZTi4", 
   "last_updated": "2011-08-29 20:13:16", 
   "used": false
  }
 }, 
 {
  "pk": 79, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:16", 
   "code": "95aOuJ", 
   "last_updated": "2011-08-29 20:13:16", 
   "used": false
  }
 }, 
 {
  "pk": 78, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:16", 
   "code": "3OQ0PF", 
   "last_updated": "2011-08-29 20:13:16", 
   "used": false
  }
 }, 
 {
  "pk": 77, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:16", 
   "code": "j3sgiO", 
   "last_updated": "2011-08-30 08:56:08", 
   "used": true
  }
 }, 
 {
  "pk": 76, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:02:42", 
   "code": "Cz8xCr", 
   "last_updated": "2011-08-29 20:02:42", 
   "used": false
  }
 }, 
 {
  "pk": 75, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:02:42", 
   "code": "ZaxBVo", 
   "last_updated": "2011-08-29 20:02:42", 
   "used": false
  }
 }, 
 {
  "pk": 74, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:02:42", 
   "code": "fPgoQ2", 
   "last_updated": "2011-08-29 20:02:42", 
   "used": false
  }
 }, 
 {
  "pk": 73, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:02:42", 
   "code": "73WPw8", 
   "last_updated": "2011-08-29 20:03:50", 
   "used": true
  }
 }, 
 {
  "pk": 72, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:02:42", 
   "code": "oLKgZD", 
   "last_updated": "2011-08-29 20:02:42", 
   "used": false
  }
 }, 
 {
  "pk": 71, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:02:42", 
   "code": "AhpCKS", 
   "last_updated": "2011-08-29 20:02:42", 
   "used": false
  }
 }, 
 {
  "pk": 70, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:02:42", 
   "code": "MvyLhG", 
   "last_updated": "2011-08-29 20:02:42", 
   "used": false
  }
 }, 
 {
  "pk": 69, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:02:42", 
   "code": "WMMo7n", 
   "last_updated": "2011-08-29 20:03:05", 
   "used": true
  }
 }, 
 {
  "pk": 68, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:02:42", 
   "code": "9smYsw", 
   "last_updated": "2011-08-30 12:12:40", 
   "used": true
  }
 }, 
 {
  "pk": 67, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:02:42", 
   "code": "9N1gLG", 
   "last_updated": "2011-08-30 11:35:27", 
   "used": true
  }
 }, 
 {
  "pk": 66, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:02:42", 
   "code": "1Qglyr", 
   "last_updated": "2011-08-30 11:06:30", 
   "used": true
  }
 }, 
 {
  "pk": 65, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:02:42", 
   "code": "98c74A", 
   "last_updated": "2011-08-29 20:06:35", 
   "used": true
  }
 }, 
 {
  "pk": 89, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:16", 
   "code": "HB4nLZ", 
   "last_updated": "2011-08-29 22:07:04", 
   "used": true
  }
 }, 
 {
  "pk": 90, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:16", 
   "code": "eJz528", 
   "last_updated": "2011-08-29 20:13:16", 
   "used": false
  }
 }, 
 {
  "pk": 91, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:16", 
   "code": "fIN6IE", 
   "last_updated": "2011-08-29 20:13:16", 
   "used": false
  }
 }, 
 {
  "pk": 92, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:16", 
   "code": "x1CI0v", 
   "last_updated": "2011-08-29 20:13:16", 
   "used": false
  }
 }, 
 {
  "pk": 93, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "a2yEj6", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 94, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "c7fvqQ", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 95, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "Pn0Bu8", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 96, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "TJtgv9", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 97, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "YRGubb", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 98, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "AA1JOB", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 99, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "2PLoCL", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 100, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "gZmZ78", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 101, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "kwEgIa", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 102, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "kNwhEU", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 103, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "OqRZsZ", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 104, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "zeM6pw", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 105, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "BuW49L", 
   "last_updated": "2011-08-30 00:00:23", 
   "used": true
  }
 }, 
 {
  "pk": 106, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "kFFAZn", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 107, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "UBfqaX", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 108, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "rCcHx3", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 109, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "knk5vV", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 110, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "b3UGXG", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 111, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "NGRqtp", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 112, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "VFJ0PH", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 113, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "eCjTVc", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 114, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "FhAi3V", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 115, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "OPxY2O", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 116, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "GIE5Uh", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 117, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "W0W6OQ", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 118, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "hvYtDv", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 119, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "mWYNyG", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 120, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "H40PWm", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 121, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "kTiI7c", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 122, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "XSUufQ", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 123, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "0AQTkG", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 124, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:17", 
   "code": "g5fSEQ", 
   "last_updated": "2011-08-29 20:13:17", 
   "used": false
  }
 }, 
 {
  "pk": 125, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:18", 
   "code": "42Tc0i", 
   "last_updated": "2011-08-29 20:13:18", 
   "used": false
  }
 }, 
 {
  "pk": 126, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:18", 
   "code": "QQEqbk", 
   "last_updated": "2011-08-29 20:13:18", 
   "used": false
  }
 }, 
 {
  "pk": 127, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:18", 
   "code": "40nPwA", 
   "last_updated": "2011-08-29 20:13:18", 
   "used": false
  }
 }, 
 {
  "pk": 128, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:18", 
   "code": "Eqxi3C", 
   "last_updated": "2011-08-29 20:13:18", 
   "used": false
  }
 }, 
 {
  "pk": 129, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:18", 
   "code": "98lu0J", 
   "last_updated": "2011-08-29 20:13:18", 
   "used": false
  }
 }, 
 {
  "pk": 130, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:18", 
   "code": "WLXAAI", 
   "last_updated": "2011-08-29 20:13:18", 
   "used": false
  }
 }, 
 {
  "pk": 131, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:18", 
   "code": "XiiTOG", 
   "last_updated": "2011-08-29 20:13:18", 
   "used": false
  }
 }, 
 {
  "pk": 132, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:18", 
   "code": "s7hL3i", 
   "last_updated": "2011-08-29 20:13:18", 
   "used": false
  }
 }, 
 {
  "pk": 133, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:18", 
   "code": "gSsnNj", 
   "last_updated": "2011-08-29 20:13:18", 
   "used": false
  }
 }, 
 {
  "pk": 134, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:18", 
   "code": "r2lpir", 
   "last_updated": "2011-08-29 20:13:18", 
   "used": false
  }
 }, 
 {
  "pk": 135, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:18", 
   "code": "M1vdSI", 
   "last_updated": "2011-08-29 20:13:18", 
   "used": false
  }
 }, 
 {
  "pk": 136, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:18", 
   "code": "6o8UdK", 
   "last_updated": "2011-08-29 20:13:18", 
   "used": false
  }
 }, 
 {
  "pk": 137, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:18", 
   "code": "mwO0kn", 
   "last_updated": "2011-08-29 20:13:18", 
   "used": false
  }
 }, 
 {
  "pk": 138, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:18", 
   "code": "99FXWX", 
   "last_updated": "2011-08-29 20:13:18", 
   "used": false
  }
 }, 
 {
  "pk": 139, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:18", 
   "code": "DndHIo", 
   "last_updated": "2011-08-29 20:13:18", 
   "used": false
  }
 }, 
 {
  "pk": 140, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:18", 
   "code": "PM7N3J", 
   "last_updated": "2011-08-29 20:13:18", 
   "used": false
  }
 }, 
 {
  "pk": 141, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:18", 
   "code": "nmyuyP", 
   "last_updated": "2011-08-29 20:13:18", 
   "used": false
  }
 }, 
 {
  "pk": 142, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:18", 
   "code": "f4ICng", 
   "last_updated": "2011-08-29 20:13:18", 
   "used": false
  }
 }, 
 {
  "pk": 143, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:18", 
   "code": "xSunbd", 
   "last_updated": "2011-08-29 20:13:18", 
   "used": false
  }
 }, 
 {
  "pk": 144, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:18", 
   "code": "Ly5DRI", 
   "last_updated": "2011-08-29 20:13:18", 
   "used": false
  }
 }, 
 {
  "pk": 145, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:18", 
   "code": "YvXfCt", 
   "last_updated": "2011-08-29 22:09:17", 
   "used": true
  }
 }, 
 {
  "pk": 146, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:18", 
   "code": "QPgtgx", 
   "last_updated": "2011-08-29 20:13:18", 
   "used": false
  }
 }, 
 {
  "pk": 147, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:18", 
   "code": "Dquk0c", 
   "last_updated": "2011-08-29 20:13:18", 
   "used": false
  }
 }, 
 {
  "pk": 148, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:18", 
   "code": "hK3bQr", 
   "last_updated": "2011-08-29 20:13:18", 
   "used": false
  }
 }, 
 {
  "pk": 149, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:18", 
   "code": "gFgRtm", 
   "last_updated": "2011-08-29 20:13:18", 
   "used": false
  }
 }, 
 {
  "pk": 150, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:18", 
   "code": "cvf9R1", 
   "last_updated": "2011-08-29 20:13:18", 
   "used": false
  }
 }, 
 {
  "pk": 151, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:18", 
   "code": "hoV5MC", 
   "last_updated": "2011-08-29 20:13:18", 
   "used": false
  }
 }, 
 {
  "pk": 152, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:18", 
   "code": "hWDiwH", 
   "last_updated": "2011-08-29 20:13:18", 
   "used": false
  }
 }, 
 {
  "pk": 153, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:19", 
   "code": "ylrxGG", 
   "last_updated": "2011-08-30 00:00:09", 
   "used": true
  }
 }, 
 {
  "pk": 154, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:19", 
   "code": "MeTNBI", 
   "last_updated": "2011-08-29 20:13:19", 
   "used": false
  }
 }, 
 {
  "pk": 155, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:19", 
   "code": "bObB8R", 
   "last_updated": "2011-08-29 20:13:19", 
   "used": false
  }
 }, 
 {
  "pk": 156, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:19", 
   "code": "lLSFUW", 
   "last_updated": "2011-08-29 20:13:19", 
   "used": false
  }
 }, 
 {
  "pk": 157, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:19", 
   "code": "qZiGUA", 
   "last_updated": "2011-08-29 20:13:19", 
   "used": false
  }
 }, 
 {
  "pk": 158, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:19", 
   "code": "XlQFPD", 
   "last_updated": "2011-08-29 20:13:19", 
   "used": false
  }
 }, 
 {
  "pk": 159, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:19", 
   "code": "ZH9cnx", 
   "last_updated": "2011-08-29 20:13:19", 
   "used": false
  }
 }, 
 {
  "pk": 160, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:19", 
   "code": "yfnT89", 
   "last_updated": "2011-08-29 20:13:19", 
   "used": false
  }
 }, 
 {
  "pk": 161, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:19", 
   "code": "WwZkJa", 
   "last_updated": "2011-08-29 21:46:35", 
   "used": true
  }
 }, 
 {
  "pk": 162, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:19", 
   "code": "eBiADD", 
   "last_updated": "2011-08-29 20:13:19", 
   "used": false
  }
 }, 
 {
  "pk": 163, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:19", 
   "code": "aJVJSW", 
   "last_updated": "2011-08-29 20:13:19", 
   "used": false
  }
 }, 
 {
  "pk": 164, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:19", 
   "code": "7Z3R8Z", 
   "last_updated": "2011-08-29 20:13:19", 
   "used": false
  }
 }, 
 {
  "pk": 165, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:19", 
   "code": "A2RdmO", 
   "last_updated": "2011-08-29 20:13:19", 
   "used": false
  }
 }, 
 {
  "pk": 166, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:19", 
   "code": "IEqzuU", 
   "last_updated": "2011-08-29 20:13:19", 
   "used": false
  }
 }, 
 {
  "pk": 167, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:19", 
   "code": "BRC8dK", 
   "last_updated": "2011-08-29 20:13:19", 
   "used": false
  }
 }, 
 {
  "pk": 168, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:19", 
   "code": "LuEOht", 
   "last_updated": "2011-08-29 20:13:19", 
   "used": false
  }
 }, 
 {
  "pk": 169, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:19", 
   "code": "mpHWzX", 
   "last_updated": "2011-08-29 20:13:19", 
   "used": false
  }
 }, 
 {
  "pk": 170, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:19", 
   "code": "nRxQQf", 
   "last_updated": "2011-08-29 20:13:19", 
   "used": false
  }
 }, 
 {
  "pk": 171, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:19", 
   "code": "dRTCcW", 
   "last_updated": "2011-08-29 20:13:19", 
   "used": false
  }
 }, 
 {
  "pk": 172, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:19", 
   "code": "j2g41P", 
   "last_updated": "2011-08-29 20:13:19", 
   "used": false
  }
 }, 
 {
  "pk": 173, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:19", 
   "code": "SNGzNx", 
   "last_updated": "2011-08-29 20:13:19", 
   "used": false
  }
 }, 
 {
  "pk": 174, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:19", 
   "code": "pjrmSZ", 
   "last_updated": "2011-08-29 20:13:19", 
   "used": false
  }
 }, 
 {
  "pk": 175, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:19", 
   "code": "tr3G7Y", 
   "last_updated": "2011-08-29 20:13:19", 
   "used": false
  }
 }, 
 {
  "pk": 176, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:19", 
   "code": "iJI1mp", 
   "last_updated": "2011-08-29 20:13:19", 
   "used": false
  }
 }, 
 {
  "pk": 177, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:19", 
   "code": "GQVbTf", 
   "last_updated": "2011-08-29 21:26:04", 
   "used": true
  }
 }, 
 {
  "pk": 178, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:19", 
   "code": "ZT0QZl", 
   "last_updated": "2011-08-29 20:13:19", 
   "used": false
  }
 }, 
 {
  "pk": 179, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:19", 
   "code": "u0V3Yz", 
   "last_updated": "2011-08-29 20:13:19", 
   "used": false
  }
 }, 
 {
  "pk": 180, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:19", 
   "code": "jN13pP", 
   "last_updated": "2011-08-29 20:13:19", 
   "used": false
  }
 }, 
 {
  "pk": 181, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:20", 
   "code": "ChL2Kd", 
   "last_updated": "2011-08-29 20:13:20", 
   "used": false
  }
 }, 
 {
  "pk": 182, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:20", 
   "code": "IR18ow", 
   "last_updated": "2011-08-29 20:13:20", 
   "used": false
  }
 }, 
 {
  "pk": 183, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:20", 
   "code": "dFWnam", 
   "last_updated": "2011-08-29 20:13:20", 
   "used": false
  }
 }, 
 {
  "pk": 184, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:20", 
   "code": "fun5q5", 
   "last_updated": "2011-08-29 20:13:20", 
   "used": false
  }
 }, 
 {
  "pk": 185, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:20", 
   "code": "6ORUhs", 
   "last_updated": "2011-08-29 20:13:20", 
   "used": false
  }
 }, 
 {
  "pk": 186, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:20", 
   "code": "jyDgcm", 
   "last_updated": "2011-08-29 20:13:20", 
   "used": false
  }
 }, 
 {
  "pk": 187, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:20", 
   "code": "Pj27Pt", 
   "last_updated": "2011-08-29 20:13:20", 
   "used": false
  }
 }, 
 {
  "pk": 188, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:20", 
   "code": "osvDzo", 
   "last_updated": "2011-08-29 20:13:20", 
   "used": false
  }
 }, 
 {
  "pk": 189, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:20", 
   "code": "f8zaR6", 
   "last_updated": "2011-08-29 20:13:20", 
   "used": false
  }
 }, 
 {
  "pk": 190, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:20", 
   "code": "0ixoeJ", 
   "last_updated": "2011-08-29 20:13:20", 
   "used": false
  }
 }, 
 {
  "pk": 191, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:20", 
   "code": "lI9wI1", 
   "last_updated": "2011-08-29 20:13:20", 
   "used": false
  }
 }, 
 {
  "pk": 192, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:20", 
   "code": "wwavaX", 
   "last_updated": "2011-08-29 20:13:20", 
   "used": false
  }
 }, 
 {
  "pk": 193, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:20", 
   "code": "2tPXe8", 
   "last_updated": "2011-08-31 00:06:22", 
   "used": true
  }
 }, 
 {
  "pk": 194, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:20", 
   "code": "dnABdC", 
   "last_updated": "2011-08-29 20:13:20", 
   "used": false
  }
 }, 
 {
  "pk": 195, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:20", 
   "code": "wLlSfx", 
   "last_updated": "2011-08-29 20:13:20", 
   "used": false
  }
 }, 
 {
  "pk": 196, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:20", 
   "code": "r3yPOz", 
   "last_updated": "2011-08-29 20:13:20", 
   "used": false
  }
 }, 
 {
  "pk": 197, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:20", 
   "code": "1355jQ", 
   "last_updated": "2011-08-29 20:13:20", 
   "used": false
  }
 }, 
 {
  "pk": 198, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:20", 
   "code": "noV2qX", 
   "last_updated": "2011-08-29 20:13:20", 
   "used": false
  }
 }, 
 {
  "pk": 199, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:20", 
   "code": "5Pr3j0", 
   "last_updated": "2011-08-29 20:13:20", 
   "used": false
  }
 }, 
 {
  "pk": 200, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:20", 
   "code": "FQB22I", 
   "last_updated": "2011-08-29 20:13:20", 
   "used": false
  }
 }, 
 {
  "pk": 201, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:20", 
   "code": "JRKIRA", 
   "last_updated": "2011-08-29 20:13:20", 
   "used": false
  }
 }, 
 {
  "pk": 202, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:20", 
   "code": "i0j6ck", 
   "last_updated": "2011-08-29 20:13:20", 
   "used": false
  }
 }, 
 {
  "pk": 203, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:20", 
   "code": "3IXfjO", 
   "last_updated": "2011-08-29 20:13:20", 
   "used": false
  }
 }, 
 {
  "pk": 204, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:20", 
   "code": "4n9QML", 
   "last_updated": "2011-08-29 20:13:20", 
   "used": false
  }
 }, 
 {
  "pk": 205, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:20", 
   "code": "4pFDlh", 
   "last_updated": "2011-08-29 21:00:58", 
   "used": true
  }
 }, 
 {
  "pk": 206, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:20", 
   "code": "4XEV37", 
   "last_updated": "2011-08-29 20:13:20", 
   "used": false
  }
 }, 
 {
  "pk": 207, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:20", 
   "code": "yn1QLi", 
   "last_updated": "2011-08-29 20:13:20", 
   "used": false
  }
 }, 
 {
  "pk": 208, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:20", 
   "code": "fdzHEs", 
   "last_updated": "2011-08-29 20:13:20", 
   "used": false
  }
 }, 
 {
  "pk": 209, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:21", 
   "code": "UTIEm0", 
   "last_updated": "2011-08-29 20:16:50", 
   "used": true
  }
 }, 
 {
  "pk": 210, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:21", 
   "code": "lfLsmw", 
   "last_updated": "2011-08-29 20:13:21", 
   "used": false
  }
 }, 
 {
  "pk": 211, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:21", 
   "code": "h3UfcX", 
   "last_updated": "2011-08-29 20:13:21", 
   "used": false
  }
 }, 
 {
  "pk": 212, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:21", 
   "code": "YvMDB9", 
   "last_updated": "2011-08-29 20:13:21", 
   "used": false
  }
 }, 
 {
  "pk": 213, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:21", 
   "code": "LlTncW", 
   "last_updated": "2011-08-30 00:03:35", 
   "used": true
  }
 }, 
 {
  "pk": 214, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:21", 
   "code": "GkzSHd", 
   "last_updated": "2011-08-29 20:13:21", 
   "used": false
  }
 }, 
 {
  "pk": 215, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:21", 
   "code": "wZ9aQq", 
   "last_updated": "2011-08-29 20:13:21", 
   "used": false
  }
 }, 
 {
  "pk": 216, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:21", 
   "code": "lmDzQR", 
   "last_updated": "2011-08-29 20:13:21", 
   "used": false
  }
 }, 
 {
  "pk": 217, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:21", 
   "code": "F07Srf", 
   "last_updated": "2011-08-29 20:13:21", 
   "used": false
  }
 }, 
 {
  "pk": 218, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:21", 
   "code": "86wPL9", 
   "last_updated": "2011-08-29 20:13:21", 
   "used": false
  }
 }, 
 {
  "pk": 219, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:21", 
   "code": "lxwmBM", 
   "last_updated": "2011-08-29 20:13:21", 
   "used": false
  }
 }, 
 {
  "pk": 220, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:21", 
   "code": "KrHkHL", 
   "last_updated": "2011-08-29 20:13:21", 
   "used": false
  }
 }, 
 {
  "pk": 221, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:21", 
   "code": "VSG4yS", 
   "last_updated": "2011-08-29 20:13:21", 
   "used": false
  }
 }, 
 {
  "pk": 222, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:21", 
   "code": "U8Yr9j", 
   "last_updated": "2011-08-29 20:13:21", 
   "used": false
  }
 }, 
 {
  "pk": 223, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:21", 
   "code": "pIS704", 
   "last_updated": "2011-08-29 20:13:21", 
   "used": false
  }
 }, 
 {
  "pk": 224, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:21", 
   "code": "atMx8s", 
   "last_updated": "2011-08-29 20:13:21", 
   "used": false
  }
 }, 
 {
  "pk": 225, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:21", 
   "code": "6ucwy5", 
   "last_updated": "2011-08-29 20:13:21", 
   "used": false
  }
 }, 
 {
  "pk": 226, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:21", 
   "code": "rcfqFB", 
   "last_updated": "2011-08-29 20:13:21", 
   "used": false
  }
 }, 
 {
  "pk": 227, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:21", 
   "code": "4mAXcw", 
   "last_updated": "2011-08-29 20:13:21", 
   "used": false
  }
 }, 
 {
  "pk": 228, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:21", 
   "code": "iX6sTL", 
   "last_updated": "2011-08-29 20:13:21", 
   "used": false
  }
 }, 
 {
  "pk": 229, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:21", 
   "code": "qE8r5U", 
   "last_updated": "2011-08-29 20:13:21", 
   "used": false
  }
 }, 
 {
  "pk": 230, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:21", 
   "code": "g8UK3R", 
   "last_updated": "2011-08-29 20:13:21", 
   "used": false
  }
 }, 
 {
  "pk": 231, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:21", 
   "code": "13cSM2", 
   "last_updated": "2011-08-29 20:13:21", 
   "used": false
  }
 }, 
 {
  "pk": 232, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:21", 
   "code": "IInGSm", 
   "last_updated": "2011-08-29 20:13:21", 
   "used": false
  }
 }, 
 {
  "pk": 233, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:21", 
   "code": "WI7y9b", 
   "last_updated": "2011-08-29 20:13:21", 
   "used": false
  }
 }, 
 {
  "pk": 234, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:21", 
   "code": "mIaud9", 
   "last_updated": "2011-08-29 20:13:21", 
   "used": false
  }
 }, 
 {
  "pk": 235, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:21", 
   "code": "nA0w28", 
   "last_updated": "2011-08-29 20:13:21", 
   "used": false
  }
 }, 
 {
  "pk": 236, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:21", 
   "code": "gNlf62", 
   "last_updated": "2011-08-29 20:13:21", 
   "used": false
  }
 }, 
 {
  "pk": 237, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "8JlBeg", 
   "last_updated": "2011-08-30 00:19:45", 
   "used": true
  }
 }, 
 {
  "pk": 238, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "7zXc4h", 
   "last_updated": "2011-08-29 20:13:22", 
   "used": false
  }
 }, 
 {
  "pk": 239, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "ygnKx1", 
   "last_updated": "2011-08-29 20:13:22", 
   "used": false
  }
 }, 
 {
  "pk": 240, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "bgSOFG", 
   "last_updated": "2011-08-29 20:13:22", 
   "used": false
  }
 }, 
 {
  "pk": 241, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "zogJtw", 
   "last_updated": "2011-08-29 20:13:22", 
   "used": false
  }
 }, 
 {
  "pk": 242, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "fd2KW0", 
   "last_updated": "2011-08-29 20:13:22", 
   "used": false
  }
 }, 
 {
  "pk": 243, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "J2kgkK", 
   "last_updated": "2011-08-29 20:13:22", 
   "used": false
  }
 }, 
 {
  "pk": 244, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "lckSAK", 
   "last_updated": "2011-08-29 20:13:22", 
   "used": false
  }
 }, 
 {
  "pk": 245, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "18A26w", 
   "last_updated": "2011-08-29 21:49:46", 
   "used": true
  }
 }, 
 {
  "pk": 246, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "5AmtzH", 
   "last_updated": "2011-08-29 20:13:22", 
   "used": false
  }
 }, 
 {
  "pk": 247, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "qlYiVU", 
   "last_updated": "2011-08-29 20:13:22", 
   "used": false
  }
 }, 
 {
  "pk": 248, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "Jwqapo", 
   "last_updated": "2011-08-29 20:13:22", 
   "used": false
  }
 }, 
 {
  "pk": 249, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "ARFfIR", 
   "last_updated": "2011-08-29 20:13:22", 
   "used": false
  }
 }, 
 {
  "pk": 250, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "k93RSw", 
   "last_updated": "2011-08-29 20:13:22", 
   "used": false
  }
 }, 
 {
  "pk": 251, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "WbftDg", 
   "last_updated": "2011-08-29 20:13:22", 
   "used": false
  }
 }, 
 {
  "pk": 252, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "QVBVYT", 
   "last_updated": "2011-08-29 20:13:22", 
   "used": false
  }
 }, 
 {
  "pk": 253, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "WKeSGj", 
   "last_updated": "2011-08-30 10:35:26", 
   "used": true
  }
 }, 
 {
  "pk": 254, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "bzqvzG", 
   "last_updated": "2011-08-29 20:13:22", 
   "used": false
  }
 }, 
 {
  "pk": 255, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "PkbyRv", 
   "last_updated": "2011-08-29 20:13:22", 
   "used": false
  }
 }, 
 {
  "pk": 256, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "cYHKNB", 
   "last_updated": "2011-08-29 20:13:22", 
   "used": false
  }
 }, 
 {
  "pk": 257, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "m4g3Wk", 
   "last_updated": "2011-08-29 20:13:22", 
   "used": false
  }
 }, 
 {
  "pk": 258, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "phEW6V", 
   "last_updated": "2011-08-29 20:13:22", 
   "used": false
  }
 }, 
 {
  "pk": 259, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "RJRghV", 
   "last_updated": "2011-08-29 20:13:22", 
   "used": false
  }
 }, 
 {
  "pk": 260, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "UqtniN", 
   "last_updated": "2011-08-29 20:13:22", 
   "used": false
  }
 }, 
 {
  "pk": 261, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "nrt92n", 
   "last_updated": "2011-08-30 01:24:03", 
   "used": true
  }
 }, 
 {
  "pk": 262, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "vtStJB", 
   "last_updated": "2011-08-29 20:13:22", 
   "used": false
  }
 }, 
 {
  "pk": 263, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "uZrjVh", 
   "last_updated": "2011-08-29 20:13:22", 
   "used": false
  }
 }, 
 {
  "pk": 264, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "WzP2IT", 
   "last_updated": "2011-08-29 20:13:22", 
   "used": false
  }
 }, 
 {
  "pk": 265, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "lfTqJM", 
   "last_updated": "2011-08-29 20:13:22", 
   "used": false
  }
 }, 
 {
  "pk": 266, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "ZE3zAP", 
   "last_updated": "2011-08-29 20:13:22", 
   "used": false
  }
 }, 
 {
  "pk": 267, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "KjQoxB", 
   "last_updated": "2011-08-29 20:13:22", 
   "used": false
  }
 }, 
 {
  "pk": 268, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:22", 
   "code": "G1IKw1", 
   "last_updated": "2011-08-29 20:13:22", 
   "used": false
  }
 }, 
 {
  "pk": 269, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:23", 
   "code": "R7fLqU", 
   "last_updated": "2011-08-29 20:58:54", 
   "used": true
  }
 }, 
 {
  "pk": 270, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:23", 
   "code": "BHJ5CK", 
   "last_updated": "2011-08-29 20:13:23", 
   "used": false
  }
 }, 
 {
  "pk": 271, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:23", 
   "code": "bsEglW", 
   "last_updated": "2011-08-29 20:13:23", 
   "used": false
  }
 }, 
 {
  "pk": 272, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:23", 
   "code": "nNFky5", 
   "last_updated": "2011-08-29 20:13:23", 
   "used": false
  }
 }, 
 {
  "pk": 273, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:23", 
   "code": "jPQH5y", 
   "last_updated": "2011-08-29 20:13:23", 
   "used": false
  }
 }, 
 {
  "pk": 274, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:23", 
   "code": "n3zFT2", 
   "last_updated": "2011-08-29 20:13:23", 
   "used": false
  }
 }, 
 {
  "pk": 275, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:23", 
   "code": "6zOVcu", 
   "last_updated": "2011-08-29 20:13:23", 
   "used": false
  }
 }, 
 {
  "pk": 276, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:23", 
   "code": "naY14R", 
   "last_updated": "2011-08-29 20:13:23", 
   "used": false
  }
 }, 
 {
  "pk": 277, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:23", 
   "code": "Dh5V9I", 
   "last_updated": "2011-08-29 21:22:19", 
   "used": true
  }
 }, 
 {
  "pk": 278, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:23", 
   "code": "Vf2CKq", 
   "last_updated": "2011-08-29 20:13:23", 
   "used": false
  }
 }, 
 {
  "pk": 279, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:23", 
   "code": "pRtevz", 
   "last_updated": "2011-08-29 20:13:23", 
   "used": false
  }
 }, 
 {
  "pk": 280, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:23", 
   "code": "K7cJoI", 
   "last_updated": "2011-08-29 20:13:23", 
   "used": false
  }
 }, 
 {
  "pk": 281, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:23", 
   "code": "VhvzuR", 
   "last_updated": "2011-08-29 20:13:23", 
   "used": false
  }
 }, 
 {
  "pk": 282, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:23", 
   "code": "X45SDY", 
   "last_updated": "2011-08-29 20:13:23", 
   "used": false
  }
 }, 
 {
  "pk": 283, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:23", 
   "code": "0ljI9g", 
   "last_updated": "2011-08-29 20:13:23", 
   "used": false
  }
 }, 
 {
  "pk": 284, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:23", 
   "code": "Fh2H0N", 
   "last_updated": "2011-08-29 20:13:23", 
   "used": false
  }
 }, 
 {
  "pk": 285, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:23", 
   "code": "HQ0KCb", 
   "last_updated": "2011-08-30 00:05:41", 
   "used": true
  }
 }, 
 {
  "pk": 286, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:23", 
   "code": "Db0Skq", 
   "last_updated": "2011-08-29 20:13:23", 
   "used": false
  }
 }, 
 {
  "pk": 287, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:23", 
   "code": "sTTHkO", 
   "last_updated": "2011-08-29 20:13:23", 
   "used": false
  }
 }, 
 {
  "pk": 288, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:23", 
   "code": "Rx5VwG", 
   "last_updated": "2011-08-29 20:13:23", 
   "used": false
  }
 }, 
 {
  "pk": 289, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:23", 
   "code": "rGdnBa", 
   "last_updated": "2011-08-31 13:35:10", 
   "used": true
  }
 }, 
 {
  "pk": 290, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:23", 
   "code": "5EdALd", 
   "last_updated": "2011-08-29 20:13:23", 
   "used": false
  }
 }, 
 {
  "pk": 291, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:23", 
   "code": "v7Wmuz", 
   "last_updated": "2011-08-29 20:13:23", 
   "used": false
  }
 }, 
 {
  "pk": 292, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:23", 
   "code": "FCUd2P", 
   "last_updated": "2011-08-29 20:13:23", 
   "used": false
  }
 }, 
 {
  "pk": 293, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:23", 
   "code": "EwZfjW", 
   "last_updated": "2011-08-29 20:13:23", 
   "used": false
  }
 }, 
 {
  "pk": 294, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:23", 
   "code": "CIHpft", 
   "last_updated": "2011-08-29 20:13:23", 
   "used": false
  }
 }, 
 {
  "pk": 295, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:23", 
   "code": "btjznc", 
   "last_updated": "2011-08-29 20:13:23", 
   "used": false
  }
 }, 
 {
  "pk": 296, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:23", 
   "code": "xNNIij", 
   "last_updated": "2011-08-29 20:13:23", 
   "used": false
  }
 }, 
 {
  "pk": 297, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "RY2zMM", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 298, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "6rXn4N", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 299, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "YiTdye", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 300, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "nfrjmz", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 301, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "Euqdzh", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 302, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "8H2GI5", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 303, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "VWmTVz", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 304, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "T3RoRL", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 305, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "DkcZxa", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 306, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "qANVK1", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 307, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "chj2k1", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 308, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "6nsW7B", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 309, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "fP1xEG", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 310, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "oT7XVo", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 311, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "dzmffy", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 312, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "5thXFL", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 313, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "VYW1f8", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 314, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "vJQnh0", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 315, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "iFbX2j", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 316, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "TBt7ef", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 317, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "dWf1M5", 
   "last_updated": "2011-08-29 21:01:44", 
   "used": true
  }
 }, 
 {
  "pk": 318, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "giP9jg", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 319, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "XofT54", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 320, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "vQ1mNq", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 321, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "YKyAwM", 
   "last_updated": "2011-08-30 09:21:19", 
   "used": true
  }
 }, 
 {
  "pk": 322, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "Aj52jU", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 323, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "7t3zo7", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 324, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "pAQICF", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 325, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "JssYbW", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 326, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "nTe9E5", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 327, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "sk3OPQ", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 328, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:24", 
   "code": "Hi6G6j", 
   "last_updated": "2011-08-29 20:13:24", 
   "used": false
  }
 }, 
 {
  "pk": 329, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:25", 
   "code": "I3Dsyz", 
   "last_updated": "2011-08-29 20:13:25", 
   "used": false
  }
 }, 
 {
  "pk": 330, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:25", 
   "code": "Xt2KoD", 
   "last_updated": "2011-08-29 20:13:25", 
   "used": false
  }
 }, 
 {
  "pk": 331, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:25", 
   "code": "zK83Q5", 
   "last_updated": "2011-08-29 20:13:25", 
   "used": false
  }
 }, 
 {
  "pk": 332, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:25", 
   "code": "quXNup", 
   "last_updated": "2011-08-29 20:13:25", 
   "used": false
  }
 }, 
 {
  "pk": 333, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:25", 
   "code": "Oqsn21", 
   "last_updated": "2011-08-29 20:13:25", 
   "used": false
  }
 }, 
 {
  "pk": 334, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:25", 
   "code": "x3lsZe", 
   "last_updated": "2011-08-29 20:13:25", 
   "used": false
  }
 }, 
 {
  "pk": 335, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:25", 
   "code": "TckUEW", 
   "last_updated": "2011-08-29 20:13:25", 
   "used": false
  }
 }, 
 {
  "pk": 336, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:25", 
   "code": "oJ7G93", 
   "last_updated": "2011-08-29 20:13:25", 
   "used": false
  }
 }, 
 {
  "pk": 337, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:25", 
   "code": "eDZEEE", 
   "last_updated": "2011-08-29 20:13:25", 
   "used": false
  }
 }, 
 {
  "pk": 338, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:25", 
   "code": "vspxcR", 
   "last_updated": "2011-08-29 20:13:25", 
   "used": false
  }
 }, 
 {
  "pk": 339, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:25", 
   "code": "L9j74s", 
   "last_updated": "2011-08-29 20:13:25", 
   "used": false
  }
 }, 
 {
  "pk": 340, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:25", 
   "code": "xMhtq1", 
   "last_updated": "2011-08-29 20:13:25", 
   "used": false
  }
 }, 
 {
  "pk": 341, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:25", 
   "code": "ng9Kw7", 
   "last_updated": "2011-08-29 20:13:25", 
   "used": false
  }
 }, 
 {
  "pk": 342, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:25", 
   "code": "DCgSAT", 
   "last_updated": "2011-08-29 20:13:25", 
   "used": false
  }
 }, 
 {
  "pk": 343, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:25", 
   "code": "HfL6Eg", 
   "last_updated": "2011-08-29 20:13:25", 
   "used": false
  }
 }, 
 {
  "pk": 344, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:25", 
   "code": "8JRCyT", 
   "last_updated": "2011-08-29 20:13:25", 
   "used": false
  }
 }, 
 {
  "pk": 345, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:25", 
   "code": "Fp3B15", 
   "last_updated": "2011-08-29 20:13:25", 
   "used": false
  }
 }, 
 {
  "pk": 346, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:25", 
   "code": "fyNpnf", 
   "last_updated": "2011-08-29 20:13:25", 
   "used": false
  }
 }, 
 {
  "pk": 347, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:25", 
   "code": "fyPWxg", 
   "last_updated": "2011-08-29 20:13:25", 
   "used": false
  }
 }, 
 {
  "pk": 348, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:25", 
   "code": "vktBGi", 
   "last_updated": "2011-08-29 20:13:25", 
   "used": false
  }
 }, 
 {
  "pk": 349, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:25", 
   "code": "G3BDLt", 
   "last_updated": "2011-08-29 20:13:25", 
   "used": false
  }
 }, 
 {
  "pk": 350, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:25", 
   "code": "gbPRo0", 
   "last_updated": "2011-08-29 20:13:25", 
   "used": false
  }
 }, 
 {
  "pk": 351, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:25", 
   "code": "RNOGoj", 
   "last_updated": "2011-08-29 20:13:25", 
   "used": false
  }
 }, 
 {
  "pk": 352, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:25", 
   "code": "zfBOe9", 
   "last_updated": "2011-08-29 20:13:25", 
   "used": false
  }
 }, 
 {
  "pk": 353, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:25", 
   "code": "hVIHGH", 
   "last_updated": "2011-08-29 22:24:34", 
   "used": true
  }
 }, 
 {
  "pk": 354, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:25", 
   "code": "PgaEGt", 
   "last_updated": "2011-08-29 20:13:25", 
   "used": false
  }
 }, 
 {
  "pk": 355, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:25", 
   "code": "pcD1AT", 
   "last_updated": "2011-08-29 20:13:25", 
   "used": false
  }
 }, 
 {
  "pk": 356, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:25", 
   "code": "zOJZ59", 
   "last_updated": "2011-08-29 20:13:25", 
   "used": false
  }
 }, 
 {
  "pk": 357, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "qtmVbx", 
   "last_updated": "2011-08-30 02:30:16", 
   "used": true
  }
 }, 
 {
  "pk": 358, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "CDVT7K", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 359, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "MmcHAt", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 360, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "64LKsy", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 361, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "23QzH8", 
   "last_updated": "2011-08-29 23:17:39", 
   "used": true
  }
 }, 
 {
  "pk": 362, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "bid50i", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 363, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "YMTDQI", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 364, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "cFPxya", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 365, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "C3pNHo", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 366, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "QFNhEZ", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 367, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "SVDxU7", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 368, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "3CnaBQ", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 369, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "cLMxvG", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 370, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "IqY10N", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 371, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "VyIyp5", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 372, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "3V5Zfc", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 373, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "BGsdcg", 
   "last_updated": "2011-08-30 12:27:25", 
   "used": true
  }
 }, 
 {
  "pk": 374, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "GriKqM", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 375, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "kkA6Ly", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 376, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "v20ZoI", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 377, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "0UpIXV", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 378, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "tK3O3W", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 379, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "0IxEci", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 380, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "002w7R", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 381, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "OBhzbE", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 382, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "iK4CqH", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 383, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "0iwtHs", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 384, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "cyjLSr", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 385, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "npDG9x", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 386, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "Eosl1h", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 387, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "loRGln", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 388, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:26", 
   "code": "AwdPKd", 
   "last_updated": "2011-08-29 20:13:26", 
   "used": false
  }
 }, 
 {
  "pk": 389, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:27", 
   "code": "3TGBq4", 
   "last_updated": "2011-08-29 20:13:27", 
   "used": false
  }
 }, 
 {
  "pk": 390, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:27", 
   "code": "bfLA60", 
   "last_updated": "2011-08-29 20:13:27", 
   "used": false
  }
 }, 
 {
  "pk": 391, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:27", 
   "code": "O9dskg", 
   "last_updated": "2011-08-29 20:13:27", 
   "used": false
  }
 }, 
 {
  "pk": 392, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:27", 
   "code": "sDk420", 
   "last_updated": "2011-08-29 20:13:27", 
   "used": false
  }
 }, 
 {
  "pk": 393, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:27", 
   "code": "T59TuP", 
   "last_updated": "2011-08-30 17:21:46", 
   "used": true
  }
 }, 
 {
  "pk": 394, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:27", 
   "code": "XldNJH", 
   "last_updated": "2011-08-29 20:13:27", 
   "used": false
  }
 }, 
 {
  "pk": 395, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:27", 
   "code": "E0EIzQ", 
   "last_updated": "2011-08-29 20:13:27", 
   "used": false
  }
 }, 
 {
  "pk": 396, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:27", 
   "code": "TpyywO", 
   "last_updated": "2011-08-29 20:13:27", 
   "used": false
  }
 }, 
 {
  "pk": 397, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:27", 
   "code": "JmMxNs", 
   "last_updated": "2011-08-29 20:13:27", 
   "used": false
  }
 }, 
 {
  "pk": 398, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:27", 
   "code": "kXvTfZ", 
   "last_updated": "2011-08-29 20:13:27", 
   "used": false
  }
 }, 
 {
  "pk": 399, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:27", 
   "code": "KOO8DN", 
   "last_updated": "2011-08-29 20:13:27", 
   "used": false
  }
 }, 
 {
  "pk": 400, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:27", 
   "code": "Ih1mko", 
   "last_updated": "2011-08-29 20:13:27", 
   "used": false
  }
 }, 
 {
  "pk": 401, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:27", 
   "code": "N3RkXk", 
   "last_updated": "2011-08-29 20:13:27", 
   "used": false
  }
 }, 
 {
  "pk": 402, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:27", 
   "code": "CACGjr", 
   "last_updated": "2011-08-29 20:13:27", 
   "used": false
  }
 }, 
 {
  "pk": 403, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:27", 
   "code": "f6ZOl9", 
   "last_updated": "2011-08-29 20:13:27", 
   "used": false
  }
 }, 
 {
  "pk": 404, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:27", 
   "code": "VTm0XK", 
   "last_updated": "2011-08-29 20:13:27", 
   "used": false
  }
 }, 
 {
  "pk": 405, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:27", 
   "code": "hruop1", 
   "last_updated": "2011-08-30 09:13:55", 
   "used": true
  }
 }, 
 {
  "pk": 406, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:27", 
   "code": "P27Jba", 
   "last_updated": "2011-08-29 20:13:27", 
   "used": false
  }
 }, 
 {
  "pk": 407, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:27", 
   "code": "jXcKSX", 
   "last_updated": "2011-08-29 20:13:27", 
   "used": false
  }
 }, 
 {
  "pk": 408, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:27", 
   "code": "vdbPLV", 
   "last_updated": "2011-08-29 20:13:27", 
   "used": false
  }
 }, 
 {
  "pk": 409, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:27", 
   "code": "Meyuti", 
   "last_updated": "2011-08-29 20:17:28", 
   "used": true
  }
 }, 
 {
  "pk": 410, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:27", 
   "code": "QssvVO", 
   "last_updated": "2011-08-29 20:13:27", 
   "used": false
  }
 }, 
 {
  "pk": 411, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:27", 
   "code": "x6nJUt", 
   "last_updated": "2011-08-29 20:13:27", 
   "used": false
  }
 }, 
 {
  "pk": 412, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:27", 
   "code": "yXvsrC", 
   "last_updated": "2011-08-29 20:13:27", 
   "used": false
  }
 }, 
 {
  "pk": 413, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:27", 
   "code": "dljcbS", 
   "last_updated": "2011-08-29 20:13:27", 
   "used": false
  }
 }, 
 {
  "pk": 414, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:27", 
   "code": "a0XSIJ", 
   "last_updated": "2011-08-29 20:13:27", 
   "used": false
  }
 }, 
 {
  "pk": 415, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:27", 
   "code": "dMUXER", 
   "last_updated": "2011-08-29 20:13:27", 
   "used": false
  }
 }, 
 {
  "pk": 416, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:27", 
   "code": "kRJ0oV", 
   "last_updated": "2011-08-29 20:13:27", 
   "used": false
  }
 }, 
 {
  "pk": 417, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:28", 
   "code": "Bt2Xh0", 
   "last_updated": "2011-08-29 20:13:28", 
   "used": false
  }
 }, 
 {
  "pk": 418, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:28", 
   "code": "9FntGO", 
   "last_updated": "2011-08-29 20:13:28", 
   "used": false
  }
 }, 
 {
  "pk": 419, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:28", 
   "code": "s3RvXT", 
   "last_updated": "2011-08-29 20:13:28", 
   "used": false
  }
 }, 
 {
  "pk": 420, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:28", 
   "code": "w8E4tR", 
   "last_updated": "2011-08-29 20:13:28", 
   "used": false
  }
 }, 
 {
  "pk": 421, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:28", 
   "code": "8aCe0q", 
   "last_updated": "2011-08-29 20:16:09", 
   "used": true
  }
 }, 
 {
  "pk": 422, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:28", 
   "code": "2avNra", 
   "last_updated": "2011-08-29 20:13:28", 
   "used": false
  }
 }, 
 {
  "pk": 423, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:28", 
   "code": "JjYteN", 
   "last_updated": "2011-08-29 20:13:28", 
   "used": false
  }
 }, 
 {
  "pk": 424, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:28", 
   "code": "HwJnaU", 
   "last_updated": "2011-08-29 20:13:28", 
   "used": false
  }
 }, 
 {
  "pk": 425, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:28", 
   "code": "92yZet", 
   "last_updated": "2011-08-29 20:13:28", 
   "used": false
  }
 }, 
 {
  "pk": 426, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:28", 
   "code": "0hrTg0", 
   "last_updated": "2011-08-29 20:13:28", 
   "used": false
  }
 }, 
 {
  "pk": 427, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:28", 
   "code": "Sm3co4", 
   "last_updated": "2011-08-29 20:13:28", 
   "used": false
  }
 }, 
 {
  "pk": 428, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:28", 
   "code": "CcshEd", 
   "last_updated": "2011-08-29 20:13:28", 
   "used": false
  }
 }, 
 {
  "pk": 429, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:28", 
   "code": "38KenE", 
   "last_updated": "2011-08-29 20:13:28", 
   "used": false
  }
 }, 
 {
  "pk": 430, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:28", 
   "code": "XKGzzJ", 
   "last_updated": "2011-08-29 20:13:28", 
   "used": false
  }
 }, 
 {
  "pk": 431, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:28", 
   "code": "gy7bYy", 
   "last_updated": "2011-08-29 20:13:28", 
   "used": false
  }
 }, 
 {
  "pk": 432, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:28", 
   "code": "dt3CfO", 
   "last_updated": "2011-08-29 20:13:28", 
   "used": false
  }
 }, 
 {
  "pk": 433, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:28", 
   "code": "wfEyU4", 
   "last_updated": "2011-08-29 20:13:28", 
   "used": false
  }
 }, 
 {
  "pk": 434, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:28", 
   "code": "10HR6Z", 
   "last_updated": "2011-08-29 20:13:28", 
   "used": false
  }
 }, 
 {
  "pk": 435, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:28", 
   "code": "SvC86J", 
   "last_updated": "2011-08-29 20:13:28", 
   "used": false
  }
 }, 
 {
  "pk": 436, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:28", 
   "code": "562aIx", 
   "last_updated": "2011-08-29 20:13:28", 
   "used": false
  }
 }, 
 {
  "pk": 437, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:28", 
   "code": "8TeCNv", 
   "last_updated": "2011-08-29 23:05:01", 
   "used": true
  }
 }, 
 {
  "pk": 438, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:28", 
   "code": "OBD4Ya", 
   "last_updated": "2011-08-29 23:04:52", 
   "used": true
  }
 }, 
 {
  "pk": 439, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:28", 
   "code": "pjDvWi", 
   "last_updated": "2011-08-29 20:13:28", 
   "used": false
  }
 }, 
 {
  "pk": 440, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:28", 
   "code": "RnaxAm", 
   "last_updated": "2011-08-29 20:13:28", 
   "used": false
  }
 }, 
 {
  "pk": 441, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:28", 
   "code": "MHQKOD", 
   "last_updated": "2011-08-29 21:45:01", 
   "used": true
  }
 }, 
 {
  "pk": 442, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:28", 
   "code": "Ya1S4m", 
   "last_updated": "2011-08-29 20:13:28", 
   "used": false
  }
 }, 
 {
  "pk": 443, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:28", 
   "code": "3Ghnyp", 
   "last_updated": "2011-08-29 20:13:28", 
   "used": false
  }
 }, 
 {
  "pk": 444, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:28", 
   "code": "7kopNY", 
   "last_updated": "2011-08-29 20:13:28", 
   "used": false
  }
 }, 
 {
  "pk": 445, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:29", 
   "code": "DHJLoI", 
   "last_updated": "2011-08-29 20:13:29", 
   "used": false
  }
 }, 
 {
  "pk": 446, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:29", 
   "code": "um5tnn", 
   "last_updated": "2011-08-29 20:13:29", 
   "used": false
  }
 }, 
 {
  "pk": 447, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:29", 
   "code": "DHhFbU", 
   "last_updated": "2011-08-29 20:13:29", 
   "used": false
  }
 }, 
 {
  "pk": 448, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:29", 
   "code": "cHRxgV", 
   "last_updated": "2011-08-29 20:13:29", 
   "used": false
  }
 }, 
 {
  "pk": 449, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:29", 
   "code": "Pvg5x5", 
   "last_updated": "2011-08-31 01:03:26", 
   "used": true
  }
 }, 
 {
  "pk": 450, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:29", 
   "code": "SRDCDH", 
   "last_updated": "2011-08-29 20:13:29", 
   "used": false
  }
 }, 
 {
  "pk": 451, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:29", 
   "code": "Ya4c0c", 
   "last_updated": "2011-08-29 20:13:29", 
   "used": false
  }
 }, 
 {
  "pk": 452, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:29", 
   "code": "SkeLVS", 
   "last_updated": "2011-08-29 20:13:29", 
   "used": false
  }
 }, 
 {
  "pk": 453, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:29", 
   "code": "Lrqu6J", 
   "last_updated": "2011-08-29 20:13:29", 
   "used": false
  }
 }, 
 {
  "pk": 454, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:29", 
   "code": "KQAuuv", 
   "last_updated": "2011-08-29 20:13:29", 
   "used": false
  }
 }, 
 {
  "pk": 455, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:29", 
   "code": "7NodQX", 
   "last_updated": "2011-08-29 20:13:29", 
   "used": false
  }
 }, 
 {
  "pk": 456, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:29", 
   "code": "MT2usN", 
   "last_updated": "2011-08-29 20:13:29", 
   "used": false
  }
 }, 
 {
  "pk": 457, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:29", 
   "code": "zNf82y", 
   "last_updated": "2011-08-29 20:13:29", 
   "used": false
  }
 }, 
 {
  "pk": 458, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:29", 
   "code": "b2NMp1", 
   "last_updated": "2011-08-29 20:13:29", 
   "used": false
  }
 }, 
 {
  "pk": 459, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:29", 
   "code": "4S8YP8", 
   "last_updated": "2011-08-29 20:13:29", 
   "used": false
  }
 }, 
 {
  "pk": 460, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:29", 
   "code": "vQn7ZV", 
   "last_updated": "2011-08-29 20:13:29", 
   "used": false
  }
 }, 
 {
  "pk": 461, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:29", 
   "code": "0SHZ3D", 
   "last_updated": "2011-08-29 20:13:29", 
   "used": false
  }
 }, 
 {
  "pk": 462, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:29", 
   "code": "ZkK7au", 
   "last_updated": "2011-08-29 20:13:29", 
   "used": false
  }
 }, 
 {
  "pk": 463, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:29", 
   "code": "PAhEtE", 
   "last_updated": "2011-08-29 20:13:29", 
   "used": false
  }
 }, 
 {
  "pk": 464, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:29", 
   "code": "QNf0XX", 
   "last_updated": "2011-08-29 20:13:29", 
   "used": false
  }
 }, 
 {
  "pk": 465, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:30", 
   "code": "m1lEgD", 
   "last_updated": "2011-08-31 12:20:44", 
   "used": true
  }
 }, 
 {
  "pk": 466, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:30", 
   "code": "ChbbBA", 
   "last_updated": "2011-08-29 20:13:30", 
   "used": false
  }
 }, 
 {
  "pk": 467, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:30", 
   "code": "v0FdHd", 
   "last_updated": "2011-08-29 20:13:30", 
   "used": false
  }
 }, 
 {
  "pk": 468, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:30", 
   "code": "d3fXKW", 
   "last_updated": "2011-08-29 20:13:30", 
   "used": false
  }
 }, 
 {
  "pk": 469, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:30", 
   "code": "41U5MT", 
   "last_updated": "2011-08-29 20:13:30", 
   "used": false
  }
 }, 
 {
  "pk": 470, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:30", 
   "code": "KhDTdx", 
   "last_updated": "2011-08-29 20:13:30", 
   "used": false
  }
 }, 
 {
  "pk": 471, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:30", 
   "code": "ifGeHR", 
   "last_updated": "2011-08-29 20:13:30", 
   "used": false
  }
 }, 
 {
  "pk": 472, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:30", 
   "code": "jQH0Cs", 
   "last_updated": "2011-08-29 20:13:30", 
   "used": false
  }
 }, 
 {
  "pk": 473, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:30", 
   "code": "GPCNbD", 
   "last_updated": "2011-08-30 00:16:05", 
   "used": true
  }
 }, 
 {
  "pk": 474, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:30", 
   "code": "m0uog5", 
   "last_updated": "2011-08-29 20:13:30", 
   "used": false
  }
 }, 
 {
  "pk": 475, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:30", 
   "code": "CudeIE", 
   "last_updated": "2011-08-29 20:13:30", 
   "used": false
  }
 }, 
 {
  "pk": 476, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:30", 
   "code": "UO4RLf", 
   "last_updated": "2011-08-29 20:13:30", 
   "used": false
  }
 }, 
 {
  "pk": 477, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:30", 
   "code": "83FaMV", 
   "last_updated": "2011-08-29 20:13:30", 
   "used": false
  }
 }, 
 {
  "pk": 478, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:30", 
   "code": "SPg8Xb", 
   "last_updated": "2011-08-29 20:13:30", 
   "used": false
  }
 }, 
 {
  "pk": 479, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:30", 
   "code": "epmet5", 
   "last_updated": "2011-08-29 20:13:30", 
   "used": false
  }
 }, 
 {
  "pk": 480, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:30", 
   "code": "WVXXA3", 
   "last_updated": "2011-08-29 20:13:30", 
   "used": false
  }
 }, 
 {
  "pk": 481, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:31", 
   "code": "hpSWJY", 
   "last_updated": "2011-08-29 20:13:31", 
   "used": false
  }
 }, 
 {
  "pk": 482, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:31", 
   "code": "5HEi2A", 
   "last_updated": "2011-08-29 20:13:31", 
   "used": false
  }
 }, 
 {
  "pk": 483, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:31", 
   "code": "XNoifV", 
   "last_updated": "2011-08-29 20:13:31", 
   "used": false
  }
 }, 
 {
  "pk": 484, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:31", 
   "code": "rzihaG", 
   "last_updated": "2011-08-29 20:13:31", 
   "used": false
  }
 }, 
 {
  "pk": 485, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:31", 
   "code": "JtqJ3A", 
   "last_updated": "2011-08-29 20:13:31", 
   "used": false
  }
 }, 
 {
  "pk": 486, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:31", 
   "code": "n3N8G9", 
   "last_updated": "2011-08-29 20:13:31", 
   "used": false
  }
 }, 
 {
  "pk": 487, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:31", 
   "code": "BiYisO", 
   "last_updated": "2011-08-29 20:13:31", 
   "used": false
  }
 }, 
 {
  "pk": 488, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:31", 
   "code": "LTm18y", 
   "last_updated": "2011-08-29 20:13:31", 
   "used": false
  }
 }, 
 {
  "pk": 489, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:31", 
   "code": "QF4Rs3", 
   "last_updated": "2011-08-29 20:16:03", 
   "used": true
  }
 }, 
 {
  "pk": 490, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:31", 
   "code": "uHsaAS", 
   "last_updated": "2011-08-29 20:13:31", 
   "used": false
  }
 }, 
 {
  "pk": 491, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:31", 
   "code": "G66iiF", 
   "last_updated": "2011-08-29 20:13:31", 
   "used": false
  }
 }, 
 {
  "pk": 492, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:31", 
   "code": "imVUPb", 
   "last_updated": "2011-08-29 20:13:31", 
   "used": false
  }
 }, 
 {
  "pk": 493, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:31", 
   "code": "psnP5N", 
   "last_updated": "2011-08-29 20:13:31", 
   "used": false
  }
 }, 
 {
  "pk": 494, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:31", 
   "code": "8BUJvp", 
   "last_updated": "2011-08-29 20:13:31", 
   "used": false
  }
 }, 
 {
  "pk": 495, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:31", 
   "code": "OmmIft", 
   "last_updated": "2011-08-29 20:13:31", 
   "used": false
  }
 }, 
 {
  "pk": 496, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-29 20:13:31", 
   "code": "YlI1Xt", 
   "last_updated": "2011-08-29 20:13:31", 
   "used": false
  }
 }, 
 {
  "pk": 497, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 03:36:49", 
   "code": "z19vQZ", 
   "last_updated": "2011-08-30 03:36:49", 
   "used": false
  }
 }, 
 {
  "pk": 498, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 03:36:49", 
   "code": "2CAbJM", 
   "last_updated": "2011-08-30 03:36:49", 
   "used": false
  }
 }, 
 {
  "pk": 499, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 03:36:49", 
   "code": "Pf4n7V", 
   "last_updated": "2011-08-30 03:36:49", 
   "used": false
  }
 }, 
 {
  "pk": 500, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 03:36:49", 
   "code": "6L8z2t", 
   "last_updated": "2011-08-30 03:36:49", 
   "used": false
  }
 }, 
 {
  "pk": 501, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 12:57:43", 
   "code": "xsd3sd", 
   "last_updated": "2011-08-30 12:58:02", 
   "used": true
  }
 }, 
 {
  "pk": 502, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 13:01:54", 
   "code": "ef3ffs", 
   "last_updated": "2011-08-30 13:02:18", 
   "used": true
  }
 }, 
 {
  "pk": 503, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 14:12:44", 
   "code": "fefsdf", 
   "last_updated": "2011-08-30 14:12:58", 
   "used": true
  }
 }, 
 {
  "pk": 504, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 14:50:15", 
   "code": "joshua", 
   "last_updated": "2011-08-30 14:51:36", 
   "used": true
  }
 }, 
 {
  "pk": 505, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 17:19:42", 
   "code": "apenis", 
   "last_updated": "2011-08-30 17:19:49", 
   "used": true
  }
 }, 
 {
  "pk": 506, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 19:01:09", 
   "code": "monkey", 
   "last_updated": "2011-08-31 15:08:03", 
   "used": true
  }
 }, 
 {
  "pk": 507, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 21:44:05", 
   "code": "Qrp74p", 
   "last_updated": "2011-08-30 21:49:56", 
   "used": true
  }
 }, 
 {
  "pk": 508, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 21:44:05", 
   "code": "EVCSpF", 
   "last_updated": "2011-08-30 21:44:05", 
   "used": false
  }
 }, 
 {
  "pk": 509, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 21:44:05", 
   "code": "0gx2pW", 
   "last_updated": "2011-08-30 21:44:05", 
   "used": false
  }
 }, 
 {
  "pk": 510, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 21:44:05", 
   "code": "70eRBl", 
   "last_updated": "2011-08-30 21:44:05", 
   "used": false
  }
 }, 
 {
  "pk": 511, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 21:44:05", 
   "code": "huJVkb", 
   "last_updated": "2011-08-30 21:44:05", 
   "used": false
  }
 }, 
 {
  "pk": 512, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 21:44:05", 
   "code": "R95C83", 
   "last_updated": "2011-08-30 21:44:05", 
   "used": false
  }
 }, 
 {
  "pk": 513, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 21:44:05", 
   "code": "NQgPPT", 
   "last_updated": "2011-08-30 21:44:05", 
   "used": false
  }
 }, 
 {
  "pk": 514, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 21:44:05", 
   "code": "0oxMUl", 
   "last_updated": "2011-08-30 21:44:05", 
   "used": false
  }
 }, 
 {
  "pk": 515, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 21:44:05", 
   "code": "tr8Ql3", 
   "last_updated": "2011-08-30 21:44:05", 
   "used": false
  }
 }, 
 {
  "pk": 516, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 21:44:05", 
   "code": "vYqHyP", 
   "last_updated": "2011-08-30 21:44:05", 
   "used": false
  }
 }, 
 {
  "pk": 517, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 21:44:05", 
   "code": "BpMmgS", 
   "last_updated": "2011-08-30 21:44:05", 
   "used": false
  }
 }, 
 {
  "pk": 518, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 21:44:05", 
   "code": "QhJluY", 
   "last_updated": "2011-08-30 21:44:05", 
   "used": false
  }
 }, 
 {
  "pk": 519, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 21:44:06", 
   "code": "uAGL0x", 
   "last_updated": "2011-08-30 21:44:06", 
   "used": false
  }
 }, 
 {
  "pk": 520, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 21:44:06", 
   "code": "eiEusI", 
   "last_updated": "2011-08-30 21:44:06", 
   "used": false
  }
 }, 
 {
  "pk": 521, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 21:44:06", 
   "code": "8EZV9a", 
   "last_updated": "2011-08-30 21:44:06", 
   "used": false
  }
 }, 
 {
  "pk": 522, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 21:44:06", 
   "code": "7JbARe", 
   "last_updated": "2011-08-30 21:44:06", 
   "used": false
  }
 }, 
 {
  "pk": 523, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 21:44:06", 
   "code": "MkbhGk", 
   "last_updated": "2011-08-30 21:44:06", 
   "used": false
  }
 }, 
 {
  "pk": 524, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 21:44:06", 
   "code": "oTDBNS", 
   "last_updated": "2011-08-30 21:44:06", 
   "used": false
  }
 }, 
 {
  "pk": 525, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 21:44:06", 
   "code": "uEyeuz", 
   "last_updated": "2011-08-30 21:44:06", 
   "used": false
  }
 }, 
 {
  "pk": 526, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-08-30 21:44:06", 
   "code": "iDynGz", 
   "last_updated": "2011-08-30 21:44:06", 
   "used": false
  }
 }, 
 {
  "pk": 527, 
  "model": "student.studentinvite", 
  "fields": {
   "date_created": "2011-09-01 07:14:31", 
   "code": "fevttt", 
   "last_updated": "2011-09-01 07:14:31", 
   "used": false
  }
 }, 
 {
  "pk": 1, 
  "model": "auth.user", 
  "fields": {
   "username": "root", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": true, 
   "is_staff": true, 
   "last_login": "2011-09-07 09:19:04", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$9eece$91254b091a9e53ef90d6170b3e7f85b16832c4a4", 
   "email": "contact@umeqo.com", 
   "date_joined": "2011-08-28 21:18:42"
  }
 }, 
 {
  "pk": 80, 
  "model": "auth.user", 
  "fields": {
   "username": "yiwen@mit.edu", 
   "first_name": "Yiwen", 
   "last_name": "Zhan", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 11:43:44", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$dc042$ad4f354474495573e8fde3c5f9dc47264a28d094", 
   "email": "yiwen@mit.edu", 
   "date_joined": "2011-08-30 14:51:35"
  }
 }, 
 {
  "pk": 43, 
  "model": "auth.user", 
  "fields": {
   "username": "smchang@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-08-29 20:16:15", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$b82c2$fccd3444c4456440aa640379d7f223c1d09855ad", 
   "email": "smchang@mit.edu", 
   "date_joined": "2011-08-29 20:16:03"
  }
 }, 
 {
  "pk": 4, 
  "model": "auth.user", 
  "fields": {
   "username": "potter@umeqo.com", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 20:49:01", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$0e751$a1c11b41405a6f559350477fc29c00df721b6839", 
   "email": "", 
   "date_joined": "2011-08-28 21:43:10"
  }
 }, 
 {
  "pk": 41, 
  "model": "auth.user", 
  "fields": {
   "username": "joshma@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 03:45:12", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$e98bf$a515db507632b31013e4e7857b9171f3b962e4b0", 
   "email": "joshma@mit.edu", 
   "date_joined": "2011-08-29 20:03:50"
  }
 }, 
 {
  "pk": 40, 
  "model": "auth.user", 
  "fields": {
   "username": "zdearing@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-01 11:14:23", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$c094b$ad39e2b3e8a70ae5becd87a0a3655a0b0cb86c97", 
   "email": "zdearing@mit.edu", 
   "date_joined": "2011-08-29 20:03:05"
  }
 }, 
 {
  "pk": 44, 
  "model": "auth.user", 
  "fields": {
   "username": "jlacolla@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-08-29 22:32:09", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$e493b$01cc758be1fede29817b5e7a4e6f379ebf6edab3", 
   "email": "jlacolla@mit.edu", 
   "date_joined": "2011-08-29 20:16:09"
  }
 }, 
 {
  "pk": 45, 
  "model": "auth.user", 
  "fields": {
   "username": "chentong@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-08-29 20:16:59", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$bec89$4f91b1ecb29d2e4b5a77e0b331340209fec29c8f", 
   "email": "chentong@mit.edu", 
   "date_joined": "2011-08-29 20:16:50"
  }
 }, 
 {
  "pk": 46, 
  "model": "auth.user", 
  "fields": {
   "username": "yidagao@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-02 10:50:43", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$e3de6$2fe9b9507d67bbd3c513ab7242ec2ade5fc69715", 
   "email": "yidagao@mit.edu", 
   "date_joined": "2011-08-29 20:17:28"
  }
 }, 
 {
  "pk": 47, 
  "model": "auth.user", 
  "fields": {
   "username": "carolynz@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-08-29 22:15:42", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$e65d3$0c0689ff5a2c471d797d9c1efb2a9eea08b46b5b", 
   "email": "carolynz@mit.edu", 
   "date_joined": "2011-08-29 20:58:54"
  }
 }, 
 {
  "pk": 48, 
  "model": "auth.user", 
  "fields": {
   "username": "eryndm@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 15:11:39", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$4ea8e$e7581076ae11a41fec1ec63f44b914f5f68914b0", 
   "email": "eryndm@mit.edu", 
   "date_joined": "2011-08-29 21:00:57"
  }
 }, 
 {
  "pk": 49, 
  "model": "auth.user", 
  "fields": {
   "username": "mtfarrel@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-08-29 21:04:33", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$aae80$c478a6986c69bb5a18f8c9aee21ba2c8a248de39", 
   "email": "mtfarrel@mit.edu", 
   "date_joined": "2011-08-29 21:01:44"
  }
 }, 
 {
  "pk": 50, 
  "model": "auth.user", 
  "fields": {
   "username": "samok@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-01 16:15:45", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$44dc7$73e2685f168fb884ee0891949065fbbedb1f7c4b", 
   "email": "samok@mit.edu", 
   "date_joined": "2011-08-29 21:22:19"
  }
 }, 
 {
  "pk": 51, 
  "model": "auth.user", 
  "fields": {
   "username": "vok@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-04 00:43:40", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$20578$099e1eb5b33d6a21c7e03f321d010ed74328e9ef", 
   "email": "vok@mit.edu", 
   "date_joined": "2011-08-29 21:26:04"
  }
 }, 
 {
  "pk": 52, 
  "model": "auth.user", 
  "fields": {
   "username": "rrt@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 10:03:58", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$65fc6$3d12ed430a19e36befc693c205242aeb2d7c2cda", 
   "email": "rrt@mit.edu", 
   "date_joined": "2011-08-29 21:45:00"
  }
 }, 
 {
  "pk": 53, 
  "model": "auth.user", 
  "fields": {
   "username": "gravity@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-08-29 21:46:44", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$84b3c$bf9f019dc0d64bd05ad5c1525d7d907b28f3186a", 
   "email": "gravity@mit.edu", 
   "date_joined": "2011-08-29 21:46:35"
  }
 }, 
 {
  "pk": 54, 
  "model": "auth.user", 
  "fields": {
   "username": "ehu@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-08-29 21:50:47", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$5aa49$4528d3c9a378b260c8a61b6eba31dfc20a965c79", 
   "email": "ehu@mit.edu", 
   "date_joined": "2011-08-29 21:49:46"
  }
 }, 
 {
  "pk": 55, 
  "model": "auth.user", 
  "fields": {
   "username": "kangliu@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-08-29 22:13:15", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$decc2$7eb45850ba931d2c85638ca5391086fc3019a39c", 
   "email": "kangliu@mit.edu", 
   "date_joined": "2011-08-29 22:07:04"
  }
 }, 
 {
  "pk": 56, 
  "model": "auth.user", 
  "fields": {
   "username": "emchen1@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-08-29 22:09:50", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$0952f$4da2b0124fcf887becfee94a0adc9dddbd3e5042", 
   "email": "emchen1@mit.edu", 
   "date_joined": "2011-08-29 22:09:17"
  }
 }, 
 {
  "pk": 57, 
  "model": "auth.user", 
  "fields": {
   "username": "kuan@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-08-29 22:25:36", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$6de01$870b443dd9ba2f82c02c442b7b38bff3d70d61aa", 
   "email": "kuan@mit.edu", 
   "date_joined": "2011-08-29 22:24:33"
  }
 }, 
 {
  "pk": 58, 
  "model": "auth.user", 
  "fields": {
   "username": "dougfeig@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-08-29 23:07:36", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$e358e$aafad544da34ed1721d2c7d07239ac676fe2b433", 
   "email": "dougfeig@mit.edu", 
   "date_joined": "2011-08-29 23:04:52"
  }
 }, 
 {
  "pk": 59, 
  "model": "auth.user", 
  "fields": {
   "username": "bfrank@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-08-29 23:05:31", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$063a8$c230dd922888afd45b1bf0d9bd8548fe72cb3737", 
   "email": "bfrank@mit.edu", 
   "date_joined": "2011-08-29 23:05:00"
  }
 }, 
 {
  "pk": 60, 
  "model": "auth.user", 
  "fields": {
   "username": "ignatius@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-08-29 23:17:56", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$f8519$fbaea2b9eefb167cd57a6510f3dd83b9c0ed6ae7", 
   "email": "ignatius@mit.edu", 
   "date_joined": "2011-08-29 23:17:38"
  }
 }, 
 {
  "pk": 61, 
  "model": "auth.user", 
  "fields": {
   "username": "vtrevino@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-08-30 00:23:23", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$466ab$90f127449acc83b82fe1b788b5a426e6e862885b", 
   "email": "vtrevino@mit.edu", 
   "date_joined": "2011-08-30 00:00:09"
  }
 }, 
 {
  "pk": 62, 
  "model": "auth.user", 
  "fields": {
   "username": "gwintrob@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-08-30 00:00:58", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$d4d35$616f6cfb320034aee1ef87342699ded552dbcb1e", 
   "email": "gwintrob@mit.edu", 
   "date_joined": "2011-08-30 00:00:23"
  }
 }, 
 {
  "pk": 63, 
  "model": "auth.user", 
  "fields": {
   "username": "mengjie@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-08-30 01:48:16", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$35748$aab67ff74526e5424eda14bb6adbb94b78e1fa19", 
   "email": "mengjie@mit.edu", 
   "date_joined": "2011-08-30 00:03:35"
  }
 }, 
 {
  "pk": 64, 
  "model": "auth.user", 
  "fields": {
   "username": "susiefu@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-08-30 00:06:11", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$53925$3f70da0f3a19d08753803750514db33640da10ae", 
   "email": "susiefu@mit.edu", 
   "date_joined": "2011-08-30 00:05:41"
  }
 }, 
 {
  "pk": 65, 
  "model": "auth.user", 
  "fields": {
   "username": "ntallapr@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-08-30 00:16:12", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$70901$0e4afeb803abccf12cde903ddef987242e7c1c6e", 
   "email": "ntallapr@mit.edu", 
   "date_joined": "2011-08-30 00:16:05"
  }
 }, 
 {
  "pk": 66, 
  "model": "auth.user", 
  "fields": {
   "username": "eipark@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-08-30 00:19:59", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$68097$21706a7df063ddf118ecc9c9bbcb02bb152f135a", 
   "email": "eipark@mit.edu", 
   "date_joined": "2011-08-30 00:19:45"
  }
 }, 
 {
  "pk": 67, 
  "model": "auth.user", 
  "fields": {
   "username": "jeffchan@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-08-30 01:24:17", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$01107$b026404c741b532677098041243c6a92fb2d19d2", 
   "email": "jeffchan@mit.edu", 
   "date_joined": "2011-08-30 01:24:03"
  }
 }, 
 {
  "pk": 68, 
  "model": "auth.user", 
  "fields": {
   "username": "jbatscha@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-08-30 15:00:55", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$ded9e$f50928d1dbfff679406439b5296373b89c931877", 
   "email": "jbatscha@mit.edu", 
   "date_joined": "2011-08-30 02:30:15"
  }
 }, 
 {
  "pk": 69, 
  "model": "auth.user", 
  "fields": {
   "username": "mglowe@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-08-30 08:56:43", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$d7856$13cb20ecd63d95a7e3380f3b7f696a08647d0d1e", 
   "email": "mglowe@mit.edu", 
   "date_joined": "2011-08-30 08:56:08"
  }
 }, 
 {
  "pk": 70, 
  "model": "auth.user", 
  "fields": {
   "username": "jewang@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 21:40:55", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$1d1fa$c64928f608a626e971ec65f40d6316ada21c171e", 
   "email": "jewang@mit.edu", 
   "date_joined": "2011-08-30 09:13:54"
  }
 }, 
 {
  "pk": 71, 
  "model": "auth.user", 
  "fields": {
   "username": "corykays@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-08-30 09:27:35", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$a460c$d45e066998bbab862861ba1115b37ff84a0b63f5", 
   "email": "corykays@mit.edu", 
   "date_joined": "2011-08-30 09:21:18"
  }
 }, 
 {
  "pk": 72, 
  "model": "auth.user", 
  "fields": {
   "username": "hjoshi@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-03 15:56:35", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$d9330$8d500017f3693bc63e276627d0e6569cc9c9c47f", 
   "email": "hjoshi@mit.edu", 
   "date_joined": "2011-08-30 10:35:26"
  }
 }, 
 {
  "pk": 76, 
  "model": "auth.user", 
  "fields": {
   "username": "amieguo@mit.edu", 
   "first_name": "Amie", 
   "last_name": "Guo", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-01 15:00:25", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$b1c0f$10912385d454abb224e78ac52d7755a59be15f94", 
   "email": "amieguo@mit.edu", 
   "date_joined": "2011-08-30 12:27:25"
  }
 }, 
 {
  "pk": 194, 
  "model": "auth.user", 
  "fields": {
   "username": "ccheng14@mit.edu", 
   "first_name": "Catherine", 
   "last_name": "Cheng", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 10:43:56", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$1077d$2ea94c38c05b44c68376e7c4996ec69a5e3a8199", 
   "email": "ccheng14@mit.edu", 
   "date_joined": "2011-09-06 10:43:41"
  }
 }, 
 {
  "pk": 81, 
  "model": "auth.user", 
  "fields": {
   "username": "sajith@mit.edu", 
   "first_name": "Sajith", 
   "last_name": "Wickramasekara", 
   "is_active": false, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-08-30 17:19:49", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$4606b$944ac1e9b428e62d819651d92b89902eee7ab6fb", 
   "email": "sajith@mit.edu", 
   "date_joined": "2011-08-30 17:19:49"
  }
 }, 
 {
  "pk": 82, 
  "model": "auth.user", 
  "fields": {
   "username": "nsparikh@mit.edu", 
   "first_name": "Neena", 
   "last_name": "Parikh", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-08-30 17:22:48", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$f8628$e0fed5cf74b4d87216cbf9acefce2f83eb49659a", 
   "email": "nsparikh@mit.edu", 
   "date_joined": "2011-08-30 17:21:46"
  }
 }, 
 {
  "pk": 85, 
  "model": "auth.user", 
  "fields": {
   "username": "srnaik@mit.edu", 
   "first_name": "Shreesh", 
   "last_name": "Naik", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 21:09:24", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$ffe6c$ab58ff7d195a7a87141acd7c1d8c95eba4a37d3d", 
   "email": "srnaik@mit.edu", 
   "date_joined": "2011-08-30 21:49:56"
  }
 }, 
 {
  "pk": 86, 
  "model": "auth.user", 
  "fields": {
   "username": "engiarta@mit.edu", 
   "first_name": "Eunice", 
   "last_name": "Giarta", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-01 15:12:38", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$255aa$c283ae0c23045c0ec1d65caafa919a296924e65c", 
   "email": "engiarta@mit.edu", 
   "date_joined": "2011-08-31 00:06:22"
  }
 }, 
 {
  "pk": 87, 
  "model": "auth.user", 
  "fields": {
   "username": "mmiyachi@mit.edu", 
   "first_name": "Mari", 
   "last_name": "Miyachi", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-08-31 01:03:36", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$d4051$fdfde6fd5c4fa0a8550d370007034655aebd369c", 
   "email": "mmiyachi@mit.edu", 
   "date_joined": "2011-08-31 01:03:26"
  }
 }, 
 {
  "pk": 89, 
  "model": "auth.user", 
  "fields": {
   "username": "vivaek@mit.edu", 
   "first_name": "Vivaek", 
   "last_name": "Shivakumar", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-08-31 12:22:01", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$0e9f5$966cd6f0b4c856e13e529befca5d16998cb01d02", 
   "email": "vivaek@mit.edu", 
   "date_joined": "2011-08-31 12:20:44"
  }
 }, 
 {
  "pk": 94, 
  "model": "auth.user", 
  "fields": {
   "username": "ejsandfo@mit.edu", 
   "first_name": "Erika", 
   "last_name": "Sandford", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-08-31 13:38:48", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$02087$b5728aaa7c55aa80530eaa4f215558f30742e56b", 
   "email": "ejsandfo@mit.edu", 
   "date_joined": "2011-08-31 13:35:09"
  }
 }, 
 {
  "pk": 96, 
  "model": "auth.user", 
  "fields": {
   "username": "josh@umeqo.com", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-01 04:27:58", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$a2952$9f73a7da6be7e87b776edfeb159c4bb709de370e", 
   "email": "", 
   "date_joined": "2011-09-01 04:27:58"
  }
 }, 
 {
  "pk": 97, 
  "model": "auth.user", 
  "fields": {
   "username": "sbc-exec@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-07 12:20:47", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$4a65b$c8a8a29e19962f538cd61a6750e46339870e4940", 
   "email": "sbc-exec@mit.edu", 
   "date_joined": "2011-09-01 05:04:37"
  }
 }, 
 {
  "pk": 99, 
  "model": "auth.user", 
  "fields": {
   "username": "kfang@mit.edu", 
   "first_name": "Katherine", 
   "last_name": "Fang", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-01 12:15:11", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$73f4b$330ddaf7684d1a6aa03cba9eed4fc3071beeaa2f", 
   "email": "kfang@mit.edu", 
   "date_joined": "2011-09-01 12:14:58"
  }
 }, 
 {
  "pk": 100, 
  "model": "auth.user", 
  "fields": {
   "username": "m_gibson@mit.edu", 
   "first_name": "Michael", 
   "last_name": "Gibson", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-01 12:24:48", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$cd17d$be54768412b885296573567fc999313590d9e4fc", 
   "email": "m_gibson@mit.edu", 
   "date_joined": "2011-09-01 12:24:27"
  }
 }, 
 {
  "pk": 101, 
  "model": "auth.user", 
  "fields": {
   "username": "r941@mit.edu", 
   "first_name": "Ranjeetha", 
   "last_name": "Bharath", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-01 12:55:24", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$e38ce$a9a20ed475841f8752b1fd9ccbed7126b1dace1e", 
   "email": "r941@mit.edu", 
   "date_joined": "2011-09-01 12:54:35"
  }
 }, 
 {
  "pk": 102, 
  "model": "auth.user", 
  "fields": {
   "username": "josepher@mit.edu", 
   "first_name": "Josepher", 
   "last_name": "Li", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-01 13:36:18", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$9372e$42a300f111f37e9885510daeb087b906d86c9121", 
   "email": "josepher@mit.edu", 
   "date_joined": "2011-09-01 13:36:08"
  }
 }, 
 {
  "pk": 103, 
  "model": "auth.user", 
  "fields": {
   "username": "ukhan@mit.edu", 
   "first_name": "Umaimah", 
   "last_name": "Khan", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 22:07:04", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$39a88$da79a25ae411a6635db91a826614ca543a7f8227", 
   "email": "ukhan@mit.edu", 
   "date_joined": "2011-09-01 14:44:58"
  }
 }, 
 {
  "pk": 104, 
  "model": "auth.user", 
  "fields": {
   "username": "jvaldez@mit.edu", 
   "first_name": "Juan", 
   "last_name": "Valdez", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-01 15:23:56", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$73c70$0f54534da543b4fbdd376d7a20f78bb6277a1d13", 
   "email": "jvaldez@mit.edu", 
   "date_joined": "2011-09-01 15:14:57"
  }
 }, 
 {
  "pk": 105, 
  "model": "auth.user", 
  "fields": {
   "username": "hanwenxu@mit.edu", 
   "first_name": "Hanwen", 
   "last_name": "Xu", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-01 16:34:11", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$b9c4d$4511bfbd3d6a1ee515bfbbd1c3183e5b3e0e471e", 
   "email": "hanwenxu@mit.edu", 
   "date_joined": "2011-09-01 16:34:01"
  }
 }, 
 {
  "pk": 106, 
  "model": "auth.user", 
  "fields": {
   "username": "patrickv@mit.edu", 
   "first_name": "Patrick", 
   "last_name": "Vatterott", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 16:53:36", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$0c5dc$38639e3f7ece210c99e36cea2d76b80c457a1f5f", 
   "email": "patrickv@mit.edu", 
   "date_joined": "2011-09-01 18:52:05"
  }
 }, 
 {
  "pk": 107, 
  "model": "auth.user", 
  "fields": {
   "username": "dyim@mit.edu", 
   "first_name": "Daesun", 
   "last_name": "Yim", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-01 19:14:05", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$bf62f$9ff7ebbc1e5cd6b59aa7803fe5ff0c296ce19278", 
   "email": "dyim@mit.edu", 
   "date_joined": "2011-09-01 19:13:32"
  }
 }, 
 {
  "pk": 108, 
  "model": "auth.user", 
  "fields": {
   "username": "agokhale@mit.edu", 
   "first_name": "Ashwini", 
   "last_name": "Gokhale", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-04 12:14:24", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$033be$989c933beb12bdee7b00732d987b6a29feac2585", 
   "email": "agokhale@mit.edu", 
   "date_joined": "2011-09-01 19:26:03"
  }
 }, 
 {
  "pk": 109, 
  "model": "auth.user", 
  "fields": {
   "username": "nhebb@mit.edu", 
   "first_name": "Neha", 
   "last_name": "Hebbar", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-01 19:36:48", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$0097e$3e518ea998ac8bdbda8b38aa6f348d308b3c242b", 
   "email": "nhebb@mit.edu", 
   "date_joined": "2011-09-01 19:36:35"
  }
 }, 
 {
  "pk": 110, 
  "model": "auth.user", 
  "fields": {
   "username": "crreed@mit.edu", 
   "first_name": "Christian", 
   "last_name": "Reed", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-01 19:38:32", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$7418e$2416ca8378c65a0f35ca86803b64dc49f980d994", 
   "email": "crreed@mit.edu", 
   "date_joined": "2011-09-01 19:38:10"
  }
 }, 
 {
  "pk": 111, 
  "model": "auth.user", 
  "fields": {
   "username": "djronde@mit.edu", 
   "first_name": "Daniel", 
   "last_name": "Ronde", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-01 19:43:46", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$c5195$c7325d0a59e494485a0198c4b1c80b95a6a1f983", 
   "email": "djronde@mit.edu", 
   "date_joined": "2011-09-01 19:38:20"
  }
 }, 
 {
  "pk": 112, 
  "model": "auth.user", 
  "fields": {
   "username": "xenophon@mit.edu", 
   "first_name": "David", 
   "last_name": "Campos", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-01 19:59:28", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$60333$84623a122e8523b503d0d8b148e6b9eff04a32ba", 
   "email": "xenophon@mit.edu", 
   "date_joined": "2011-09-01 19:38:21"
  }
 }, 
 {
  "pk": 113, 
  "model": "auth.user", 
  "fields": {
   "username": "afarrell@mit.edu", 
   "first_name": "Andrew", 
   "last_name": "Farrell", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-01 19:53:27", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$cb118$b9c5cb45beb4aaa2cd7553a8d32983b79b3250b4", 
   "email": "afarrell@mit.edu", 
   "date_joined": "2011-09-01 19:53:09"
  }
 }, 
 {
  "pk": 114, 
  "model": "auth.user", 
  "fields": {
   "username": "lambertc@mit.edu", 
   "first_name": "Chase", 
   "last_name": "Lambert", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-01 21:03:34", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$a68f5$ea3829df3de8774c273aed124801d6aca6a5c474", 
   "email": "lambertc@mit.edu", 
   "date_joined": "2011-09-01 20:54:48"
  }
 }, 
 {
  "pk": 116, 
  "model": "auth.user", 
  "fields": {
   "username": "saady@mit.edu", 
   "first_name": "Saad", 
   "last_name": "Shaheen", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-01 23:40:44", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$1fece$155f5477518d103e68fe47148c2826c2adccb776", 
   "email": "saady@mit.edu", 
   "date_joined": "2011-09-01 23:38:00"
  }
 }, 
 {
  "pk": 117, 
  "model": "auth.user", 
  "fields": {
   "username": "nzchen@mit.edu", 
   "first_name": "Nancy", 
   "last_name": "Chen", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-02 00:12:41", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$1651f$0a730977dd55c3fe43511819e95d85adda535829", 
   "email": "nzchen@mit.edu", 
   "date_joined": "2011-09-02 00:12:27"
  }
 }, 
 {
  "pk": 118, 
  "model": "auth.user", 
  "fields": {
   "username": "awunnava@mit.edu", 
   "first_name": "Akshar", 
   "last_name": "Wunnava", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-02 00:27:28", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$1850a$570ba1dd5fa1d75b50a0e5cac258cd06a9adb3de", 
   "email": "awunnava@mit.edu", 
   "date_joined": "2011-09-02 00:21:06"
  }
 }, 
 {
  "pk": 119, 
  "model": "auth.user", 
  "fields": {
   "username": "manjola@mit.edu", 
   "first_name": "Manushaqe", 
   "last_name": "Muco", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 23:49:27", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$74d2a$9a602a3f8bf736b61c78c83bb1e36e20fd91d461", 
   "email": "manjola@mit.edu", 
   "date_joined": "2011-09-02 01:27:11"
  }
 }, 
 {
  "pk": 120, 
  "model": "auth.user", 
  "fields": {
   "username": "johnyaz@mit.edu", 
   "first_name": "John", 
   "last_name": "Yazbek", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-02 08:19:59", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$6bba9$68108d8c02bc89cadb1102e6cb2865708342c2bb", 
   "email": "johnyaz@mit.edu", 
   "date_joined": "2011-09-02 08:19:42"
  }
 }, 
 {
  "pk": 121, 
  "model": "auth.user", 
  "fields": {
   "username": "cyrbritt@mit.edu", 
   "first_name": "William", 
   "last_name": "Cyr", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-02 08:53:50", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$c5d6a$ad086f5de0ad7a5705dda0834a0ab49f28f7907a", 
   "email": "cyrbritt@mit.edu", 
   "date_joined": "2011-09-02 08:53:35"
  }
 }, 
 {
  "pk": 122, 
  "model": "auth.user", 
  "fields": {
   "username": "hclorina@mit.edu", 
   "first_name": "Hershey", 
   "last_name": "Clorina", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-02 09:36:26", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$7020a$84429229e12b77d6cc50344cc895a90e64909707", 
   "email": "hclorina@mit.edu", 
   "date_joined": "2011-09-02 09:31:59"
  }
 }, 
 {
  "pk": 123, 
  "model": "auth.user", 
  "fields": {
   "username": "aysylu@mit.edu", 
   "first_name": "Aysylu", 
   "last_name": "Biktimirova", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-02 10:40:00", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$c3538$41dda4ff58342943c2f5d0695860d74f44c1db8d", 
   "email": "aysylu@mit.edu", 
   "date_joined": "2011-09-02 10:39:50"
  }
 }, 
 {
  "pk": 124, 
  "model": "auth.user", 
  "fields": {
   "username": "lauralu@mit.edu", 
   "first_name": "Laura", 
   "last_name": "Lu", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-02 10:59:58", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$80077$de6546e010d38dd064178b34b0b37a2872f23ebb", 
   "email": "lauralu@mit.edu", 
   "date_joined": "2011-09-02 10:59:41"
  }
 }, 
 {
  "pk": 125, 
  "model": "auth.user", 
  "fields": {
   "username": "ddrago@mit.edu", 
   "first_name": "Diandra", 
   "last_name": "Drago", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-02 11:18:49", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$d78e0$d3a0abc494c5d0a9a219bdd1db970ab26ac23f6b", 
   "email": "ddrago@mit.edu", 
   "date_joined": "2011-09-02 11:18:07"
  }
 }, 
 {
  "pk": 126, 
  "model": "auth.user", 
  "fields": {
   "username": "cvaughan@mit.edu", 
   "first_name": "Christopher", 
   "last_name": "Vaughan", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-02 12:25:54", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$c5bdc$7305535922333ec4e7ee486139a0012ab8eebfb1", 
   "email": "cvaughan@mit.edu", 
   "date_joined": "2011-09-02 12:25:35"
  }
 }, 
 {
  "pk": 127, 
  "model": "auth.user", 
  "fields": {
   "username": "hamsika@mit.edu", 
   "first_name": "Hamsika", 
   "last_name": "Chandrasekar", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-02 12:32:37", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$3e3d8$c1e4aae84b7fb96908f15a4c559c903204e4f1e6", 
   "email": "hamsika@mit.edu", 
   "date_joined": "2011-09-02 12:32:26"
  }
 }, 
 {
  "pk": 128, 
  "model": "auth.user", 
  "fields": {
   "username": "nangrist@mit.edu", 
   "first_name": "Noam", 
   "last_name": "Angrist", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-02 12:42:38", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$78e3e$e2e9728970bae26dfb2f6cf17cd48a0990fb9867", 
   "email": "nangrist@mit.edu", 
   "date_joined": "2011-09-02 12:42:26"
  }
 }, 
 {
  "pk": 129, 
  "model": "auth.user", 
  "fields": {
   "username": "sheilaxu@mit.edu", 
   "first_name": "Sheila", 
   "last_name": "Xu", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-02 12:59:51", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$ca10e$aeed513493078865eaa9786154343c54a0d6c136", 
   "email": "sheilaxu@mit.edu", 
   "date_joined": "2011-09-02 12:58:36"
  }
 }, 
 {
  "pk": 130, 
  "model": "auth.user", 
  "fields": {
   "username": "ersafai@mit.edu", 
   "first_name": "Eric", 
   "last_name": "Safai", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-02 14:03:35", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$de902$0abbbacc99b12073f8a8c2481a63fb9ae8ffa8d8", 
   "email": "ersafai@mit.edu", 
   "date_joined": "2011-09-02 14:03:25"
  }
 }, 
 {
  "pk": 131, 
  "model": "auth.user", 
  "fields": {
   "username": "anandk@mit.edu", 
   "first_name": "Kuljot", 
   "last_name": "Anand", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-02 14:44:58", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$6555d$8efdc9f6fc3498485009556f534f2468b3f9a165", 
   "email": "anandk@mit.edu", 
   "date_joined": "2011-09-02 14:43:47"
  }
 }, 
 {
  "pk": 132, 
  "model": "auth.user", 
  "fields": {
   "username": "eew@mit.edu", 
   "first_name": "Edward", 
   "last_name": "Whittemore", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-02 15:30:28", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$dc297$3135dcd5f4298399d5a0f8bbd1a71f43f92fdef3", 
   "email": "eew@mit.edu", 
   "date_joined": "2011-09-02 15:26:35"
  }
 }, 
 {
  "pk": 133, 
  "model": "auth.user", 
  "fields": {
   "username": "rgranger@mit.edu", 
   "first_name": "Reguli", 
   "last_name": "Granger", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-02 15:47:47", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$e0c1f$b6758b095bb2fddd1f0d2fe070751cfc5a02d311", 
   "email": "rgranger@mit.edu", 
   "date_joined": "2011-09-02 15:47:30"
  }
 }, 
 {
  "pk": 134, 
  "model": "auth.user", 
  "fields": {
   "username": "ruisi@mit.edu", 
   "first_name": "Ruisi", 
   "last_name": "Shang", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-02 18:59:40", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$e4392$0b01fd0bed62b30771e347a4941cae07a0ddd72d", 
   "email": "ruisi@mit.edu", 
   "date_joined": "2011-09-02 18:58:32"
  }
 }, 
 {
  "pk": 135, 
  "model": "auth.user", 
  "fields": {
   "username": "conch@mit.edu", 
   "first_name": "Connie", 
   "last_name": "Chan", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-02 20:34:36", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$0ea75$d7bf6f1476f5049f22a3926230f320bba63d9b94", 
   "email": "conch@mit.edu", 
   "date_joined": "2011-09-02 20:34:26"
  }
 }, 
 {
  "pk": 136, 
  "model": "auth.user", 
  "fields": {
   "username": "kellypet@mit.edu", 
   "first_name": "Kelly", 
   "last_name": "Peterson", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-03 00:14:14", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$71a33$8711e80697922d7e00ecfbef329c0934bb16ff96", 
   "email": "kellypet@mit.edu", 
   "date_joined": "2011-09-03 00:12:46"
  }
 }, 
 {
  "pk": 137, 
  "model": "auth.user", 
  "fields": {
   "username": "edner5@mit.edu", 
   "first_name": "Edner", 
   "last_name": "Paul", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-03 05:23:31", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$47f90$26c17aed88342d5290b63e2577fef5742e9bc3a0", 
   "email": "edner5@mit.edu", 
   "date_joined": "2011-09-03 05:23:17"
  }
 }, 
 {
  "pk": 140, 
  "model": "auth.user", 
  "fields": {
   "username": "dchang@mit.edu", 
   "first_name": "Liyan", 
   "last_name": "Chang", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-03 12:09:00", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$6a8d7$6a78a0d0be0e81f4bf97bb2c108ea6df328fdcee", 
   "email": "dchang@mit.edu", 
   "date_joined": "2011-09-03 12:08:31"
  }
 }, 
 {
  "pk": 141, 
  "model": "auth.user", 
  "fields": {
   "username": "lgrillon@mit.edu", 
   "first_name": "Louis", 
   "last_name": "Grillon", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-03 12:45:26", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$1abb5$1ab1d057aeda8e60135db37bdb3e7b84e6bd0b79", 
   "email": "lgrillon@mit.edu", 
   "date_joined": "2011-09-03 12:44:58"
  }
 }, 
 {
  "pk": 142, 
  "model": "auth.user", 
  "fields": {
   "username": "mariru@mit.edu", 
   "first_name": "Maja", 
   "last_name": "Rudolph", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-03 18:48:56", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$cf55d$96a2334da51684822e22a10e00a1ed2c9570d621", 
   "email": "mariru@mit.edu", 
   "date_joined": "2011-09-03 18:48:41"
  }
 }, 
 {
  "pk": 143, 
  "model": "auth.user", 
  "fields": {
   "username": "jlwashin@mit.edu", 
   "first_name": "Jazzmyne", 
   "last_name": "Washington", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-03 19:39:20", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$3ce7c$3c18a31ad000a708c1f98cbca2ab5dbc31f75ac1", 
   "email": "jlwashin@mit.edu", 
   "date_joined": "2011-09-03 19:38:43"
  }
 }, 
 {
  "pk": 144, 
  "model": "auth.user", 
  "fields": {
   "username": "hsheikh@mit.edu", 
   "first_name": "Hamza", 
   "last_name": "Sheikh", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-04 11:41:18", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$a2468$d5f777288e1f3b76f55b8875b00c5dbe0352a9f3", 
   "email": "hsheikh@mit.edu", 
   "date_joined": "2011-09-04 11:41:05"
  }
 }, 
 {
  "pk": 145, 
  "model": "auth.user", 
  "fields": {
   "username": "athakkar@mit.edu", 
   "first_name": "Anjali", 
   "last_name": "Thakkar", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-04 13:38:40", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$a34ba$26df549226a5d12f97edeb2b6e6c094b3167b770", 
   "email": "athakkar@mit.edu", 
   "date_joined": "2011-09-04 13:38:12"
  }
 }, 
 {
  "pk": 146, 
  "model": "auth.user", 
  "fields": {
   "username": "moverlin@mit.edu", 
   "first_name": "Matthew", 
   "last_name": "Overlin", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-04 13:39:16", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$b8025$8d297932aaf3b766d547eb0cf964ba7e0687273b", 
   "email": "moverlin@mit.edu", 
   "date_joined": "2011-09-04 13:39:05"
  }
 }, 
 {
  "pk": 147, 
  "model": "auth.user", 
  "fields": {
   "username": "mitko@mit.edu", 
   "first_name": "Dimitar", 
   "last_name": "Simeonov", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-04 16:42:04", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$58e5a$626c08fcf8109b8b88e3bc4e66eb8afd09ee0aaf", 
   "email": "mitko@mit.edu", 
   "date_joined": "2011-09-04 13:47:12"
  }
 }, 
 {
  "pk": 148, 
  "model": "auth.user", 
  "fields": {
   "username": "annecai@mit.edu", 
   "first_name": "Anne", 
   "last_name": "Cai", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-04 14:05:45", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$6cf56$b30259bcd55de9fb20ad0e9365b394fa9e4d58ba", 
   "email": "annecai@mit.edu", 
   "date_joined": "2011-09-04 14:05:33"
  }
 }, 
 {
  "pk": 149, 
  "model": "auth.user", 
  "fields": {
   "username": "tfk@mit.edu", 
   "first_name": "Timothy", 
   "last_name": "Kaler", 
   "is_active": false, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-04 15:58:16", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$e80d0$e47098ccfec3f36b3cde47bea12595b2a9c70e1c", 
   "email": "tfk@mit.edu", 
   "date_joined": "2011-09-04 15:39:53"
  }
 }, 
 {
  "pk": 150, 
  "model": "auth.user", 
  "fields": {
   "username": "joans@mit.edu", 
   "first_name": "Joan", 
   "last_name": "Smith", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-04 16:59:04", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$b1e4e$172db67ff641e4dad53ec35ee9e91b321dce9fbd", 
   "email": "joans@mit.edu", 
   "date_joined": "2011-09-04 16:58:46"
  }
 }, 
 {
  "pk": 151, 
  "model": "auth.user", 
  "fields": {
   "username": "rshen@mit.edu", 
   "first_name": "Rongshan", 
   "last_name": "Shen", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-04 17:13:05", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$f291e$d6697e66e208451894ca4bbbf19e44d1a2c471d9", 
   "email": "rshen@mit.edu", 
   "date_joined": "2011-09-04 17:11:33"
  }
 }, 
 {
  "pk": 152, 
  "model": "auth.user", 
  "fields": {
   "username": "misava@mit.edu", 
   "first_name": "Monica", 
   "last_name": "Isava", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-04 18:26:23", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$6a4b1$d7cf624511ffcc9a0cf62cd94b9ebbf7151c2435", 
   "email": "misava@mit.edu", 
   "date_joined": "2011-09-04 18:26:00"
  }
 }, 
 {
  "pk": 153, 
  "model": "auth.user", 
  "fields": {
   "username": "pyyuen@mit.edu", 
   "first_name": "Pak", 
   "last_name": "Yuen", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-04 18:31:58", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$f97b9$6d2d1eed1d0ac49fe2142c762a8b65bc002b9d2f", 
   "email": "pyyuen@mit.edu", 
   "date_joined": "2011-09-04 18:31:05"
  }
 }, 
 {
  "pk": 154, 
  "model": "auth.user", 
  "fields": {
   "username": "tmbtw@mit.edu", 
   "first_name": "Thai", 
   "last_name": "Pham", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-04 20:10:43", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$a6ab9$4a23da6e0a0eee7d8c16f231b747b46a5af9ee09", 
   "email": "tmbtw@mit.edu", 
   "date_joined": "2011-09-04 20:10:03"
  }
 }, 
 {
  "pk": 155, 
  "model": "auth.user", 
  "fields": {
   "username": "epyang@mit.edu", 
   "first_name": "Emily", 
   "last_name": "Yang", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-04 20:57:46", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$2c5e1$d760db112d79e7366d1b3a4390998ad350953ad5", 
   "email": "epyang@mit.edu", 
   "date_joined": "2011-09-04 20:57:31"
  }
 }, 
 {
  "pk": 156, 
  "model": "auth.user", 
  "fields": {
   "username": "chyleigh@mit.edu", 
   "first_name": "Chyleigh", 
   "last_name": "Harmon", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 00:11:32", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$d71f0$de06d10fac6d958271ce2c8dc732d957adbd0e1c", 
   "email": "chyleigh@mit.edu", 
   "date_joined": "2011-09-05 00:11:21"
  }
 }, 
 {
  "pk": 157, 
  "model": "auth.user", 
  "fields": {
   "username": "chehrazi@mit.edu", 
   "first_name": "Ariana", 
   "last_name": "Chehrazi", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 00:26:05", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$fd469$cb98df4795670d50a58a7e28b1cd4175190eee7b", 
   "email": "chehrazi@mit.edu", 
   "date_joined": "2011-09-05 00:25:53"
  }
 }, 
 {
  "pk": 158, 
  "model": "auth.user", 
  "fields": {
   "username": "fwu@mit.edu", 
   "first_name": "Feng", 
   "last_name": "Wu", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 00:30:12", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$8840d$c12c7895c2e0b967ea3b3798c938e52f13bda0f7", 
   "email": "fwu@mit.edu", 
   "date_joined": "2011-09-05 00:30:04"
  }
 }, 
 {
  "pk": 159, 
  "model": "auth.user", 
  "fields": {
   "username": "dhaval@mit.edu", 
   "first_name": "Dhaval", 
   "last_name": "Adjodah", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 01:50:32", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$1fcc0$ff3f456b54fc649a185b2a5ea4d2a191cbc5dd43", 
   "email": "dhaval@mit.edu", 
   "date_joined": "2011-09-05 01:50:19"
  }
 }, 
 {
  "pk": 160, 
  "model": "auth.user", 
  "fields": {
   "username": "ccopelan@mit.edu", 
   "first_name": "Christopher", 
   "last_name": "Copeland", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 02:14:55", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$60e9c$236bbf4bd86ec51106c9a1114772c89226a5a460", 
   "email": "ccopelan@mit.edu", 
   "date_joined": "2011-09-05 02:14:44"
  }
 }, 
 {
  "pk": 161, 
  "model": "auth.user", 
  "fields": {
   "username": "anikag@mit.edu", 
   "first_name": "Anika", 
   "last_name": "Gupta", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 02:56:36", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$32f80$e38a9cf912e94d55dee9a44573afa8751324489e", 
   "email": "anikag@mit.edu", 
   "date_joined": "2011-09-05 02:56:11"
  }
 }, 
 {
  "pk": 162, 
  "model": "auth.user", 
  "fields": {
   "username": "yygu@mit.edu", 
   "first_name": "Youyang", 
   "last_name": "Gu", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 14:55:23", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$08e4e$2423b0349e240da5493845b81bf75d179d5f13c0", 
   "email": "yygu@mit.edu", 
   "date_joined": "2011-09-05 03:20:46"
  }
 }, 
 {
  "pk": 163, 
  "model": "auth.user", 
  "fields": {
   "username": "bbender@mit.edu", 
   "first_name": "William", 
   "last_name": "Bender", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 04:00:40", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$00433$61d6060b8c41ed2a8fcdf5cd4d0265fdac955c18", 
   "email": "bbender@mit.edu", 
   "date_joined": "2011-09-05 04:00:24"
  }
 }, 
 {
  "pk": 164, 
  "model": "auth.user", 
  "fields": {
   "username": "sracomis@mit.edu", 
   "first_name": "Sara", 
   "last_name": "Comis", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 06:57:27", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$e13d4$1e8787a6ad028d5045eab88acd5fc8348e5baab1", 
   "email": "sracomis@mit.edu", 
   "date_joined": "2011-09-05 06:57:14"
  }
 }, 
 {
  "pk": 165, 
  "model": "auth.user", 
  "fields": {
   "username": "jxlu@mit.edu", 
   "first_name": "Jingxiao", 
   "last_name": "Lu", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 08:43:38", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$8fa29$966c7cbff3e143999846c74136543a1aaa84cc5d", 
   "email": "jxlu@mit.edu", 
   "date_joined": "2011-09-05 08:43:26"
  }
 }, 
 {
  "pk": 166, 
  "model": "auth.user", 
  "fields": {
   "username": "ycao90@mit.edu", 
   "first_name": "Yifan", 
   "last_name": "Cao", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 09:22:09", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$cfb36$7191254e1fa3bdcc2a44d4dff03045d4ab2697ed", 
   "email": "ycao90@mit.edu", 
   "date_joined": "2011-09-05 09:17:28"
  }
 }, 
 {
  "pk": 167, 
  "model": "auth.user", 
  "fields": {
   "username": "n_lynch@mit.edu", 
   "first_name": "Naomi", 
   "last_name": "Lynch", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 10:11:47", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$58a22$28ded8993a33dce28cd8962c545ee88e057233c4", 
   "email": "n_lynch@mit.edu", 
   "date_joined": "2011-09-05 09:20:14"
  }
 }, 
 {
  "pk": 168, 
  "model": "auth.user", 
  "fields": {
   "username": "rmacd@mit.edu", 
   "first_name": "Ruaridh", 
   "last_name": "Macdonald", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 09:30:32", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$9237c$0ec80e3f30f279e8fcbb85ebc9c7209c96c2c061", 
   "email": "rmacd@mit.edu", 
   "date_joined": "2011-09-05 09:30:25"
  }
 }, 
 {
  "pk": 169, 
  "model": "auth.user", 
  "fields": {
   "username": "davister@mit.edu", 
   "first_name": "David", 
   "last_name": "Sternberg", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 09:42:30", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$19aa9$f065c1d1aad1a9b5f79a190e7cd40d052fb943e9", 
   "email": "davister@mit.edu", 
   "date_joined": "2011-09-05 09:34:11"
  }
 }, 
 {
  "pk": 170, 
  "model": "auth.user", 
  "fields": {
   "username": "chenl@mit.edu", 
   "first_name": "Linda", 
   "last_name": "Chen", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 09:55:56", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$1cf55$7f3072d3bf6458b9a4df2dd865520958a1d2161b", 
   "email": "chenl@mit.edu", 
   "date_joined": "2011-09-05 09:55:20"
  }
 }, 
 {
  "pk": 171, 
  "model": "auth.user", 
  "fields": {
   "username": "yzhang90@mit.edu", 
   "first_name": "Yi", 
   "last_name": "Zhang", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 10:08:35", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$26397$881840a4a192c4585135495442805f084a6c81bc", 
   "email": "yzhang90@mit.edu", 
   "date_joined": "2011-09-05 10:08:11"
  }
 }, 
 {
  "pk": 172, 
  "model": "auth.user", 
  "fields": {
   "username": "krailey@mit.edu", 
   "first_name": "Kristen", 
   "last_name": "Railey", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 10:34:04", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$da14a$11332f0677168cb209e2cd10c92fb4fead39d304", 
   "email": "krailey@mit.edu", 
   "date_joined": "2011-09-05 10:33:37"
  }
 }, 
 {
  "pk": 173, 
  "model": "auth.user", 
  "fields": {
   "username": "mcalpine@mit.edu", 
   "first_name": "Cameron", 
   "last_name": "McAlpine", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 11:52:06", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$9f9bd$5c47c204be1793496ba7c22700c7268b31180da8", 
   "email": "mcalpine@mit.edu", 
   "date_joined": "2011-09-05 11:51:56"
  }
 }, 
 {
  "pk": 174, 
  "model": "auth.user", 
  "fields": {
   "username": "thilk@mit.edu", 
   "first_name": "Theodore", 
   "last_name": "Hilk", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 15:50:59", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$cce4c$c8ca724ba6b6109e12fe35ed1de830992f411af4", 
   "email": "thilk@mit.edu", 
   "date_joined": "2011-09-05 12:16:55"
  }
 }, 
 {
  "pk": 175, 
  "model": "auth.user", 
  "fields": {
   "username": "abidiaz@mit.edu", 
   "first_name": "Abismael", 
   "last_name": "Diaz", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-07 10:30:35", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$d1be4$3985c15ff2abc886fb6d0cd0eb0c22cd20c972d7", 
   "email": "abidiaz@mit.edu", 
   "date_joined": "2011-09-05 13:09:11"
  }
 }, 
 {
  "pk": 176, 
  "model": "auth.user", 
  "fields": {
   "username": "insia@mit.edu", 
   "first_name": "Yingxia", 
   "last_name": "Wang", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 13:20:43", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$426af$670b0b99a248418f5e11eb3d187c52c03471917d", 
   "email": "insia@mit.edu", 
   "date_joined": "2011-09-05 13:20:34"
  }
 }, 
 {
  "pk": 177, 
  "model": "auth.user", 
  "fields": {
   "username": "gramling@mit.edu", 
   "first_name": "Hannah", 
   "last_name": "Gramling", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 14:21:25", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$199ea$50c25dc2593ae69956ac810b02c7a90cabaea699", 
   "email": "gramling@mit.edu", 
   "date_joined": "2011-09-05 14:21:13"
  }
 }, 
 {
  "pk": 178, 
  "model": "auth.user", 
  "fields": {
   "username": "bjliu@mit.edu", 
   "first_name": "Bohan", 
   "last_name": "Liu", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 14:48:27", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$eeeee$551b2aad9d830393cc3218aa3643b3022ef2f0cc", 
   "email": "bjliu@mit.edu", 
   "date_joined": "2011-09-05 14:36:22"
  }
 }, 
 {
  "pk": 179, 
  "model": "auth.user", 
  "fields": {
   "username": "tj7891@mit.edu", 
   "first_name": "Taneah", 
   "last_name": "Turner", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 14:46:50", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$b0e2c$755e0ddde90b2d7f1be6ef5ec6ecd3043ccce14e", 
   "email": "tj7891@mit.edu", 
   "date_joined": "2011-09-05 14:46:37"
  }
 }, 
 {
  "pk": 180, 
  "model": "auth.user", 
  "fields": {
   "username": "elai@mit.edu", 
   "first_name": "Erica", 
   "last_name": "Lai", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 15:46:17", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$d11c9$dea09ce20a92f48c914531e68a09e623a0f7e0ba", 
   "email": "elai@mit.edu", 
   "date_joined": "2011-09-05 15:46:02"
  }
 }, 
 {
  "pk": 181, 
  "model": "auth.user", 
  "fields": {
   "username": "traders@mit.edu", 
   "first_name": "", 
   "last_name": "", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 16:24:08", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$d5ea8$67283658ff2abb625024df9cab214c82fe472b87", 
   "email": "", 
   "date_joined": "2011-09-05 16:24:08"
  }
 }, 
 {
  "pk": 182, 
  "model": "auth.user", 
  "fields": {
   "username": "gwakim@alum.mit.edu", 
   "first_name": "Ghassan", 
   "last_name": "Wakim", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 19:55:39", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$d2da9$aee7146d6d2d0ceb4e62cd40c1994560c222ddee", 
   "email": "gwakim@alum.mit.edu", 
   "date_joined": "2011-09-05 19:52:03"
  }
 }, 
 {
  "pk": 183, 
  "model": "auth.user", 
  "fields": {
   "username": "jdarby@mit.edu", 
   "first_name": "Jared", 
   "last_name": "Darby", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 20:37:26", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$66fc4$379f9e9bae3820a5d8cc5890cd966af1024962f7", 
   "email": "jdarby@mit.edu", 
   "date_joined": "2011-09-05 20:37:15"
  }
 }, 
 {
  "pk": 184, 
  "model": "auth.user", 
  "fields": {
   "username": "terenceh@mit.edu", 
   "first_name": "Terence", 
   "last_name": "Hsu", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 21:17:42", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$60d55$58be8707177528e165d98775ca5dabff57a3a44a", 
   "email": "terenceh@mit.edu", 
   "date_joined": "2011-09-05 21:17:36"
  }
 }, 
 {
  "pk": 185, 
  "model": "auth.user", 
  "fields": {
   "username": "deborahc@mit.edu", 
   "first_name": "Deborah", 
   "last_name": "Chen", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 22:32:37", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$3b5b2$12cb89144efb52865e6344e45261905c2d8ef856", 
   "email": "deborahc@mit.edu", 
   "date_joined": "2011-09-05 22:32:26"
  }
 }, 
 {
  "pk": 186, 
  "model": "auth.user", 
  "fields": {
   "username": "nzhao1@mit.edu", 
   "first_name": "Nilu", 
   "last_name": "Zhao", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 22:42:03", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$0cee1$cedc670da8ffe69173e9896b0b59458273d06d4a", 
   "email": "nzhao1@mit.edu", 
   "date_joined": "2011-09-05 22:33:03"
  }
 }, 
 {
  "pk": 187, 
  "model": "auth.user", 
  "fields": {
   "username": "lvwener@mit.edu", 
   "first_name": "Wener", 
   "last_name": "Lv", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 22:44:38", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$eee58$7cd51c60690ab14a7725118090ed0e744c3c8424", 
   "email": "lvwener@mit.edu", 
   "date_joined": "2011-09-05 22:44:26"
  }
 }, 
 {
  "pk": 188, 
  "model": "auth.user", 
  "fields": {
   "username": "maglloyd@mit.edu", 
   "first_name": "Margaret", 
   "last_name": "Lloyd", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-05 22:51:24", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$7aba6$6b9d7bd76a2be352007a61d335ff9ad8b59a3238", 
   "email": "maglloyd@mit.edu", 
   "date_joined": "2011-09-05 22:51:15"
  }
 }, 
 {
  "pk": 189, 
  "model": "auth.user", 
  "fields": {
   "username": "sukant@mit.edu", 
   "first_name": "Sukant", 
   "last_name": "Mittal", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 01:28:12", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$26046$9767bdaaf92f701fc919892fef8e75f1888b7ede", 
   "email": "sukant@mit.edu", 
   "date_joined": "2011-09-06 01:27:43"
  }
 }, 
 {
  "pk": 190, 
  "model": "auth.user", 
  "fields": {
   "username": "willcu@mit.edu", 
   "first_name": "William", 
   "last_name": "Ung", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 01:29:27", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$7f5a4$76a97b87fd2d48a212e104a8b5a06c66d7b0ce1a", 
   "email": "willcu@mit.edu", 
   "date_joined": "2011-09-06 01:29:16"
  }
 }, 
 {
  "pk": 191, 
  "model": "auth.user", 
  "fields": {
   "username": "bgitman@mit.edu", 
   "first_name": "Benjamin", 
   "last_name": "Lerner", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 02:36:26", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$8287d$20a4c49e176bd467ea648bdc7a749118eaacb820", 
   "email": "bgitman@mit.edu", 
   "date_joined": "2011-09-06 02:36:18"
  }
 }, 
 {
  "pk": 192, 
  "model": "auth.user", 
  "fields": {
   "username": "dgorman@mit.edu", 
   "first_name": "Danielle", 
   "last_name": "Gorman", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 09:54:44", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$8bdb4$9e5c721d78210d4bda86286a8b497c39a186f3b1", 
   "email": "dgorman@mit.edu", 
   "date_joined": "2011-09-06 09:54:33"
  }
 }, 
 {
  "pk": 193, 
  "model": "auth.user", 
  "fields": {
   "username": "andreafe@mit.edu", 
   "first_name": "Andrea", 
   "last_name": "Fabre", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 10:09:41", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$61d40$c920f0ffff39f1169d6556f733bd0672aef7d674", 
   "email": "andreafe@mit.edu", 
   "date_joined": "2011-09-06 10:09:28"
  }
 }, 
 {
  "pk": 195, 
  "model": "auth.user", 
  "fields": {
   "username": "gyz@mit.edu", 
   "first_name": "Yunzhi", 
   "last_name": "Gao", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 10:46:26", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$444ba$019f77e3eb8bd438777da1d9644effa05ea072ad", 
   "email": "gyz@mit.edu", 
   "date_joined": "2011-09-06 10:44:14"
  }
 }, 
 {
  "pk": 222, 
  "model": "auth.user", 
  "fields": {
   "username": "dpetters@mit.edu", 
   "first_name": "Dmitrij", 
   "last_name": "Petters", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 22:26:49", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$a968a$692ac5c4536d6533537875f8e2302cc278c5665e", 
   "email": "dpetters@mit.edu", 
   "date_joined": "2011-09-06 22:26:42"
  }
 }, 
 {
  "pk": 197, 
  "model": "auth.user", 
  "fields": {
   "username": "boonteik@mit.edu", 
   "first_name": "Boon", 
   "last_name": "Ooi", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 10:57:29", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$ad591$0e4d887a9c70c76c9d10b191cfac724b2b76df0f", 
   "email": "boonteik@mit.edu", 
   "date_joined": "2011-09-06 10:56:22"
  }
 }, 
 {
  "pk": 198, 
  "model": "auth.user", 
  "fields": {
   "username": "spring08@mit.edu", 
   "first_name": "Ram", 
   "last_name": "Rijal", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 10:58:40", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$817ac$f59b077c3508ae8bbb4c7b2a28264f77e0ac62f2", 
   "email": "spring08@mit.edu", 
   "date_joined": "2011-09-06 10:58:07"
  }
 }, 
 {
  "pk": 199, 
  "model": "auth.user", 
  "fields": {
   "username": "sylin07@mit.edu", 
   "first_name": "Stephanie", 
   "last_name": "Lin", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 11:08:32", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$2ecd0$16ee885e6c8e8facc176940b89021441d13e9fb1", 
   "email": "sylin07@mit.edu", 
   "date_joined": "2011-09-06 11:08:21"
  }
 }, 
 {
  "pk": 200, 
  "model": "auth.user", 
  "fields": {
   "username": "clmurphy@mit.edu", 
   "first_name": "Calley", 
   "last_name": "Murphy", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 11:13:20", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$25e4c$f259c8a9eb9e6ee8cb85028ce806124d4f3ad56d", 
   "email": "clmurphy@mit.edu", 
   "date_joined": "2011-09-06 11:11:04"
  }
 }, 
 {
  "pk": 201, 
  "model": "auth.user", 
  "fields": {
   "username": "renakatz@mit.edu", 
   "first_name": "Rena", 
   "last_name": "Katz", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 12:22:03", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$b78d0$c99a71271403cb04fc1c2f462d8617aa8a1a0224", 
   "email": "renakatz@mit.edu", 
   "date_joined": "2011-09-06 11:23:39"
  }
 }, 
 {
  "pk": 202, 
  "model": "auth.user", 
  "fields": {
   "username": "kdubbs@mit.edu", 
   "first_name": "Karen", 
   "last_name": "Dubbin", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 11:29:24", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$22f31$25377f780c2535b3efbd4bcf4de537c7e6d928de", 
   "email": "kdubbs@mit.edu", 
   "date_joined": "2011-09-06 11:28:32"
  }
 }, 
 {
  "pk": 203, 
  "model": "auth.user", 
  "fields": {
   "username": "ruiyiliu@mit.edu", 
   "first_name": "Ruiyi", 
   "last_name": "Liu", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 11:37:53", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$f276d$8cbd705b6c50df20f6c878e0539cad58e47f7d25", 
   "email": "ruiyiliu@mit.edu", 
   "date_joined": "2011-09-06 11:37:41"
  }
 }, 
 {
  "pk": 204, 
  "model": "auth.user", 
  "fields": {
   "username": "sbenitez@mit.edu", 
   "first_name": "Sergio", 
   "last_name": "Benitez", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 11:38:49", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$27639$bb5fb4d100e9da1e204d6da41ebf2df3f8f626ed", 
   "email": "sbenitez@mit.edu", 
   "date_joined": "2011-09-06 11:38:25"
  }
 }, 
 {
  "pk": 205, 
  "model": "auth.user", 
  "fields": {
   "username": "jswang@mit.edu", 
   "first_name": "Jerry", 
   "last_name": "Wang", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 11:48:35", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$92891$e75d396a7018b16948a44cd9db14f0bd1b62063b", 
   "email": "jswang@mit.edu", 
   "date_joined": "2011-09-06 11:48:02"
  }
 }, 
 {
  "pk": 206, 
  "model": "auth.user", 
  "fields": {
   "username": "cgaray@mit.edu", 
   "first_name": "Carlos", 
   "last_name": "Garay", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 12:02:48", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$8c6b4$e79afbd69fddb698639e0e02103f84ec3f0f14cf", 
   "email": "cgaray@mit.edu", 
   "date_joined": "2011-09-06 12:01:25"
  }
 }, 
 {
  "pk": 207, 
  "model": "auth.user", 
  "fields": {
   "username": "viettran@mit.edu", 
   "first_name": "Viet-Tran", 
   "last_name": "Nguyen", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 12:21:00", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$10c70$c4200884bacc55b271a9626734b75890be50159c", 
   "email": "viettran@mit.edu", 
   "date_joined": "2011-09-06 12:20:29"
  }
 }, 
 {
  "pk": 208, 
  "model": "auth.user", 
  "fields": {
   "username": "alexwang@mit.edu", 
   "first_name": "Alex", 
   "last_name": "Wang", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 12:42:22", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$d0de6$ffb591b4b4c825836225b242cbf3264d289cdd89", 
   "email": "alexwang@mit.edu", 
   "date_joined": "2011-09-06 12:42:08"
  }
 }, 
 {
  "pk": 209, 
  "model": "auth.user", 
  "fields": {
   "username": "maximuss@mit.edu", 
   "first_name": "Maximus", 
   "last_name": "John", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 13:01:29", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$a4b46$f4c3429de12dcc9fc52c3b639c589f96e2759976", 
   "email": "maximuss@mit.edu", 
   "date_joined": "2011-09-06 13:01:18"
  }
 }, 
 {
  "pk": 210, 
  "model": "auth.user", 
  "fields": {
   "username": "jdsimosa@mit.edu", 
   "first_name": "Jorge", 
   "last_name": "Simosa", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 13:44:45", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$44fac$c1a91f29e8b943c6cd5c577dee1c2edc00c162c6", 
   "email": "jdsimosa@mit.edu", 
   "date_joined": "2011-09-06 13:44:27"
  }
 }, 
 {
  "pk": 211, 
  "model": "auth.user", 
  "fields": {
   "username": "fayefaye@mit.edu", 
   "first_name": "Farre", 
   "last_name": "Nixon", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 14:06:22", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$c04ed$102659459ca62393ec8630c3c025456e9dc106fc", 
   "email": "fayefaye@mit.edu", 
   "date_joined": "2011-09-06 14:06:08"
  }
 }, 
 {
  "pk": 212, 
  "model": "auth.user", 
  "fields": {
   "username": "xinqili@mit.edu", 
   "first_name": "Xin", 
   "last_name": "Li", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 14:26:59", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$ea70d$40cd098f14ccc8c31c7ede155dcddd274aded8b0", 
   "email": "xinqili@mit.edu", 
   "date_joined": "2011-09-06 14:26:41"
  }
 }, 
 {
  "pk": 213, 
  "model": "auth.user", 
  "fields": {
   "username": "thetull@mit.edu", 
   "first_name": "Tull", 
   "last_name": "Gearreald", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 15:16:31", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$f4b2e$ef62c544da3911f28c8128025bb06418b028fd90", 
   "email": "thetull@mit.edu", 
   "date_joined": "2011-09-06 15:16:15"
  }
 }, 
 {
  "pk": 214, 
  "model": "auth.user", 
  "fields": {
   "username": "tchen91@mit.edu", 
   "first_name": "Anthony", 
   "last_name": "Chen", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 15:26:01", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$54a07$5b7010f235e67987029351c3f93b9e505fd4e981", 
   "email": "tchen91@mit.edu", 
   "date_joined": "2011-09-06 15:25:32"
  }
 }, 
 {
  "pk": 215, 
  "model": "auth.user", 
  "fields": {
   "username": "awu92@mit.edu", 
   "first_name": "Albert", 
   "last_name": "Wu", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 16:14:10", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$0ca8a$c621736c0b735d188fc05e77664b0a4616a2b1b5", 
   "email": "awu92@mit.edu", 
   "date_joined": "2011-09-06 16:05:15"
  }
 }, 
 {
  "pk": 216, 
  "model": "auth.user", 
  "fields": {
   "username": "dbetser@mit.edu", 
   "first_name": "Dina", 
   "last_name": "Betser", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 17:11:48", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$d22b7$2799c446e9a098e7b8b56f703cfbd5fbda696fdf", 
   "email": "dbetser@mit.edu", 
   "date_joined": "2011-09-06 17:11:40"
  }
 }, 
 {
  "pk": 217, 
  "model": "auth.user", 
  "fields": {
   "username": "rjazouli@mit.edu", 
   "first_name": "Redwane", 
   "last_name": "Jazouli", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 17:19:08", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$c544f$c0662529488e49a9425f253a19f85b486b772ad6", 
   "email": "rjazouli@mit.edu", 
   "date_joined": "2011-09-06 17:18:46"
  }
 }, 
 {
  "pk": 218, 
  "model": "auth.user", 
  "fields": {
   "username": "hxzhu@mit.edu", 
   "first_name": "Henry", 
   "last_name": "Zhu", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 17:20:28", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$bfbbc$4044d09343d15712b6ef8a9f3a005830c58e5b26", 
   "email": "hxzhu@mit.edu", 
   "date_joined": "2011-09-06 17:19:30"
  }
 }, 
 {
  "pk": 219, 
  "model": "auth.user", 
  "fields": {
   "username": "vineetg@mit.edu", 
   "first_name": "Vineet", 
   "last_name": "Gopal", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 21:21:25", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$48743$e2ae90d2ee040168dcf6d0d6b9eb82c0b7b32b08", 
   "email": "vineetg@mit.edu", 
   "date_joined": "2011-09-06 21:21:09"
  }
 }, 
 {
  "pk": 220, 
  "model": "auth.user", 
  "fields": {
   "username": "shuang61@mit.edu", 
   "first_name": "Shuang", 
   "last_name": "Chen", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 22:04:02", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$c4e19$c62eb0e206c0230655a5e9a3facea6dd293f48f2", 
   "email": "shuang61@mit.edu", 
   "date_joined": "2011-09-06 21:25:33"
  }
 }, 
 {
  "pk": 221, 
  "model": "auth.user", 
  "fields": {
   "username": "mco@mit.edu", 
   "first_name": "Monica", 
   "last_name": "Oliver", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 21:53:32", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$92764$81e7e1f15e3ceec9a381255ba5fc5280ecebd305", 
   "email": "mco@mit.edu", 
   "date_joined": "2011-09-06 21:53:21"
  }
 }, 
 {
  "pk": 223, 
  "model": "auth.user", 
  "fields": {
   "username": "tlim@mit.edu", 
   "first_name": "Terence", 
   "last_name": "Lim", 
   "is_active": true, 
   "is_superuser": false, 
   "is_staff": false, 
   "last_login": "2011-09-06 23:11:16", 
   "groups": [], 
   "user_permissions": [], 
   "password": "sha1$c801e$8ae132e00302480ddc14fa8248f98bc81cef7b97", 
   "email": "tlim@mit.edu", 
   "date_joined": "2011-09-06 23:00:25"
  }
 }, 
 {
  "pk": 1, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": false, 
   "user": 1, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 43, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 43, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 194, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 194, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 4, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": false, 
   "user": 4, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 41, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 41, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 40, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 40, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 44, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 44, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 45, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 45, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 46, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 46, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 47, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 47, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 48, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 48, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 49, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 49, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 50, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 50, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 51, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 51, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 52, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 52, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 53, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 53, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 54, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 54, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 55, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 55, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 56, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 56, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 57, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 57, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 58, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 58, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 59, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 59, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 60, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 60, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 61, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 61, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 62, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 62, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 63, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 63, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 64, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 64, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 65, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 65, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 66, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 66, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 67, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 67, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 68, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 68, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 69, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 69, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 70, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 70, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 71, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 71, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 72, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 72, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 76, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 76, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 80, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 80, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 81, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 81, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 82, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 82, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 85, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 85, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 86, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 86, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 87, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 87, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 89, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 89, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 94, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 94, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 96, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 96, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 97, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 97, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 99, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 99, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 100, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 100, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 101, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 101, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 102, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 102, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 103, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 103, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 104, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 104, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 105, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 105, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 106, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 106, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 107, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 107, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 108, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 108, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 109, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 109, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 110, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 110, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 111, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 111, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 112, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 112, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 113, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 113, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 114, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 114, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 116, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 116, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 117, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 117, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 118, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 118, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 119, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 119, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 120, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 120, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 121, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 121, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 122, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 122, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 123, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 123, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 124, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 124, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 125, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 125, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 126, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 126, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 127, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 127, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 128, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 128, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 129, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 129, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 130, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 130, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 131, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 131, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 132, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 132, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 133, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 133, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 134, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 134, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 135, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 135, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 136, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 136, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 137, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 137, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 140, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 140, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 141, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 141, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 142, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 142, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 143, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 143, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 144, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 144, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 145, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 145, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 146, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 146, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 147, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 147, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 148, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 148, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 149, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 149, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 150, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 150, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 151, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 151, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 152, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 152, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 153, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 153, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 154, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 154, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 155, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 155, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 156, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 156, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 157, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 157, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 158, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 158, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 159, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 159, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 160, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 160, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 161, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 161, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 162, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 162, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 163, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 163, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 164, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 164, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 165, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 165, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 166, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 166, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 167, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 167, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 168, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 168, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 169, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 169, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 170, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 170, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 171, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 171, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 172, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 172, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 173, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 173, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 174, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 174, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 175, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 175, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 176, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 176, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 177, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 177, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 178, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 178, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 179, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 179, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 180, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 180, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 181, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 181, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 182, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 182, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 183, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 183, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 184, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 184, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 185, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 185, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 186, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 186, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 187, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 187, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 188, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 188, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 189, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 189, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 190, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 190, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 191, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 191, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 192, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 192, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 193, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 193, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 195, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 195, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 222, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 222, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 197, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 197, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 198, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 198, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 199, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 199, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 200, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 200, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 201, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 201, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 202, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 202, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 203, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 203, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 204, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 204, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 205, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 205, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 206, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 206, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 207, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 207, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 208, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 208, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 209, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 209, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 210, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 210, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 211, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 211, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 212, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 212, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 213, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 213, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 214, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 214, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 215, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 215, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 216, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 216, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 217, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 217, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 218, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 218, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 219, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 219, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 220, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 220, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 221, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 221, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 223, 
  "model": "registration.userattributes", 
  "fields": {
   "is_verified": true, 
   "user": 223, 
   "last_password_change_date": null
  }
 }, 
 {
  "pk": 1, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-28 21:18:51", 
   "session_key": "11ddc88022657989bce0e80ecb3846df", 
   "last_updated": "2011-08-28 21:18:51", 
   "user": 1
  }
 }, 
 {
  "pk": 99, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 19:19:21", 
   "session_key": "c57dded75afa71a970502fa7437541cf", 
   "last_updated": "2011-08-29 19:19:21", 
   "user": 4
  }
 }, 
 {
  "pk": 3, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-28 21:26:39", 
   "session_key": "b027acbd6cefdd3f78dd24a52d754aeb", 
   "last_updated": "2011-08-28 21:26:39", 
   "user": 1
  }
 }, 
 {
  "pk": 10, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-28 22:45:26", 
   "session_key": "ae9281ca39172c1974c7487fe8b4b50e", 
   "last_updated": "2011-08-28 22:45:26", 
   "user": 1
  }
 }, 
 {
  "pk": 6, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-28 21:45:04", 
   "session_key": "02521f4e5c3babf992e1c2472d37213d", 
   "last_updated": "2011-08-28 21:45:04", 
   "user": 4
  }
 }, 
 {
  "pk": 7, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-28 21:45:56", 
   "session_key": "36407f0271f29ecce96e841a130d6732", 
   "last_updated": "2011-08-28 21:45:56", 
   "user": 1
  }
 }, 
 {
  "pk": 9, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-28 22:30:07", 
   "session_key": "d03a2e0db7e0b10f94cfc7af7ba7fe22", 
   "last_updated": "2011-08-28 22:30:07", 
   "user": 4
  }
 }, 
 {
  "pk": 11, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-28 22:46:17", 
   "session_key": "b7a30750646f7bae48c35f1e8f5cb8ed", 
   "last_updated": "2011-08-28 22:46:17", 
   "user": 4
  }
 }, 
 {
  "pk": 12, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-28 22:58:29", 
   "session_key": "30b79811447d6cc84f6412d325219a06", 
   "last_updated": "2011-08-28 22:58:29", 
   "user": 1
  }
 }, 
 {
  "pk": 14, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-28 23:11:58", 
   "session_key": "e3d710af2a7a20b0a6fe554cca159792", 
   "last_updated": "2011-08-28 23:11:58", 
   "user": 1
  }
 }, 
 {
  "pk": 22, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-28 23:33:32", 
   "session_key": "b4b8ec753ab4873a4177ff23f3e6a7a9", 
   "last_updated": "2011-08-28 23:33:32", 
   "user": 1
  }
 }, 
 {
  "pk": 24, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-28 23:38:53", 
   "session_key": "948e5f6bd64f44ca0e9e6ea5b715ea26", 
   "last_updated": "2011-08-28 23:38:53", 
   "user": 1
  }
 }, 
 {
  "pk": 26, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-28 23:50:51", 
   "session_key": "ab670bee92276b3a0380be2f362adf49", 
   "last_updated": "2011-08-28 23:50:51", 
   "user": 1
  }
 }, 
 {
  "pk": 28, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 00:04:32", 
   "session_key": "ef3a77231ff4d2786b00e65e5f97b7cb", 
   "last_updated": "2011-08-29 00:04:32", 
   "user": 1
  }
 }, 
 {
  "pk": 95, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 18:42:44", 
   "session_key": "5da124b6721f8e2abab3fbe94bdae58c", 
   "last_updated": "2011-08-29 18:42:44", 
   "user": 1
  }
 }, 
 {
  "pk": 193, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 11:37:53", 
   "session_key": "802d241f24aede7cd5989f4e8829de04", 
   "last_updated": "2011-08-30 11:37:53", 
   "user": 1
  }
 }, 
 {
  "pk": 37, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 01:58:52", 
   "session_key": "4de2fd583cae35ddb268f31faaa4a97f", 
   "last_updated": "2011-08-29 01:58:52", 
   "user": 1
  }
 }, 
 {
  "pk": 39, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 02:03:46", 
   "session_key": "b9a40c9a27d45c0d8275d5c9d8262e13", 
   "last_updated": "2011-08-29 02:03:46", 
   "user": 1
  }
 }, 
 {
  "pk": 41, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 02:08:22", 
   "session_key": "ec34bd0d59673ce1f7a621c579213579", 
   "last_updated": "2011-08-29 02:08:22", 
   "user": 1
  }
 }, 
 {
  "pk": 43, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 02:24:06", 
   "session_key": "85c47b2ec7e3918cb366552daf66689b", 
   "last_updated": "2011-08-29 02:24:06", 
   "user": 1
  }
 }, 
 {
  "pk": 45, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 02:43:27", 
   "session_key": "c28fdc3340354f46fef5e66c4189bd15", 
   "last_updated": "2011-08-29 02:43:27", 
   "user": 1
  }
 }, 
 {
  "pk": 65, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 10:26:27", 
   "session_key": "9217416f1a8590095b35c554cf7fc70b", 
   "last_updated": "2011-08-29 10:26:27", 
   "user": 1
  }
 }, 
 {
  "pk": 57, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 10:00:43", 
   "session_key": "3e970dd03a6c1355d8d3ea9adceef78b", 
   "last_updated": "2011-08-29 10:00:43", 
   "user": 1
  }
 }, 
 {
  "pk": 50, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 09:20:55", 
   "session_key": "f23d0eadb3897da65ded4bc916b28dd8", 
   "last_updated": "2011-08-29 09:20:55", 
   "user": 1
  }
 }, 
 {
  "pk": 51, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 09:22:35", 
   "session_key": "63b387747b421a2d098531de368efa1c", 
   "last_updated": "2011-08-29 09:22:35", 
   "user": 1
  }
 }, 
 {
  "pk": 110, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 19:52:18", 
   "session_key": "9d5b8d5720ac795f6d3a99154a1686a5", 
   "last_updated": "2011-08-29 19:52:18", 
   "user": 1
  }
 }, 
 {
  "pk": 53, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 09:24:06", 
   "session_key": "cd117629b490bda8f35a690a43379bcd", 
   "last_updated": "2011-08-29 09:24:06", 
   "user": 1
  }
 }, 
 {
  "pk": 91, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 18:37:13", 
   "session_key": "ebc822d9d770c1c993a9ff4f7682bfc5", 
   "last_updated": "2011-08-29 18:37:13", 
   "user": 1
  }
 }, 
 {
  "pk": 72, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 10:58:22", 
   "session_key": "3fc8311244f88c68016bd5a714d59373", 
   "last_updated": "2011-08-29 10:58:22", 
   "user": 1
  }
 }, 
 {
  "pk": 59, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 10:05:06", 
   "session_key": "cb35d7532ad21bfc24f18ec9cf6a9cac", 
   "last_updated": "2011-08-29 10:05:06", 
   "user": 1
  }
 }, 
 {
  "pk": 104, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 19:42:54", 
   "session_key": "725b542e6b1c2909b4f011ba38299d27", 
   "last_updated": "2011-08-29 19:42:54", 
   "user": 1
  }
 }, 
 {
  "pk": 61, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 10:11:56", 
   "session_key": "4ed9a6387ffe177cccbabae743ea8306", 
   "last_updated": "2011-08-29 10:11:56", 
   "user": 1
  }
 }, 
 {
  "pk": 62, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 10:16:46", 
   "session_key": "656c747529cc420edd58a8af264ef867", 
   "last_updated": "2011-08-29 10:16:46", 
   "user": 1
  }
 }, 
 {
  "pk": 67, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 10:28:51", 
   "session_key": "7fbcc75aade98eb8c07383c44c2b3bda", 
   "last_updated": "2011-08-29 10:28:51", 
   "user": 1
  }
 }, 
 {
  "pk": 68, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 10:38:31", 
   "session_key": "d8ecb459c54a319f1ba94287dcee0d7b", 
   "last_updated": "2011-08-29 10:38:31", 
   "user": 1
  }
 }, 
 {
  "pk": 121, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 20:05:47", 
   "session_key": "a206129c1f7ecc43d68672a5135bf167", 
   "last_updated": "2011-08-29 20:05:47", 
   "user": 1
  }
 }, 
 {
  "pk": 70, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 10:41:29", 
   "session_key": "60106fcb090bc78c981b0f8a11809d6c", 
   "last_updated": "2011-08-29 10:41:29", 
   "user": 1
  }
 }, 
 {
  "pk": 81, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 15:36:19", 
   "session_key": "0457f230d1a91e7f1c02cd68512d11e9", 
   "last_updated": "2011-08-29 15:36:19", 
   "user": 1
  }
 }, 
 {
  "pk": 88, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 18:29:05", 
   "session_key": "67c8943312cb043ca394c7559845a7e2", 
   "last_updated": "2011-08-29 18:29:05", 
   "user": 1
  }
 }, 
 {
  "pk": 256, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-31 18:27:22", 
   "session_key": "9b8b054bef57415585505dfab22935da", 
   "last_updated": "2011-08-31 18:27:22", 
   "user": 1
  }
 }, 
 {
  "pk": 83, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 16:16:02", 
   "session_key": "b070dc7959c9d0f27d6cf656fa30b8ae", 
   "last_updated": "2011-08-29 16:16:02", 
   "user": 1
  }
 }, 
 {
  "pk": 87, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 18:25:19", 
   "session_key": "a1bae78457bfcdc3b82429e731a6df25", 
   "last_updated": "2011-08-29 18:25:19", 
   "user": 4
  }
 }, 
 {
  "pk": 86, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 18:19:18", 
   "session_key": "2405408f80e5c95298fa9f7f866d0ad6", 
   "last_updated": "2011-08-29 18:19:18", 
   "user": 4
  }
 }, 
 {
  "pk": 100, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 19:32:40", 
   "session_key": "c439521af8ccbfc370873a58bc6e2aec", 
   "last_updated": "2011-08-29 19:32:40", 
   "user": 1
  }
 }, 
 {
  "pk": 98, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 18:44:26", 
   "session_key": "2647094b8a7d88067f53c96ab8d20b12", 
   "last_updated": "2011-08-29 18:44:26", 
   "user": 1
  }
 }, 
 {
  "pk": 122, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 20:06:15", 
   "session_key": "ff0a50c4b5f5dd333e94f5a1890444be", 
   "last_updated": "2011-08-29 20:06:15", 
   "user": 40
  }
 }, 
 {
  "pk": 107, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 19:48:57", 
   "session_key": "75b1c1731092fb973c29aff3d44d26ba", 
   "last_updated": "2011-08-29 19:48:57", 
   "user": 1
  }
 }, 
 {
  "pk": 119, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 20:03:18", 
   "session_key": "7d670ad6e6bb3f743cc22dc2a76af531", 
   "last_updated": "2011-08-29 20:03:18", 
   "user": 40
  }
 }, 
 {
  "pk": 116, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 19:59:32", 
   "session_key": "d9d26311049a3cba37f57ccdfe8d662f", 
   "last_updated": "2011-08-29 19:59:32", 
   "user": 1
  }
 }, 
 {
  "pk": 117, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 19:59:53", 
   "session_key": "3a4e7ba92bc20515128f5865a32a94ac", 
   "last_updated": "2011-08-29 19:59:53", 
   "user": 1
  }
 }, 
 {
  "pk": 118, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 20:01:42", 
   "session_key": "40863b5f0abef5af5822ea111bc64189", 
   "last_updated": "2011-08-29 20:01:42", 
   "user": 1
  }
 }, 
 {
  "pk": 198, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 12:53:03", 
   "session_key": "e2ad074c8b1605223013caa6cc43d6af", 
   "last_updated": "2011-08-30 12:53:03", 
   "user": 4
  }
 }, 
 {
  "pk": 124, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 20:06:59", 
   "session_key": "012ca52f64d8aba1fa36323d55743cae", 
   "last_updated": "2011-08-29 20:06:59", 
   "user": 1
  }
 }, 
 {
  "pk": 125, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 20:07:43", 
   "session_key": "9712f315b3fc67edd685643af2e965b2", 
   "last_updated": "2011-08-29 20:07:43", 
   "user": 40
  }
 }, 
 {
  "pk": 126, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 20:09:04", 
   "session_key": "af1f7d596be9d4fcb88eb562609a4b7b", 
   "last_updated": "2011-08-29 20:09:04", 
   "user": 1
  }
 }, 
 {
  "pk": 197, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 12:14:56", 
   "session_key": "01d45d48ae551b27bccf90989ea6cad4", 
   "last_updated": "2011-08-30 12:14:56", 
   "user": 1
  }
 }, 
 {
  "pk": 128, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 20:13:57", 
   "session_key": "b300881dffa8e9a821bba88886d086ad", 
   "last_updated": "2011-08-29 20:13:57", 
   "user": 1
  }
 }, 
 {
  "pk": 129, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 20:16:15", 
   "session_key": "69315b66dcd04f89aeb9ec827dea762b", 
   "last_updated": "2011-08-29 20:16:15", 
   "user": 43
  }
 }, 
 {
  "pk": 130, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 20:16:27", 
   "session_key": "dbedbf3a1c289c5bb2fee2da43642e5c", 
   "last_updated": "2011-08-29 20:16:27", 
   "user": 44
  }
 }, 
 {
  "pk": 131, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 20:16:59", 
   "session_key": "faef027299f94eacc7624a698d035bde", 
   "last_updated": "2011-08-29 20:16:59", 
   "user": 45
  }
 }, 
 {
  "pk": 132, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 20:38:12", 
   "session_key": "194756357aeba4c5faae36bfc52ae041", 
   "last_updated": "2011-08-29 20:38:12", 
   "user": 4
  }
 }, 
 {
  "pk": 133, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 20:55:33", 
   "session_key": "e3c2ce33b9ffff22ae5f444ce6c8355e", 
   "last_updated": "2011-08-29 20:55:33", 
   "user": 1
  }
 }, 
 {
  "pk": 195, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 12:02:01", 
   "session_key": "d51e0b8f5b77354bdf43076b3be94c6a", 
   "last_updated": "2011-08-30 12:02:01", 
   "user": 1
  }
 }, 
 {
  "pk": 135, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 21:01:10", 
   "session_key": "b37d30d513dd53dc1cc4e2a6c1136559", 
   "last_updated": "2011-08-29 21:01:10", 
   "user": 48
  }
 }, 
 {
  "pk": 136, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 21:02:33", 
   "session_key": "45e9199da05bbfb15b745b1ce7afe962", 
   "last_updated": "2011-08-29 21:02:33", 
   "user": 1
  }
 }, 
 {
  "pk": 196, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 12:14:32", 
   "session_key": "f9935b13ba13da6205a97500aeb9fe3f", 
   "last_updated": "2011-08-30 12:14:32", 
   "user": 4
  }
 }, 
 {
  "pk": 138, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 21:04:33", 
   "session_key": "68c5f3a5a7569ecdae29e90a6e6584b5", 
   "last_updated": "2011-08-29 21:04:33", 
   "user": 49
  }
 }, 
 {
  "pk": 140, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 21:12:19", 
   "session_key": "931dda7b0557828aa4cc8169b2013662", 
   "last_updated": "2011-08-29 21:12:19", 
   "user": 1
  }
 }, 
 {
  "pk": 141, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 21:28:29", 
   "session_key": "f8c6ddcd69e01d668a2a71376f6717a2", 
   "last_updated": "2011-08-29 21:28:29", 
   "user": 51
  }
 }, 
 {
  "pk": 151, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 22:22:06", 
   "session_key": "548711036e73327251cbf11d75584383", 
   "last_updated": "2011-08-29 22:22:06", 
   "user": 4
  }
 }, 
 {
  "pk": 144, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 21:36:19", 
   "session_key": "db9822c4b81eb1309df5c2f6b3583fde", 
   "last_updated": "2011-08-29 21:36:19", 
   "user": 50
  }
 }, 
 {
  "pk": 145, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 21:38:41", 
   "session_key": "dc334e42b153c7c1faec5ac27f4370b2", 
   "last_updated": "2011-08-29 21:38:41", 
   "user": 1
  }
 }, 
 {
  "pk": 146, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 21:46:44", 
   "session_key": "529e29a4918753533f7dd91db7b1cd64", 
   "last_updated": "2011-08-29 21:46:44", 
   "user": 53
  }
 }, 
 {
  "pk": 149, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 22:13:15", 
   "session_key": "990522dbc4bf236a4de9fd6d45b3df13", 
   "last_updated": "2011-08-29 22:13:15", 
   "user": 55
  }
 }, 
 {
  "pk": 148, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 22:09:50", 
   "session_key": "b16bfdefa304a0149df7babc23c77429", 
   "last_updated": "2011-08-29 22:09:50", 
   "user": 56
  }
 }, 
 {
  "pk": 150, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 22:15:42", 
   "session_key": "50d6127b933c6a585f2b6645bcf0e053", 
   "last_updated": "2011-08-29 22:15:42", 
   "user": 47
  }
 }, 
 {
  "pk": 152, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 22:25:36", 
   "session_key": "9f5afec971e119fefead8e1fb68b7649", 
   "last_updated": "2011-08-29 22:25:36", 
   "user": 57
  }
 }, 
 {
  "pk": 153, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 22:32:09", 
   "session_key": "72904dcf11f79d97bdc17615205ac71b", 
   "last_updated": "2011-08-29 22:32:09", 
   "user": 44
  }
 }, 
 {
  "pk": 154, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 23:05:31", 
   "session_key": "5d8047aad97e7503938816843c1535ef", 
   "last_updated": "2011-08-29 23:05:31", 
   "user": 59
  }
 }, 
 {
  "pk": 157, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 00:00:58", 
   "session_key": "75733740bb5d1fab60ba5019c3e1c8f0", 
   "last_updated": "2011-08-30 00:00:58", 
   "user": 62
  }
 }, 
 {
  "pk": 156, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-29 23:17:56", 
   "session_key": "5a08a545aa58af6ba019594dd52c59ec", 
   "last_updated": "2011-08-29 23:17:56", 
   "user": 60
  }
 }, 
 {
  "pk": 158, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 00:06:11", 
   "session_key": "8c82e2f3b39a25763660950fe88d5c0a", 
   "last_updated": "2011-08-30 00:06:11", 
   "user": 64
  }
 }, 
 {
  "pk": 160, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 00:19:59", 
   "session_key": "3c04732331076f747527e9266edde60a", 
   "last_updated": "2011-08-30 00:19:59", 
   "user": 66
  }
 }, 
 {
  "pk": 161, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 00:23:23", 
   "session_key": "18a97f114971c0aec81523e586805e2e", 
   "last_updated": "2011-08-30 00:23:23", 
   "user": 61
  }
 }, 
 {
  "pk": 163, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 01:24:17", 
   "session_key": "5db926ff9a6e89d87ca3aecf1e1f6b69", 
   "last_updated": "2011-08-30 01:24:17", 
   "user": 67
  }
 }, 
 {
  "pk": 164, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 01:48:16", 
   "session_key": "0f3932f721906007347518502605ac83", 
   "last_updated": "2011-08-30 01:48:16", 
   "user": 63
  }
 }, 
 {
  "pk": 165, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 02:44:41", 
   "session_key": "a83c15f2b32b6d60a0f022dc3c6d1bbb", 
   "last_updated": "2011-08-30 02:44:41", 
   "user": 68
  }
 }, 
 {
  "pk": 166, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 03:12:56", 
   "session_key": "aa13c46fcf76ca2f8262b28db0e7af63", 
   "last_updated": "2011-08-30 03:12:56", 
   "user": 1
  }
 }, 
 {
  "pk": 167, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 03:13:57", 
   "session_key": "7732dda5ff7dafa27ac059d2d312c71f", 
   "last_updated": "2011-08-30 03:13:57", 
   "user": 4
  }
 }, 
 {
  "pk": 168, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 03:13:57", 
   "session_key": "f20e56038d6aff1ec311f09ac9d6389e", 
   "last_updated": "2011-08-30 03:13:57", 
   "user": 4
  }
 }, 
 {
  "pk": 169, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 03:15:32", 
   "session_key": "cfc89f13d2b275ce7b2f9c4084761b8a", 
   "last_updated": "2011-08-30 03:15:32", 
   "user": 1
  }
 }, 
 {
  "pk": 170, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 03:42:05", 
   "session_key": "6c3d5b964cbc423661035b26d95c1319", 
   "last_updated": "2011-08-30 03:42:05", 
   "user": 4
  }
 }, 
 {
  "pk": 171, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 03:42:37", 
   "session_key": "ecbfdf0cbfdcc2d0ad19a463ae2dbfe8", 
   "last_updated": "2011-08-30 03:42:37", 
   "user": 1
  }
 }, 
 {
  "pk": 172, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 03:43:12", 
   "session_key": "ae86ac37cddd5d6ffc6ae9d0830accee", 
   "last_updated": "2011-08-30 03:43:12", 
   "user": 4
  }
 }, 
 {
  "pk": 174, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 03:52:01", 
   "session_key": "a24a5418978f703ba695ebb793990205", 
   "last_updated": "2011-08-30 03:52:01", 
   "user": 1
  }
 }, 
 {
  "pk": 175, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 08:34:21", 
   "session_key": "4d953ef98b38ce869e725d995842682e", 
   "last_updated": "2011-08-30 08:34:21", 
   "user": 4
  }
 }, 
 {
  "pk": 176, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 08:37:56", 
   "session_key": "4455d105c140a22d2a6bc2f9230a4b37", 
   "last_updated": "2011-08-30 08:37:56", 
   "user": 1
  }
 }, 
 {
  "pk": 177, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 08:56:29", 
   "session_key": "a983c6003646d64763905588007908e6", 
   "last_updated": "2011-08-30 08:56:29", 
   "user": 69
  }
 }, 
 {
  "pk": 178, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 08:56:43", 
   "session_key": "028fe8ae55f2f028532a18b032802023", 
   "last_updated": "2011-08-30 08:56:43", 
   "user": 69
  }
 }, 
 {
  "pk": 179, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 09:15:58", 
   "session_key": "6dabc4a9578242fc5abd28396b24b9f3", 
   "last_updated": "2011-08-30 09:15:58", 
   "user": 70
  }
 }, 
 {
  "pk": 182, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 09:27:35", 
   "session_key": "014a4be2f13d143a69a60716afc6fcf3", 
   "last_updated": "2011-08-30 09:27:35", 
   "user": 71
  }
 }, 
 {
  "pk": 181, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 09:23:29", 
   "session_key": "5f88ce1a5db584c4bdec140f21cd7d09", 
   "last_updated": "2011-08-30 09:23:29", 
   "user": 1
  }
 }, 
 {
  "pk": 185, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 10:04:31", 
   "session_key": "af3f27394278f5cb740482e4e149f244", 
   "last_updated": "2011-08-30 10:04:31", 
   "user": 4
  }
 }, 
 {
  "pk": 187, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 10:28:15", 
   "session_key": "323423ff214e7ddf55bb17da606b0600", 
   "last_updated": "2011-08-30 10:28:15", 
   "user": 1
  }
 }, 
 {
  "pk": 188, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 10:29:28", 
   "session_key": "53a1f1cc20c30d240c5c71e6d2135683", 
   "last_updated": "2011-08-30 10:29:28", 
   "user": 4
  }
 }, 
 {
  "pk": 189, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 10:29:58", 
   "session_key": "d33dd1b052ad3e7814821ebe1e117590", 
   "last_updated": "2011-08-30 10:29:58", 
   "user": 1
  }
 }, 
 {
  "pk": 191, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 11:05:35", 
   "session_key": "6e83d717bba618fe0232fed75ca3a886", 
   "last_updated": "2011-08-30 11:05:35", 
   "user": 1
  }
 }, 
 {
  "pk": 200, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 12:57:05", 
   "session_key": "4e56a9d8bae458d9a8747a4c59c7fa21", 
   "last_updated": "2011-08-30 12:57:05", 
   "user": 1
  }
 }, 
 {
  "pk": 211, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 14:49:32", 
   "session_key": "c7868e1b1faf6b3998d438466d20766a", 
   "last_updated": "2011-08-30 14:49:32", 
   "user": 1
  }
 }, 
 {
  "pk": 202, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 13:00:20", 
   "session_key": "bac66d65c7952ce895a26ed3f950f7d8", 
   "last_updated": "2011-08-30 13:00:20", 
   "user": 1
  }
 }, 
 {
  "pk": 205, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 13:47:00", 
   "session_key": "4a11718707542a2d049af06fba84ed09", 
   "last_updated": "2011-08-30 13:47:00", 
   "user": 4
  }
 }, 
 {
  "pk": 337, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 00:56:37", 
   "session_key": "b193f4cf992f2a1d636fd608c0f1fe27", 
   "last_updated": "2011-09-02 00:56:37", 
   "user": 97
  }
 }, 
 {
  "pk": 207, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 14:06:24", 
   "session_key": "4f1f292704073dd242e886323d2a89d2", 
   "last_updated": "2011-08-30 14:06:24", 
   "user": 1
  }
 }, 
 {
  "pk": 224, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 19:02:13", 
   "session_key": "c30538a1d487fe2c7861fefe06802f75", 
   "last_updated": "2011-08-30 19:02:13", 
   "user": 1
  }
 }, 
 {
  "pk": 209, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 14:12:00", 
   "session_key": "1094eff6dd4c6562c422a1d2ed100642", 
   "last_updated": "2011-08-30 14:12:00", 
   "user": 1
  }
 }, 
 {
  "pk": 212, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 15:00:55", 
   "session_key": "8f74a7f5c4ac2492bbffd67ef11a9581", 
   "last_updated": "2011-08-30 15:00:55", 
   "user": 68
  }
 }, 
 {
  "pk": 215, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 15:20:03", 
   "session_key": "40327eb99d4aba26bcbe4a0fc5482653", 
   "last_updated": "2011-08-30 15:20:03", 
   "user": 1
  }
 }, 
 {
  "pk": 245, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-31 12:38:25", 
   "session_key": "c291b221e14b2b5aeab2846d21118da5", 
   "last_updated": "2011-08-31 12:38:25", 
   "user": 1
  }
 }, 
 {
  "pk": 217, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 15:36:48", 
   "session_key": "9da476dd2a126280522d0eee8fb58aac", 
   "last_updated": "2011-08-30 15:36:48", 
   "user": 1
  }
 }, 
 {
  "pk": 219, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 17:19:22", 
   "session_key": "b6402cb8e823716fe92b798179b0b53d", 
   "last_updated": "2011-08-30 17:19:22", 
   "user": 1
  }
 }, 
 {
  "pk": 220, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 17:22:48", 
   "session_key": "f4f23afd2823e0d09c0d99e253ac3f60", 
   "last_updated": "2011-08-30 17:22:48", 
   "user": 82
  }
 }, 
 {
  "pk": 221, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 18:37:22", 
   "session_key": "b0c2cf9246192cfef4762df4dcc24d1c", 
   "last_updated": "2011-08-30 18:37:22", 
   "user": 4
  }
 }, 
 {
  "pk": 222, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 18:48:25", 
   "session_key": "53fe6a56b7c5db1dc2f2e03d5a592556", 
   "last_updated": "2011-08-30 18:48:25", 
   "user": 1
  }
 }, 
 {
  "pk": 226, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 19:03:45", 
   "session_key": "11d64b09fd1463565340b2d9899274a0", 
   "last_updated": "2011-08-30 19:03:45", 
   "user": 1
  }
 }, 
 {
  "pk": 244, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-31 12:22:01", 
   "session_key": "89b22872719a11f96fd1c6dfeaa6a626", 
   "last_updated": "2011-08-31 12:22:01", 
   "user": 89
  }
 }, 
 {
  "pk": 252, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-31 14:33:45", 
   "session_key": "03cef555e6a383608ff31d3ae32ccfc4", 
   "last_updated": "2011-08-31 14:33:45", 
   "user": 1
  }
 }, 
 {
  "pk": 231, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-30 21:46:53", 
   "session_key": "498e0546adc406b16a38783051d983d1", 
   "last_updated": "2011-08-30 21:46:53", 
   "user": 1
  }
 }, 
 {
  "pk": 234, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-31 00:06:30", 
   "session_key": "ad4e9f3afb39d6f31aef873414b4a918", 
   "last_updated": "2011-08-31 00:06:30", 
   "user": 86
  }
 }, 
 {
  "pk": 235, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-31 00:43:55", 
   "session_key": "c5a03866df2253e60e391dd7eaaf8c14", 
   "last_updated": "2011-08-31 00:43:55", 
   "user": 4
  }
 }, 
 {
  "pk": 238, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-31 02:00:48", 
   "session_key": "7eb6aa983fb85f44d0878a09ed66d542", 
   "last_updated": "2011-08-31 02:00:48", 
   "user": 41
  }
 }, 
 {
  "pk": 237, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-31 01:03:36", 
   "session_key": "a3a4af7881be071eb21dac6e5db5fc9f", 
   "last_updated": "2011-08-31 01:03:36", 
   "user": 87
  }
 }, 
 {
  "pk": 239, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-31 02:24:05", 
   "session_key": "a74fdf1ef856f9d0e5fbcec62a23185e", 
   "last_updated": "2011-08-31 02:24:05", 
   "user": 1
  }
 }, 
 {
  "pk": 241, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-31 10:38:00", 
   "session_key": "ad177dad7f3b2f4949eb0b09a7aa7f7c", 
   "last_updated": "2011-08-31 10:38:00", 
   "user": 76
  }
 }, 
 {
  "pk": 242, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-31 11:03:34", 
   "session_key": "8875ad3dd5c46f04e29a21805ae6c46c", 
   "last_updated": "2011-08-31 11:03:34", 
   "user": 1
  }
 }, 
 {
  "pk": 247, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-31 13:19:58", 
   "session_key": "dd855586962c6f638527caf250677b7e", 
   "last_updated": "2011-08-31 13:19:58", 
   "user": 1
  }
 }, 
 {
  "pk": 249, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-31 13:22:30", 
   "session_key": "6069aa7a0d1f891bbf98199208de77f8", 
   "last_updated": "2011-08-31 13:22:30", 
   "user": 1
  }
 }, 
 {
  "pk": 251, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-31 13:38:48", 
   "session_key": "8406b68970c894a97157ff72d9db10c3", 
   "last_updated": "2011-08-31 13:38:48", 
   "user": 94
  }
 }, 
 {
  "pk": 254, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-08-31 16:01:23", 
   "session_key": "1bcecf0cc05f172c5485ff7862713369", 
   "last_updated": "2011-08-31 16:01:23", 
   "user": 4
  }
 }, 
 {
  "pk": 265, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 07:13:57", 
   "session_key": "fa6a751579ca4ff7448b9e7e5fc9b619", 
   "last_updated": "2011-09-01 07:13:57", 
   "user": 1
  }
 }, 
 {
  "pk": 281, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 10:40:34", 
   "session_key": "56fda236bf8de0911220e2fb3284547e", 
   "last_updated": "2011-09-01 10:40:34", 
   "user": 41
  }
 }, 
 {
  "pk": 269, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 07:20:03", 
   "session_key": "c9bbe84b512b04cf4b78bef70214767c", 
   "last_updated": "2011-09-01 07:20:03", 
   "user": 1
  }
 }, 
 {
  "pk": 332, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 22:59:56", 
   "session_key": "eec8a6f1a92199b16020cc9e97c435bc", 
   "last_updated": "2011-09-01 22:59:56", 
   "user": 1
  }
 }, 
 {
  "pk": 275, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 09:25:18", 
   "session_key": "e8f8a1255fc0515e2f870a5fac2f54c9", 
   "last_updated": "2011-09-01 09:25:18", 
   "user": 97
  }
 }, 
 {
  "pk": 299, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 12:24:48", 
   "session_key": "ac00ace7da5ecf9f120e362f064c4713", 
   "last_updated": "2011-09-01 12:24:48", 
   "user": 100
  }
 }, 
 {
  "pk": 278, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 10:04:49", 
   "session_key": "968bfc3f135266264b7bfe488b76cb3a", 
   "last_updated": "2011-09-01 10:04:49", 
   "user": 97
  }
 }, 
 {
  "pk": 331, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 22:59:43", 
   "session_key": "453f008b258d36a8519c74d76f08d496", 
   "last_updated": "2011-09-01 22:59:43", 
   "user": 97
  }
 }, 
 {
  "pk": 300, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 12:25:15", 
   "session_key": "e127151670dbcd9a4976d1d2d0ce6034", 
   "last_updated": "2011-09-01 12:25:15", 
   "user": 97
  }
 }, 
 {
  "pk": 290, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 11:14:12", 
   "session_key": "db954043500415a8138b11bff91c8857", 
   "last_updated": "2011-09-01 11:14:12", 
   "user": 1
  }
 }, 
 {
  "pk": 293, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 11:15:33", 
   "session_key": "a066692fd3278b0433095e80c6968b5f", 
   "last_updated": "2011-09-01 11:15:33", 
   "user": 97
  }
 }, 
 {
  "pk": 301, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 12:54:43", 
   "session_key": "02f0245f8b23e1e40d2ec66ef682b2d0", 
   "last_updated": "2011-09-01 12:54:43", 
   "user": 101
  }
 }, 
 {
  "pk": 302, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 12:55:24", 
   "session_key": "08ee977fbb0c433cb787d3ed76011d60", 
   "last_updated": "2011-09-01 12:55:24", 
   "user": 101
  }
 }, 
 {
  "pk": 303, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 13:09:20", 
   "session_key": "15100738cc84c7652415ace0c803cdd7", 
   "last_updated": "2011-09-01 13:09:20", 
   "user": 41
  }
 }, 
 {
  "pk": 307, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 14:45:19", 
   "session_key": "196c5334547641127ae6fad722a69a6f", 
   "last_updated": "2011-09-01 14:45:19", 
   "user": 103
  }
 }, 
 {
  "pk": 306, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 14:34:41", 
   "session_key": "2e07b737a7178b2ea4a652929cecc34b", 
   "last_updated": "2011-09-01 14:34:41", 
   "user": 1
  }
 }, 
 {
  "pk": 308, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 14:47:24", 
   "session_key": "02ba8000d27a88e81839fc044b56ff9c", 
   "last_updated": "2011-09-01 14:47:24", 
   "user": 4
  }
 }, 
 {
  "pk": 309, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 14:59:13", 
   "session_key": "0a2a51a90c9afa3d98bcbd7748fc0791", 
   "last_updated": "2011-09-01 14:59:13", 
   "user": 1
  }
 }, 
 {
  "pk": 310, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 15:00:25", 
   "session_key": "1078d6d4ed1339b37523f268772b0ae6", 
   "last_updated": "2011-09-01 15:00:25", 
   "user": 76
  }
 }, 
 {
  "pk": 311, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 15:11:06", 
   "session_key": "698d7fead7759e033ebb9f86d9f6dba0", 
   "last_updated": "2011-09-01 15:11:06", 
   "user": 1
  }
 }, 
 {
  "pk": 312, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 15:12:38", 
   "session_key": "4eb38d64ee3178fd5f3e66aef6cafca8", 
   "last_updated": "2011-09-01 15:12:38", 
   "user": 86
  }
 }, 
 {
  "pk": 313, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 15:23:56", 
   "session_key": "30a1646145d14d77313cb56c27ee6b65", 
   "last_updated": "2011-09-01 15:23:56", 
   "user": 104
  }
 }, 
 {
  "pk": 314, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 16:15:45", 
   "session_key": "a3e310996cb47f3aeced81f20ebbe020", 
   "last_updated": "2011-09-01 16:15:45", 
   "user": 50
  }
 }, 
 {
  "pk": 315, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 16:34:11", 
   "session_key": "7c3bff3520fb07ca28afa06f2c42a1de", 
   "last_updated": "2011-09-01 16:34:11", 
   "user": 105
  }
 }, 
 {
  "pk": 316, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 18:52:18", 
   "session_key": "6c5fe209f122dca01ba030f88edcb7c4", 
   "last_updated": "2011-09-01 18:52:18", 
   "user": 106
  }
 }, 
 {
  "pk": 317, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 19:11:00", 
   "session_key": "c02efd75a047ac8404f8838fcd915afd", 
   "last_updated": "2011-09-01 19:11:00", 
   "user": 1
  }
 }, 
 {
  "pk": 318, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 19:14:05", 
   "session_key": "cd4251047783d17988409b05953b90ae", 
   "last_updated": "2011-09-01 19:14:05", 
   "user": 107
  }
 }, 
 {
  "pk": 320, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 19:36:48", 
   "session_key": "f4e811cd29b303bb6e3836ccbf8b9fa1", 
   "last_updated": "2011-09-01 19:36:48", 
   "user": 109
  }
 }, 
 {
  "pk": 321, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 19:38:32", 
   "session_key": "7547c644706c2280c86bc3110bb0943e", 
   "last_updated": "2011-09-01 19:38:32", 
   "user": 110
  }
 }, 
 {
  "pk": 322, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 19:38:36", 
   "session_key": "ddf3bb580192fd0ae2f99bc1ce2c4aa5", 
   "last_updated": "2011-09-01 19:38:36", 
   "user": 111
  }
 }, 
 {
  "pk": 323, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 19:43:46", 
   "session_key": "ddf3bb580192fd0ae2f99bc1ce2c4aa5", 
   "last_updated": "2011-09-01 19:43:46", 
   "user": 111
  }
 }, 
 {
  "pk": 324, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 19:53:27", 
   "session_key": "d817f5d045052fc191cbbac3f42cf5cb", 
   "last_updated": "2011-09-01 19:53:27", 
   "user": 113
  }
 }, 
 {
  "pk": 325, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 19:59:28", 
   "session_key": "6f2c9f9a32c3082966e4fe425f43a529", 
   "last_updated": "2011-09-01 19:59:28", 
   "user": 112
  }
 }, 
 {
  "pk": 329, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-01 22:48:26", 
   "session_key": "4dda31f87b3ca77ce45bb7b224226bf2", 
   "last_updated": "2011-09-01 22:48:26", 
   "user": 1
  }
 }, 
 {
  "pk": 339, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 08:19:59", 
   "session_key": "b41f08eac8e18bbfb92f4f1a2f17b873", 
   "last_updated": "2011-09-02 08:19:59", 
   "user": 120
  }
 }, 
 {
  "pk": 344, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 09:42:32", 
   "session_key": "5b1cdc66e2e052ce7458f780b04cda66", 
   "last_updated": "2011-09-02 09:42:32", 
   "user": 97
  }
 }, 
 {
  "pk": 341, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 08:53:50", 
   "session_key": "703e307ae9ecedb4204e515d3431cb34", 
   "last_updated": "2011-09-02 08:53:50", 
   "user": 121
  }
 }, 
 {
  "pk": 342, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 09:26:57", 
   "session_key": "5f43daa0066d0d0df724dc8d6b262edb", 
   "last_updated": "2011-09-02 09:26:57", 
   "user": 97
  }
 }, 
 {
  "pk": 345, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 10:01:22", 
   "session_key": "1a71ee9e18f746bf879f33e06b294ee2", 
   "last_updated": "2011-09-02 10:01:22", 
   "user": 1
  }
 }, 
 {
  "pk": 346, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 10:40:00", 
   "session_key": "bcd9b6be1fc2b66d74aa1274feb41e49", 
   "last_updated": "2011-09-02 10:40:00", 
   "user": 123
  }
 }, 
 {
  "pk": 347, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 10:50:43", 
   "session_key": "c996eb03e8541d22ad0d8f08c7e95dd0", 
   "last_updated": "2011-09-02 10:50:43", 
   "user": 46
  }
 }, 
 {
  "pk": 348, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 10:59:58", 
   "session_key": "ac593e2d7cc0caba601488682cf7dffc", 
   "last_updated": "2011-09-02 10:59:58", 
   "user": 124
  }
 }, 
 {
  "pk": 349, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 11:18:49", 
   "session_key": "4a27cbf514408b3b62445f0a33d3ed14", 
   "last_updated": "2011-09-02 11:18:49", 
   "user": 125
  }
 }, 
 {
  "pk": 350, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 12:25:54", 
   "session_key": "f8fc28ddb3de1d26b760f18978650a8e", 
   "last_updated": "2011-09-02 12:25:54", 
   "user": 126
  }
 }, 
 {
  "pk": 351, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 12:32:37", 
   "session_key": "27d009109d7db86ff86a71cdfe19b0f8", 
   "last_updated": "2011-09-02 12:32:37", 
   "user": 127
  }
 }, 
 {
  "pk": 352, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 12:42:38", 
   "session_key": "efb7581499198195b9f7a8bb0fc44494", 
   "last_updated": "2011-09-02 12:42:38", 
   "user": 128
  }
 }, 
 {
  "pk": 353, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 12:54:26", 
   "session_key": "794dc3145f25a812e3009eea8d68a464", 
   "last_updated": "2011-09-02 12:54:26", 
   "user": 97
  }
 }, 
 {
  "pk": 354, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 12:56:25", 
   "session_key": "abddc936ab6932ec5f019dba4c786bd2", 
   "last_updated": "2011-09-02 12:56:25", 
   "user": 1
  }
 }, 
 {
  "pk": 355, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 12:59:20", 
   "session_key": "f112c8f4996aa67af1ba1af90b769502", 
   "last_updated": "2011-09-02 12:59:20", 
   "user": 129
  }
 }, 
 {
  "pk": 356, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 12:59:51", 
   "session_key": "a6c43d79ce2e052839e091ba7ccb5d8a", 
   "last_updated": "2011-09-02 12:59:51", 
   "user": 129
  }
 }, 
 {
  "pk": 359, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 14:04:58", 
   "session_key": "00a15ddd8f80f1210e74047ff5500461", 
   "last_updated": "2011-09-02 14:04:58", 
   "user": 4
  }
 }, 
 {
  "pk": 358, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 14:03:35", 
   "session_key": "a88be39f4957abc9dfc7bdbcad661c6f", 
   "last_updated": "2011-09-02 14:03:35", 
   "user": 130
  }
 }, 
 {
  "pk": 360, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 14:44:58", 
   "session_key": "fd9c44519512f0efcf50fd714da4f629", 
   "last_updated": "2011-09-02 14:44:58", 
   "user": 131
  }
 }, 
 {
  "pk": 361, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 14:59:17", 
   "session_key": "b9080e3e4e8a857d7689c1f29a14675a", 
   "last_updated": "2011-09-02 14:59:17", 
   "user": 1
  }
 }, 
 {
  "pk": 362, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 15:27:17", 
   "session_key": "5856f1958cc6c79d19459af309345726", 
   "last_updated": "2011-09-02 15:27:17", 
   "user": 132
  }
 }, 
 {
  "pk": 363, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 15:30:28", 
   "session_key": "1593b868283c3aaed9952956436e3796", 
   "last_updated": "2011-09-02 15:30:28", 
   "user": 132
  }
 }, 
 {
  "pk": 365, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 15:52:09", 
   "session_key": "e26a2ae1e1ae8fa6cb39375b1a77c354", 
   "last_updated": "2011-09-02 15:52:09", 
   "user": 51
  }
 }, 
 {
  "pk": 366, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 16:57:45", 
   "session_key": "4814b8ca608b4d8ef19c452198367794", 
   "last_updated": "2011-09-02 16:57:45", 
   "user": 97
  }
 }, 
 {
  "pk": 367, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 16:58:05", 
   "session_key": "679d7a4d64214f16b57b798ffbfd5987", 
   "last_updated": "2011-09-02 16:58:05", 
   "user": 1
  }
 }, 
 {
  "pk": 368, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 18:58:41", 
   "session_key": "812ab39983f997c3288e5c832bd8ee26", 
   "last_updated": "2011-09-02 18:58:41", 
   "user": 134
  }
 }, 
 {
  "pk": 369, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 18:59:40", 
   "session_key": "f90e8025ffb8601d1445bc29408e6959", 
   "last_updated": "2011-09-02 18:59:40", 
   "user": 134
  }
 }, 
 {
  "pk": 370, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 20:07:33", 
   "session_key": "ab698e6d452d426be8280908212cff42", 
   "last_updated": "2011-09-02 20:07:33", 
   "user": 1
  }
 }, 
 {
  "pk": 373, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-03 00:14:03", 
   "session_key": "3ff5b52e40d444e24bc4d63a662757a9", 
   "last_updated": "2011-09-03 00:14:03", 
   "user": 1
  }
 }, 
 {
  "pk": 372, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-02 20:34:36", 
   "session_key": "b63e42f3c0e33ac7814d6018bfcb01d3", 
   "last_updated": "2011-09-02 20:34:36", 
   "user": 135
  }
 }, 
 {
  "pk": 374, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-03 00:14:14", 
   "session_key": "fc8d6256b6e84027334862b23e98870d", 
   "last_updated": "2011-09-03 00:14:14", 
   "user": 136
  }
 }, 
 {
  "pk": 375, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-03 02:34:28", 
   "session_key": "8bc1eca6908b0ec2e557c499e63146f4", 
   "last_updated": "2011-09-03 02:34:28", 
   "user": 97
  }
 }, 
 {
  "pk": 376, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-03 05:23:31", 
   "session_key": "89e31913ae067ff2f8e3ae2c729098a2", 
   "last_updated": "2011-09-03 05:23:31", 
   "user": 137
  }
 }, 
 {
  "pk": 378, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-03 09:47:50", 
   "session_key": "1717ce4956503f04f7f59cb1c14ea92b", 
   "last_updated": "2011-09-03 09:47:50", 
   "user": 1
  }
 }, 
 {
  "pk": 380, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-03 09:54:34", 
   "session_key": "77883effffbfca61add7617436ee6235", 
   "last_updated": "2011-09-03 09:54:34", 
   "user": 1
  }
 }, 
 {
  "pk": 381, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-03 12:09:00", 
   "session_key": "f9c5538fda68d807de3a50eba413d6ed", 
   "last_updated": "2011-09-03 12:09:00", 
   "user": 140
  }
 }, 
 {
  "pk": 382, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-03 12:37:21", 
   "session_key": "780f7f067f5847a0112cfeb76079f3e2", 
   "last_updated": "2011-09-03 12:37:21", 
   "user": 97
  }
 }, 
 {
  "pk": 386, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-03 15:06:06", 
   "session_key": "de3d8afebf6e8d11d3f377be3960ea2f", 
   "last_updated": "2011-09-03 15:06:06", 
   "user": 4
  }
 }, 
 {
  "pk": 387, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-03 15:38:01", 
   "session_key": "a99c14e95a4a33d4a7a98042ecaeed96", 
   "last_updated": "2011-09-03 15:38:01", 
   "user": 1
  }
 }, 
 {
  "pk": 388, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-03 15:56:35", 
   "session_key": "550bcddc7fc66c0ba891b4ba5722d8d3", 
   "last_updated": "2011-09-03 15:56:35", 
   "user": 72
  }
 }, 
 {
  "pk": 389, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-03 16:05:21", 
   "session_key": "979a7f0e588dfbc9f477f444ba38d6c5", 
   "last_updated": "2011-09-03 16:05:21", 
   "user": 4
  }
 }, 
 {
  "pk": 390, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-03 16:13:39", 
   "session_key": "aabab4c0c72fef06d2818e3e170a0042", 
   "last_updated": "2011-09-03 16:13:39", 
   "user": 1
  }
 }, 
 {
  "pk": 511, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 10:56:37", 
   "session_key": "a88a5d31c973a269f272898278e4d33d", 
   "last_updated": "2011-09-06 10:56:37", 
   "user": 197
  }
 }, 
 {
  "pk": 392, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-03 18:48:56", 
   "session_key": "d5c79d696b830d2fed3e5f830c7016cc", 
   "last_updated": "2011-09-03 18:48:56", 
   "user": 142
  }
 }, 
 {
  "pk": 399, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-03 20:33:48", 
   "session_key": "a7562dfc75ee47d70d866d807fba1af3", 
   "last_updated": "2011-09-03 20:33:48", 
   "user": 1
  }
 }, 
 {
  "pk": 394, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-03 19:23:13", 
   "session_key": "6a521c8cb24e9936d29368a770e1f7f6", 
   "last_updated": "2011-09-03 19:23:13", 
   "user": 4
  }
 }, 
 {
  "pk": 395, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-03 19:39:20", 
   "session_key": "6cba9c2d694d0393054a575810a8bdb7", 
   "last_updated": "2011-09-03 19:39:20", 
   "user": 143
  }
 }, 
 {
  "pk": 561, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-07 09:19:04", 
   "session_key": "5b6c3184e082a14dfa8c29f57b296b59", 
   "last_updated": "2011-09-07 09:19:04", 
   "user": 1
  }
 }, 
 {
  "pk": 401, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-03 21:12:44", 
   "session_key": "cafd9a7f893ba0fb63d72256162c87b3", 
   "last_updated": "2011-09-03 21:12:44", 
   "user": 1
  }
 }, 
 {
  "pk": 406, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-04 00:43:40", 
   "session_key": "f074dc31a7be18736fc4d916c552016c", 
   "last_updated": "2011-09-04 00:43:40", 
   "user": 51
  }
 }, 
 {
  "pk": 407, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-04 01:05:37", 
   "session_key": "33c50a35fc83911b820be192ff4d000f", 
   "last_updated": "2011-09-04 01:05:37", 
   "user": 1
  }
 }, 
 {
  "pk": 508, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 10:46:26", 
   "session_key": "6a04897a768cfc974416f86f19c15615", 
   "last_updated": "2011-09-06 10:46:26", 
   "user": 195
  }
 }, 
 {
  "pk": 427, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-04 18:09:47", 
   "session_key": "2f26288088968fa3c164b70939e75067", 
   "last_updated": "2011-09-04 18:09:47", 
   "user": 97
  }
 }, 
 {
  "pk": 410, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-04 11:41:18", 
   "session_key": "20c72ca58026f928d8a44ea603011966", 
   "last_updated": "2011-09-04 11:41:18", 
   "user": 144
  }
 }, 
 {
  "pk": 412, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-04 13:38:40", 
   "session_key": "a3f510076e73c73e2818edbc2e5f3d15", 
   "last_updated": "2011-09-04 13:38:40", 
   "user": 145
  }
 }, 
 {
  "pk": 413, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-04 13:39:16", 
   "session_key": "4b5f57404c870d8930636a32e885befc", 
   "last_updated": "2011-09-04 13:39:16", 
   "user": 146
  }
 }, 
 {
  "pk": 415, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-04 13:47:54", 
   "session_key": "94d6d041046dcc0868856150b1c0af0d", 
   "last_updated": "2011-09-04 13:47:54", 
   "user": 147
  }
 }, 
 {
  "pk": 416, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-04 14:05:45", 
   "session_key": "e9d432d256a54116666984700975621c", 
   "last_updated": "2011-09-04 14:05:45", 
   "user": 148
  }
 }, 
 {
  "pk": 422, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-04 16:38:35", 
   "session_key": "aa8c8970e0a5c7c5a62897e63bef397a", 
   "last_updated": "2011-09-04 16:38:35", 
   "user": 147
  }
 }, 
 {
  "pk": 423, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-04 16:42:04", 
   "session_key": "c1ed42e9d99a280777f3c2e7c564dc69", 
   "last_updated": "2011-09-04 16:42:04", 
   "user": 147
  }
 }, 
 {
  "pk": 424, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-04 16:59:04", 
   "session_key": "178961bc3ea4f94a291f6dfa156e62df", 
   "last_updated": "2011-09-04 16:59:04", 
   "user": 150
  }
 }, 
 {
  "pk": 425, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-04 17:12:31", 
   "session_key": "42cee0aff7588917a2ed94bff44ff351", 
   "last_updated": "2011-09-04 17:12:31", 
   "user": 151
  }
 }, 
 {
  "pk": 426, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-04 17:13:05", 
   "session_key": "ac59a9ddc1e19eb81ce60e00485b183a", 
   "last_updated": "2011-09-04 17:13:05", 
   "user": 151
  }
 }, 
 {
  "pk": 428, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-04 18:26:23", 
   "session_key": "52cb40d27b5b5163a9be88ede748282c", 
   "last_updated": "2011-09-04 18:26:23", 
   "user": 152
  }
 }, 
 {
  "pk": 429, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-04 18:31:58", 
   "session_key": "e86de26d45f28dbbf66cdbcb0c7fe3c1", 
   "last_updated": "2011-09-04 18:31:58", 
   "user": 153
  }
 }, 
 {
  "pk": 430, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-04 20:01:30", 
   "session_key": "2ad55b1c2b512b21fb91d0a0ef85740d", 
   "last_updated": "2011-09-04 20:01:30", 
   "user": 1
  }
 }, 
 {
  "pk": 431, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-04 20:02:14", 
   "session_key": "f50477ac68991c066bc3c679262da7b2", 
   "last_updated": "2011-09-04 20:02:14", 
   "user": 97
  }
 }, 
 {
  "pk": 435, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-04 22:52:49", 
   "session_key": "46b8a8447c4e27acb47e0943aa86555a", 
   "last_updated": "2011-09-04 22:52:49", 
   "user": 1
  }
 }, 
 {
  "pk": 433, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-04 20:10:43", 
   "session_key": "64a726d5c65572b7ed5f161ae9267d33", 
   "last_updated": "2011-09-04 20:10:43", 
   "user": 154
  }
 }, 
 {
  "pk": 461, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 14:05:49", 
   "session_key": "30f78f13f555ed44116fe6a3d5eac7b8", 
   "last_updated": "2011-09-05 14:05:49", 
   "user": 4
  }
 }, 
 {
  "pk": 438, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 00:11:32", 
   "session_key": "02c0daead5b0fa6528b6e826725850ca", 
   "last_updated": "2011-09-05 00:11:32", 
   "user": 156
  }
 }, 
 {
  "pk": 439, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 00:26:05", 
   "session_key": "23b71a14564613653cf075c46027b5a8", 
   "last_updated": "2011-09-05 00:26:05", 
   "user": 157
  }
 }, 
 {
  "pk": 440, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 00:30:12", 
   "session_key": "45ed9db313427d3b70324f9702ae108a", 
   "last_updated": "2011-09-05 00:30:12", 
   "user": 158
  }
 }, 
 {
  "pk": 441, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 01:50:32", 
   "session_key": "f044b08fa001ad89f8e6b1723d5341d5", 
   "last_updated": "2011-09-05 01:50:32", 
   "user": 159
  }
 }, 
 {
  "pk": 442, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 02:14:55", 
   "session_key": "8b3070d7a1a8147460a7734382b76e13", 
   "last_updated": "2011-09-05 02:14:55", 
   "user": 160
  }
 }, 
 {
  "pk": 443, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 02:56:36", 
   "session_key": "2c1c7971ab7821dd5e84947433e8beff", 
   "last_updated": "2011-09-05 02:56:36", 
   "user": 161
  }
 }, 
 {
  "pk": 445, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 04:00:40", 
   "session_key": "46cd0c7fca97c622734aa33a1f0ae577", 
   "last_updated": "2011-09-05 04:00:40", 
   "user": 163
  }
 }, 
 {
  "pk": 446, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 06:57:27", 
   "session_key": "5eb90f2536310021f0d0b9ae2c1ddcea", 
   "last_updated": "2011-09-05 06:57:27", 
   "user": 164
  }
 }, 
 {
  "pk": 447, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 08:43:38", 
   "session_key": "1d7faef41c075770db081d7361fe15c0", 
   "last_updated": "2011-09-05 08:43:38", 
   "user": 165
  }
 }, 
 {
  "pk": 448, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 09:22:09", 
   "session_key": "fcf1eb183ffe7257078ca59220d9561a", 
   "last_updated": "2011-09-05 09:22:09", 
   "user": 166
  }
 }, 
 {
  "pk": 449, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 09:30:32", 
   "session_key": "9f8193401934f277c95381cbec91757a", 
   "last_updated": "2011-09-05 09:30:32", 
   "user": 168
  }
 }, 
 {
  "pk": 450, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 09:34:22", 
   "session_key": "0ab3de9fff458d83ae1716a8b48ffd03", 
   "last_updated": "2011-09-05 09:34:22", 
   "user": 169
  }
 }, 
 {
  "pk": 451, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 09:42:30", 
   "session_key": "4c2dc082b05a0f37ce3ed230a4167900", 
   "last_updated": "2011-09-05 09:42:30", 
   "user": 169
  }
 }, 
 {
  "pk": 452, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 09:55:56", 
   "session_key": "15dfb694f2037e38e193f638acf87e2a", 
   "last_updated": "2011-09-05 09:55:56", 
   "user": 170
  }
 }, 
 {
  "pk": 453, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 10:08:35", 
   "session_key": "7e34858a0f69314fc8092130e15606dc", 
   "last_updated": "2011-09-05 10:08:35", 
   "user": 171
  }
 }, 
 {
  "pk": 454, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 10:11:47", 
   "session_key": "c6e9d4142f05057b7e9f0734f2fc8e1f", 
   "last_updated": "2011-09-05 10:11:47", 
   "user": 167
  }
 }, 
 {
  "pk": 455, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 10:34:04", 
   "session_key": "135b5e4f3d9376939d0765f70524fd01", 
   "last_updated": "2011-09-05 10:34:04", 
   "user": 172
  }
 }, 
 {
  "pk": 456, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 11:52:06", 
   "session_key": "89c7e7044ef1c860f06485fcd0e3a3d2", 
   "last_updated": "2011-09-05 11:52:06", 
   "user": 173
  }
 }, 
 {
  "pk": 457, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 12:41:26", 
   "session_key": "bbf1fe39cd8940bb46d5806e6d80b073", 
   "last_updated": "2011-09-05 12:41:26", 
   "user": 174
  }
 }, 
 {
  "pk": 458, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 13:20:43", 
   "session_key": "f4e5a1dc981ab104a242df7cb8fae0c0", 
   "last_updated": "2011-09-05 13:20:43", 
   "user": 176
  }
 }, 
 {
  "pk": 462, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 14:05:58", 
   "session_key": "304936682accd8252aa320c4909f4990", 
   "last_updated": "2011-09-05 14:05:58", 
   "user": 175
  }
 }, 
 {
  "pk": 463, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 14:21:25", 
   "session_key": "5dd939d4a401e3711ccf9172163e101b", 
   "last_updated": "2011-09-05 14:21:25", 
   "user": 177
  }
 }, 
 {
  "pk": 464, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 14:36:32", 
   "session_key": "3593a11df813ec666a6c2919f45c916b", 
   "last_updated": "2011-09-05 14:36:32", 
   "user": 178
  }
 }, 
 {
  "pk": 465, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 14:46:50", 
   "session_key": "e64dc59205bd07702c3fe46c1499d485", 
   "last_updated": "2011-09-05 14:46:50", 
   "user": 179
  }
 }, 
 {
  "pk": 466, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 14:48:27", 
   "session_key": "a435ee6c3fd3096bd465fda7e7865004", 
   "last_updated": "2011-09-05 14:48:27", 
   "user": 178
  }
 }, 
 {
  "pk": 468, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 15:11:39", 
   "session_key": "27225f7b12de3d5f003ceb87f429af1c", 
   "last_updated": "2011-09-05 15:11:39", 
   "user": 48
  }
 }, 
 {
  "pk": 470, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 16:23:40", 
   "session_key": "456e97714fd5e4590f56e5ac2c6a099a", 
   "last_updated": "2011-09-05 16:23:40", 
   "user": 1
  }
 }, 
 {
  "pk": 471, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 16:53:36", 
   "session_key": "c7c0901ca9747b080ee90b98b30af902", 
   "last_updated": "2011-09-05 16:53:36", 
   "user": 106
  }
 }, 
 {
  "pk": 472, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 19:55:39", 
   "session_key": "3b2464e8f0bd695c1454738a26c5555a", 
   "last_updated": "2011-09-05 19:55:39", 
   "user": 182
  }
 }, 
 {
  "pk": 473, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 20:37:26", 
   "session_key": "f140f85bf884bfafbe7b964e40f02925", 
   "last_updated": "2011-09-05 20:37:26", 
   "user": 183
  }
 }, 
 {
  "pk": 474, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 21:17:42", 
   "session_key": "1a2e7b44545f169d51eec35b8a20f7cd", 
   "last_updated": "2011-09-05 21:17:42", 
   "user": 184
  }
 }, 
 {
  "pk": 475, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 21:40:55", 
   "session_key": "5b1b4e7e9d377a040e3fb5cd855ebebb", 
   "last_updated": "2011-09-05 21:40:55", 
   "user": 70
  }
 }, 
 {
  "pk": 476, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 22:07:04", 
   "session_key": "f88e39f9eb5143d64030abd2de5984cc", 
   "last_updated": "2011-09-05 22:07:04", 
   "user": 103
  }
 }, 
 {
  "pk": 477, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 22:32:37", 
   "session_key": "6cdf41597f0b719492fae02cd2970019", 
   "last_updated": "2011-09-05 22:32:37", 
   "user": 185
  }
 }, 
 {
  "pk": 478, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 22:42:03", 
   "session_key": "ac8ca450a6018bcc974624b7fce73e3b", 
   "last_updated": "2011-09-05 22:42:03", 
   "user": 186
  }
 }, 
 {
  "pk": 479, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 22:44:38", 
   "session_key": "1886f3f5666635788a1d45dfcf021c98", 
   "last_updated": "2011-09-05 22:44:38", 
   "user": 187
  }
 }, 
 {
  "pk": 480, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 22:51:24", 
   "session_key": "f222d1248799439a007fb3d21e996e41", 
   "last_updated": "2011-09-05 22:51:24", 
   "user": 188
  }
 }, 
 {
  "pk": 481, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-05 23:30:53", 
   "session_key": "bf8827ea3576d1ad5ffcac20400edbab", 
   "last_updated": "2011-09-05 23:30:53", 
   "user": 119
  }
 }, 
 {
  "pk": 483, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 00:17:41", 
   "session_key": "a61c9c37ea8b978c172b31f989730538", 
   "last_updated": "2011-09-06 00:17:41", 
   "user": 1
  }
 }, 
 {
  "pk": 484, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 01:28:12", 
   "session_key": "80962e458ed59bb939516b2a74b65fbc", 
   "last_updated": "2011-09-06 01:28:12", 
   "user": 189
  }
 }, 
 {
  "pk": 485, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 01:29:27", 
   "session_key": "8cda1e27727e00d3de454ac594ec2404", 
   "last_updated": "2011-09-06 01:29:27", 
   "user": 190
  }
 }, 
 {
  "pk": 486, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 02:36:15", 
   "session_key": "e5c66ac51c7519a8ecf28d2d13c62747", 
   "last_updated": "2011-09-06 02:36:15", 
   "user": 97
  }
 }, 
 {
  "pk": 487, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 02:36:26", 
   "session_key": "02a5c6e4442cc193b5a0dd08408b6f28", 
   "last_updated": "2011-09-06 02:36:26", 
   "user": 191
  }
 }, 
 {
  "pk": 489, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 02:38:51", 
   "session_key": "e2b63724a42690de082faddf204e1d0f", 
   "last_updated": "2011-09-06 02:38:51", 
   "user": 1
  }
 }, 
 {
  "pk": 490, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 03:45:12", 
   "session_key": "32255c940a5e3093ea5a0c38eeb325b2", 
   "last_updated": "2011-09-06 03:45:12", 
   "user": 41
  }
 }, 
 {
  "pk": 491, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 06:28:22", 
   "session_key": "c23e565ca3efea4110e06ea625c7503f", 
   "last_updated": "2011-09-06 06:28:22", 
   "user": 4
  }
 }, 
 {
  "pk": 492, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 06:35:08", 
   "session_key": "f64a73c325e471a2017df0e2d7661432", 
   "last_updated": "2011-09-06 06:35:08", 
   "user": 1
  }
 }, 
 {
  "pk": 493, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 08:18:28", 
   "session_key": "f1f7ca68e2775046bba7310127188dd6", 
   "last_updated": "2011-09-06 08:18:28", 
   "user": 97
  }
 }, 
 {
  "pk": 494, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 08:18:40", 
   "session_key": "1249e3d37565b2c957b7aad16ce5fa2c", 
   "last_updated": "2011-09-06 08:18:40", 
   "user": 1
  }
 }, 
 {
  "pk": 507, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 10:43:56", 
   "session_key": "7bf946a0effd7901011f4c83021f36f4", 
   "last_updated": "2011-09-06 10:43:56", 
   "user": 194
  }
 }, 
 {
  "pk": 499, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 08:42:13", 
   "session_key": "633dfa22bbf5f76a648b32895b9b52b2", 
   "last_updated": "2011-09-06 08:42:13", 
   "user": 4
  }
 }, 
 {
  "pk": 501, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 09:54:44", 
   "session_key": "2e1e068a45b4bb17c4f46c9fd5ee8867", 
   "last_updated": "2011-09-06 09:54:44", 
   "user": 192
  }
 }, 
 {
  "pk": 502, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 10:03:58", 
   "session_key": "e5b7b0e054911e50c98135575d188c6b", 
   "last_updated": "2011-09-06 10:03:58", 
   "user": 52
  }
 }, 
 {
  "pk": 503, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 10:09:41", 
   "session_key": "e7c8f7a0083c3608a0de0f9a38e09b9f", 
   "last_updated": "2011-09-06 10:09:41", 
   "user": 193
  }
 }, 
 {
  "pk": 504, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 10:36:20", 
   "session_key": "4ed0e04f4efeedc66c360998a0bf71a9", 
   "last_updated": "2011-09-06 10:36:20", 
   "user": 1
  }
 }, 
 {
  "pk": 505, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 10:37:44", 
   "session_key": "53ab0e6d9faa22a6ff51dfa9c7c7cdae", 
   "last_updated": "2011-09-06 10:37:44", 
   "user": 97
  }
 }, 
 {
  "pk": 506, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 10:40:20", 
   "session_key": "bb40e135d79a33e02b1af61da17f6a84", 
   "last_updated": "2011-09-06 10:40:20", 
   "user": 1
  }
 }, 
 {
  "pk": 512, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 10:57:29", 
   "session_key": "a88a5d31c973a269f272898278e4d33d", 
   "last_updated": "2011-09-06 10:57:29", 
   "user": 197
  }
 }, 
 {
  "pk": 514, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 11:08:32", 
   "session_key": "8cb01ff226f037023f44c6039f7bc5f3", 
   "last_updated": "2011-09-06 11:08:32", 
   "user": 199
  }
 }, 
 {
  "pk": 515, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 11:13:20", 
   "session_key": "52d0f47511a2811cd76158d2b5856cf0", 
   "last_updated": "2011-09-06 11:13:20", 
   "user": 200
  }
 }, 
 {
  "pk": 516, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 11:23:04", 
   "session_key": "366a10067a646d3a5597cc63b4bf079c", 
   "last_updated": "2011-09-06 11:23:04", 
   "user": 1
  }
 }, 
 {
  "pk": 517, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 11:29:24", 
   "session_key": "3da8bdcf14f193b709335adc56ac6fdc", 
   "last_updated": "2011-09-06 11:29:24", 
   "user": 202
  }
 }, 
 {
  "pk": 518, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 11:32:26", 
   "session_key": "c3c6fec01a217cb04e07c182b717f3bd", 
   "last_updated": "2011-09-06 11:32:26", 
   "user": 4
  }
 }, 
 {
  "pk": 519, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 11:37:35", 
   "session_key": "bee59235d18c6a02732f5cd0159c9480", 
   "last_updated": "2011-09-06 11:37:35", 
   "user": 97
  }
 }, 
 {
  "pk": 520, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 11:37:53", 
   "session_key": "2543cb68f0deca980421e0cda6676dc0", 
   "last_updated": "2011-09-06 11:37:53", 
   "user": 203
  }
 }, 
 {
  "pk": 521, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 11:38:49", 
   "session_key": "00ddfa342a825592f5aa490c9d6bee9f", 
   "last_updated": "2011-09-06 11:38:49", 
   "user": 204
  }
 }, 
 {
  "pk": 522, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 11:43:44", 
   "session_key": "d2fdc9c7c396257d14d5b89c28743817", 
   "last_updated": "2011-09-06 11:43:44", 
   "user": 80
  }
 }, 
 {
  "pk": 523, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 11:48:35", 
   "session_key": "23e00cbd64a691f2514673553899fac8", 
   "last_updated": "2011-09-06 11:48:35", 
   "user": 205
  }
 }, 
 {
  "pk": 524, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 11:48:51", 
   "session_key": "42dbad5a7c72c0dee51b7a4fdc866445", 
   "last_updated": "2011-09-06 11:48:51", 
   "user": 1
  }
 }, 
 {
  "pk": 525, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 11:57:37", 
   "session_key": "0f2f19e655f5fa58a8675182e21f47f8", 
   "last_updated": "2011-09-06 11:57:37", 
   "user": 4
  }
 }, 
 {
  "pk": 526, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 12:02:45", 
   "session_key": "71df81ccc1f58d0c5ab53782ce286450", 
   "last_updated": "2011-09-06 12:02:45", 
   "user": 1
  }
 }, 
 {
  "pk": 527, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 12:02:48", 
   "session_key": "9e7ae4c3ceb89eb26575476566c786a8", 
   "last_updated": "2011-09-06 12:02:48", 
   "user": 206
  }
 }, 
 {
  "pk": 528, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 12:21:00", 
   "session_key": "c3efb2487e02ee07e1470d328cabf593", 
   "last_updated": "2011-09-06 12:21:00", 
   "user": 207
  }
 }, 
 {
  "pk": 529, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 12:22:03", 
   "session_key": "bf68495c0155e0eade05e161f03fd53d", 
   "last_updated": "2011-09-06 12:22:03", 
   "user": 201
  }
 }, 
 {
  "pk": 530, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 12:42:22", 
   "session_key": "dcc747f0d298b7fa93936036c7f4ed3f", 
   "last_updated": "2011-09-06 12:42:22", 
   "user": 208
  }
 }, 
 {
  "pk": 531, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 13:01:29", 
   "session_key": "d4aae9717e0a23ef8a8f0ece3069048a", 
   "last_updated": "2011-09-06 13:01:29", 
   "user": 209
  }
 }, 
 {
  "pk": 532, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 13:44:45", 
   "session_key": "972e7918d4ca962414b2c3d09dae2d68", 
   "last_updated": "2011-09-06 13:44:45", 
   "user": 210
  }
 }, 
 {
  "pk": 533, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 14:06:22", 
   "session_key": "5f2f72749b62f6bdf5417f9cf47eda7a", 
   "last_updated": "2011-09-06 14:06:22", 
   "user": 211
  }
 }, 
 {
  "pk": 534, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 14:26:59", 
   "session_key": "70b22be07b155c3d5629111d4448bb89", 
   "last_updated": "2011-09-06 14:26:59", 
   "user": 212
  }
 }, 
 {
  "pk": 535, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 15:00:24", 
   "session_key": "6178925955b82c42cdd75194f493dc15", 
   "last_updated": "2011-09-06 15:00:24", 
   "user": 1
  }
 }, 
 {
  "pk": 536, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 15:16:31", 
   "session_key": "751b3789f79783bc656607cb4e4b0ec4", 
   "last_updated": "2011-09-06 15:16:31", 
   "user": 213
  }
 }, 
 {
  "pk": 537, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 15:25:43", 
   "session_key": "99ceb41a8b6fb7f7e0f5380feb849bbb", 
   "last_updated": "2011-09-06 15:25:43", 
   "user": 214
  }
 }, 
 {
  "pk": 538, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 15:26:01", 
   "session_key": "93d7abe2afbffb912207b95f0eb72f16", 
   "last_updated": "2011-09-06 15:26:01", 
   "user": 214
  }
 }, 
 {
  "pk": 539, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 15:50:59", 
   "session_key": "180e479c089f0c2725c50a4bbbe399ca", 
   "last_updated": "2011-09-06 15:50:59", 
   "user": 174
  }
 }, 
 {
  "pk": 544, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 17:11:48", 
   "session_key": "c938484e1bfdba44214849c7cfe8d639", 
   "last_updated": "2011-09-06 17:11:48", 
   "user": 216
  }
 }, 
 {
  "pk": 543, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 16:14:10", 
   "session_key": "1577f19ba8dc7c14d8e9b1c793c80674", 
   "last_updated": "2011-09-06 16:14:10", 
   "user": 215
  }
 }, 
 {
  "pk": 545, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 17:19:08", 
   "session_key": "86d84a3f6d02632a6ad7da34bbedca68", 
   "last_updated": "2011-09-06 17:19:08", 
   "user": 217
  }
 }, 
 {
  "pk": 546, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 17:20:28", 
   "session_key": "57276bf2392f5c93814098a373ef351c", 
   "last_updated": "2011-09-06 17:20:28", 
   "user": 218
  }
 }, 
 {
  "pk": 547, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 19:11:46", 
   "session_key": "ffd84b468e831e1d9b779ae4a9567e74", 
   "last_updated": "2011-09-06 19:11:46", 
   "user": 97
  }
 }, 
 {
  "pk": 548, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 19:24:15", 
   "session_key": "fbccce08f62b754b4206d916fee0f428", 
   "last_updated": "2011-09-06 19:24:15", 
   "user": 1
  }
 }, 
 {
  "pk": 549, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 19:36:48", 
   "session_key": "ed20d62432e9378ca43558c605b166f6", 
   "last_updated": "2011-09-06 19:36:48", 
   "user": 1
  }
 }, 
 {
  "pk": 550, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 19:45:15", 
   "session_key": "9d470c1df2ef290100f41bcbda2ff5d0", 
   "last_updated": "2011-09-06 19:45:15", 
   "user": 97
  }
 }, 
 {
  "pk": 552, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 20:49:01", 
   "session_key": "862cf0e499d6513c8943b3decd745c5a", 
   "last_updated": "2011-09-06 20:49:01", 
   "user": 4
  }
 }, 
 {
  "pk": 553, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 21:07:36", 
   "session_key": "8a015368f676dbb2282e4ffb102f6d30", 
   "last_updated": "2011-09-06 21:07:36", 
   "user": 1
  }
 }, 
 {
  "pk": 555, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 21:21:25", 
   "session_key": "6378a597faf4bd674d2cd60b56f47a56", 
   "last_updated": "2011-09-06 21:21:25", 
   "user": 219
  }
 }, 
 {
  "pk": 556, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 21:53:32", 
   "session_key": "1b1946025cbd915515f8e458559069df", 
   "last_updated": "2011-09-06 21:53:32", 
   "user": 221
  }
 }, 
 {
  "pk": 557, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 22:04:02", 
   "session_key": "525b71982581438d5904439c625dd945", 
   "last_updated": "2011-09-06 22:04:02", 
   "user": 220
  }
 }, 
 {
  "pk": 559, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-06 23:11:16", 
   "session_key": "d7571caecf3eb3dc4675c8700076b83a", 
   "last_updated": "2011-09-06 23:11:16", 
   "user": 223
  }
 }, 
 {
  "pk": 560, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-07 02:48:15", 
   "session_key": "fbaf8083f384096a2f0501e367df4ee8", 
   "last_updated": "2011-09-07 02:48:15", 
   "user": 97
  }
 }, 
 {
  "pk": 562, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-07 09:19:04", 
   "session_key": "f825ba3e80c8dbfd87d2fde06be8adcd", 
   "last_updated": "2011-09-07 09:19:04", 
   "user": 1
  }
 }, 
 {
  "pk": 564, 
  "model": "registration.sessionkey", 
  "fields": {
   "date_created": "2011-09-07 12:20:47", 
   "session_key": "5185c6934ee0957a21715c6fc05a90ba", 
   "last_updated": "2011-09-07 12:20:47", 
   "user": 97
  }
 }, 
 {
  "pk": 37, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 45
  }
 }, 
 {
  "pk": 35, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 43
  }
 }, 
 {
  "pk": 86, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 94
  }
 }, 
 {
  "pk": 33, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 41
  }
 }, 
 {
  "pk": 32, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 40
  }
 }, 
 {
  "pk": 36, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 44
  }
 }, 
 {
  "pk": 38, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "b196c0419f592524fbeb0f37814b16ba03c74364", 
   "user": 46
  }
 }, 
 {
  "pk": 39, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 47
  }
 }, 
 {
  "pk": 40, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "e8db676412b73e384d8c992c34e8c6e71acdb825", 
   "user": 48
  }
 }, 
 {
  "pk": 41, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 49
  }
 }, 
 {
  "pk": 42, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 50
  }
 }, 
 {
  "pk": 43, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 51
  }
 }, 
 {
  "pk": 44, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "9c5365a07a9f27e578b33ebca46fc8ac37f25b37", 
   "user": 52
  }
 }, 
 {
  "pk": 45, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 53
  }
 }, 
 {
  "pk": 46, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 54
  }
 }, 
 {
  "pk": 47, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 55
  }
 }, 
 {
  "pk": 48, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 56
  }
 }, 
 {
  "pk": 49, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 57
  }
 }, 
 {
  "pk": 50, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 58
  }
 }, 
 {
  "pk": 51, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 59
  }
 }, 
 {
  "pk": 52, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 60
  }
 }, 
 {
  "pk": 53, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 61
  }
 }, 
 {
  "pk": 54, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 62
  }
 }, 
 {
  "pk": 55, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 63
  }
 }, 
 {
  "pk": 56, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 64
  }
 }, 
 {
  "pk": 57, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 65
  }
 }, 
 {
  "pk": 58, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 66
  }
 }, 
 {
  "pk": 59, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 67
  }
 }, 
 {
  "pk": 60, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 68
  }
 }, 
 {
  "pk": 61, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 69
  }
 }, 
 {
  "pk": 62, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 70
  }
 }, 
 {
  "pk": 63, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 71
  }
 }, 
 {
  "pk": 64, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "43e0e28629916f9e5a5381e84e67550f5681ab63", 
   "user": 72
  }
 }, 
 {
  "pk": 72, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "6d9dd0803985c30cd23b790cd13e215f27006af6", 
   "user": 80
  }
 }, 
 {
  "pk": 68, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 76
  }
 }, 
 {
  "pk": 73, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "b2ec70722ef61edcbfb3240767d585fa67401c37", 
   "user": 81
  }
 }, 
 {
  "pk": 74, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 82
  }
 }, 
 {
  "pk": 77, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 85
  }
 }, 
 {
  "pk": 78, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 86
  }
 }, 
 {
  "pk": 79, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 87
  }
 }, 
 {
  "pk": 81, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 89
  }
 }, 
 {
  "pk": 89, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 99
  }
 }, 
 {
  "pk": 183, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 194
  }
 }, 
 {
  "pk": 90, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 100
  }
 }, 
 {
  "pk": 91, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 101
  }
 }, 
 {
  "pk": 92, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 102
  }
 }, 
 {
  "pk": 93, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 103
  }
 }, 
 {
  "pk": 94, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 104
  }
 }, 
 {
  "pk": 95, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 105
  }
 }, 
 {
  "pk": 96, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 106
  }
 }, 
 {
  "pk": 97, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 107
  }
 }, 
 {
  "pk": 98, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 108
  }
 }, 
 {
  "pk": 99, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 109
  }
 }, 
 {
  "pk": 100, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 110
  }
 }, 
 {
  "pk": 101, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 111
  }
 }, 
 {
  "pk": 102, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 112
  }
 }, 
 {
  "pk": 103, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 113
  }
 }, 
 {
  "pk": 104, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 114
  }
 }, 
 {
  "pk": 106, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 116
  }
 }, 
 {
  "pk": 107, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 117
  }
 }, 
 {
  "pk": 108, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 118
  }
 }, 
 {
  "pk": 109, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 119
  }
 }, 
 {
  "pk": 110, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 120
  }
 }, 
 {
  "pk": 111, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 121
  }
 }, 
 {
  "pk": 112, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 122
  }
 }, 
 {
  "pk": 113, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 123
  }
 }, 
 {
  "pk": 114, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 124
  }
 }, 
 {
  "pk": 115, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 125
  }
 }, 
 {
  "pk": 116, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 126
  }
 }, 
 {
  "pk": 117, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 127
  }
 }, 
 {
  "pk": 118, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 128
  }
 }, 
 {
  "pk": 119, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 129
  }
 }, 
 {
  "pk": 120, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 130
  }
 }, 
 {
  "pk": 121, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 131
  }
 }, 
 {
  "pk": 122, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 132
  }
 }, 
 {
  "pk": 123, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 133
  }
 }, 
 {
  "pk": 124, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 134
  }
 }, 
 {
  "pk": 125, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 135
  }
 }, 
 {
  "pk": 126, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 136
  }
 }, 
 {
  "pk": 127, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 137
  }
 }, 
 {
  "pk": 130, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 140
  }
 }, 
 {
  "pk": 131, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 141
  }
 }, 
 {
  "pk": 132, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 142
  }
 }, 
 {
  "pk": 133, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 143
  }
 }, 
 {
  "pk": 134, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 144
  }
 }, 
 {
  "pk": 135, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 145
  }
 }, 
 {
  "pk": 136, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 146
  }
 }, 
 {
  "pk": 137, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 147
  }
 }, 
 {
  "pk": 138, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 148
  }
 }, 
 {
  "pk": 139, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 149
  }
 }, 
 {
  "pk": 140, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 150
  }
 }, 
 {
  "pk": 141, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 151
  }
 }, 
 {
  "pk": 142, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 152
  }
 }, 
 {
  "pk": 143, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 153
  }
 }, 
 {
  "pk": 144, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 154
  }
 }, 
 {
  "pk": 145, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 155
  }
 }, 
 {
  "pk": 146, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 156
  }
 }, 
 {
  "pk": 147, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 157
  }
 }, 
 {
  "pk": 148, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 158
  }
 }, 
 {
  "pk": 149, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 159
  }
 }, 
 {
  "pk": 150, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 160
  }
 }, 
 {
  "pk": 151, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 161
  }
 }, 
 {
  "pk": 152, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 162
  }
 }, 
 {
  "pk": 153, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 163
  }
 }, 
 {
  "pk": 154, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 164
  }
 }, 
 {
  "pk": 155, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 165
  }
 }, 
 {
  "pk": 156, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 166
  }
 }, 
 {
  "pk": 157, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 167
  }
 }, 
 {
  "pk": 158, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 168
  }
 }, 
 {
  "pk": 159, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 169
  }
 }, 
 {
  "pk": 160, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 170
  }
 }, 
 {
  "pk": 161, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 171
  }
 }, 
 {
  "pk": 162, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 172
  }
 }, 
 {
  "pk": 163, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 173
  }
 }, 
 {
  "pk": 164, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 174
  }
 }, 
 {
  "pk": 165, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 175
  }
 }, 
 {
  "pk": 166, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 176
  }
 }, 
 {
  "pk": 167, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 177
  }
 }, 
 {
  "pk": 168, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 178
  }
 }, 
 {
  "pk": 169, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 179
  }
 }, 
 {
  "pk": 170, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 180
  }
 }, 
 {
  "pk": 171, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 182
  }
 }, 
 {
  "pk": 172, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 183
  }
 }, 
 {
  "pk": 173, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 184
  }
 }, 
 {
  "pk": 174, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 185
  }
 }, 
 {
  "pk": 175, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 186
  }
 }, 
 {
  "pk": 176, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 187
  }
 }, 
 {
  "pk": 177, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 188
  }
 }, 
 {
  "pk": 178, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 189
  }
 }, 
 {
  "pk": 179, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 190
  }
 }, 
 {
  "pk": 180, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 191
  }
 }, 
 {
  "pk": 181, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 192
  }
 }, 
 {
  "pk": 182, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 193
  }
 }, 
 {
  "pk": 184, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 195
  }
 }, 
 {
  "pk": 211, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 222
  }
 }, 
 {
  "pk": 186, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 197
  }
 }, 
 {
  "pk": 187, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 198
  }
 }, 
 {
  "pk": 188, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 199
  }
 }, 
 {
  "pk": 189, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 200
  }
 }, 
 {
  "pk": 190, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 201
  }
 }, 
 {
  "pk": 191, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 202
  }
 }, 
 {
  "pk": 192, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 203
  }
 }, 
 {
  "pk": 193, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 204
  }
 }, 
 {
  "pk": 194, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 205
  }
 }, 
 {
  "pk": 195, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 206
  }
 }, 
 {
  "pk": 196, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 207
  }
 }, 
 {
  "pk": 197, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 208
  }
 }, 
 {
  "pk": 198, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 209
  }
 }, 
 {
  "pk": 199, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 210
  }
 }, 
 {
  "pk": 200, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 211
  }
 }, 
 {
  "pk": 201, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 212
  }
 }, 
 {
  "pk": 202, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 213
  }
 }, 
 {
  "pk": 203, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 214
  }
 }, 
 {
  "pk": 204, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 215
  }
 }, 
 {
  "pk": 205, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 216
  }
 }, 
 {
  "pk": 206, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 217
  }
 }, 
 {
  "pk": 207, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 218
  }
 }, 
 {
  "pk": 208, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 219
  }
 }, 
 {
  "pk": 209, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 220
  }
 }, 
 {
  "pk": 210, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 221
  }
 }, 
 {
  "pk": 212, 
  "model": "registration.registrationprofile", 
  "fields": {
   "activation_key": "ALREADY_ACTIVATED", 
   "user": 223
  }
 }
]